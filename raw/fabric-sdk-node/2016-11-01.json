[
    {
        "user": "U2TFYQ5AB",
        "text": "<@U2TFYQ5AB|kevan> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1478006337.000358"
    },
    {
        "type": "message",
        "user": "U2Q0HP4HY",
        "text": "The latest <http:\/\/read.me|read.me> docker-compose.yaml    vp0  links order0  but the orderer svc is just taged with orderer",
        "ts": "1478010778.000359"
    },
    {
        "type": "message",
        "user": "U2RCN8W95",
        "text": "Context: deploying a chaincode from a Node app using HFC.\nQuestion: Given that Go will do a \u201cgo get\u201d to pull down dependencies you have in your chaincode, why is there a need  to manually add in the vendor\/hyperledger\/\u2026 code alongside your chaincode when you deploy your Node app?  Shouldn\u2019t your chaincode\u2019s reference trigger the Go runtime to pull it down for you?",
        "ts": "1478023601.000360"
    },
    {
        "type": "message",
        "user": "U2RCN8W95",
        "text": "After additional research, the answer appears to potentially be related to limited control over the version that is pulled.  That is, you can only pull the latest",
        "ts": "1478024549.000361"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "<@U2RCN8W95> this design decision was before I took over the sdk mission, so I can\u2019t say I have all the background that led to that design, but one of the point is that doing \u201cgo get\u201d for runtime is dangerous because golang doesn\u2019t have any native versioning support for a published library",
        "ts": "1478024621.000362"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "you want some level of control over what level of the chaincode shim is being used to execute the chaincode",
        "ts": "1478024647.000363"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "so a pre-installed package is better",
        "ts": "1478024665.000364"
    },
    {
        "type": "message",
        "user": "U2RCN8W95",
        "text": "Yep - same conclusion",
        "ts": "1478024668.000365"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "on the other hand, this area is being improved on for v1.0, such that the fabric shim is now burnt into the base image (\u201dfabric-ccenv\u201d)",
        "ts": "1478024717.000366"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "that way you still have control over the code level, but don\u2019t need to keep sending it over the wire on deploy",
        "ts": "1478024750.000367"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "guys what\u2019s the latest and most up-to-date \u2018getting started+examples\u2019 docs for the node SDK?",
        "ts": "1478037736.000368"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "I\u2019m about to do a deep dive and I want to make sure I\u2019m going into the current state of affairs",
        "ts": "1478037754.000369"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "<@U1CTBUNEN> are you asking about v0.6 (\u201dofficial\u201d release) or v1.0 (latest and most exciting)?",
        "ts": "1478053852.000370"
    }
]
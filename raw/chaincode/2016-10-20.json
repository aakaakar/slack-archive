[
    {
        "type": "message",
        "user": "U2DHRR4TE",
        "text": "Hey All, would someone be able to explain using tables to me?\n\nSpecifically - when you make a table I get the idea that you specify the columns and what each column is called and contains but what does the 'key' field mean?\n\nLikewise, when you do a search for a row in a table you do so by something like this:\n\n```var columns []shim.Column\n\ncol1 := shim.Column{Value: &amp;shim.Column_String_{String_: args[0]}}\ncolumns = append(columns, col1)\n\ncol2 := shim.Column{Value: &amp;shim.Column_String_{String_: args[1]}}\ncolumns = append(columns, col2)\n\ncol3 := shim.Column{Value: &amp;shim.Column_String_{String_: args[2]}}\ncolumns = append(columns, col3)\n\nrow, err := stub.GetRow(\"RequestTable\", columns)\n```\n\nThe table the above searches contains 7 columns yet in this only 3 are specified - what is happening here? - So far as I can see what is happening is that 3 column objects are being made containing the arguments put in (I assume these arguments are values to be searched for?). However the column objects in the array don't seem to be given any kind of identifier that might link them to the columns in the table (apart from the type) as such how does the table know which column in the table to compare them to?",
        "ts": "1476955586.001705"
    },
    {
        "type": "message",
        "user": "U22RH7VGT",
        "text": "<@U0PB67X4K>  is it possible to write self executing methods after certain intervals",
        "ts": "1476967875.001707"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "no - you should not develop chaincode which attempts to use timers to trigger functions.  You would need to build the timer which injects transactions outside of the fabric as a client",
        "ts": "1476968109.001708"
    },
    {
        "user": "U2QLU433N",
        "text": "<@U2QLU433N|msoumeit> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1476976698.001711"
    },
    {
        "type": "message",
        "user": "U2LV4CC6B",
        "text": "<@U2DHRR4TE> When I used tables, usually you query the table based on the key.  So in your example, I would guess that col1, col2, and col3 are marked as keys that you are querying on.",
        "ts": "1476980706.001712"
    },
    {
        "type": "message",
        "user": "U2LV4CC6B",
        "text": "And the matching would be based on the ordering of the keys defined in the table.",
        "ts": "1476980726.001713"
    },
    {
        "type": "message",
        "user": "U2LV4CC6B",
        "text": "<@U22RH7VGT> : events are asynchronous.  You can put any value in the event, but it is not something that the client that called invoke will get as a response to the invoke.  You need a separate event listener to listen for and handle the event when the transaction is added to a block.",
        "ts": "1476980801.001714"
    },
    {
        "type": "message",
        "user": "U2LV4CC6B",
        "text": "<@U2C55KE65> : not sure if I understand your question about getting transactions clear text, but the payload in the transaction is base64 encoded.",
        "ts": "1476980883.001715"
    },
    {
        "user": "U2QNC42HM",
        "text": "<@U2QNC42HM|dvitas> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1476982406.001716"
    },
    {
        "type": "message",
        "user": "U2QNC42HM",
        "text": "Hi everybody! Can anyone please point me to the discussion on the halting problem in the chaincode? How is fabric going to deal with infinite loops, including recursive loops? Was this problem discussed somewhere?",
        "ts": "1476982423.001717"
    },
    {
        "type": "message",
        "user": "U2LV4CC6B",
        "text": "Is there a way to get the affiliation of a user in Golang chaincode?",
        "ts": "1476982610.001718"
    },
    {
        "type": "message",
        "user": "U2LV4CC6B",
        "text": "It seems that the attributes do not currently work in the latest code, and I am looking to add some authorization checks to my chaincode.",
        "ts": "1476982659.001719"
    },
    {
        "type": "message",
        "user": "U2LV4CC6B",
        "text": "So I thought if I could get my hands on the affiliation of a user, then I could just check the affiliation.",
        "ts": "1476982707.001720"
    },
    {
        "type": "message",
        "user": "U2G4G5LTY",
        "text": "How do I deploy compiled chaincode to a remote peer in production setting?",
        "ts": "1476996932.001724"
    },
    {
        "type": "message",
        "user": "U2G4G5LTY",
        "text": "In dev mode I can do the following:",
        "ts": "1476997026.001725"
    },
    {
        "type": "message",
        "user": "U2G4G5LTY",
        "text": "{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"deploy\",\n  \"params\": {\n      \"type\": 1,\n      \"chaincodeID\":{\n          \"name\":\"mycc\"\n      },\n      \"ctorMsg\": {\n         \"function\":\"init\",\n          \"args\":[\"a\", \"values\"]\n      }\n  },\n  \"id\": 3\n}",
        "ts": "1476997027.001726"
    },
    {
        "type": "message",
        "user": "U2G4G5LTY",
        "text": "But, I need to give ChaincodeID path in production mode. How do I do that?",
        "ts": "1476997054.001727"
    },
    {
        "type": "message",
        "user": "U2G4G5LTY",
        "text": "when I deployed the CC like:",
        "ts": "1476997132.001728"
    },
    {
        "type": "message",
        "user": "U2G4G5LTY",
        "text": "CORE_CHAINCODE_ID_NAME=mycc CORE_PEER_ADDRESS=<http:\/\/my-root-peer.net:7051|my-root-peer.net:7051> .\/mycc",
        "ts": "1476997133.001729"
    },
    {
        "type": "message",
        "user": "U2LV4CC6B",
        "text": "<@U2G4G5LTY> in addition to utilizing name, you must specify the <http:\/\/github.com|github.com> path of the repo containing the chaincode.",
        "ts": "1477000755.001731"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U2G4G5LTY> you\u2019d specify \u201cname\u201d for deploying a chaincode only in `\u2014peer-chaincodedev` mode\u2026 when not using dev mode, you\u2019d need a path (as <@U2LV4CC6B> points out above). There was a discussion around this in `fabric` channel on Oct. 16",
        "edited": {
            "user": "U0ULK2JPP",
            "ts": "1477003990.000000"
        },
        "ts": "1477003897.001733"
    },
    {
        "user": "U1PF7CF5F",
        "text": "<@U1PF7CF5F|t-watana> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1477009309.001736"
    },
    {
        "type": "message",
        "user": "U2G4G5LTY",
        "text": "Thank you <@U0ULK2JPP> for pointing me to the discussion on 10\/16 on <#C0Y4PEU22|fabric> on this topic. That discussion clears some of my questions. But, I am little surprised that the only way to deploy the code to production mode fabric network is through public repo. Hope things will change by 1.0 release.",
        "attachments": [
            {
                "fallback": "[October 20th, 2016 3:51 PM] muralisr: <@U2G4G5LTY> you\u2019d specify \u201cname\u201d for deploying a chaincode only in `\u2014peer-chaincodedev` mode\u2026 when not using dev mode, you\u2019d need a path (as <@U2LV4CC6B> points out above). There was a discussion around this in `fabric` channel on Oct. 16",
                "ts": "1477003897.001733",
                "author_subname": "muralisr",
                "channel_id": "C19ABCKPW",
                "channel_name": "chaincode",
                "is_msg_unfurl": true,
                "text": "<@U2G4G5LTY> you\u2019d specify \u201cname\u201d for deploying a chaincode only in `\u2014peer-chaincodedev` mode\u2026 when not using dev mode, you\u2019d need a path (as <@U2LV4CC6B> points out above). There was a discussion around this in `fabric` channel on Oct. 16",
                "author_name": "Srinivasan Muralidharan",
                "author_link": "https:\/\/hyperledgerproject.slack.com\/team\/muralisr",
                "author_icon": "https:\/\/secure.gravatar.com\/avatar\/f2f14ee3d0f083c9afce9767faf6322d.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2F66f9%2Fimg%2Favatars%2Fava_0000-48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "color": "D0D0D0",
                "from_url": "https:\/\/hyperledgerproject.slack.com\/archives\/chaincode\/p1477003897001733",
                "is_share": true,
                "footer": "Posted in #chaincode"
            }
        ],
        "ts": "1477013187.001737"
    },
    {
        "type": "message",
        "user": "U2C55KE65",
        "text": "<@U2LV4CC6B> i see   ,thanks!",
        "ts": "1477015507.001739"
    },
    {
        "user": "U2RRHA11T",
        "text": "<@U2RRHA11T|kyrieleison> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1477020871.001741"
    },
    {
        "type": "message",
        "user": "U22RH7VGT",
        "text": "thanks <@U2LV4CC6B>",
        "ts": "1477024852.001742"
    }
]
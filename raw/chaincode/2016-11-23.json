[
    {
        "user": "U1B9E51R8",
        "text": "<@U1B9E51R8|xixuejia> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1479889142.002503"
    },
    {
        "type": "message",
        "user": "U2DHRR4TE",
        "text": "hey all. this is probably a dumb question but could someone explain to be exactly what 'deploying' chaincode refers to?\n\nIn the sense that I understand you can manually compile chaincode and then connec this to a peer or you can package it up and send it to a peer",
        "ts": "1479903765.002505"
    },
    {
        "type": "message",
        "user": "U2DHRR4TE",
        "text": "if you manually compile it and connect to a peer you still have to run `peer chaincode deploy `",
        "ts": "1479903801.002506"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "<@U2DHRR4TE> deploying chaincode is just what it sounds like it means: basically, you push the code for a chaincode to a peer network and it is compiled and run on the peer nodes in its own docker container",
        "ts": "1479905994.002508"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "the mode you described is for development\/test only",
        "ts": "1479906032.002509"
    },
    {
        "type": "message",
        "user": "U2DHRR4TE",
        "text": "so what I described - when I run `peer chaincode deploy` what happens?",
        "ts": "1479907883.002510"
    },
    {
        "type": "message",
        "user": "U2DHRR4TE",
        "text": "if it isn't deploying",
        "edited": {
            "user": "U2DHRR4TE",
            "ts": "1479907897.000000"
        },
        "ts": "1479907888.002511"
    },
    {
        "user": "U2Z3ABG7N",
        "text": "<@U2Z3ABG7N|vibhu> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1479908719.002513"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "<@U2DHRR4TE> - when running in dev mode, `peer chaincode deploy` registers the chaincode with the peer",
        "ts": "1479908949.002514"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "right. `deploy` can be thought of as `start + initialize`. In dev mode user has started ..deploy is used to initialize (using the \u201c-c\u201d param)",
        "ts": "1479909497.002515"
    },
    {
        "type": "message",
        "user": "U2DHRR4TE",
        "text": "ok, can you explain the difference between `start`, `initialise` and `register`?",
        "ts": "1479910242.002516"
    },
    {
        "type": "message",
        "user": "U2DHRR4TE",
        "text": "and if `deploy` is `start + initialise` where does making the chaincode into a docker image come into it?",
        "ts": "1479910404.002517"
    },
    {
        "type": "message",
        "user": "U2DHRR4TE",
        "text": "different question now",
        "ts": "1479919886.002519"
    },
    {
        "type": "message",
        "user": "U2DHRR4TE",
        "text": "(but thanks for the answers :slightly_smiling_face: )",
        "ts": "1479919896.002520"
    },
    {
        "type": "message",
        "user": "U2DHRR4TE",
        "text": "when we have deploy transactions on teh blockchain",
        "ts": "1479919915.002521"
    },
    {
        "type": "message",
        "user": "U2DHRR4TE",
        "text": "what is stored in one of them",
        "ts": "1479919920.002522"
    },
    {
        "type": "message",
        "user": "U2DHRR4TE",
        "text": "I assume it's more a reference to the chaincode rather than the source itself",
        "ts": "1479919932.002523"
    },
    {
        "type": "message",
        "user": "U2DHRR4TE",
        "text": "and presumably this reference is done in such a way that a new peer is able to say \"could you send me this\" to the other peers",
        "ts": "1479919956.002525"
    },
    {
        "type": "message",
        "user": "U2WAP0R6J",
        "text": "hey all, is there any way to store a float64? there's no `ColumnDefiniton` for any float type",
        "ts": "1479930768.002526"
    },
    {
        "type": "message",
        "user": "U2WAP0R6J",
        "text": "Also, can someone show me the syntax for GetRow, where column a is a key and column b is a key, but I only want to query by column a?",
        "edited": {
            "user": "U2WAP0R6J",
            "ts": "1479942017.000000"
        },
        "ts": "1479942009.002529"
    }
]
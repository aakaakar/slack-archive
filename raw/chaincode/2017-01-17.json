[
    {
        "user": "U3RM1BDS4",
        "text": "<@U3RM1BDS4|billykwok> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1484642608.001130"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U1B9E51R8> do you mean migrating the whole ledger?",
        "ts": "1484654665.001133"
    },
    {
        "type": "message",
        "user": "U2D62LCQJ",
        "text": "Can I, in the chaincode, get any unique ID of the chaincode invoker to know who is to have some access control functions? Something similar to  msg.sender on solidity?",
        "edited": {
            "user": "U2D62LCQJ",
            "ts": "1484655323.000000"
        },
        "ts": "1484655305.001134"
    },
    {
        "type": "message",
        "user": "U1B9E51R8",
        "text": "<@U1AU8DRQR>: yes",
        "ts": "1484655765.001136"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U1B9E51R8> I am not 100% sure but I guess there is no such tool",
        "ts": "1484655894.001137"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U2D62LCQJ> isn't this what you need? ..\/examples\/chaincode\/go\/authorizable_counter\/authorizable_counter.go",
        "ts": "1484655964.001138"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "\/\/ AuthorizableCounterChaincode is an example that use Attribute Based Access Control to control the access to a counter by users with an specific role.",
        "ts": "1484655990.001139"
    },
    {
        "type": "message",
        "user": "U2D62LCQJ",
        "text": "something like that",
        "ts": "1484655992.001140"
    },
    {
        "type": "message",
        "user": "U2D62LCQJ",
        "text": "that is based on role",
        "ts": "1484656004.001141"
    },
    {
        "type": "message",
        "user": "U1B9E51R8",
        "text": "ok. Do you know if there's any user did such kind of migration?",
        "ts": "1484656015.001142"
    },
    {
        "type": "message",
        "user": "U2D62LCQJ",
        "text": "more than one can have the same role. I want something a unique ID",
        "ts": "1484656038.001143"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U1B9E51R8> I don't know about that. maybe you could try in <#C0Y4PEU22|fabric>",
        "ts": "1484656058.001144"
    },
    {
        "type": "message",
        "user": "U2D62LCQJ",
        "text": "the thing is does membersrvc validates the attributes passed? if so, it could be implemented using attributes",
        "ts": "1484656084.001145"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U2D62LCQJ> it is not possible to have one role per user \/ one user per role?",
        "ts": "1484656087.001146"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "1 - 1 mapping, I mean",
        "ts": "1484656095.001147"
    },
    {
        "type": "message",
        "user": "U1B9E51R8",
        "text": "<@U1AU8DRQR>: thanks Gabor!",
        "ts": "1484656125.001148"
    },
    {
        "type": "message",
        "user": "U2D62LCQJ",
        "text": "yeah, i suppose is doable",
        "ts": "1484656135.001149"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "but I am trying to dig, maybe there is a better solution",
        "ts": "1484656158.001150"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "attributes are just attributes, so a user name can also be an attribute, not?",
        "ts": "1484656178.001151"
    },
    {
        "type": "message",
        "user": "U2D62LCQJ",
        "text": "that attributes should be placed on the membersrvc.yaml right? along with the enrollid\/secret right?",
        "ts": "1484656188.001152"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "yes, as I remember",
        "ts": "1484656198.001153"
    },
    {
        "type": "message",
        "user": "U2D62LCQJ",
        "text": "ummm thanks, i'll give that a try",
        "ts": "1484656224.001154"
    },
    {
        "type": "message",
        "user": "U2D62LCQJ",
        "text": "i was expecting gettting directly the enrollID, but this can be a way to achieve it",
        "ts": "1484656253.001155"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "maybe you should try <#C1J0BM448|membership-services> or <#C201EH52M|membership>",
        "ts": "1484656316.001156"
    },
    {
        "type": "message",
        "user": "U2D62LCQJ",
        "text": "Hi again,",
        "ts": "1484670263.001159"
    },
    {
        "type": "message",
        "user": "U2D62LCQJ",
        "text": "i'm trying to use the tables and i have defined one like this\n```func (t *tableHandler) createTable(stub shim.ChaincodeStubInterface) error {\n    \/\/ Create identity table\n\treturn stub.CreateTable(tableName, []*shim.ColumnDefinition{\n\t\t&amp;shim.ColumnDefinition{Name: columnEcert, Type: shim.ColumnDefinition_BYTES, Key: true},\n\t\t&amp;shim.ColumnDefinition{Name: columnName, Type: shim.ColumnDefinition_STRING, Key: false},\n\t\t&amp;shim.ColumnDefinition{Name: columnSurname, Type: shim.ColumnDefinition_STRING, Key: false},\n\t\t&amp;shim.ColumnDefinition{Name: columnBirthDate, Type: shim.ColumnDefinition_STRING, Key: false},\n    })\n}\n\nfunc (t *tableHandler) insertRow(stub shim.ChaincodeStubInterface, key []byte, name, surname, birthDate string) error {\n    ok, err := stub.InsertRow(tableName, shim.Row{\n            Columns: []*shim.Column{\n                &amp;shim.Column{Value: &amp;shim.Column_Bytes{Bytes: key}},\n                &amp;shim.Column{Value: &amp;shim.Column_String_{String_: name}},\n                &amp;shim.Column{Value: &amp;shim.Column_String_{String_: surname}},\n                &amp;shim.Column{Value: &amp;shim.Column_String_{String_: birthDate}},\n    }})\n\n    \/\/ you can only assign balances to new account IDs\n    if !ok &amp;&amp; err == nil {\n        fmt.Errorf(\"system error %v\", err)\n        return errors.New( strconv.FormatBool(ok) + \" Identity already exists!\")\n    }\n    return nil\n}```\n\nbut when i try to insert it always returns false(key already exists) but the contract is empty and y change the key every time.\n\nAny clue?",
        "edited": {
            "user": "U2D62LCQJ",
            "ts": "1484670363.000000"
        },
        "ts": "1484670300.001160"
    },
    {
        "type": "message",
        "user": "U2D62LCQJ",
        "text": "I'm using the mocks to test everything by the way, could be that?",
        "ts": "1484670441.001162"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "if i remember correctly",
        "ts": "1484671267.001163"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "make sure that you remove temporary files from older chaincode deployment",
        "ts": "1484671286.001164"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "using linux",
        "ts": "1484671288.001165"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "this should be",
        "ts": "1484671291.001166"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "`\/var\/hyperledger\/production`",
        "ts": "1484671306.001167"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "so e.g. i have a script which start membersrvc and peer node",
        "ts": "1484671339.001168"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "but before it does",
        "ts": "1484671341.001169"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "`rm -rf \/var\/hyperledger\/production\/`",
        "ts": "1484671359.001170"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "attention! this recursively removes all files in the directory specified",
        "ts": "1484671378.001171"
    },
    {
        "type": "message",
        "user": "U2D62LCQJ",
        "text": "no \/var\/hyperledger",
        "ts": "1484671478.001172"
    },
    {
        "type": "message",
        "user": "U2D62LCQJ",
        "text": "i think the problem is with the MockStub, could be?",
        "ts": "1484671501.001173"
    },
    {
        "type": "message",
        "user": "U2D62LCQJ",
        "text": "does that support creating quering rows?",
        "ts": "1484671517.001174"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "sry i have no experience with mockstub",
        "ts": "1484671533.001175"
    },
    {
        "type": "message",
        "user": "U2D62LCQJ",
        "text": "lucky you hahahahha. At first seamed easier to develop but nop, IT'S A TRAP!!",
        "ts": "1484671597.001176"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": ":smile: :smile: :smile:",
        "ts": "1484671631.001177"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "if you do not have `\/var\/hyperledger`",
        "ts": "1484671727.001178"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "check out the core.yaml file in your peer directory",
        "ts": "1484671741.001179"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "there should be a line starting with `fileSystemPath`",
        "ts": "1484671771.001180"
    },
    {
        "type": "message",
        "user": "U2D62LCQJ",
        "text": "is not gonna work either,cause i'm talking about TDD develpment, so to test i do `go test`, currently i don't have a peer running",
        "ts": "1484671824.001181"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "yeah but what i mean is that data from the blockchain are stored locally on your pc EVEN AFTER you have closed all peers",
        "ts": "1484671881.001182"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "at least in v0.6",
        "ts": "1484671892.001183"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "and this at least in my case very often causes problems",
        "ts": "1484671902.001184"
    },
    {
        "type": "message",
        "user": "U2D62LCQJ",
        "text": "umm let me check",
        "ts": "1484671921.001185"
    },
    {
        "type": "message",
        "user": "U2D62LCQJ",
        "text": "nop",
        "ts": "1484672319.001186"
    },
    {
        "type": "message",
        "user": "U2D62LCQJ",
        "text": "no idea about whats the problem",
        "ts": "1484672330.001187"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "<@U2D62LCQJ> yeah, we are working to make the unit tests independent of any external dependencies",
        "ts": "1484677439.001188",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U1MSZ37NK"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "(well, I keep pestering;-)",
        "ts": "1484677451.001189"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "because as you note, you should be able to develop with a watch on and have it give you immediate feedback",
        "ts": "1484677500.001190"
    },
    {
        "user": "U34TJFSCB",
        "text": "<@U34TJFSCB|shaggy_kp> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1484710526.001191"
    },
    {
        "user": "U3SCKQB4P",
        "text": "<@U3SCKQB4P|nikeshgogia> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1484718378.001192"
    }
]
[
    {
        "user": "U2Z3FNF2N",
        "text": "<@U2Z3FNF2N|jinyu> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1479112235.002334"
    },
    {
        "type": "message",
        "user": "U2Z3FNF2N",
        "text": "for chaincode development, I want to customize error return in invoke call, but it always return \u201cok\u201d and transaction id even I write like \u201c return nil, errors.New(\"Received unknown function invocation\u201d) \" ,  for query method ok, but could we get customize error return from invoke?? thanks",
        "ts": "1479114711.002337"
    },
    {
        "type": "message",
        "user": "U2QLU433N",
        "text": "<@U24M29R4G> I tried following the steps to deploy chaincode ( <https:\/\/lists.hyperledger.org\/pipermail\/hyperledger-fabric\/attachments\/20161022\/d3860afb\/attachment.obj> )\nGetting the following error while deploying Chaincode 02 16:31:48.717 [chaincode] Deploy -&gt; DEBU 09e deploying chaincode CC02(networkid:dev,peerid:jdoe)\n16:31:49.266 [dockercontroller] deployImage -&gt; ERRO 09f Error building images: API error (500): {\"message\":\"Error parsing reference: \\\"dev-jdoe-CC02\\\" is not a valid repository\/tag\"}\nPlease advise. thanks",
        "edited": {
            "user": "U2QLU433N",
            "ts": "1479144968.000000"
        },
        "ts": "1479142027.002340"
    },
    {
        "type": "message",
        "user": "U0P1VU0QG",
        "text": "hey <@U1F3CQ2HX> : how does your invokeRequest payload looks like? usually you need to specify which attributes you want to present to the chaincode, as well as the cert itself...so something like this (if you want to present `attr1` and `attr2`):\n```\n   const invokeRequest = {\n      chaincodeID: 'myChainCodeId',\n      fcn: 'funcName',\n      args: args,\n      confidential: true,\n      attrs: ['attr1', 'attr2'],\n      userCert: userCertObj\n   };\n   const tx = user.invoke(invokeRequest);\n```",
        "ts": "1479143739.002342"
    },
    {
        "type": "message",
        "user": "U0P1VU0QG",
        "text": "I have an issue on the return of a chainCode Invoke call (which is supposed to insert a row via the `stub.InsertRow` function...here is the problem:\n```[chaincode] processStream -&gt; ERRO 11f Got error: Error unmarshalling table: unexpected EOF```\nUsing hfc 0.6.5 (but also tried 0.6.2) and using the `x86_64-0.6.1-preview` docker images : if you have seen this before, I would appreciate any pointers...cheers!",
        "edited": {
            "user": "U0P1VU0QG",
            "ts": "1479144213.000000"
        },
        "ts": "1479144185.002343"
    },
    {
        "type": "message",
        "user": "U0Y55KNG2",
        "text": "Having a bit of trouble deploying my latest iot chaincode sample ... I've split it into a tiny chaincode client and an \"iot contract platform\" that it imports ... the docker build for chaincode executes go install instead of go get and so does not find the package. Go get plus go install work fine, so this is a problem for me. Is the solution that I have to vendor our platform? Or is it an error that go install is used when go get would handle more cases (like ours)?",
        "edited": {
            "user": "U0Y55KNG2",
            "ts": "1479154690.000000"
        },
        "ts": "1479154662.002348"
    },
    {
        "type": "message",
        "user": "U1F3CQ2HX",
        "text": "<@U0P1VU0QG>: thanks! Yes I'm setting attrs. I'm not setting confidential and userCert, will it make any difference? About your error, not exactly sure what is the issue but does your columns in insertRow match table definition. ",
        "ts": "1479173963.002352"
    }
]
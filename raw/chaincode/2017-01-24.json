[
    {
        "user": "U2GU3M283",
        "text": "<@U2GU3M283|cyrg> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485249855.001294"
    },
    {
        "user": "U3UU2PMBK",
        "text": "<@U3UU2PMBK|patchpon> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485257621.001295"
    },
    {
        "user": "U3U9FT479",
        "text": "<@U3U9FT479|andygraham> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485262244.001296"
    },
    {
        "type": "message",
        "user": "U3S8HRGLV",
        "text": "hi, I would like to write a chaincode that makes a operation that only the involved users can see. I watch the developerworks course and it seems to be possible, but I did not understand how. Are there any examples on github about this type of implmentation?",
        "ts": "1485272340.001297"
    },
    {
        "user": "U3WCJPF6J",
        "text": "<@U3WCJPF6J|tylere> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485281610.001298"
    },
    {
        "type": "message",
        "user": "U3WCJPF6J",
        "text": "Hi, I'm looking into making a custom language for writing chaincode. Does anyone know if there will be support for this in the future? What I'd really like to do is just give a jar to validating peers and have them run it, but of course the typical scenario is that a validating peer downloads\/compiles the code.",
        "ts": "1485281886.001299"
    },
    {
        "user": "U2GULV0G1",
        "text": "<@U2GULV0G1|hanglin> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485295668.001302"
    },
    {
        "type": "message",
        "user": "U3LH9V41L",
        "text": "Hi, I set up multiple host validating peer. I registered chaincode on my local machine. I tried to query chaincode from another machine but chaincode not found. Do I have to register the same chaincode in another machine?",
        "ts": "1485313758.001305"
    },
    {
        "user": "U2URL5G8P",
        "text": "<@U2URL5G8P|satyam_agl> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485321415.001306"
    },
    {
        "type": "message",
        "user": "U2URL5G8P",
        "text": "not able to append to an aray of struct inside a struct",
        "ts": "1485321459.001307"
    },
    {
        "type": "message",
        "user": "U2URL5G8P",
        "text": "type Customer struct{\n\tUID string      \/\/unique id of a customer\n\tName string \n\tDoc []Document\n}\ntype Document struct {\n\t\tCategory string   \n\t\tDocName string\n}\n\t  customer.Append(args[2],args[3]) \/\/ calling of function",
        "thread_ts": "1485321571.001308",
        "reply_count": 1,
        "replies": [
            {
                "user": "U2URL5G8P",
                "ts": "1485512417.001413"
            }
        ],
        "ts": "1485321571.001308"
    },
    {
        "type": "message",
        "user": "U2URL5G8P",
        "text": "func (customer *Customer) Append(category string, name string) {  \/\/ function defination \n\td := &amp;Document{\n\t\tCategory: category,\n\t\tDocName:name,\n\t}\n\tcustomer.Doc = append(customer.Doc, *d)\n}",
        "ts": "1485321592.001309"
    },
    {
        "type": "message",
        "user": "U2URL5G8P",
        "text": "note :    customer.Doc = append(customer.Doc, d)  gives the error and    customer.Doc = append(customer.Doc, *d) does not give the appended array instead overwrites the previous entry",
        "ts": "1485321677.001310"
    },
    {
        "type": "message",
        "user": "U2URL5G8P",
        "text": "urgent please help  me to resolve it",
        "ts": "1485321815.001311"
    },
    {
        "user": "U3W6WF32Q",
        "text": "<@U3W6WF32Q|amrith> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485331043.001312"
    }
]
[
    {
        "type": "message",
        "user": "U0N4D2T61",
        "text": "ok gocha!  I have to launch a \"Docker logs xxxx\" where xxxx is the name of my Docker instance running inside the peer",
        "ts": "1475655346.001260"
    },
    {
        "type": "message",
        "user": "U0N4D2T61",
        "text": ":smile:",
        "ts": "1475655348.001261"
    },
    {
        "user": "U1SHFS1Q9",
        "text": "<@U1SHFS1Q9|umasuthan> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1475664221.001263"
    },
    {
        "user": "U2JH64RNG",
        "text": "<@U2JH64RNG|arkumar1> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1475667694.001265"
    },
    {
        "user": "U12AHQ3NK",
        "text": "<@U12AHQ3NK|nits7sid> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1475670116.001266"
    },
    {
        "type": "message",
        "user": "U12AHQ3NK",
        "text": "What will be the use of system chaincode in v1.0?",
        "ts": "1475670139.001267"
    },
    {
        "type": "message",
        "user": "U0N4D2T61",
        "text": "is chaincode deployed at startup if I understood",
        "ts": "1475670946.001268"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "System chaincode is as <@U0N4D2T61> mentions, but also has enhanced access to the peer",
        "ts": "1475680694.001270"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "Normal chaincode is firewalled from peer internals",
        "ts": "1475680714.001271"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "<@U0UKTPMG8> <@U0ULK2JPP> I\u2019m trying to get the node.js SDK to work with the endorser API, using the bddtests python code as examples. I think I\u2019m having encoding issues per the following error from the peer:\n\n16:58:25.406 [chaincode] processStream -&gt; ERRO b8b Got error: invalid function to lccc u\ufffde\ufffd",
        "ts": "1475687030.001273"
    },
    {
        "user": "U0UKTPMG8",
        "inviter": "U13TWBRBL",
        "text": "<@U0UKTPMG8|jeffgarratt> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1475687036.001274"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "any pointers?",
        "ts": "1475687042.001275"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "here\u2019s how I pass in the target chaincode deployment spec into the chaincode spec for \u201clccc\u201d:\n\n\t\tlet lcccSpec = {\n\t\t\ttype: _ccProto.ChaincodeSpec.Type.GOLANG,\n\t\t\tchaincodeID: {\n\t\t\t\tname: 'lccc'\n\t\t\t},\n\t\t\tctorMsg: {\n\t\t\t\targs: ['deploy', 'default', JSON.stringify(chaincodeDeploymentSpec)]\n\t\t\t}\n\t\t};",
        "ts": "1475687096.001276"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "is JSON.stringify() the right thing to do?",
        "ts": "1475687141.001277"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "<@U13TWBRBL> Don't think so.   You need the protobuf serialized form here",
        "ts": "1475687544.001278"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "i also tried to use a protobuf class (fabricProto.ChaincodeDeploymentSpec) then .toBuffer(), gave the same error",
        "ts": "1475687604.001279"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "do I need to serialize it to a string?",
        "ts": "1475687616.001280"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "node code?",
        "ts": "1475687623.001281"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "yes",
        "ts": "1475687626.001282"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "let me check real quick",
        "ts": "1475687630.001283"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "k",
        "ts": "1475687643.001284"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "toArrayBuffer()",
        "ts": "1475687723.001285"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "does that func exist?",
        "ts": "1475687738.001286"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "it does seem to, although still causes the same error",
        "ts": "1475687781.001287"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "2 sces",
        "ts": "1475687793.001288"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "secs",
        "ts": "1475687794.001289"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "let me verify the message from the python form",
        "ts": "1475687897.001290"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "k, looks good at first blush",
        "ts": "1475688012.001291"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "gonna switch to a private channel",
        "ts": "1475688031.001292"
    },
    {
        "type": "message",
        "user": "U296PJDD1",
        "text": "Hi, is there a way to get all of the rows in a table? It doesn't look like the shim interface directly supports this",
        "ts": "1475698097.001295"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "<@U296PJDD1> I'm looking for *any* examples of using the shim table",
        "ts": "1475698168.001296"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "there are very few examples that I can find",
        "ts": "1475698176.001297"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "it looks like it supports keys",
        "ts": "1475698184.001298"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "similar to SQL",
        "ts": "1475698192.001299"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "have you found any good resources so far ?",
        "ts": "1475698206.001300"
    },
    {
        "type": "message",
        "user": "U296PJDD1",
        "text": "<https:\/\/github.com\/hyperledger\/fabric\/blob\/ceefb12425b7ccb09fc0f88dc78d395a459dca55\/examples\/chaincode\/go\/asset_management02\/depository_handler.go>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/blob\/ceefb12425b7ccb09fc0f88dc78d395a459dca55\/examples\/chaincode\/go\/asset_management02\/depository_handler.go",
                "text": "Read-only mirror of <https:\/\/gerrit.hyperledger.org\/r\/#\/admin\/projects\/fabric>",
                "fallback": "GitHub: hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/blob\/ceefb12425b7ccb09fc0f88dc78d395a459dca55\/examples\/chaincode\/go\/asset_management02\/depository_handler.go",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1475698397.001301"
    },
    {
        "type": "message",
        "user": "U296PJDD1",
        "text": "<https:\/\/github.com\/hyperledger\/fabric\/blob\/ceefb12425b7ccb09fc0f88dc78d395a459dca55\/bddtests\/chaincode\/go\/table\/table.go>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/blob\/ceefb12425b7ccb09fc0f88dc78d395a459dca55\/bddtests\/chaincode\/go\/table\/table.go",
                "text": "Read-only mirror of <https:\/\/gerrit.hyperledger.org\/r\/#\/admin\/projects\/fabric>",
                "fallback": "GitHub: hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/blob\/ceefb12425b7ccb09fc0f88dc78d395a459dca55\/bddtests\/chaincode\/go\/table\/table.go",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1475698405.001303"
    },
    {
        "type": "message",
        "user": "U296PJDD1",
        "text": "those are two examples",
        "ts": "1475698410.001305"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "thanks",
        "ts": "1475698505.001306"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "<@U296PJDD1> is this table functionality based on RocksDB or it's rather something completely new",
        "ts": "1475698522.001307"
    },
    {
        "type": "message",
        "user": "U296PJDD1",
        "text": "I would think RocksDB, but I have no idea",
        "ts": "1475698551.001308"
    },
    {
        "type": "message",
        "user": "U23S3DPFY",
        "text": "<@U1CTBUNEN> I had the same question so spent a little time looking at the shim code to answer it.  The table functionality provided by the shim has nothing to do with RocksDB or the underlying data store.    Rather it is just an an abstraction on top of the Fabric's blockchain key-value store.  i.e. when you store a row in the table it just generates a compound key based on the table \"fields\" that you indicate are part of the key, and then associates the value with that compound key in the key-value store.",
        "ts": "1475727894.001313"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "<@U23S3DPFY> got it.",
        "ts": "1475735635.001315"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "I assume at one point you can do SQL-lie queries since it supports index keys",
        "ts": "1475735651.001316"
    }
]
[
    {
        "user": "U388YPQ1K",
        "text": "<@U388YPQ1K|gkourtellos> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1480421974.002653"
    },
    {
        "type": "message",
        "user": "U2DHRR4TE",
        "text": "Hey All,\n\nI'm having an odd error when using mockstub - it's telling me `Error: Document already exists.` when I try to do `InsertRow()` despite the rows theoretically being empty (on this note, how would I find how many rows are in a table).\n\nDuring the call to `MockInit()` this happens:\n\n```\n2016\/11\/29 12:45:54 MockStub( lg-project &amp;{{} {}} )\n2016\/11\/29 12:45:54 passed deployerCertificate []\n2016\/11\/29 12:45:54 Invalid admin certificate. Empty.\nError: Document already exists.--- FAIL: Test_createNewRequest (0.00s)\nFAIL\nexit status 1\nFAIL\t_\/home\/tom\/workspace\/lg-project-workspace\/src\/chaincode\t0.009s\n```",
        "ts": "1480424343.002654"
    },
    {
        "type": "message",
        "user": "U2DHRR4TE",
        "text": "does anyone know what might be causing this?",
        "ts": "1480424351.002655"
    },
    {
        "user": "U37GEHJSV",
        "text": "<@U37GEHJSV|pjhaga> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1480424701.002656"
    },
    {
        "type": "message",
        "user": "U37GEHJSV",
        "text": "Hi All,\n\nI am new here, so I hope this is the right place for my question. \n\nI was wondering if someone could explain whether the getRows function works when using tables in your blockchain, and if so, could someone explain me how I can use it?",
        "ts": "1480424855.002657"
    },
    {
        "type": "message",
        "user": "U2Z3ABG7N",
        "text": "Hey Guys - trying to run the example02 chaincode. I was able to deploy with the two entities - peer chaincode deploy -n mycc -c '{\"Args\": [\"init\", \"vibhu\",\"100\", \"rocky\", \"200\"]}' however when I try to invoke using the cmd peer chaincode invoke -l golang -n mycc -c '{\"Args\": [\"invoke\", \"vibhu\", \"rocky\", \"10\"]}' i get the error Error: Error endorsing chaincode: rpc error: code = 2 desc = Error deploying chaincode: Failed to launch chaincode spec(Could not get deployment transaction from LCCC for mycc - Error deploying chaincode: Transaction or query returned with failure: transaction not found default\/mycc) ..... any ideas why?",
        "ts": "1480426375.002660"
    },
    {
        "type": "message",
        "user": "U2LV4CC6B",
        "text": "<@U37GEHJSV>:  Have you had a look at <https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/core\/chaincode\/shim\/mockstub_test.go#L75>?  This is the test function for getRows.  It should give you some insight.",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/core\/chaincode\/shim\/mockstub_test.go#L75",
                "text": "Read-only mirror of <https:\/\/gerrit.hyperledger.org\/r\/#\/admin\/projects\/fabric>",
                "fallback": "GitHub: hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/core\/chaincode\/shim\/mockstub_test.go#L75",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1480435932.002663"
    },
    {
        "type": "message",
        "user": "U1SHFS1Q9",
        "text": "Need help on Immutability aspect in Blockchain\/Hyperledger.  When we create Chaincode, we use the Shim provided capability to create tables in RocksDB.  During transaction invocation on chaincode, we insert and update data in these tables.  Blockchain promises immutability which means updates will not be allowed. However, we are able to update the data on RocksDB.\n\nMy questions are,\n\n1. What is the immutability that is provided by Hyperledger\n2. I am able to update the records in the DB, because, those tables are created by me, what kind of data gets stored by blockchain. In other words can I avoid creating tables and still invoke transactions? If so agains what the transactions will be invoked? Do we have any samples?",
        "ts": "1480482771.002673"
    },
    {
        "type": "message",
        "user": "U1B9E51R8",
        "text": "<@U1SHFS1Q9> 1. the immutability means the blocks generated are immutable, you can't alter\/delete blocks",
        "ts": "1480485346.002674"
    },
    {
        "type": "message",
        "user": "U1B9E51R8",
        "text": "2. you can invoke tx w\/o creating tables. just see the example02 sample",
        "ts": "1480485396.002675"
    },
    {
        "type": "message",
        "user": "U1SHFS1Q9",
        "text": "Does the block store any data other than the hash? Also, if we have tables and create records, how do we correlate the actions on records and the blocks?",
        "ts": "1480485460.002676"
    },
    {
        "type": "message",
        "user": "U1SHFS1Q9",
        "text": "I will check our example 2",
        "ts": "1480485487.002677"
    },
    {
        "type": "message",
        "user": "U1B9E51R8",
        "text": "yes, block also stores payload, timestamp, nonhash data, etc..",
        "ts": "1480485541.002678"
    },
    {
        "type": "message",
        "user": "U1B9E51R8",
        "text": "block contains your tx in payload, it's like an event, your state(data in tables) will change based on the tx data in block",
        "ts": "1480485656.002679"
    },
    {
        "type": "message",
        "user": "U1B9E51R8",
        "text": "blocks are like event sourcing, you can play back your state based on the block chain",
        "ts": "1480485726.002680"
    },
    {
        "type": "message",
        "user": "U1B9E51R8",
        "text": "<https:\/\/github.com\/hyperledger\/fabric\/blob\/v0.6\/protos\/fabric.proto#L89>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/blob\/v0.6\/protos\/fabric.proto#L89",
                "text": "Read-only mirror of <https:\/\/gerrit.hyperledger.org\/r\/#\/admin\/projects\/fabric>",
                "fallback": "GitHub: hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/blob\/v0.6\/protos\/fabric.proto#L89",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1480485859.002681"
    },
    {
        "type": "message",
        "user": "U1SHFS1Q9",
        "text": "<@U1B9E51R8> , Thank you so much for pointers.  I will go through and get back if I need any further help.",
        "ts": "1480487897.002683"
    },
    {
        "type": "message",
        "user": "U1SHFS1Q9",
        "text": "The Block Message has an attribute nonHashData of type NonHashData\n\n\n- Data stored with the block, but not included in the blocks\n\/\/ hash. This allows this data to be different per peer or discarded without\n\/\/ impacting the blockchain.",
        "ts": "1480488467.002684"
    },
    {
        "type": "message",
        "user": "U1SHFS1Q9",
        "text": "What exactly do we mean by \"This allows this data to be different per peer or discarded without impacting the blockchain\"",
        "ts": "1480488514.002685"
    },
    {
        "type": "message",
        "user": "U1SHFS1Q9",
        "text": "I assume this is where the data gets stored.  Does it get encrypted also for privacy?",
        "ts": "1480488559.002686"
    },
    {
        "type": "message",
        "user": "U1B9E51R8",
        "text": "NonHashData doesn't participate hash process, it only stores local peer data and doesn't change the hash of block.  Actually, Transaction is where data is stored I think. It should be encrypted if you enable privacy option",
        "ts": "1480488946.002687"
    },
    {
        "type": "message",
        "user": "U1B9E51R8",
        "text": "when calculating Block hash, NonHashData is ignored",
        "ts": "1480489058.002688"
    },
    {
        "type": "message",
        "user": "U1SHFS1Q9",
        "text": "Ok. So the payload content is participating in calculating Block hash, right?\n\nMy definition of payload is that, if I am implementing an asset management solution using hyper ledger, the  asset details such as its dimensions and other attributes will be the payload.",
        "ts": "1480489325.002689"
    }
]
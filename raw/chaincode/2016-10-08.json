[
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "guys how would I go about passing a JSON or XML document to the chaincode invoke method ?",
        "ts": "1475915942.001376"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "or I should include the document in the transaction payload field ?",
        "ts": "1475916187.001377"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "<@U1CTBUNEN> - you would need to treat it as if it were any other argument to the function you are trying to invoke.  For example, for JSON, if you are using NodeJS to submit - you could pass `new Buffer(JSON.stringify(myJSON))` as one of the arg",
        "edited": {
            "user": "U0PB67X4K",
            "ts": "1475919160.000000"
        },
        "ts": "1475919127.001378"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "<@U0PB67X4K> got it",
        "ts": "1475919157.001380"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "and the transaction payload field ?",
        "ts": "1475919168.001382"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "What is that generally used for ?",
        "ts": "1475919176.001383"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "why would you prefer the payload over a function argument",
        "edited": {
            "user": "U1CTBUNEN",
            "ts": "1475919198.000000"
        },
        "ts": "1475919191.001384"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "assume you are looking directly at the proto files?",
        "ts": "1475919228.001386"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "well I've seen code examples where certs will be sent via the payload field",
        "ts": "1475919270.001387"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "maybe that was the payload field of the ChaincodeSecurityContext message?",
        "ts": "1475919537.001388"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "hmm",
        "ts": "1475920304.001390"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "may be I'm confusing the metadata field with the payload",
        "ts": "1475920314.001391"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "```    \/\/ Construct the deploy request\n    var deployRequest = {\n      \/\/ Function to trigger\n      fcn: \"init\",\n      \/\/ Arguments to the initializing function\n      args: [],\n      \/\/ Mark chaincode as confidential\n      confidential: true,\n      \/\/ Assign Alice's cert\n      metadata: alicesCert.encode()\n    };\n```",
        "ts": "1475920336.001392"
    },
    {
        "type": "message",
        "user": "U1P1ZV6RF",
        "text": "Is hyperledger fabric platform capable of running turing-complete code or are there natively embedded limitations in it?",
        "ts": "1475937229.001395"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "why would you ask that? There are limitations like you're not supposed to use \"global variables\" and to flip coins (or do non-deterministic stuff)",
        "ts": "1475944329.001396"
    },
    {
        "type": "message",
        "user": "U1P1ZV6RF",
        "text": "I am asking in order to determine the attack surface Fabric-based network is potentially facing (and to determine if issues recently experienced by Ethereum network would also be applicable to Fabric, toutes proportions gardees, of course)",
        "ts": "1475944418.001397"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "IIUC that wasn't a bug in etherium but a bug in the user code",
        "ts": "1475944448.001398"
    },
    {
        "type": "message",
        "user": "U1P1ZV6RF",
        "text": "I am talking about recent 3 weeks and not the DAO hack",
        "ts": "1475944500.001399"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "oh",
        "ts": "1475944508.001400"
    },
    {
        "type": "message",
        "user": "U1P1ZV6RF",
        "text": "i.e. executing smart contracts that perform a buffer overflow on geth and parity clients",
        "ts": "1475944520.001401"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "i'm uninformed then",
        "ts": "1475944524.001402"
    },
    {
        "type": "message",
        "user": "U1P1ZV6RF",
        "text": "basically, if the code is turing-complete, then it is possible to imagine all sorts of malicious intents being injected into the network through the smart contracts",
        "ts": "1475944569.001403"
    },
    {
        "type": "message",
        "user": "U1P1ZV6RF",
        "text": "with regards to Fabric the situation is even worse because the smart contract attack surface would not be mitigated by the notion of cost (i.e. gas spent to execute the contract)",
        "ts": "1475944610.001404"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "what do you mean injected into the network?",
        "ts": "1475944615.001405"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "you're activating a function",
        "ts": "1475944624.001406"
    },
    {
        "type": "message",
        "user": "U1P1ZV6RF",
        "text": "I mean deployed",
        "ts": "1475944626.001407"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "if you have a bug in the function....",
        "ts": "1475944633.001408"
    },
    {
        "type": "message",
        "user": "U1P1ZV6RF",
        "text": "I was just curious if someone is analyzing weaknesses Ethereum network is currently going through in order to avoid similar mishaps or mitigate them within the Fabric code",
        "ts": "1475944686.001409"
    },
    {
        "type": "message",
        "user": "U23S3DPFY",
        "text": "I think there is a big difference with respect to Fabric in that it is intended for private blockchains.",
        "ts": "1475944782.001410",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0ULK2JPP"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U1P1ZV6RF",
        "text": "in what way is this difference articulated?",
        "ts": "1475944854.001411"
    },
    {
        "type": "message",
        "user": "U1P1ZV6RF",
        "text": "from a perspective of chaincode?",
        "ts": "1475944864.001412"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U23S3DPFY> I\u2019d say applies to permissive, permissioned too (not strictly \u201cprivate\u201d)",
        "ts": "1475944929.001413"
    },
    {
        "type": "message",
        "user": "U23S3DPFY",
        "text": "fair enough.  the point being is that I wouldn't expect Fabric to be running on the public Internet where just anyone can shovel garbage calls at it.  if a set of businesses are running Fabric on an internal network, and anyone attempts a DOS attack against the nodes, it should be easy enough to identify the source and shut it down",
        "ts": "1475945046.001414"
    },
    {
        "type": "message",
        "user": "U1P1ZV6RF",
        "text": "In case of the Fabric, I would implicitly put an intermediary (gateway, DMZ) before a call from the outside would reach the API. I would never let an external application to even reach nodes or query the network through the chaincode directly. However, one must assume that a Turing-complete chaincode opens a new attack surface regardless of the number of boundaries set between it and the outside world. In consortium-like environment it would be hard to enforce the same standard for security among all business participants so as an IT Architect I would not avoid asking such questions or at least documenting it as a risk",
        "ts": "1475945281.001415"
    },
    {
        "type": "message",
        "user": "U1P1ZV6RF",
        "text": "so, coming back to my initial question: is chaincode turing-complete to the same extent as solidity-based contracts written for Ethereum network?",
        "ts": "1475945340.001416"
    },
    {
        "user": "U2JD3UMEU",
        "text": "<@U2JD3UMEU|vu3mmg> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1475992322.001423"
    }
]
[
    {
        "type": "message",
        "user": "U23S3DPFY",
        "text": "<@U1CTBUNEN> kind of.  lets say you have keys labeled A, B, C, and D.  when I looked the API would let you search for \"rows\" with values for keys from left to right.  i.e. you can query for A + B + C + D, A + B + C, A + B, or just A",
        "ts": "1475737645.001317"
    },
    {
        "type": "message",
        "user": "U23S3DPFY",
        "text": "internally though there is no indexing or anything provided by the shim.  I don't know how the blockchain is stored in RocksDB, so maybe there is some help at that underlying level.  In any case, this mostly seems like a toy for building demos to me.",
        "ts": "1475737701.001318"
    },
    {
        "type": "message",
        "user": "U23S3DPFY",
        "text": "the other take away that I have is that if you were to build a real application, you probably would want to use the blockchain in conjunction with a real database.  e.g. the blockchain would be used to secure the data in the real database",
        "ts": "1475737781.001319"
    },
    {
        "type": "message",
        "user": "U23S3DPFY",
        "text": "in my mind, there are many unresolved questions regarding how to build real applications with blockchains",
        "ts": "1475737809.001320"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "<@U23S3DPFY> if there's the KEY field type, I'd assume there's some kind of indexing",
        "ts": "1475737994.001322"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "also it looks like one can do a pseudo JOIN in code by quering two tables with these \"key\" fields",
        "ts": "1475738050.001323"
    },
    {
        "user": "U2KJHTPQT",
        "text": "<@U2KJHTPQT|stevenroose> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1475738875.001325"
    },
    {
        "type": "message",
        "user": "U23S3DPFY",
        "text": "I don't see any provided code to do a join in the shim.  But, of course you could query for two data sets and do an in-memory join on your own",
        "ts": "1475740506.001326"
    },
    {
        "type": "message",
        "user": "U23S3DPFY",
        "text": "if you want to take a look, the shim code is here `fabric\\core\\chaincode\\shim\\chaincode.go`",
        "ts": "1475740536.001327"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "<@U23S3DPFY> well if the KEY type is not really indexed I might as well just use regular GO structs instead of tables",
        "ts": "1475746206.001328"
    },
    {
        "user": "U2KL18VPU",
        "text": "<@U2KL18VPU|vigneswaran.r> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1475815062.001340"
    },
    {
        "user": "U2LGFBFNJ",
        "text": "<@U2LGFBFNJ|jmahhh> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1475818073.001341"
    }
]
[
    {
        "user": "U0XV1HDL3",
        "text": "<@U0XV1HDL3|cca> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1475738710.000049"
    },
    {
        "user": "U2L9F7VL1",
        "text": "<@U2L9F7VL1|adrianhopebailie> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1475773894.000050"
    },
    {
        "type": "message",
        "user": "U24M29R4G",
        "text": "Hi. I thought I would start a conversation around the pluggable database from an implementation perspective based on Dave's presentation in terms of how an interface definition  would like for a datastore to be pluggable. I have been thinking about some kind of a registry service similar to Fabric's  consensus implementation that would allow us to register mutiple DB's and some generic DB interface which would define the APIs all the DB's should support.",
        "ts": "1475794420.000051"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "agreed - that is one of the next items to think through, how to refactor ledgernext to provide an interface that is obvious and easy to implement",
        "ts": "1475794606.000052"
    },
    {
        "type": "message",
        "user": "U24M29R4G",
        "text": "right. I am trying to see how generic this interface has to be to support all possible datastores. RDBMS type DB's store information in tables while rocksdb has the concept of Column families. We may need to think in terms of how to abtract these concepts",
        "ts": "1475794786.000053"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "yeah, i\u2019m thinking if the chaincode data is modeled as JSON, it can easily be pushed to key\/value or document datastore as-is, but would require a transformation layer to push to relational DB",
        "ts": "1475794889.000054"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "we could also have a table\/record metaphor to make the relational mapping easier",
        "ts": "1475794934.000055"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "i\u2019d suggest write down some ideas and then we can look at it together",
        "ts": "1475794973.000056"
    },
    {
        "type": "message",
        "user": "U24M29R4G",
        "text": "yeah..",
        "ts": "1475795000.000057"
    },
    {
        "type": "message",
        "user": "U24M29R4G",
        "text": "Sure Dave..",
        "ts": "1475795009.000058"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "i expect to be thinking through these aspects next week",
        "ts": "1475795016.000059"
    },
    {
        "type": "message",
        "user": "U24M29R4G",
        "text": "I just came up with a simple registry service for registering different DBs.. and some kind of DB interface. Just as a starting point. Please feel free to comment on it.",
        "ts": "1475795165.000060"
    },
    {
        "type": "message",
        "user": "U24M29R4G",
        "text": "<https:\/\/github.com\/nikileshsa\/hyperledger_pluggable_datastore\/tree\/master\/core\/db>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "nikileshsa\/hyperledger_pluggable_datastore",
                "title_link": "https:\/\/github.com\/nikileshsa\/hyperledger_pluggable_datastore\/tree\/master\/core\/db",
                "text": "Contribute to hyperledger_pluggable_datastore development by creating an account on GitHub.",
                "fallback": "GitHub: nikileshsa\/hyperledger_pluggable_datastore",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/584036?v=3&s=400",
                "from_url": "https:\/\/github.com\/nikileshsa\/hyperledger_pluggable_datastore\/tree\/master\/core\/db",
                "thumb_width": 420,
                "thumb_height": 420,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1475795177.000061"
    },
    {
        "type": "message",
        "user": "U24M29R4G",
        "text": "its largely a work in progress from the db interface definition perspective.",
        "ts": "1475795319.000063"
    }
]
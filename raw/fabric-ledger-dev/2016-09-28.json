[
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "<@U0Z541B3P>  Yesterday I cleaned up comments in the ledgernext example to help people understand it: <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/1275\/>",
        "ts": "1475071232.000013"
    },
    {
        "type": "message",
        "user": "U0Z541B3P",
        "text": "<@U0PU2N50V> - yes you are right about making a copy of the db and using state APIs for accessing (though the data would be encrypted, if encryption is on).\n - The difference between the three is how the state keys are \u2018logically\u2019 arranged so that crypto hash of state can be computed efficiently. 1) `raw` does not compute crypto hash at all and serves the purpose of best case performance numbers 2) `buckettree` details are mentioned in the doc (<https:\/\/github.com\/manish-sethi\/fabric\/blob\/master\/docs\/protocol-spec.md#3221-hashing-the-world-state>) and 3) `trie` arranges the keys based on trie structure.\n`buckettree` is flexible in the sense that it allows you to control the depth and width of the tree and hence controlling the performance",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "manish-sethi\/fabric",
                "title_link": "https:\/\/github.com\/manish-sethi\/fabric\/blob\/master\/docs\/protocol-spec.md#3221-hashing-the-world-state",
                "text": "Blockchain fabric code",
                "fallback": "GitHub: manish-sethi\/fabric",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/14808090?v=3&s=400",
                "from_url": "https:\/\/github.com\/manish-sethi\/fabric\/blob\/master\/docs\/protocol-spec.md#3221-hashing-the-world-state",
                "thumb_width": 420,
                "thumb_height": 420,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1475071259.000014"
    },
    {
        "type": "message",
        "user": "U0Z541B3P",
        "text": "<@U1KFCPFQA> sure, will go through the changes",
        "ts": "1475071325.000016"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "It has already been approved\/merged, now I\u2019m working on the protobuf\/simulationResults defect I mentioned the other day",
        "ts": "1475071417.000017"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "Note - the intent is to slack about what we do each day in this channel, so others can get engaged in ledger development",
        "ts": "1475071506.000018"
    },
    {
        "type": "message",
        "user": "U0Z541B3P",
        "text": "OK, sure.",
        "ts": "1475071680.000019"
    },
    {
        "type": "message",
        "user": "U0Z541B3P",
        "text": "I just submitted a changeset for synch-ing the block index with block storage (<https:\/\/gerrit.hyperledger.org\/r\/#\/c\/1317\/>)",
        "ts": "1475071726.000020"
    },
    {
        "user": "U0YJUECE8",
        "text": "<@U0YJUECE8|silliman> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1475075699.000021"
    },
    {
        "user": "U231ZGXDG",
        "text": "<@U231ZGXDG|shukla> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1475084391.000022"
    },
    {
        "user": "U24M29R4G",
        "text": "<@U24M29R4G|nikileshsa> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1475087797.000023"
    },
    {
        "user": "U1B9E51R8",
        "text": "<@U1B9E51R8|xixuejia> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1475115533.000024"
    }
]
[
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "We are recommending to use LevelDB as the RocksDB replacement.  Of the key\/value databases analyzed, LevelDB is most aligned with RocksDB and our specific use cases.\n\nNow, there are still two options with LevelDB:\n\n1) We can use LevelDB (<https:\/\/github.com\/google\/leveldb> C++ BSD-3-Clause license) with a LevelDB go wrapper (<https:\/\/github.com\/jmhodges\/levigo> MIT license)\nor\n2) We can use a native golang port of LevelDB called goleveldb (<https:\/\/github.com\/syndtr\/goleveldb> BSD-2-Clause license).\n\n#1 has broader use in the industry and is more aligned with our use of RocksDB, and therefore seems less risky.\nBut Ethereum uses #2 in their golang implementation (<https:\/\/github.com\/ethereum\/go-ethereum\/blob\/master\/ethdb\/database.go>) so there is some precedent, and is go gettable\/vendorable which simplifies things for us.\n\nThoughts?",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "google\/leveldb",
                "title_link": "https:\/\/github.com\/google\/leveldb",
                "text": "leveldb - LevelDB is a fast key-value storage library written at Google that provides an ordered mapping from string keys to string values.",
                "fallback": "GitHub: google\/leveldb",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/1342004?v=3&s=400",
                "from_url": "https:\/\/github.com\/google\/leveldb",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            },
            {
                "service_name": "GitHub",
                "title": "jmhodges\/levigo",
                "title_link": "https:\/\/github.com\/jmhodges\/levigo",
                "text": "levigo is a Go wrapper for LevelDB",
                "fallback": "GitHub: jmhodges\/levigo",
                "thumb_url": "https:\/\/avatars1.githubusercontent.com\/u\/598?v=3&s=400",
                "from_url": "https:\/\/github.com\/jmhodges\/levigo",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 2
            },
            {
                "service_name": "GitHub",
                "title": "syndtr\/goleveldb",
                "title_link": "https:\/\/github.com\/syndtr\/goleveldb",
                "text": "goleveldb - LevelDB key\/value database in Go.",
                "fallback": "GitHub: syndtr\/goleveldb",
                "thumb_url": "https:\/\/avatars0.githubusercontent.com\/u\/728237?v=3&s=400",
                "from_url": "https:\/\/github.com\/syndtr\/goleveldb",
                "thumb_width": 420,
                "thumb_height": 420,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 3
            },
            {
                "service_name": "GitHub",
                "title": "ethereum\/go-ethereum",
                "title_link": "https:\/\/github.com\/ethereum\/go-ethereum\/blob\/master\/ethdb\/database.go",
                "text": "go-ethereum - Official golang implementation of the Ethereum protocol",
                "fallback": "GitHub: ethereum\/go-ethereum",
                "thumb_url": "https:\/\/avatars1.githubusercontent.com\/u\/6250754?v=3&s=400",
                "from_url": "https:\/\/github.com\/ethereum\/go-ethereum\/blob\/master\/ethdb\/database.go",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 4
            }
        ],
        "ts": "1477490532.000248"
    },
    {
        "type": "message",
        "user": "U24M29R4G",
        "text": "<@U1KFCPFQA> thanks for the heads up. you stated that rocksdb has licensing issues. what kind of licensing issue is there with rocksdb?",
        "ts": "1477491302.000250"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U24M29R4G|nikileshsa> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/nikileshsa\/F2UEPVCF2\/panic_while_running_marble_example__should_we_create_this_payment_app_accounts_manually_in_couchdb_.sh|Panic while running marble example: Should we create this Payment App accounts manually in couchdb?>",
        "file": {
            "id": "F2UEPVCF2",
            "created": 1477491598,
            "timestamp": 1477491598,
            "name": "Panic_while_running_marble_example__Should_we_create_this_Payment_App_accounts_manually_in_couchdb_.sh",
            "title": "Panic while running marble example: Should we create this Payment App accounts manually in couchdb?",
            "mimetype": "text\/plain",
            "filetype": "shell",
            "pretty_type": "Shell",
            "user": "U24M29R4G",
            "editable": true,
            "size": 7402,
            "mode": "snippet",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F2UEPVCF2\/panic_while_running_marble_example__should_we_create_this_payment_app_accounts_manually_in_couchdb_.sh?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F2UEPVCF2\/download\/panic_while_running_marble_example__should_we_create_this_payment_app_accounts_manually_in_couchdb_.sh?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/nikileshsa\/F2UEPVCF2\/panic_while_running_marble_example__should_we_create_this_payment_app_accounts_manually_in_couchdb_.sh",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F2UEPVCF2-2aaf996d22",
            "edit_link": "https:\/\/hyperledgerproject.slack.com\/files\/nikileshsa\/F2UEPVCF2\/panic_while_running_marble_example__should_we_create_this_payment_app_accounts_manually_in_couchdb_.sh\/edit",
            "preview": "\r\n\r\nnikileshsa@frozenhp:~\/go\/src\/github.com\/hyperledger\/fabric\/core\/ledgernext\/kvledger\/example\/main$ go run example.go \r\n2016\/10\/26 07:09:59 CreateDirIfMissing [\/tmp\/test\/ledgernext\/kvledger\/example\/blocks\/blocks\/]\r\n2016\/10\/26 07:09:59 CreateDirIfMissing [\/tmp\/test\/ledgernext\/kvledger\/example\/blocks\/db\/]\r",
            "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text\/plain',window.getSelection().toString().replace(\/\\u200b\/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>&#8203;<\/pre><\/div>\n<div><pre>&#8203;<\/pre><\/div>\n<div><pre>nikileshsa@frozenhp:~\/go\/src\/github.com\/hyperledger\/fabric\/core\/ledgernext\/kvledger\/example\/main<span class=\"cm-def\">$ go<\/span> run example.go <\/pre><\/div>\n<div><pre><span class=\"cm-number\">2016<\/span>\/10\/26 <span class=\"cm-number\">07<\/span>:09:59 CreateDirIfMissing [\/tmp\/test\/ledgernext\/kvledger\/example\/blocks\/blocks\/]<\/pre><\/div>\n<div><pre><span class=\"cm-number\">2016<\/span>\/10\/26 <span class=\"cm-number\">07<\/span>:09:59 CreateDirIfMissing [\/tmp\/test\/ledgernext\/kvledger\/example\/blocks\/db\/]<\/pre><\/div>\n<\/div>\n<\/div>\n",
            "lines": 82,
            "lines_more": 77,
            "preview_is_truncated": true,
            "channels": [
                "C2GFRAE7P"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 0
        },
        "user": "U24M29R4G",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U24M29R4G|nikileshsa>",
        "bot_id": null,
        "ts": "1477491598.000251"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "<@U24M29R4G> RocksDB has a patent infringement license in it from Facebook. The legal team is therefore not comfortable with using it.  For details read: <https:\/\/github.com\/facebook\/rocksdb\/blob\/master\/PATENTS>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "facebook\/rocksdb",
                "title_link": "https:\/\/github.com\/facebook\/rocksdb\/blob\/master\/PATENTS",
                "text": "rocksdb - A library that provides an embeddable, persistent key-value store for fast storage.",
                "fallback": "GitHub: facebook\/rocksdb",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/69631?v=3&s=400",
                "from_url": "https:\/\/github.com\/facebook\/rocksdb\/blob\/master\/PATENTS",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1477491801.000252"
    },
    {
        "type": "message",
        "user": "U24M29R4G",
        "text": "thanks dave! for the pointer on this licensing.",
        "ts": "1477491887.000254"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "<@U24M29R4G> CouchDB requires that chaincode variables be JSON format. We will also look into arbitrary blob support, but for those use cases you are probably better off sticking with RocksDB (or ultimate LevelDB replacement), since the blob won\u2019t be queryable in CouchDB and there is therefore no benefit.",
        "ts": "1477492301.000255"
    },
    {
        "type": "message",
        "user": "U24M29R4G",
        "text": "yeah.. makes sense..",
        "ts": "1477492585.000256"
    },
    {
        "type": "message",
        "user": "U2BGFAHC7",
        "text": "<@U1KFCPFQA> Will you create a DB interface so that others can play with trying other database? Currently some of the gorocksdb exported types are used further up the package hierarchy.",
        "ts": "1477492797.000257"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "yes, it is intended to refactor ledger to make things more pluggable\u2026couple weeks away, other dependencies to work on first",
        "ts": "1477492847.000258"
    },
    {
        "type": "message",
        "user": "U2BGFAHC7",
        "text": "Cool :thumbsup:",
        "ts": "1477492858.000259"
    },
    {
        "type": "message",
        "user": "U24M29R4G",
        "text": "I am just trying to run the marble_example.go in ```\/fabric\/core\/ledgernext\/kvledger``` as part of the code in review  and getting the \"Document update conflict error\". <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/1891\/>. I know I have seen this error before. Not sure if I am missing something. Is this a known issue at this point?",
        "ts": "1477492947.000260"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "you probably need to delete the marble1 document from your couchdb\u2026 cleanup code is not in the example yet.",
        "ts": "1477492988.000261"
    },
    {
        "type": "message",
        "user": "U24M29R4G",
        "text": "sure. thanks...",
        "ts": "1477493086.000262"
    },
    {
        "type": "message",
        "user": "U24M29R4G",
        "text": "Also \/fabric\/core\/ledgernext\/kvledger\/example\/main\/example.go should also work right? When I try to run it, its throwing a panic <https:\/\/hyperledgerproject.slack.com\/files\/nikileshsa\/F2UEPVCF2\/panic_while_running_marble_example__should_we_create_this_payment_app_accounts_manually_in_couchdb_.sh>",
        "ts": "1477493414.000263"
    },
    {
        "type": "message",
        "subtype": "file_mention",
        "text": "<@U24M29R4G|nikileshsa> mentioned a file: <https:\/\/hyperledgerproject.slack.com\/files\/nikileshsa\/F2UEPVCF2\/panic_while_running_marble_example__should_we_create_this_payment_app_accounts_manually_in_couchdb_.sh|Panic_while_running_marble_example__Should_we_create_this_Payment_App_accounts_manually_in_couchdb_.sh>.",
        "file": {
            "id": "F2UEPVCF2",
            "created": 1477491598,
            "timestamp": 1477491598,
            "name": "Panic_while_running_marble_example__Should_we_create_this_Payment_App_accounts_manually_in_couchdb_.sh",
            "title": "Panic while running marble example: Should we create this Payment App accounts manually in couchdb?",
            "mimetype": "text\/plain",
            "filetype": "shell",
            "pretty_type": "Shell",
            "user": "U24M29R4G",
            "editable": true,
            "size": 7402,
            "mode": "snippet",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F2UEPVCF2\/panic_while_running_marble_example__should_we_create_this_payment_app_accounts_manually_in_couchdb_.sh?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F2UEPVCF2\/download\/panic_while_running_marble_example__should_we_create_this_payment_app_accounts_manually_in_couchdb_.sh?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/nikileshsa\/F2UEPVCF2\/panic_while_running_marble_example__should_we_create_this_payment_app_accounts_manually_in_couchdb_.sh",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F2UEPVCF2-2aaf996d22",
            "edit_link": "https:\/\/hyperledgerproject.slack.com\/files\/nikileshsa\/F2UEPVCF2\/panic_while_running_marble_example__should_we_create_this_payment_app_accounts_manually_in_couchdb_.sh\/edit",
            "preview": "\r\n\r\nnikileshsa@frozenhp:~\/go\/src\/github.com\/hyperledger\/fabric\/core\/ledgernext\/kvledger\/example\/main$ go run example.go \r\n2016\/10\/26 07:09:59 CreateDirIfMissing [\/tmp\/test\/ledgernext\/kvledger\/example\/blocks\/blocks\/]\r\n2016\/10\/26 07:09:59 CreateDirIfMissing [\/tmp\/test\/ledgernext\/kvledger\/example\/blocks\/db\/]\r",
            "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text\/plain',window.getSelection().toString().replace(\/\\u200b\/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>&#8203;<\/pre><\/div>\n<div><pre>&#8203;<\/pre><\/div>\n<div><pre>nikileshsa@frozenhp:~\/go\/src\/github.com\/hyperledger\/fabric\/core\/ledgernext\/kvledger\/example\/main<span class=\"cm-def\">$ go<\/span> run example.go <\/pre><\/div>\n<div><pre><span class=\"cm-number\">2016<\/span>\/10\/26 <span class=\"cm-number\">07<\/span>:09:59 CreateDirIfMissing [\/tmp\/test\/ledgernext\/kvledger\/example\/blocks\/blocks\/]<\/pre><\/div>\n<div><pre><span class=\"cm-number\">2016<\/span>\/10\/26 <span class=\"cm-number\">07<\/span>:09:59 CreateDirIfMissing [\/tmp\/test\/ledgernext\/kvledger\/example\/blocks\/db\/]<\/pre><\/div>\n<\/div>\n<\/div>\n",
            "lines": 82,
            "lines_more": 77,
            "preview_is_truncated": true,
            "channels": [
                "C2GFRAE7P"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 0
        },
        "user": "U24M29R4G",
        "ts": "1477493414.000264"
    },
    {
        "type": "message",
        "user": "U24M29R4G",
        "text": "Is this a known issue? if not wil try to debug",
        "ts": "1477493513.000265"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "you are running the non-json example.  you need to run the json marble_example",
        "ts": "1477493825.000266"
    },
    {
        "type": "message",
        "user": "U24M29R4G",
        "text": "<@U1KFCPFQA>. oh got it.. just now..thanks..",
        "ts": "1477494933.000267"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "the couchDB examples are running fine for me",
        "ts": "1477495658.000268"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "however I\u2019m struggling to implement the \/db\/_find API method",
        "ts": "1477495669.000269"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "which is a POST method",
        "ts": "1477495672.000270"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "and I keep getting: error={\"error\":\"bad_request\",\"reason\":\"Referer header required.\"}",
        "ts": "1477495688.000271"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "I tried doing a POST request on the command line with curl but I get the same result",
        "ts": "1477495704.000272"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "does anyone have any experience with this CouchDB API method ?",
        "ts": "1477495717.000273"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "(<http:\/\/docs.couchdb.org\/en\/2.0.0\/api\/database\/find.html>)",
        "ts": "1477495826.000274"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "I tried setting the referer field in the header but still no luck",
        "ts": "1477495856.000275"
    },
    {
        "user": "U0KN2SSKE",
        "text": "<@U0KN2SSKE|binhn> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1477497073.000276"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "aaaa",
        "ts": "1477497093.000277"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "ignore me",
        "ts": "1477497095.000278"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "I\u2019ve been running CouchDB 1.x branch",
        "ts": "1477497104.000279"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": ": ((",
        "ts": "1477497105.000280"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "<@U1KFCPFQA> I managed to implement the \/db\/_find API",
        "ts": "1477508508.000281"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "YAY!",
        "ts": "1477508514.000282"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "now I need to figure out how to run real transactions as opposed to the tx simulator",
        "ts": "1477508621.000283"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "I want to use the TX_ID as the JSON DOC ID",
        "ts": "1477508680.000284"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "Note that couchdb prototype has been refactored for \u2018master\u2019 branch and for the ledgernext\u2014&gt;ledger name change.  The latest changeset is available and I\u2019m now hopeful it can be merged immediately: <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/1931>",
        "ts": "1477516358.000285"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "<@U1CTBUNEN> Yes, the next task is get end-to-end transactions flowing with couchdb utilized.  Agreed that we\u2019d like txid saved in the JSON doc for traceability\/queryability (but not as the json doc id per se\u2026 that needs to be the stable key spanning transactions)",
        "ts": "1477516657.000286"
    }
]
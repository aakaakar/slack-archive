[
    {
        "user": "U1KFCPFQA",
        "text": "<@U1KFCPFQA|dave.enyeart> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1474985415.000002"
    },
    {
        "user": "U1KFCPFQA",
        "purpose": "Discuss ledger development",
        "text": "<@U1KFCPFQA|dave.enyeart> set the channel purpose: Discuss ledger development",
        "type": "message",
        "subtype": "channel_purpose",
        "ts": "1474985415.000003"
    },
    {
        "user": "U143D0EQ4",
        "inviter": "U1KFCPFQA",
        "text": "<@U143D0EQ4|lfeagan> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1474985415.000004"
    },
    {
        "user": "U0Z541B3P",
        "inviter": "U1KFCPFQA",
        "text": "<@U0Z541B3P|manish-sethi> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1474985415.000005"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "Ledger backlog including Sprint2 plan is loaded into Jira, view it here:",
        "ts": "1474986138.000006"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "<https:\/\/jira.hyperledger.org\/secure\/RapidBoard.jspa?rapidView=59&amp;view=planning&amp;selectedIssue=FAB-445>",
        "ts": "1474986141.000007"
    },
    {
        "user": "U29TR7HFH",
        "text": "<@U29TR7HFH|joao.costa> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1474991967.000008"
    },
    {
        "user": "U0N4P17ND",
        "text": "<@U0N4P17ND|oiakovlev> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1474992198.000009"
    },
    {
        "user": "U0PV6MUD6",
        "text": "<@U0PV6MUD6|sbrakev> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1475001539.000010"
    },
    {
        "user": "U0PU2N50V",
        "text": "<@U0PU2N50V|gauthampamu> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1475029110.000011"
    },
    {
        "type": "message",
        "user": "U0PU2N50V",
        "text": "The key in the world state is represented by as concatenation of chaincodeid and key. So someone mentioned you cannot access the data stored by another chaincode. So using the chaincode API, one chaincode cannot retrieve the data added by other chaincode but if you make copy of the db files and write another program and call the API directly using the API in state.go, you should be able to retrieve the data right ? I don\u2019t need this functionality but I am just trying to understand it. In the state implementation, there are three implementation buckettree, raw and trie. I would like to understand the difference between the three. Don\u2019t need detail answer, want to understand when you would change the implementation to raw or trie. Is buckettree the best implementation from cryptohash performance ?",
        "ts": "1475029901.000012"
    }
]
[
    {
        "type": "message",
        "user": "U0KN2SSKE",
        "text": "<@U1KFCPFQA> I am concerned about our security model \u2014 the rich query really bypassing the chaincode security.  The keys are scoped with the chaincode which creates them;  now we open a back door where chaincodes would no longer in control.  The sec model would be broken",
        "ts": "1485878825.000295"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "<@U0KN2SSKE> <@U0PB67X4K>  We have talked about three things in this space to control query access:\n1) Ability to disable GetQueryResult() peer (qscc) API for cases where all queries should go through application chaincode\n2) Within application chaincode, the query will be scoped to that chaincode only. This will be enforced using the envelope data wrapper that was recently introduced over the couch key value data.  The envelope will include \u2018chaincodeid\u2019 and in the query we will inject a constraint where chaincodeid=&lt;current chaincode context&gt;.  We could also decide to use a couch database per chain-chaincode, rather than a couch database per chain (like we do now).\n3) Application chaincode can use parameterized query as in the marbles02 example, rather than allowing query string to be passed in.  Parameters are passed into the chaincode.  The query is defined in the application chaincode and only the allowed parameters are substituted in (similar to jdbc query parameters used in java application code).",
        "edited": {
            "user": "U1KFCPFQA",
            "ts": "1485880716.000000"
        },
        "ts": "1485880416.000296"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "Does this meet the security requirements?  For organizations that want the ability to query anything on their peer, they have the option to open that up.  We\u2019ll need to decide if the qscc query APIs should be enabled or disabled by default.  Security is one reason Couch is beta in v1.  We\u2019d like to get community feedback before finalizing things.",
        "edited": {
            "user": "U1KFCPFQA",
            "ts": "1485880855.000000"
        },
        "ts": "1485880561.000297"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "Gari has also mentioned he\u2019d like GetState() and GetRange() added to qscc, for customers that want to query ledger without going through application chaincode.",
        "ts": "1485880602.000298"
    },
    {
        "type": "message",
        "user": "U0W7D64LC",
        "text": "Check out the latest ledger playback w\/couchdb! <https:\/\/youtu.be\/XoW9gjAH93k> \u2026 if you haven\u2019t subscribed to the youtube channel do so for auto notifications at <https:\/\/www.youtube.com\/channel\/UCCFdgCWH_1vCndMPVqQlwZw>",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Fabric v1 Ledger DataPatterns",
                "title_link": "https:\/\/youtu.be\/XoW9gjAH93k",
                "author_name": "Hyperledger Fabric",
                "author_link": "https:\/\/www.youtube.com\/channel\/UCCFdgCWH_1vCndMPVqQlwZw",
                "fallback": "YouTube Video: Fabric v1 Ledger DataPatterns",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/XoW9gjAH93k?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https:\/\/youtu.be\/XoW9gjAH93k",
                "service_icon": "https:\/\/a.slack-edge.com\/2089\/img\/unfurl_icons\/youtube.png",
                "id": 1
            }
        ],
        "ts": "1485893662.000303"
    }
]
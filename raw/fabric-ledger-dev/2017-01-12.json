[
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U12452RAP|grapebaba> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/grapebaba\/F3R1P2BS6\/-.coffee|Untitled>",
        "file": {
            "id": "F3R1P2BS6",
            "created": 1484279204,
            "timestamp": 1484279204,
            "name": "-.coffee",
            "title": "Untitled",
            "mimetype": "text\/plain",
            "filetype": "coffeescript",
            "pretty_type": "CoffeeScript",
            "user": "U12452RAP",
            "editable": true,
            "size": 522,
            "mode": "snippet",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F3R1P2BS6\/-.coffee?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F3R1P2BS6\/download\/-.coffee?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/grapebaba\/F3R1P2BS6\/-.coffee",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F3R1P2BS6-ab0d395846",
            "edit_link": "https:\/\/hyperledgerproject.slack.com\/files\/grapebaba\/F3R1P2BS6\/-.coffee\/edit",
            "preview": "func constructBlockNumTranNumKey(blockNum uint64, txNum uint64) []byte {\r\n\tblkNumBytes := util.EncodeOrderPreservingVarUint64(blockNum)\r\n\ttranNumBytes := util.EncodeOrderPreservingVarUint64(txNum)\r\n\tkey := append(blkNumBytes, tranNumBytes...)\r\n\treturn append([]byte{blockNumTranNumIdxKeyPrefix}, key...)\r",
            "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text\/plain',window.getSelection().toString().replace(\/\\u200b\/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-variable\">func<\/span> <span class=\"cm-variable\">constructBlockNumTranNumKey<\/span><span class=\"cm-punctuation\">(<\/span><span class=\"cm-variable\">blockNum<\/span> <span class=\"cm-variable\">uint64<\/span><span class=\"cm-punctuation\">,<\/span> <span class=\"cm-variable\">txNum<\/span> <span class=\"cm-variable\">uint64<\/span><span class=\"cm-punctuation\">)<\/span> <span class=\"cm-punctuation\">[<\/span><span class=\"cm-punctuation\">]<\/span><span class=\"cm-variable\">byte<\/span> <span class=\"cm-punctuation\">{<\/span><\/pre><\/div>\n<div><pre>\t<span class=\"cm-variable\">blkNumBytes<\/span> <span class=\"cm-punctuation\">:<\/span><span class=\"cm-punctuation\">=<\/span> <span class=\"cm-variable\">util<\/span><span class=\"cm-punctuation\">.<\/span><span class=\"cm-property\">EncodeOrderPreservingVarUint64<\/span><span class=\"cm-punctuation\">(<\/span><span class=\"cm-variable\">blockNum<\/span><span class=\"cm-punctuation\">)<\/span><\/pre><\/div>\n<div><pre>\t<span class=\"cm-variable\">tranNumBytes<\/span> <span class=\"cm-punctuation\">:<\/span><span class=\"cm-punctuation\">=<\/span> <span class=\"cm-variable\">util<\/span><span class=\"cm-punctuation\">.<\/span><span class=\"cm-property\">EncodeOrderPreservingVarUint64<\/span><span class=\"cm-punctuation\">(<\/span><span class=\"cm-variable\">txNum<\/span><span class=\"cm-punctuation\">)<\/span><\/pre><\/div>\n<div><pre>\t<span class=\"cm-variable\">key<\/span> <span class=\"cm-punctuation\">:<\/span><span class=\"cm-punctuation\">=<\/span> <span class=\"cm-variable\">append<\/span><span class=\"cm-punctuation\">(<\/span><span class=\"cm-variable\">blkNumBytes<\/span><span class=\"cm-punctuation\">,<\/span> <span class=\"cm-variable\">tranNumBytes<\/span><span class=\"cm-punctuation\">...<\/span><span class=\"cm-punctuation\">)<\/span><\/pre><\/div>\n<div><pre>\t<span class=\"cm-keyword\">return<\/span> <span class=\"cm-variable\">append<\/span><span class=\"cm-punctuation\">(<\/span><span class=\"cm-punctuation\">[<\/span><span class=\"cm-punctuation\">]<\/span><span class=\"cm-variable\">byte<\/span><span class=\"cm-punctuation\">{<\/span><span class=\"cm-variable\">blockNumTranNumIdxKeyPrefix<\/span><span class=\"cm-punctuation\">}<\/span><span class=\"cm-punctuation\">,<\/span> <span class=\"cm-variable\">key<\/span><span class=\"cm-punctuation\">...<\/span><span class=\"cm-punctuation\">)<\/span><\/pre><\/div>\n<\/div>\n<\/div>\n",
            "lines": 15,
            "lines_more": 10,
            "preview_is_truncated": false,
            "channels": [
                "C2GFRAE7P"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 0
        },
        "user": "U12452RAP",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U12452RAP|grapebaba>",
        "bot_id": null,
        "ts": "1484279204.000197"
    },
    {
        "type": "message",
        "user": "U12452RAP",
        "text": "<@U0Z541B3P> <@U1KFCPFQA> <@U1KJLGH8D> what it the purpose use two different encoding util method for blocknum?",
        "ts": "1484279302.000198"
    },
    {
        "type": "message",
        "user": "U0Z541B3P",
        "text": "<@U12452RAP> these are used for different purposes. Where you need a simple encoding\/decoding of a number, proto's varint encoding is sufficient. However, the sort order of bytes obtained from proto's varint encoding\/decoding (if you sort based on bytes comparison - as many key-value stores do) is not same as the sort order of numbers. So, wherever it's desired to maintain the same sort order (e.g., for range scan over goleveldb), we use this custom method `EncodeOrderPreservingVarUint64` - which preserves the sort order.",
        "ts": "1484282762.000199"
    },
    {
        "type": "message",
        "user": "U12452RAP",
        "text": "Thanks, very clear ",
        "ts": "1484282846.000200"
    }
]
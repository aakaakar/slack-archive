[
    {
        "user": "U115YGEH1",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U115YGEH1|mtakemiya> has joined the channel",
        "ts": "1463646552.000800"
    },
    {
        "type": "message",
        "user": "U15B57S4R",
        "text": "ok , TestChaincodeInvokeChaincode was failing because, of the presence of the binary chaincode file `<http:\/\/github.com\/hyperledger\/fabric\/examples\/chaincode\/go\/chaincode_example02\/chaincode_example02|github.com\/hyperledger\/fabric\/examples\/chaincode\/go\/chaincode_example02\/chaincode_example02>` i built before; removing it, made the test ending successfully.\n\nThat sounds: \"Before running unit-test remove any binary  chaincode_example you built\/compiled\".",
        "edited": {
            "user": "U15B57S4R",
            "ts": "1463649192.000000"
        },
        "ts": "1463649005.000801"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "There is a problem in general where otherwise innocuous state within your $GOPATH can mess up the unit tests, I am finding",
        "ts": "1463657282.000807"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "for instance, the other day I installed go-bindata in my vagrant to try an experiment and then the HL unit-tests were tripping over it",
        "ts": "1463657321.000808"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "do we know how this happens?",
        "ts": "1463659668.000809"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i think in my case, it had to do with the way the code tries to import the entire $GOPATH\u2026there was something in go-bindata that the fs-copy was unhappy with\u2026i think it was a symlink IIRC",
        "ts": "1463660415.000810"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "but I have seen other problems like people having large binaries in the tree and it blows out the memory of the peer when it tries to build the tarball for docker-build in memory",
        "ts": "1463660448.000811"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "it seems that generally speaking, assuming that the $GOPATH can just be blindly copied is problematic",
        "ts": "1463660510.000812"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yea",
        "ts": "1463661010.000813"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U15B57S4R>: ah I should remember to ask about the binary :slightly_smiling_face:",
        "ts": "1463661036.000814"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U0KPFAZNF>: <@U0XR6J961> a set of \u201ctypical\u201d files that bloat the image and are unnecessary (1) the peer binary (2) membersrvc binary (3)  behave log files if you run with -D logs=Y (4) any redirected \u201coutput\u201d files from peer (5) executables left in examples when running in \u2014peer-chaincodedev",
        "ts": "1463661171.000815"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I\u2019ve been meaning to open an issue wanted to create a filter for chaincode tar file",
        "ts": "1463661345.000816"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "what do you think ?",
        "ts": "1463661349.000817"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i think it may be better to collect the sources, rather blacklisting other files",
        "ts": "1463661808.000818"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "git ls-files may be helpful in this regard",
        "ts": "1463661985.000819"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1463662337.000820"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "right. Some approach to collect minimal files",
        "ts": "1463662531.000821"
    },
    {
        "type": "message",
        "user": "U11HH3P7Y",
        "text": "Hi All, can we integrate this link in our hyperledger\/fabric Readme.md file? This is very useful to understand the status of 'go lint' 'go vet' 'misspell' and 'gofmt'",
        "ts": "1463662549.000822"
    },
    {
        "type": "message",
        "user": "U11HH3P7Y",
        "text": "<https:\/\/goreportcard.com\/report\/github.com\/rameshthoomu\/hyperledger-fabric>",
        "ts": "1463662551.000823"
    },
    {
        "type": "message",
        "user": "U11HH3P7Y",
        "text": "We can generate `go report` for each repository using `<https:\/\/goreportcard.com\/>` link",
        "ts": "1463662604.000824"
    },
    {
        "user": "U0V86V3QR",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0V86V3QR|gordonj> has joined the channel",
        "ts": "1463665626.000825"
    },
    {
        "user": "U18UG9K9S",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U18UG9K9S|adriano> has joined the channel",
        "ts": "1463672845.000826"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "<@U0ULK2JPP>: hi, do we really need to have the fabric source path in GOPATH when doing go get to download the chaincode?",
        "ts": "1463675175.000827"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "this is what's preventing us from testing getCodeFromHTTP using a fabric example like <http:\/\/github.com\/hyperledger\/fabric\/examples\/chaincode\/go\/chaincode_example01|github.com\/hyperledger\/fabric\/examples\/chaincode\/go\/chaincode_example01>",
        "edited": {
            "user": "U0P2GSA8Z",
            "ts": "1463675404.000000"
        },
        "ts": "1463675244.000828"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "because go get will find it in the Fabric source and won't download it",
        "ts": "1463675265.000829"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "if we remove the fabric source from GOPATH then go get will download it to the temp directory effectively running through the whole getCodeFromHTTP code",
        "ts": "1463675315.000830"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "I tested it within vagrant and I can remove it all right but I don't know whether this would cause problem for those who work outside vagrant",
        "ts": "1463675371.000831"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "otherwise we'll always have to rely on some other repo,  I used my fork and that works: <http:\/\/github.com\/lehors\/fabric\/examples\/chaincode\/go\/chaincode_example01|github.com\/lehors\/fabric\/examples\/chaincode\/go\/chaincode_example01>",
        "ts": "1463675946.000833"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "but it doesn't seem right to have a test that relies on a separate repo",
        "ts": "1463675963.000834"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U0P2GSA8Z>: I\u2019ll have to look but this was discussed in an issue. It boiled down to this - having to resolve remote when identical path existed locally. This should only be an issue with the examples in the fabric.",
        "ts": "1463677216.000835"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "let me hunt down and issue and refresh my memory :slightly_smiling_face:",
        "ts": "1463677243.000836"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "cool",
        "ts": "1463677253.000837"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "if you find it, please, share the reference so I can read it and save you a rerun :slightly_smiling_face:",
        "ts": "1463677268.000838"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "of course :slightly_smiling_face:",
        "ts": "1463677291.000839"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "I have a simple fix to the GOPATH with multiple elements where I only take the first element",
        "ts": "1463677311.000840"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "ok",
        "ts": "1463677320.000841"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "I still don't know whether it's worth doing more",
        "ts": "1463677332.000842"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "+1 for the fix and baby steps ?",
        "ts": "1463677354.000843"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "yeah, that's a bit my thinking",
        "ts": "1463677365.000844"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "it\u2019ll certainly resolve the problem",
        "ts": "1463677367.000845"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "ok",
        "ts": "1463677368.000846"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "document the limitation and see if anyone complains",
        "ts": "1463677383.000847"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "ok",
        "ts": "1463677387.000848"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "otherwise the code assumes it will run on linux and liberally uses \/ for filepath separator, is there a policy in this regard?",
        "ts": "1463677517.000849"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "shouldn't we use os.PathSeparator consistently?",
        "ts": "1463677548.000850"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "that would be my inclination but I'm new to the project so I don't know if there was a decision made in this regard",
        "ts": "1463677566.000851"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "some code uses os.PathSeparator some code doesn't",
        "ts": "1463677590.000852"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I was able to find the issue :  <https:\/\/github.com\/hyperledger\/fabric\/issues\/737>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "Test chaincode deploy for proper error messaging when chanicodes exists locally as well as in remote locations \u00b7 Issue #737 \u00b7 hyperledger\/fabric \u00b7 GitHub",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/issues\/737",
                "text": "Tried to send Deploy command using RestAPI from SoapUI\/Postman using chaincodeexample_02 on a local peer without security setup as: [<http:\/\/127.0.0.1:3000\/devops\/deploy>] { \"type\": \"GOLANG\", \"c...",
                "fallback": "GitHub: Test chaincode deploy for proper error messaging when chanicodes exists locally as well as in remote locations \u00b7 Issue #737 \u00b7 hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars1.githubusercontent.com\/u\/17179397?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/issues\/737",
                "thumb_width": 420,
                "thumb_height": 420,
                "id": 1
            }
        ],
        "edited": {
            "user": "U0ULK2JPP",
            "ts": "1463678791.000000"
        },
        "ts": "1463678771.000853"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "ok, I'll look, thanks",
        "ts": "1463678911.000856"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "so, how does the getCodeFromHTTP get tested right now?",
        "ts": "1463678934.000857"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "do we have any of the CI test covering that code?",
        "ts": "1463678951.000858"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "very relevant thread indeed",
        "ts": "1463679280.000859"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "another possibility would be to have a flag like -f\/-force which when used would force the download",
        "ts": "1463679326.000860"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "that could be handy for testing if nothing else",
        "ts": "1463679343.000861"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "sure, but again, this is mainly a problem for fabric examples. Do you think a \u201c-f\u201d is warranted for that ?",
        "ts": "1463679364.000862"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "just asking\u2026 maybe the answer is yes",
        "ts": "1463679382.000863"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "if that's the only way to test: yes!",
        "ts": "1463679398.000864"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "how is that getCodeFromHTTP tested?",
        "ts": "1463679416.000865"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "other than by you I mean :slightly_smiling_face:",
        "ts": "1463679465.000866"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "no unit test. It gets tested via external usage such as bluemix",
        "ts": "1463679467.000867"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "right :slightly_smiling_face:",
        "ts": "1463679469.000868"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "one option would be to use <http:\/\/github.com\/lehors\/fabric\/examples\/chaincode\/go\/chaincode_example01|github.com\/lehors\/fabric\/examples\/chaincode\/go\/chaincode_example01> as a unit test",
        "ts": "1463679497.000869"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "yes, that might be a reasonable trade-off",
        "ts": "1463679515.000870"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I hesitate introducing a new flag for this",
        "ts": "1463679535.000871"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "I agree, it may not be worth it",
        "ts": "1463679551.000872"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "it's not like I'm going to delete that fork any time soon so the dependency isn't so bad",
        "ts": "1463679569.000873"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "I just don't like not having any tests",
        "ts": "1463679603.000874",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0KM61BCP"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "I'm touching that code and want to know there is a test to ensure I don't break it",
        "ts": "1463679642.000875"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "ok, I'll put a test in with that",
        "ts": "1463679657.000876"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "what about the PathSeparator stuff?",
        "ts": "1463679699.000877"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I have think about it\u2026 a grep show that is used in only one place in the fabric code. I\u2019m sure path is spread around all over",
        "ts": "1463680013.000878"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "ok, I'll leave that alone for now then",
        "ts": "1463680505.000879"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "this is something that could be done at some point",
        "ts": "1463680516.000880"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "fwiw, os.Stat(fmt.Sprintf(\u201c%s\/a.go\u201d, os.Getenv(\u201cGOPATH\u201d))) does not return error on Windows\u2026 maybe \u201c\/\u201c will slip thru ?",
        "ts": "1463680673.000881"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "yes, the Windows OS actually understands both forms",
        "ts": "1463680704.000882"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "ok",
        "ts": "1463680711.000883"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "but mixing the two forms can be a problem",
        "ts": "1463680720.000884"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "and for GOPATH for example you're supposed to use ; instead of : as the separator",
        "ts": "1463680745.000885"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "that's why go provides os.PathListSeparator too",
        "ts": "1463680792.000886"
    },
    {
        "type": "message",
        "user": "U0MSG4RL7",
        "text": "<@U0P2GSA8Z>: <@U0ULK2JPP>: Maybe Go's `filepath.Join()` is the standard way to create a path from parts.",
        "ts": "1463683947.000887"
    },
    {
        "type": "message",
        "user": "U0MSG4RL7",
        "text": "I have a question related to the discussion here: Shouldn't the chaincode programs include all their dependencies in a `vendor` dir?",
        "ts": "1463683997.000888"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "<@U0MSG4RL7>: I agree with you on filepath.Join()",
        "ts": "1463684425.000889"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "this is also the way I would go at it, but as <@U0ULK2JPP> points  out this hasn't be done to date",
        "ts": "1463684458.000890"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "so the question becomes whether we should clean up the code and do that or it's not worth it",
        "ts": "1463684515.000891"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "thinking about chaincode testing... seems to me that a separate repo for a chaincode better represents what chaincode devs will have used... I could see a proliferation of test chaincode repos... the problem is that then we have  to build them all to determine whether a change broke any",
        "ts": "1463692519.000892"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "might be best to have them off in a separate org for the purpose of housing these examples",
        "ts": "1463692572.000893"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "<@U0ULK2JPP>: ok, here is one reason to be more careful about how we build filepaths: if you have GOPATH=\/opt\/gopath\/ - note the trailing slash - we end up with things like: 2016\/05\/19 17:08:29 hashFiles \/opt\/gopath\/src\/\/github.com\/hyperledger\/fabric\/examples\/chaincode\/go\/chaincode_example01",
        "ts": "1463694640.000894"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "maybe not fatal but I think we can agree it's not pretty either",
        "ts": "1463694658.000895"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U0P2GSA8Z>: agreed. For some reason I thought  trailing slashwas stripped off\u2026 but if not, we should",
        "ts": "1463694844.000896"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "well, I saw there is an if ... for that but it is missing a -1 to actually do the work",
        "ts": "1463694879.000897"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "and that's not safe either because if all you had was \/ you would end up with an empty string",
        "ts": "1463694902.000898"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "although GOPATH=\/ isn't likely it is easier to call the go functions that will do the right thing no matter what",
        "ts": "1463694924.000899"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "Fwiw: I solved this problem in chaintool already",
        "ts": "1463696020.000900"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "Chaincode packages are isolated from peer GOPATH",
        "ts": "1463696061.000901"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "I don't think any of these edge cases are actually going to be ever met in practice given the controlled environment we work in",
        "ts": "1463696271.000902"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "I started from an issue that came up in testing environment where it is not as controlled",
        "ts": "1463696298.000903"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "issue #866",
        "ts": "1463696318.000904"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "but I think we only have to gain from having cleaner code",
        "ts": "1463696361.000905"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "the absence of tests, the design that makes testing harder, all this needs fixing",
        "ts": "1463696454.000906"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "all right peeps, I'm off for the weekend  (going to Grand Canyon :-) \"see\" you on Monday",
        "edited": {
            "user": "U0P2GSA8Z",
            "ts": "1463698808.000000"
        },
        "ts": "1463698592.000907",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0ULK2JPP",
                    "U0MSG4RL7",
                    "U0KM61BCP"
                ],
                "count": 3
            }
        ]
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U0P2GSA8Z>: have fun!",
        "ts": "1463698678.000908"
    },
    {
        "user": "U1AD3THQS",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1AD3THQS|jonkrone> has joined the channel",
        "ts": "1463708135.000910"
    }
]
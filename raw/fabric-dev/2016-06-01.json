[
    {
        "type": "message",
        "user": "U142E5N0P",
        "text": "Hi, for this issue <https:\/\/github.com\/hyperledger\/fabric\/issues\/1602> where I use `calico` as the SDN solution.\n\nIt reappears after I change to latest commits...    If I setup two peers, then only peer1 could get success response to queries.",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "Deploy fabric using other kinds of overlay networks \u00b7 Issue #1602 \u00b7 hyperledger\/fabric \u00b7 GitHub",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/issues\/1602",
                "text": "Description My aim is to deploy fabric using docker images on several machines using existing orchestration frameworks, such as mesos\/kubernetes\/swarm, and I hope to utilize some kinds of SDN such...",
                "fallback": "GitHub: Deploy fabric using other kinds of overlay networks \u00b7 Issue #1602 \u00b7 hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/7248?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/issues\/1602",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/a.slack-edge.com\/e8ef6\/img\/unfurl_icons\/github.png",
                "id": 1
            }
        ],
        "ts": "1464769068.001757"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U0KPFAZNF|ghaskins> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/ghaskins\/F1DASJ43E\/-.sh|Untitled> and commented: <@U0UKTPMG8>: Thank you for the tip on isolating the test.  I consistently see this test failure in my branch so I am fairly certain its legit.  Do you have any advice on how to dig in further?  I was trying do so something like \"docker-compose -f docker-compose-2-tls-basic.yml start\u201d but nothing is happening and I dont understand why.",
        "file": {
            "id": "F1DASJ43E",
            "created": 1464797639,
            "timestamp": 1464797639,
            "name": "-.sh",
            "title": "Untitled",
            "mimetype": "text\/plain",
            "filetype": "shell",
            "pretty_type": "Shell",
            "user": "U0KPFAZNF",
            "editable": true,
            "size": 3831,
            "mode": "snippet",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1DASJ43E\/-.sh?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1DASJ43E\/download\/-.sh?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/ghaskins\/F1DASJ43E\/-.sh",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F1DASJ43E-c949fe1720",
            "edit_link": "https:\/\/hyperledgerproject.slack.com\/files\/ghaskins\/F1DASJ43E\/-.sh\/edit",
            "preview": "vagrant@hyperledger-devenv:v0.0.10-7a10826:\/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/bddtests$ behave -k --tags=@TLS\r\nFeature: lanching 3 peers # peer_basic.feature:11\r\n  As a HyperLedger developer\r\n  I want to be able to launch 3 peers\r\n  @TLS\r",
            "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text\/plain',window.getSelection().toString().replace(\/\\u200b\/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>vagrant@hyperledger-devenv:v0.0.10-7a10826:\/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/bddtests<span class=\"cm-def\">$ behave<\/span> <span class=\"cm-attribute\">-k<\/span> <span class=\"cm-attribute\">--tags<\/span><span class=\"cm-operator\">=<\/span>@TLS<\/pre><\/div>\n<div><pre>Feature: lanching <span class=\"cm-number\">3<\/span> peers <span class=\"cm-comment\"># peer_basic.feature:11<\/span><\/pre><\/div>\n<div><pre>  As a HyperLedger developer<\/pre><\/div>\n<div><pre>  I want to be able to launch <span class=\"cm-number\">3<\/span> peers<\/pre><\/div>\n<div><pre>  @TLS<\/pre><\/div>\n<\/div>\n<\/div>\n",
            "lines": 53,
            "lines_more": 48,
            "preview_is_truncated": null,
            "channels": [
                "C0YPYBVJM"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 1,
            "initial_comment": {
                "id": "Fc1DASJ8VA",
                "created": 1464797639,
                "timestamp": 1464797639,
                "user": "U0KPFAZNF",
                "is_intro": true,
                "comment": "<@U0UKTPMG8>: Thank you for the tip on isolating the test.  I consistently see this test failure in my branch so I am fairly certain its legit.  Do you have any advice on how to dig in further?  I was trying do so something like \"docker-compose -f docker-compose-2-tls-basic.yml start\u201d but nothing is happening and I dont understand why.",
                "channel": ""
            }
        },
        "user": "U0KPFAZNF",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U0KPFAZNF|ghaskins>",
        "bot_id": null,
        "ts": "1464797640.001759"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "or maybe the fact that nothing is happening _is_ the hint, heh",
        "ts": "1464797682.001760"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0UKTPMG8>: nm, I needed \u201ccompose .. up\u201d not \u201ccompose .. start\"",
        "ts": "1464797865.001761"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "<@U0KPFAZNF>: couple of ways.  You can set the doNotDecompose tag on the test, in this way you can run the test and then debug the issues with log viewing",
        "ts": "1464800576.001762"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "ah, that probably would have worked, good idea",
        "ts": "1464800600.001763"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "in general, look at the command that was used for docker up.  You can then reuse this to kill the system and do it again",
        "ts": "1464800603.001764"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "I generally do the following:\n\nset the DoNotDecompose tag and run the test.",
        "ts": "1464800626.001765"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i was able to find the issue once I learned the raw docker-compose incantation",
        "ts": "1464800632.001766"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "Then use the docker-compose -f &lt;docker-compoisefile&gt; logs",
        "ts": "1464800647.001767"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "so just add \u201c\u2014tag=@DoNotDecompose\u201d ?",
        "ts": "1464800675.001768"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "no, you uncomment the DoNotDecompose tag on the scenario",
        "ts": "1464800695.001769"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "ah, got it",
        "ts": "1464800703.001770"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "adding the tag to the scenario",
        "ts": "1464800704.001771"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "make sure to re-comment as to not screw up other scenarios when running more than one",
        "ts": "1464800721.001772"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "roger",
        "ts": "1464800738.001773"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "as the docker system will NOT be torn down for that scenario, and may screw up subsequent one",
        "ts": "1464800740.001774"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": ":slightly_smiling_face:",
        "ts": "1464800741.001775"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "I also find the following useful for finding specfic errors after running.\n\ndocker-compose -f docker-compose-4-consensus-batch.yml logs  2&gt;&amp;1 | grep -i err",
        "ts": "1464800786.001776"
    },
    {
        "type": "message",
        "user": "U0TFEHX8E",
        "text": "has anyone here ever used <http:\/\/codeclimate.com|codeclimate.com>? If so, is it useful and something we should consider?",
        "ts": "1464808883.001777"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "hi all, I've had a branch with a small fix to issue-1309 that has been sitting in my repo for a while and I'm not completely sure what to do with it so I figured I would ask here for input",
        "ts": "1464814783.001778"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "the discussion on the issue led to asking whether we should use something else than Viper or use some kind of yaml validator but I haven't seen anything really appealing to me on that front",
        "ts": "1464814865.001779"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "so, I'm tempted to submit a PR that does fix the obvious problem I raised with this issue and nothing else but even then I'm not completely sure what the right behavior is",
        "ts": "1464814937.001780"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "namely, when a configuration error is found, <@U0XR6J961> suggested the program should stop with an error rather than simply emit an error message and continue, is that agreeable to all?",
        "ts": "1464815012.001781"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "is calling panic what should be done then?",
        "ts": "1464815046.001782"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "I'd appreciate any feedback, thanks",
        "ts": "1464815060.001783"
    },
    {
        "type": "message",
        "user": "U0TFEHX8E",
        "text": "+1 for panic over error and continue. I guess ideally they would all be verified and cached at startup",
        "ts": "1464818327.001784"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "that would require all the logic to be put in one place though, I don't know whether this is practical",
        "ts": "1464820991.001785"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "I'll got ahead and submit my PR which I think would be an improvement from where we currently are no matter what",
        "ts": "1464822277.001786"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "more can always be done later on",
        "ts": "1464822284.001787"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "please, review PR 1679 and comment as needed",
        "ts": "1464824776.001788"
    },
    {
        "user": "U1DFU0M32",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1DFU0M32|chenhua> has joined the channel",
        "ts": "1464840404.001789"
    }
]
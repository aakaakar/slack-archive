[
    {
        "type": "message",
        "user": "U0N4P17ND",
        "text": "in your docker-compose you have commented membersrvc, which is responsible for security, so how would it work? :slightly_smiling_face:",
        "ts": "1479197076.003012"
    },
    {
        "type": "message",
        "user": "U0N4P17ND",
        "text": "Hi is there any example exist of event listener example (similar to <https:\/\/github.com\/hyperledger\/fabric\/tree\/master\/examples\/events\/block-listener>) but based on NodeJS SDK? I guess that this support has been added, here: <https:\/\/github.com\/hyperledger\/fabric\/commit\/e9d3ac296de89a092b48990fd2e1b7bc4173a5c4>. Right?",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/tree\/master\/examples\/events\/block-listener",
                "text": "Read-only mirror of <https:\/\/gerrit.hyperledger.org\/r\/#\/admin\/projects\/fabric>",
                "fallback": "GitHub: hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/tree\/master\/examples\/events\/block-listener",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            },
            {
                "service_name": "GitHub",
                "title": "node-SDK: add support for fabric events(block, chaincode, transactional) \u00b7 hyperledger\/fabric@e9d3ac2 \u00b7 GitHub",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/commit\/e9d3ac296de89a092b48990fd2e1b7bc4173a5c4",
                "text": "This patch adds support for fabric events to the SDK. It defaults to the same timer based mechanism for transactional events if the app doesn't connect to a peer event source(eventHubConnect). Cha...",
                "fallback": "GitHub: node-SDK: add support for fabric events(block, chaincode, transactional) \u00b7 hyperledger\/fabric@e9d3ac2",
                "thumb_url": "https:\/\/avatars0.githubusercontent.com\/u\/520134?v=3&s=200",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/commit\/e9d3ac296de89a092b48990fd2e1b7bc4173a5c4",
                "thumb_width": 420,
                "thumb_height": 420,
                "service_icon": "https:\/\/a.slack-edge.com\/e8ef6\/img\/unfurl_icons\/github.png",
                "id": 2
            }
        ],
        "ts": "1479207120.003013"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "Whenever we mess around with the protos, can we do the `@channel` thingy here?",
        "ts": "1479220907.003015"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "maybe it is possible to have some gerrit hook that sends you an email when a commit touches a certain folder",
        "edited": {
            "user": "U0ZJZBJLF",
            "ts": "1479221017.000000"
        },
        "ts": "1479221006.003016",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0XQ35CDD"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "<@U0KN2SSKE> <@U0PB67X4K> <@U1FDTCEUR> about my questions above, from talking to <@U0XPR4NP4> today, it looks like the latest thinking is to not have a default \u201csystem channel\u201d, but instead have all channels be created after the bootstrap as per the channel\/ledger design doc. this is consistent with my understanding from talking to Binh last Friday.",
        "edited": {
            "user": "U13TWBRBL",
            "ts": "1479240680.000000"
        },
        "ts": "1479240456.003018"
    },
    {
        "user": "U1FDTCEUR",
        "inviter": "U13TWBRBL",
        "text": "<@U1FDTCEUR|tim.s> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1479240460.003019"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "<@U1FDTCEUR> so the main reason based on talking with Jason is that there\u2019s no serialization\/ordering guarantee across channels b\/w peers, such that one peer may have the \u201csystem ledger\u201d in one state (that may have the latest CA roots saved), and another peer\u2019s system ledger in a different state (hasn\u2019t had the latest CA roots saved in the genesis block yet), which will result in non-deterministic behaviors with Peers in a channel",
        "ts": "1479240657.003020",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0XPR4NP4"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "I've been working on fixing some bugs in MockStub and am wondering what the workflow you guys use is -- because the work is done on <http:\/\/gerrit.hyperledger.org|gerrit.hyperledger.org> but the golang import path is <http:\/\/github.com\/hyperledger\/fabric|github.com\/hyperledger\/fabric>, is there some particular customization that's used for pushing changes, such as cloning the github repo but setting the 'push' remote to be gerrit?",
        "ts": "1479242999.003022"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "(I'd like to push my fixes to gerrit at some point)",
        "ts": "1479243019.003023"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "Sorry, I just found some docs on that -- I'll read those and hopefully not have any questions",
        "ts": "1479243117.003024"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "Ok, apart from using git-review to submit changes to Gerrit for review, is there anything else I need to do?",
        "ts": "1479275017.003025"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "Like maybe add a reviewer",
        "ts": "1479275204.003026"
    },
    {
        "type": "message",
        "user": "U0UHG4VP1",
        "text": "<@U2X9KDDL7> yes you will need to add a reviewer and flog the commit in <#C1K16MW77|fabric-pr-review> if it needs love",
        "ts": "1479276492.003027"
    },
    {
        "type": "message",
        "user": "U0UHG4VP1",
        "text": "<@U2X9KDDL7> add cr-fabric to reviewers if you want them all",
        "ts": "1479276520.003028"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "<@U0UHG4VP1> Is there a particular owner of the shim code, or maybe MockStub in particular?",
        "ts": "1479276539.003029"
    },
    {
        "type": "message",
        "user": "U0UHG4VP1",
        "text": "<@U2X9KDDL7> I don't know the answer to that, sorry.",
        "ts": "1479276565.003030"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "<@U0UHG4VP1> Ok, thanks for the instruction!",
        "ts": "1479276583.003031"
    },
    {
        "type": "message",
        "user": "U0UHG4VP1",
        "text": "if you have any questions about gerrit in general or the review process, I can help with that.",
        "ts": "1479276594.003032"
    },
    {
        "type": "message",
        "user": "U0UHG4VP1",
        "text": "sure thing",
        "ts": "1479276597.003033"
    }
]
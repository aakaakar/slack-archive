[
    {
        "type": "message",
        "user": "U29BAKE8L",
        "text": "'make protos' will report:",
        "ts": "1473411875.000163"
    },
    {
        "type": "message",
        "user": "U29BAKE8L",
        "text": "protoc-gen-go:  error: inconsistent package names: extension_extra extension_base . What's the wrong with my enviroment? please help me.",
        "ts": "1473412190.000164"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "<@U1CS08EP3> <@U1LES78TT> arguments are also a parts of the hashing, so changing args changes CCIDs (at least it used to on the main branch version a few days back)",
        "ts": "1473414479.000165"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U1GLPP8QN> changing args change chaincode ID? as <@U1LES78TT> said chaincode ID is a hash of all the files in the chaincode directory",
        "ts": "1473414844.000166"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "changing args change TxID",
        "ts": "1473414854.000167"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "it definitely used to change it -- will check in a moment (<@U23JFU108>)",
        "ts": "1473416571.000168"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "where did it change that? chaincode ID is e.g. needed for deployment, do you mean that different deploy args lead to different CCIDs?",
        "ts": "1473416672.000169"
    },
    {
        "user": "U29TSCRQU",
        "text": "<@U29TSCRQU|a.klenik> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1473417717.000170"
    },
    {
        "type": "message",
        "user": "U1CS08EP3",
        "text": "<@U1AU8DRQR> : that was my question. Whether deployment with differnt args lead to differnt CCIDs..",
        "ts": "1473423161.000173"
    },
    {
        "type": "message",
        "user": "U1CS08EP3",
        "text": "Anyways, as <@U1LES78TT> mentioned, i will check with the ls -ltra also and come back to you folks",
        "ts": "1473423332.000174"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<http:\/\/lists.hyperledger.org\/pipermail\/hyperledger-technical-discuss\/2016-September\/000398.html>",
        "ts": "1473423350.000175"
    },
    {
        "type": "message",
        "user": "U1CS08EP3",
        "text": "Protocol spec defines as \n&gt; chaincodeID - The ID of a chaincode which is a hash of the chaincode source, path to the source code, constructor function, and *parameters*.",
        "ts": "1473423466.000176"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U1CS08EP3> wow that's weird, last time I had an error with a chaincode ID somebody said that it only depends on the source code",
        "ts": "1473423630.000177"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U1CS08EP3> I mean some expert of the topic :slightly_smiling_face:",
        "ts": "1473423668.000178"
    },
    {
        "type": "message",
        "user": "U1CS08EP3",
        "text": ":slightly_smiling_face:",
        "ts": "1473423869.000179"
    },
    {
        "type": "message",
        "user": "U1CS08EP3",
        "text": "<@U1AU8DRQR> - i just did a Find on the protocol spec before i ran my test case. I'm not sure yet. May be this is the reason i m not able to get my chaincode id rite right, when i m invoking from another chaincode.",
        "ts": "1473423973.000180"
    },
    {
        "type": "message",
        "user": "U1CS08EP3",
        "text": "Cant be sure till I test it fully.",
        "ts": "1473423990.000181"
    },
    {
        "type": "message",
        "user": "U1MNES6NR",
        "text": "I can confirm that the parameters does indeed change the chaincode id, at least on the v0.6 branch right now :wink: <@U1CS08EP3> <@U1AU8DRQR> \nTo be honest, I expected the chaincode id to be unique. What if I want to deploy exactly the same code, with the same parameters, as two different chaincodes?",
        "ts": "1473425904.000182"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U1MNES6NR> is that possible? <@U0ULK2JPP>",
        "ts": "1473425963.000183"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "checked and possible (if the question is still related to the CCID generation)",
        "ts": "1473426001.000184"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U1MNES6NR> same code, diferent params will result in different ID",
        "ts": "1473426008.000185"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "its a new chaincode with new initiazation",
        "ts": "1473426020.000186"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "<@U1MNES6NR>  the deployment can be done by using a dummy parameter, but the CC would need to be prepped",
        "ts": "1473426053.000187"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "the new architecture will address lifcycle issues more flexibly",
        "ts": "1473426053.000188"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "on the same topic, CCs still access the ledger as a simple K-V store, right (<@U1AU8DRQR>)? so two CC-s sharing the same key names would result in faulty behaviour",
        "edited": {
            "user": "U1GLPP8QN",
            "ts": "1473426134.000000"
        },
        "ts": "1473426116.000189"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U0ULK2JPP> if somebody wants to find out the CCID of a specific chaincode with a specific init, what is the specific way for that?",
        "ts": "1473426147.000191"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U1GLPP8QN> K-V store, dont you mean the world state?",
        "ts": "1473426172.000192"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "<@U1AU8DRQR> yepp",
        "ts": "1473426216.000193"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "as I know world state is per chaincode. <@U0ULK2JPP> ?",
        "edited": {
            "user": "U1AU8DRQR",
            "ts": "1473426323.000000"
        },
        "ts": "1473426224.000194"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "(I mean, separated)",
        "ts": "1473426233.000195"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "that'd be the ideal imho, but i remember some issue related to this... long time ago though",
        "ts": "1473426362.000197"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "(least this supports that a short changelog is very much in need :D)",
        "ts": "1473426401.000198"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "yeah, you are right",
        "ts": "1473426441.000199"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "I will write a note to the other maintainers",
        "ts": "1473426451.000200"
    },
    {
        "type": "message",
        "user": "U1CS08EP3",
        "text": "<@U1MNES6NR> . We are managing with workarounds now,,, Same chaincode , same init for two diff business is managed by keeping them in two different folders - As you notice, the path to the chaincode is also an impacting factor.",
        "ts": "1473427416.000201"
    },
    {
        "type": "message",
        "user": "U1CS08EP3",
        "text": "<@U1AU8DRQR> I don't think CCID of a particular chaincode can be retrieved from the Fabric once its deployed. Unless you want to track that deployment transaction. \nWe are planning to do that by maintaining a master chaincode in Fabric who stores it as an inventory -  say [ Identifier + Version ] as Key - and CCID as Value. \nDont know whether it is practical or not..  yet",
        "ts": "1473427922.000202"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "Thanks for this.",
        "attachments": [
            {
                "fallback": "[September 9th, 2016 1:22 AM] jcarrivick: <@U0XQ35CDD> that's fine, just try `make unit-test` again and it'll rebuild the images",
                "ts": "1473398522.000161",
                "author_subname": "jcarrivick",
                "channel_id": "C0YPYBVJM",
                "channel_name": "fabric-dev",
                "is_msg_unfurl": true,
                "text": "<@U0XQ35CDD> that's fine, just try `make unit-test` again and it'll rebuild the images",
                "author_name": "Julian Carrivick",
                "author_link": "https:\/\/hyperledgerproject.slack.com\/team\/jcarrivick",
                "author_icon": "https:\/\/secure.gravatar.com\/avatar\/6f7961006eb0f9f4c21482e7c2f82b3e.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2F66f9%2Fimg%2Favatars%2Fava_0014-48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "color": "D0D0D0",
                "from_url": "https:\/\/hyperledgerproject.slack.com\/archives\/fabric-dev\/p1473398522000161",
                "is_share": true,
                "footer": "Posted in #fabric-dev"
            }
        ],
        "ts": "1473430856.000203"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U0XQ35CDD|kostas> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/kostas\/F2A1GK8HG\/_make_unit-test__output.sh|'make unit-test' output> and commented: I now get this however.",
        "file": {
            "id": "F2A1GK8HG",
            "created": 1473430884,
            "timestamp": 1473430884,
            "name": "_make_unit-test__output.sh",
            "title": "'make unit-test' output",
            "mimetype": "text\/plain",
            "filetype": "shell",
            "pretty_type": "Shell",
            "user": "U0XQ35CDD",
            "editable": true,
            "size": 818,
            "mode": "snippet",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F2A1GK8HG\/_make_unit-test__output.sh?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F2A1GK8HG\/download\/_make_unit-test__output.sh?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/kostas\/F2A1GK8HG\/_make_unit-test__output.sh",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F2A1GK8HG-4f21c50d65",
            "edit_link": "https:\/\/hyperledgerproject.slack.com\/files\/kostas\/F2A1GK8HG\/_make_unit-test__output.sh\/edit",
            "preview": "?   \tgithub.com\/hyperledger\/fabric\/core\/chaincode\/platforms\/car\t[no test files]\r\n2016\/09\/09 14:05:48 setting Number of procs to -1, was 2\r\n2016\/09\/09 14:05:49 Failed Chaincode docker build:\r\nStep 1 : FROM hyperledger\/fabric-ccenv:x86_64-\r\nPulling repository docker.io\/hyperledger\/fabric-ccenv\r",
            "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text\/plain',window.getSelection().toString().replace(\/\\u200b\/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>?   \tgithub.com\/hyperledger\/fabric\/core\/chaincode\/platforms\/car\t[no test files]<\/pre><\/div>\n<div><pre><span class=\"cm-number\">2016<\/span>\/09\/09 <span class=\"cm-number\">14<\/span>:05:48 setting Number of procs to <span class=\"cm-attribute\">-1<\/span>, was <span class=\"cm-number\">2<\/span><\/pre><\/div>\n<div><pre><span class=\"cm-number\">2016<\/span>\/09\/09 <span class=\"cm-number\">14<\/span>:05:49 Failed Chaincode docker build:<\/pre><\/div>\n<div><pre>Step <span class=\"cm-number\">1<\/span> : FROM hyperledger\/fabric-ccenv:x86_64-<\/pre><\/div>\n<div><pre>Pulling repository docker.io\/hyperledger\/fabric-ccenv<\/pre><\/div>\n<\/div>\n<\/div>\n",
            "lines": 21,
            "lines_more": 16,
            "preview_is_truncated": null,
            "channels": [
                "C0YPYBVJM"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 1,
            "initial_comment": {
                "id": "Fc2A0WRE4C",
                "created": 1473430884,
                "timestamp": 1473430884,
                "user": "U0XQ35CDD",
                "is_intro": true,
                "comment": "I now get this however.",
                "channel": ""
            }
        },
        "user": "U0XQ35CDD",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U0XQ35CDD|kostas>",
        "bot_id": null,
        "ts": "1473430885.000204"
    },
    {
        "user": "U231CKQH2",
        "text": "<@U231CKQH2|karn> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1473435150.000205"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "`vagrant destroy` + `vagrant up` fixed it BTW.",
        "ts": "1473443182.000206"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "(I read Greg's email.)",
        "ts": "1473443198.000207",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0KPFAZNF"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U2A55SKC7",
        "text": "<@U2A55SKC7|tomrsmith> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1473449110.000208"
    }
]
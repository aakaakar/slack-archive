[
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "jcarrivick: you need to map this socket into the peer container, so that the peer in the container can talk to the docker service",
        "ts": "1473152211.000089"
    },
    {
        "type": "message",
        "user": "U1WUAQJVC",
        "text": "AnyOne know where the logs go when we log something in our code using op\/logging ?  In earlier versions we used to see that on register chain code console...",
        "ts": "1473154347.000090"
    },
    {
        "user": "U0NK7T8SH",
        "text": "<@U0NK7T8SH|bryan-huang> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1473158861.000091"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "pushpalatha: docker container stdout",
        "ts": "1473159767.000092"
    },
    {
        "type": "message",
        "user": "U1WUAQJVC",
        "text": "<@U0XR6J961> : No.. i am unable to see the logs there...",
        "ts": "1473159875.000093"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "<@U1M7K67EV>  - As you know, in the BDD tests the peers run in Docker as well.    If you want to use `\/var\/run\/docker.sock` it adds a few complexities:\n\n1) You'll need to mount `\/var\/run\/docker.sock` as a volume\n2) You'll need to either run the peer container(s) in privileged mode (you might also be able to simply add the user the process is running as to the `docker` group as well)",
        "edited": {
            "user": "U0PB67X4K",
            "ts": "1473160355.000000"
        },
        "ts": "1473160236.000094"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "Why can't we just use the same TCP port for the Docker daemon?",
        "ts": "1473160258.000095"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "what substitution are we making now?  (I could look but :wink:  )",
        "ts": "1473160300.000096"
    },
    {
        "type": "message",
        "user": "U1WUAQJVC",
        "text": "<@U0XR6J961> : the console where docker-compose up runs, i am double sure that it is not logging.. That is why i'm lost. Please confirm",
        "ts": "1473161359.000098"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<https:\/\/gerrit.hyperledger.org\/r\/#\/c\/913\/>",
        "ts": "1473161567.000099"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<https:\/\/gerrit.hyperledger.org\/r\/#\/c\/785\/>",
        "ts": "1473167466.000100"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "can somebody review those?",
        "ts": "1473167474.000101"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "<@U1AU8DRQR>: `913` has a pending a question from Gari, and `785` is merged, but the post-merge build FAILs.",
        "ts": "1473181299.000102"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "I hope you missed me :wink:",
        "ts": "1473181309.000103"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "oh really I did",
        "ts": "1473181377.000104"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "the post-merge thing seems to be some instability",
        "ts": "1473181414.000105"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "do you mean this from <@U0PB67X4K> : LGTM",
        "ts": "1473181481.000106"
    },
    {
        "type": "message",
        "user": "U268EB76W",
        "text": "<@U0KPFAZNF> Where can I find release v0.5? I need the release deployed on BMX to demo IBM learn-chaincode tomorrow without modifying it for the new chaincode interface, because I will deploy to BMX and execute it there.",
        "ts": "1473187978.000107"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "<@U268EB76W>  - <http:\/\/github.com\/hyperledger-archives\/fabric>    and then you'll see the v0.5-developer-preview branch",
        "edited": {
            "user": "U0PB67X4K",
            "ts": "1473190583.000000"
        },
        "ts": "1473190561.000108"
    },
    {
        "type": "message",
        "user": "U268EB76W",
        "text": "sweet! thx <@U0PB67X4K>",
        "ts": "1473192620.000110"
    },
    {
        "type": "message",
        "user": "U11HH3P7Y",
        "text": "Someone please look into to this issue <https:\/\/jira.hyperledger.org\/browse\/FAB-101>",
        "ts": "1473201377.000111"
    },
    {
        "type": "message",
        "user": "U11HH3P7Y",
        "text": "seeing this error in the recent builds ```5:17 --- FAIL: TestClassicBackToBackStateTransfer (60.13s)\n16:35:17 2016\/09\/06 16:35:16 Halting timer\n16:35:17 panic: Test network took more than 60 seconds to resolve requests, this usually indicates a hang [recovered]\n16:35:17 \tpanic: Test network took more than 60 seconds to resolve requests, this usually indicates a hang```",
        "ts": "1473201411.000112"
    },
    {
        "type": "message",
        "user": "U1M7K67EV",
        "text": "<@U0PB67X4K> \nI got it all working here: <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/909\/>\nI did have to add the volume like you suggested with the exception that the version of docker-compose we run doesn't support mounting single files as a volume so I had to mount the entire `\/var\/run\/` folder from the host. Not ideal, but we would have to upgrade both docker and docker-compose in Jenkins (which we probably should do at some point) in order to only mount `\/var\/run\/docker.sock`\n\nsed currently replaces the IP in `bddtests\/compose-defaults.yml` with the host's docker IP, changing it to the socket would decouple the tests further from the environment they are running in.",
        "ts": "1473206871.000113"
    },
    {
        "type": "message",
        "user": "U268EB76W",
        "text": "<@U0PB67X4K> how do \"delete\" a deployed chaincode? If I want to update it do I just deploy the updated version again? I realized the chaincode ID is unique and generated for each deploy. So how would \"re\"deploy?",
        "ts": "1473211654.000114"
    },
    {
        "type": "message",
        "user": "U268EB76W",
        "text": "<@U0PB67X4K> on BMX that is.",
        "ts": "1473211723.000115"
    },
    {
        "type": "message",
        "user": "U0YR44350",
        "text": "<@U268EB76W> are you using SDK to deploy the chaincode?",
        "ts": "1473212101.000116"
    },
    {
        "type": "message",
        "user": "U268EB76W",
        "text": "So I took the v0.5 release from the archive and created a public github repo then changed all occurrences of \"hyperledger\/fabric\" in the code to TarantulaTechnology\/fabric (my new repo) then updated the IBM learn-chaincode code in my learn-chaincode repo to the new path and was able to compile without the shim errors. I was able to deploy it to BMX :slightly_smiling_face: Now I have a working v0.5 to use with the IBM code that only works with v0.5 which is the deployed version on BMX. This allows me to share with new engineers how to build chaincode and let's them deploy it without the headache of mastering the devenv and the stream of continuous changes :slightly_smiling_face: This allows them to focus on one thing the chaincode, before deciding if they want to jump into the deep water of devenv :slightly_smiling_face:",
        "ts": "1473212347.000117"
    },
    {
        "type": "message",
        "user": "U268EB76W",
        "text": "<@U0YR44350> I'm using Swagger UI on Bluemix IBM Blockchain service. This is for teaching chaincode development--entry level. I do use it in my experimental development though. I will utilize it and front-end it.",
        "ts": "1473212539.000118"
    },
    {
        "type": "message",
        "user": "U0YR44350",
        "text": "so, if you update the chaincode, it should generate a new chaincode ID",
        "ts": "1473212585.000119"
    },
    {
        "type": "message",
        "user": "U0YR44350",
        "text": "are you saying you want to replace the existing chaincode with a new one keeping the same data underneath?",
        "ts": "1473212624.000120"
    },
    {
        "type": "message",
        "user": "U268EB76W",
        "text": "Right, I deployed a chaincode, added a new method to it, and now want to redeploy it. My curiosity wonders if the prior chaincode is still out there and can be accessed. I want to effectively destroy it and deploy my new version or I might want to keep it and run to versions one without the new method and one with it. Flexibility is required.",
        "ts": "1473212888.000121"
    },
    {
        "type": "message",
        "user": "U268EB76W",
        "text": "I",
        "ts": "1473212949.000122"
    },
    {
        "type": "message",
        "user": "U268EB76W",
        "text": "I'll just experiment for now and see what happens. Thx <@U0YR44350>",
        "ts": "1473212994.000123"
    },
    {
        "type": "message",
        "user": "U0YR44350",
        "text": "I don't think you can destroy chaincode using the REST APIs",
        "ts": "1473213022.000124"
    },
    {
        "type": "message",
        "user": "U0YR44350",
        "text": "you can deploy a new one and switch to using it",
        "ts": "1473213045.000125"
    },
    {
        "type": "message",
        "user": "U268EB76W",
        "text": "The Bluemix IBM Blockchain service is limited in this regard. It too is beta but is great for playing and utilizes Swagger to allow easy interaction with the various components. It's v0.5 so I had to go back in time to make my demo work. My focus is in the SDK too I just haven't had the time to drill down on it and my gut is telling me I should wait because a lot of work is taking place and trying to grasp a bullet is dangerous so I sit play watch experiment until my gut says the cement and iron is in place and the foundation will no longer be shifting under my feet. Plus I expect to do a ton of customization to Hyperledger too.",
        "edited": {
            "user": "U268EB76W",
            "ts": "1473215026.000000"
        },
        "ts": "1473214924.000126"
    }
]
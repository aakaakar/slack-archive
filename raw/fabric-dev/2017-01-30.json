[
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "I have created a version of marbles chaincode that demonstrates ledger interaction patterns in v1 -",
        "ts": "1485776936.002319"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "It\u2019s called marbles02 to differentiate from the full blown marbles app.  And like example02 it can be used for simple trials\/demos.",
        "ts": "1485776984.002320",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0YK3KKCY",
                    "U33HN2ETU",
                    "U13Q594J2"
                ],
                "count": 3
            }
        ]
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "Demonstrates how to work with JSON in chaincode instead of tables, how to use composite key range queries for simple queries used in transactions, how to structure data for most efficient lookups, how to enable parameterized rich queries vs ad hoc rich queries for point-in-time ledger queries.",
        "ts": "1485777024.002321"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "Deploy using `peer chaincode deploy -C myc1 -n marbles -p <http:\/\/github.com\/hyperledger\/fabric\/examples\/chaincode\/go\/marbles02|github.com\/hyperledger\/fabric\/examples\/chaincode\/go\/marbles02> -c '{\u201dArgs\":[\"init\"]}'`",
        "ts": "1485777063.002322"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "Sample invoke and query commands are included as comments at the top of the chaincode",
        "ts": "1485777091.002323"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "<@U13TWBRBL> <@U0KN2SSKE> <@U184J2R7S> <@U0PB67X4K> This can be used as demo at hackathon",
        "ts": "1485777128.002324"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "<@U10LM0FFZ> <@U112NNFV4> Check the comments in the chaincode, there are some nuggets you can use in chaincode authoring documentation",
        "edited": {
            "user": "U1KFCPFQA",
            "ts": "1485777272.000000"
        },
        "ts": "1485777204.002325"
    },
    {
        "user": "U3VKNAAQH",
        "text": "<@U3VKNAAQH|ssaddem> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485781746.002327"
    },
    {
        "type": "message",
        "user": "U3VKNAAQH",
        "text": "thx",
        "ts": "1485782964.002329"
    },
    {
        "type": "message",
        "user": "U10LM0FFZ",
        "text": "<@U1KFCPFQA> - that's awesome, thanks.  will play around with it today if I have time and see if we can sneak it into alpha.  worst case we can at least point to the sample with some pointers on how to do the complex queries",
        "ts": "1485784325.002330"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "sure, and its not just the complex queries that are important, at an even more basic its how to use json instead of the old table apis, and how to do simple lookups in chaincode for groups of keys.",
        "edited": {
            "user": "U1KFCPFQA",
            "ts": "1485784442.000000"
        },
        "ts": "1485784431.002331"
    },
    {
        "type": "message",
        "user": "U3S1PENVA",
        "text": "by the way, what would be the best way to preserve data stored in the chaincode in case I need to update it?",
        "ts": "1485784680.002334"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "any data used across transactions should be stored as state",
        "ts": "1485785401.002335"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "via normal PutState() approach",
        "ts": "1485785409.002336"
    },
    {
        "type": "message",
        "user": "U3S1PENVA",
        "text": "What I mean that if I have a chaincode version 1 that stores data and processes it. Then some business requirements have changed, so I adapted it and now I need to upgrade the existing chaincode. As far as I know, there is no upgrade mechanism for chaincodes, so instead I deploy a new chaincode version 2. But it\u2019s state will be empty, because this is a new chaincode. But logically, it should have the data from the chaincode version 1. So my question is, how to achieve that?",
        "ts": "1485785671.002337"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "I believe there are some people thinking about a new upgrade feature that will do just as you say",
        "ts": "1485786526.002338"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0ULK2JPP> ^^^",
        "ts": "1485786587.002339"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U3S1PENVA> what you are referring to is generally called \"chaincode lifecycle\" which includes deployment, upgrade, and termination",
        "ts": "1485786652.002340"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "v0.6 and earlier only supported deployment, but support for upgrade and terminate is emerging (or maybe even available) in master",
        "ts": "1485786677.002341"
    },
    {
        "type": "message",
        "user": "U3S1PENVA",
        "text": "I\u2019m actually working with master, could you maybe point me out to jira\/commit that does it?",
        "ts": "1485786727.002342"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<https:\/\/github.com\/hyperledger\/fabric\/blob\/0dea6b10800213f482bca581d90ba40a89e26add\/peer\/chaincode\/upgrade_test.go#L56>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/blob\/0dea6b10800213f482bca581d90ba40a89e26add\/peer\/chaincode\/upgrade_test.go#L56",
                "text": "Read-only mirror of <https:\/\/gerrit.hyperledger.org\/r\/#\/admin\/projects\/fabric>",
                "fallback": "GitHub: hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/blob\/0dea6b10800213f482bca581d90ba40a89e26add\/peer\/chaincode\/upgrade_test.go#L56",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1485786828.002343"
    },
    {
        "type": "message",
        "user": "U3S1PENVA",
        "text": "thanks a lot",
        "ts": "1485786846.002345"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "yw",
        "ts": "1485786848.002346"
    },
    {
        "type": "message",
        "user": "U1KDHJT6H",
        "text": "Taking notes for Binh\u2019s meeting.    Plan to cut Alpha today",
        "ts": "1485787070.002347"
    },
    {
        "type": "message",
        "user": "U1KDHJT6H",
        "text": "Create a branch",
        "ts": "1485787098.002348"
    },
    {
        "type": "message",
        "user": "U1KDHJT6H",
        "text": "the name will be 1.0.0-alpha",
        "ts": "1485787164.002349"
    },
    {
        "type": "message",
        "user": "U1KDHJT6H",
        "text": "this is ad hoc meeting in the common area - several developers have gathered",
        "ts": "1485787272.002350"
    },
    {
        "type": "message",
        "user": "U1KDHJT6H",
        "text": "tag is 1.0.0-alpha barck v1.0-aplpah",
        "ts": "1485787337.002351"
    },
    {
        "type": "message",
        "user": "U1KDHJT6H",
        "text": "branch v1.0-alpha  (can\u2019t type)",
        "ts": "1485787361.002352"
    },
    {
        "type": "message",
        "user": "U1KDHJT6H",
        "text": "after cut alpha branch - only critical fixes will be added to alpha branch",
        "ts": "1485787485.002353"
    },
    {
        "type": "message",
        "user": "U1KDHJT6H",
        "text": "cc calling cc almost done binh working final pieces - shooting to put in alpha",
        "ts": "1485787634.002354"
    },
    {
        "type": "message",
        "user": "U1KDHJT6H",
        "text": "bootstrap for channels checked in needs to be merged",
        "ts": "1485787665.002355"
    },
    {
        "type": "message",
        "user": "U1KDHJT6H",
        "text": "security and gossip will make call by noon on whether to include in alpah",
        "ts": "1485787808.002356"
    },
    {
        "user": "U3V4G8HUZ",
        "text": "<@U3V4G8HUZ|sagmeister> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485787869.002357"
    },
    {
        "type": "message",
        "user": "U1KDHJT6H",
        "text": "escc vscc will be post alpha",
        "ts": "1485788025.002358"
    },
    {
        "type": "message",
        "user": "U1KDHJT6H",
        "text": "Ledger would like to get one more defect in prior to alpha cut.   feature complete for alpha.",
        "ts": "1485788154.002359"
    },
    {
        "type": "message",
        "user": "U1KDHJT6H",
        "text": "fabric-ca 4973 required or update doc to workaround",
        "ts": "1485788252.002360"
    },
    {
        "type": "message",
        "user": "U1KDHJT6H",
        "text": "murali now talking about cc lifecycle.   cc deployed on file system and not on ledger",
        "ts": "1485789073.002361"
    },
    {
        "type": "message",
        "user": "U1KDHJT6H",
        "text": "need to work through security aspects",
        "ts": "1485789101.002362"
    },
    {
        "type": "message",
        "user": "U1KDHJT6H",
        "text": "have 3 peers,  only want 2 peers to have cc,  have to install separately on 2 peers",
        "ts": "1485789163.002363"
    },
    {
        "type": "message",
        "user": "U3DEHEA4R",
        "text": "Hello, i have a problem with fabric v0.6. When i make a post with this json :\n{\n \"jsonrpc\": \"2.0\",\n \"method\": \"deploy\",\n \"params\": {\n     \"type\": 1,\n   \"chaincodeID\":{\n       \"name\":\"mycc\"\n   },\n   \"ctorMsg\": {\n       \"function\":\"init\",\n       \"args\":[\"a\", \"1000\", \"b\", \"2000\"]\n   },\n   \"secureContext\": \"lukas\"\n },\n \"id\": \"1\"  \n}\nin the json response the status.status is always \"OK\" .\nAlso when i add some parameters. Why?\nThanks",
        "ts": "1485789993.002364"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "thanks <@U1KDHJT6H> about deploy \/ lifecyle changes etc there is a WIP  Jira <https:\/\/jira.hyperledger.org\/browse\/FAB-1783> and few WIP tasks and gerritt (not for merge)",
        "ts": "1485799084.002365"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "hope to put out a video on playback to assist with the review sometime this week",
        "edited": {
            "user": "U0ULK2JPP",
            "ts": "1485799141.000000"
        },
        "ts": "1485799131.002366"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "Hi I am trying to open a specific address from with the system chaincode",
        "ts": "1485815016.002368"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "I am running a version based on docker-compose-next-4.yml but am only trying to open one port",
        "ts": "1485815072.002369"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "This is the code I am trying to use with the system chaincode:",
        "ts": "1485815323.002374"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "\/\/ Set up a connection to the server.\n\taddress := viper.GetString(\"peer.mpc.serverAddress\")\n\tlogger.Infof(\"Address read from viper client: %s --------------------------------------------------\", address)\n\tconn, err := grpc.Dial(address, grpc.WithInsecure())\n\tif err != nil {\n\t\tlog.Fatalf(\"did not connect: %v -----------------------------------------\", err)\n\t}\n\tdefer conn.Close()\n\tc := mpcclient.NewGreeterClient(conn)",
        "ts": "1485815325.002375"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "on the peer I am getting a 'rpc error: code = 14 desc = grpc: RPC failed fast due to transport failure' error",
        "ts": "1485815364.002376"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "and similarly on the endorser 'grpc: timed out when dialing'. I wanted to add that when I run it natively (without the docker-compose) this runs correctly and that the client I am using is helloworld from <https:\/\/github.com\/grpc\/grpc-go\/tree\/master\/examples>",
        "edited": {
            "user": "U3HN4GFA9",
            "ts": "1485968467.000000"
        },
        "ts": "1485815384.002377"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "if anyone can point me to an example that works or perhaps give suggestions?",
        "ts": "1485815418.002378"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "Thanks!",
        "ts": "1485815423.002379"
    },
    {
        "user": "U3NCSU999",
        "text": "<@U3NCSU999|hl.rose> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485818609.002380"
    }
]
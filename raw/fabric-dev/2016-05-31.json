[
    {
        "user": "U13CYDM1Q",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U13CYDM1Q|slowtokyo> has joined the channel",
        "ts": "1464691479.001570"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0N1D1UAE>: reading your post again, it still seems like it might be opt in, no?",
        "ts": "1464695059.001571"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "\"Allow parallel execution of test functions that call t.Parallel\"",
        "ts": "1464695073.001572"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "that sounds like it\u2019s only a candidate if it calls t.Parallel",
        "ts": "1464695091.001573"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "explicitly, i mean",
        "ts": "1464695099.001574"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "the confusing part is the note about the default",
        "ts": "1464695121.001575"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "ah!",
        "ts": "1464695211.001576"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "then i don't know",
        "ts": "1464695215.001577"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0UKTPMG8>: question about behave test names",
        "ts": "1464697389.001578"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i just ran a full sweep and saw this;",
        "ts": "1464697398.001579"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U0KPFAZNF|ghaskins> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/ghaskins\/F1CUFD9EJ\/-.sh|Untitled>",
        "file": {
            "id": "F1CUFD9EJ",
            "created": 1464697407,
            "timestamp": 1464697407,
            "name": "-.sh",
            "title": "Untitled",
            "mimetype": "text\/plain",
            "filetype": "shell",
            "pretty_type": "Shell",
            "user": "U0KPFAZNF",
            "editable": true,
            "size": 246,
            "mode": "snippet",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1CUFD9EJ\/-.sh?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1CUFD9EJ\/download\/-.sh?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/ghaskins\/F1CUFD9EJ\/-.sh",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F1CUFD9EJ-f93073398e",
            "edit_link": "https:\/\/hyperledgerproject.slack.com\/files\/ghaskins\/F1CUFD9EJ\/-.sh\/edit",
            "preview": "Failing scenarios:\r\n  peer_basic.feature:577  basic startup of 2 validating peers using TLS\r\n\r\n0 features passed, 1 failed, 1 skipped\r\n26 scenarios passed, 1 failed, 4 skipped\r",
            "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text\/plain',window.getSelection().toString().replace(\/\\u200b\/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>Failing scenarios:<\/pre><\/div>\n<div><pre>  peer_basic.feature:577  basic startup of <span class=\"cm-number\">2<\/span> validating peers using TLS<\/pre><\/div>\n<div><pre>&#8203;<\/pre><\/div>\n<div><pre><span class=\"cm-number\">0<\/span> features passed, <span class=\"cm-number\">1<\/span> failed, <span class=\"cm-number\">1<\/span> skipped<\/pre><\/div>\n<div><pre><span class=\"cm-number\">26<\/span> scenarios passed, <span class=\"cm-number\">1<\/span> failed, <span class=\"cm-number\">4<\/span> skipped<\/pre><\/div>\n<\/div>\n<\/div>\n",
            "lines": 7,
            "lines_more": 2,
            "preview_is_truncated": null,
            "channels": [
                "C0YPYBVJM"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 0
        },
        "user": "U0KPFAZNF",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U0KPFAZNF|ghaskins>",
        "bot_id": null,
        "ts": "1464697407.001580"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "In an attempt to diagnose I tried to re-run just the failing test like this:",
        "ts": "1464697444.001581"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U0KPFAZNF|ghaskins> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/ghaskins\/F1CUPHNSK\/-.sh|Untitled>",
        "file": {
            "id": "F1CUPHNSK",
            "created": 1464697452,
            "timestamp": 1464697452,
            "name": "-.sh",
            "title": "Untitled",
            "mimetype": "text\/plain",
            "filetype": "shell",
            "pretty_type": "Shell",
            "user": "U0KPFAZNF",
            "editable": true,
            "size": 991,
            "mode": "snippet",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1CUPHNSK\/-.sh?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1CUPHNSK\/download\/-.sh?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/ghaskins\/F1CUPHNSK\/-.sh",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F1CUPHNSK-1ffa6c94ea",
            "edit_link": "https:\/\/hyperledgerproject.slack.com\/files\/ghaskins\/F1CUPHNSK\/-.sh\/edit",
            "preview": "vagrant@hyperledger-devenv:v0.0.10-88fb082:\/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/bddtests$ behave -n\"577\"\r\nFeature: lanching 3 peers # peer_basic.feature:11\r\n  As a HyperLedger developer\r\n  I want to be able to launch 3 peers\r\nFeature: utxo # utxo.feature:11\r",
            "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text\/plain',window.getSelection().toString().replace(\/\\u200b\/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>vagrant@hyperledger-devenv:v0.0.10-88fb082:\/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/bddtests<span class=\"cm-def\">$ behave<\/span> <span class=\"cm-attribute\">-n<\/span><span class=\"cm-string\">&quot;577&quot;<\/span><\/pre><\/div>\n<div><pre>Feature: lanching <span class=\"cm-number\">3<\/span> peers <span class=\"cm-comment\"># peer_basic.feature:11<\/span><\/pre><\/div>\n<div><pre>  As a HyperLedger developer<\/pre><\/div>\n<div><pre>  I want to be able to launch <span class=\"cm-number\">3<\/span> peers<\/pre><\/div>\n<div><pre>Feature: utxo <span class=\"cm-comment\"># utxo.feature:11<\/span><\/pre><\/div>\n<\/div>\n<\/div>\n",
            "lines": 22,
            "lines_more": 17,
            "preview_is_truncated": null,
            "channels": [
                "C0YPYBVJM"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 0
        },
        "user": "U0KPFAZNF",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U0KPFAZNF|ghaskins>",
        "bot_id": null,
        "ts": "1464697453.001582"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "however, it doesn\u2019t appear that it ran the same (feature:577 vs feature:11)",
        "ts": "1464697483.001583"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "any advice?",
        "ts": "1464697487.001584"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "greg, I think the 577 in this case is the line number  ... try -n \"peers using TLS\"",
        "ts": "1464698038.001585"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U0KPFAZNF|ghaskins> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/ghaskins\/F1CUXCDA5\/-.sh|Untitled>",
        "file": {
            "id": "F1CUXCDA5",
            "created": 1464698155,
            "timestamp": 1464698155,
            "name": "-.sh",
            "title": "Untitled",
            "mimetype": "text\/plain",
            "filetype": "shell",
            "pretty_type": "Shell",
            "user": "U0KPFAZNF",
            "editable": true,
            "size": 496,
            "mode": "snippet",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1CUXCDA5\/-.sh?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1CUXCDA5\/download\/-.sh?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/ghaskins\/F1CUXCDA5\/-.sh",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F1CUXCDA5-e8275c5f43",
            "edit_link": "https:\/\/hyperledgerproject.slack.com\/files\/ghaskins\/F1CUXCDA5\/-.sh\/edit",
            "preview": "vagrant@hyperledger-devenv:v0.0.10-88fb082:\/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/bddtests$ behave -n\"peer using TLS\"\r\nFeature: lanching 3 peers # peer_basic.feature:11\r\n  As a HyperLedger developer\r\n  I want to be able to launch 3 peers\r\nFeature: utxo # utxo.feature:11\r",
            "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text\/plain',window.getSelection().toString().replace(\/\\u200b\/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>vagrant@hyperledger-devenv:v0.0.10-88fb082:\/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/bddtests<span class=\"cm-def\">$ behave<\/span> <span class=\"cm-attribute\">-n<\/span><span class=\"cm-string\">&quot;peer using TLS&quot;<\/span><\/pre><\/div>\n<div><pre>Feature: lanching <span class=\"cm-number\">3<\/span> peers <span class=\"cm-comment\"># peer_basic.feature:11<\/span><\/pre><\/div>\n<div><pre>  As a HyperLedger developer<\/pre><\/div>\n<div><pre>  I want to be able to launch <span class=\"cm-number\">3<\/span> peers<\/pre><\/div>\n<div><pre>Feature: utxo <span class=\"cm-comment\"># utxo.feature:11<\/span><\/pre><\/div>\n<\/div>\n<\/div>\n",
            "lines": 11,
            "lines_more": 6,
            "preview_is_truncated": null,
            "channels": [
                "C0YPYBVJM"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 0
        },
        "user": "U0KPFAZNF",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U0KPFAZNF|ghaskins>",
        "bot_id": null,
        "ts": "1464698155.001586"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "same basic result",
        "ts": "1464698161.001587"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "doesn't it skip them?",
        "ts": "1464698456.001588"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U0UGH3X7X|tuand> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/tuand\/F1CV6B8JW\/-.txt|Untitled>",
        "file": {
            "id": "F1CV6B8JW",
            "created": 1464698934,
            "timestamp": 1464698934,
            "name": "-.txt",
            "title": "Untitled",
            "mimetype": "text\/plain",
            "filetype": "text",
            "pretty_type": "Plain Text",
            "user": "U0UGH3X7X",
            "editable": true,
            "size": 1144,
            "mode": "snippet",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1CV6B8JW\/-.txt?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1CV6B8JW\/download\/-.txt?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/tuand\/F1CV6B8JW\/-.txt",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F1CV6B8JW-b1dc4a903b",
            "edit_link": "https:\/\/hyperledgerproject.slack.com\/files\/tuand\/F1CV6B8JW\/-.txt\/edit",
            "preview": "vagrant@ubuntu-1404:~$ cd \/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/bddtests\/\r\nvagrant@ubuntu-1404:\/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/bddtests$ behave -n \"peers using TLS\"\r\nFeature: lanching 3 peers # peer_basic.feature:11\r\n  As a HyperLedger developer\r\n  I want to be able to launch 3 peers\r",
            "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text\/plain',window.getSelection().toString().replace(\/\\u200b\/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>vagrant@ubuntu-1404:~$ cd \/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/bddtests\/<\/pre><\/div>\n<div><pre>vagrant@ubuntu-1404:\/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/bddtests$ behave -n &quot;peers using TLS&quot;<\/pre><\/div>\n<div><pre>Feature: lanching 3 peers # peer_basic.feature:11<\/pre><\/div>\n<div><pre>  As a HyperLedger developer<\/pre><\/div>\n<div><pre>  I want to be able to launch 3 peers<\/pre><\/div>\n<div><pre><\/pre><\/div>\n<\/div>\n<\/div>\n",
            "lines": 20,
            "lines_more": 15,
            "preview_is_truncated": true,
            "channels": [
                "C0YPYBVJM"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 0
        },
        "user": "U0UGH3X7X",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U0UGH3X7X|tuand>",
        "bot_id": null,
        "ts": "1464698934.001589"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "was that a typo  ?  `peer using TLS ` instead of `peers using TLS`",
        "ts": "1464698974.001590"
    },
    {
        "type": "message",
        "user": "U0N1D1UAE",
        "text": "<@U0KPFAZNF> My reading of the docs. and some blogs is that yes,  `t.Parallel` is an opt in that would have to be added to each test within a package that was safe to run in parallel with other tests.",
        "ts": "1464699658.001591"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "Ok, that's how I read it too.  But IIUC you are saying that appears to not be the case?",
        "ts": "1464699849.001592"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i thought tests ran in parallel",
        "ts": "1464699862.001593"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but it seems not",
        "ts": "1464699865.001594"
    },
    {
        "type": "message",
        "user": "U0N1D1UAE",
        "text": "I believe that tests from different packages run in parallel, I\u2019ve seen it",
        "ts": "1464699904.001595"
    },
    {
        "type": "message",
        "user": "U0N1D1UAE",
        "text": "on `top`",
        "ts": "1464699911.001596"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "oooh",
        "ts": "1464699947.001597"
    },
    {
        "type": "message",
        "user": "U0N1D1UAE",
        "text": "\u201cSomeone\u201d should add `t.Parallel` to our tests to make them run faster",
        "ts": "1464699951.001598"
    },
    {
        "type": "message",
        "user": "U0N1D1UAE",
        "text": "(in theory)",
        "ts": "1464699958.001599"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "do they run slowly?",
        "ts": "1464699964.001600"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i think behave is the big slow thing",
        "ts": "1464699974.001601"
    },
    {
        "type": "message",
        "user": "U0N1D1UAE",
        "text": "The Go tests are pretty slow too. Note that in both cases the culprit is Docker",
        "ts": "1464700016.001602"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "creating containers or building stuff in the container?",
        "ts": "1464700044.001603"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "Yes, please elaborate",
        "ts": "1464700065.001604"
    },
    {
        "type": "message",
        "user": "U0N1D1UAE",
        "text": "Chaincode deployment is excrutiatingly slow, and so is building containers in the container-building tests",
        "ts": "1464700083.001605"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "Ah, gotcha.  I'm working on a PR that might improve some of that",
        "ts": "1464700111.001606"
    },
    {
        "type": "message",
        "user": "U0N1D1UAE",
        "text": "My interest is piqued! What is the plan?",
        "ts": "1464700130.001607"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "Well for one I've moved the image creation out of go-test and switched go-build to go-install",
        "ts": "1464700191.001608"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "ah cool",
        "ts": "1464700217.001609"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "Install is much faster to rebuild by a factor of 10x",
        "ts": "1464700218.001610"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i didn't have time to do that",
        "ts": "1464700223.001611"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "(If nothing has changed)",
        "ts": "1464700231.001612"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "do you use the result of go-install to gauge whether to rebuild the image?",
        "ts": "1464700253.001613"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "I'm mobile now, but I'll send you a preview of the patches in a bit",
        "ts": "1464700272.001614"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "okay",
        "ts": "1464700275.001615"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "Yes",
        "ts": "1464700279.001616"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "It all does intelligent rebuild avoidance now",
        "ts": "1464700296.001617"
    },
    {
        "type": "message",
        "user": "U0N1D1UAE",
        "text": "Will this alleviate the chaincode deployment overhead?",
        "ts": "1464700333.001618"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "it should help",
        "ts": "1464700924.001619"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "at the risk of stating the obvious :slightly_smiling_face: \u2026 tests can be parallel only if things such as ports and database folders don\u2019t collide. For example chaincode tests use a \u201ctemp\u201d db and a non-default port 40303 (I think)",
        "ts": "1464701058.001620"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "not hard to make unique though",
        "ts": "1464701077.001621"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0ULK2JPP>: yeah, i understood\u2026i was merely exploring the _how_ at this point\u2026i had come to the conclusion that go-test supports it via opt-in, but then was confused by some of the comments earlier that perhaps we already are running parallel",
        "ts": "1464701170.001622"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0XR6J961>: <@U0N1D1UAE> still a WIP: <https:\/\/github.com\/hyperledger\/fabric\/compare\/master...ghaskins:make-enhancement-preview>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/compare\/master...ghaskins:make-enhancement-preview",
                "text": "fabric - Fabric is a blockchain project in Incubation proposed to the community and documented at <https:\/\/goo.gl\/RYQZ5N>. Information on what Incubation entails can be found in the Hyperledger Proj...",
                "fallback": "GitHub: hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/compare\/master...ghaskins:make-enhancement-preview",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1464701192.001623"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "one of the next steps will be to introduce \u201chyperledger\/fabric-chaincode-base\u201d and move some of the optimizations into that",
        "ts": "1464701238.001625"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "and take the writeGopathSrc out of the golang code",
        "ts": "1464701252.001626"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "great \u2026 and apologize for stating the obvious!",
        "ts": "1464701360.001627"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U0KPFAZNF|ghaskins> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/ghaskins\/F1CV6QPNK\/-.sh|Untitled> and commented: <@U0XR6J961>: you can see the first invocation builds the image, and the second one detects that nothing needs to be done.",
        "file": {
            "id": "F1CV6QPNK",
            "created": 1464701394,
            "timestamp": 1464701394,
            "name": "-.sh",
            "title": "Untitled",
            "mimetype": "text\/plain",
            "filetype": "shell",
            "pretty_type": "Shell",
            "user": "U0KPFAZNF",
            "editable": true,
            "size": 1074,
            "mode": "snippet",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1CV6QPNK\/-.sh?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1CV6QPNK\/download\/-.sh?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/ghaskins\/F1CV6QPNK\/-.sh",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F1CV6QPNK-4f7d59811a",
            "edit_link": "https:\/\/hyperledgerproject.slack.com\/files\/ghaskins\/F1CV6QPNK\/-.sh\/edit",
            "preview": "vagrant@hyperledger-devenv:v0.0.10-88fb082:\/opt\/gopath\/src\/github.com\/hyperledger\/fabric$ make peer-image\r\nmkdir -p build\r\ngit ls-files | tar -zcT - > build\/gopath.tar.bz2\r\nmkdir -p build\/image\/peer\r\ncat images\/app\/Dockerfile.in | sed -e 's\/_TARGET_\/peer\/g' > build\/image\/peer\/Dockerfile\r",
            "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text\/plain',window.getSelection().toString().replace(\/\\u200b\/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>vagrant@hyperledger-devenv:v0.0.10-88fb082:\/opt\/gopath\/src\/github.com\/hyperledger\/fabric<span class=\"cm-def\">$ make<\/span> peer-image<\/pre><\/div>\n<div><pre><span class=\"cm-builtin\">mkdir<\/span> <span class=\"cm-attribute\">-p<\/span> build<\/pre><\/div>\n<div><pre><span class=\"cm-builtin\">git<\/span> ls-files | tar <span class=\"cm-attribute\">-zcT<\/span> <span class=\"cm-attribute\">-<\/span> &gt; build\/gopath.tar.bz2<\/pre><\/div>\n<div><pre><span class=\"cm-builtin\">mkdir<\/span> <span class=\"cm-attribute\">-p<\/span> build\/image\/peer<\/pre><\/div>\n<div><pre><span class=\"cm-builtin\">cat<\/span> images\/app\/Dockerfile.in | <span class=\"cm-builtin\">sed<\/span> <span class=\"cm-attribute\">-e<\/span> <span class=\"cm-string\">'s\/_TARGET_\/peer\/g'<\/span> &gt; build\/image\/peer\/Dockerfile<\/pre><\/div>\n<\/div>\n<\/div>\n",
            "lines": 23,
            "lines_more": 18,
            "preview_is_truncated": null,
            "channels": [
                "C0YPYBVJM"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 1,
            "initial_comment": {
                "id": "Fc1CVBUJLR",
                "created": 1464701394,
                "timestamp": 1464701394,
                "user": "U0KPFAZNF",
                "is_intro": true,
                "comment": "<@U0XR6J961>: you can see the first invocation builds the image, and the second one detects that nothing needs to be done.",
                "channel": ""
            }
        },
        "user": "U0KPFAZNF",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U0KPFAZNF|ghaskins>",
        "bot_id": null,
        "ts": "1464701394.001628"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0ULK2JPP>: not at all, good to make sure we are all on the same page",
        "ts": "1464701412.001629"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0XR6J961>: what i still need to work out is to do something like volume mount the $GOPATH\/pkg dir so I can reuse the cache\u2026it greatly speeds up the build",
        "ts": "1464701454.001630"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "<@U0KPFAZNF>: did you resolve your problem of running the behave test?",
        "ts": "1464701681.001631"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0UKTPMG8>: no, still not sure how to target the one that is failing",
        "ts": "1464701849.001632"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U0KPFAZNF|ghaskins> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/ghaskins\/F1CTUR02X\/-.sh|Untitled> and commented: <@U0XR6J961>:",
        "file": {
            "id": "F1CTUR02X",
            "created": 1464701922,
            "timestamp": 1464701922,
            "name": "-.sh",
            "title": "Untitled",
            "mimetype": "text\/plain",
            "filetype": "shell",
            "pretty_type": "Shell",
            "user": "U0KPFAZNF",
            "editable": true,
            "size": 1260,
            "mode": "snippet",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1CTUR02X\/-.sh?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1CTUR02X\/download\/-.sh?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/ghaskins\/F1CTUR02X\/-.sh",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F1CTUR02X-66d1dcf0af",
            "edit_link": "https:\/\/hyperledgerproject.slack.com\/files\/ghaskins\/F1CTUR02X\/-.sh\/edit",
            "preview": "vagrant@hyperledger-devenv:v0.0.10-88fb082:\/opt\/gopath\/src\/github.com\/hyperledger\/fabric$ rm -rf \/opt\/gopath\/pkg\/\r\nvagrant@hyperledger-devenv:v0.0.10-88fb082:\/opt\/gopath\/src\/github.com\/hyperledger\/fabric$ rm build\/bin\/peer\r\nvagrant@hyperledger-devenv:v0.0.10-88fb082:\/opt\/gopath\/src\/github.com\/hyperledger\/fabric$ time make peer\r\nCGO_CFLAGS=\" \" CGO_LDFLAGS=\"-lrocksdb -lstdc++ -lm -lz -lbz2 -lsnappy\" GOBIN=\/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/build\/bin go install github.com\/hyperledger\/fabric\/peer\r\nBinary available as build\/bin\/peer\r",
            "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text\/plain',window.getSelection().toString().replace(\/\\u200b\/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>vagrant@hyperledger-devenv:v0.0.10-88fb082:\/opt\/gopath\/src\/github.com\/hyperledger\/fabric<span class=\"cm-def\">$ rm<\/span> <span class=\"cm-attribute\">-rf<\/span> \/opt\/gopath\/pkg\/<\/pre><\/div>\n<div><pre>vagrant@hyperledger-devenv:v0.0.10-88fb082:\/opt\/gopath\/src\/github.com\/hyperledger\/fabric<span class=\"cm-def\">$ rm<\/span> build\/bin\/peer<\/pre><\/div>\n<div><pre>vagrant@hyperledger-devenv:v0.0.10-88fb082:\/opt\/gopath\/src\/github.com\/hyperledger\/fabric<span class=\"cm-def\">$ time<\/span> <span class=\"cm-builtin\">make<\/span> peer<\/pre><\/div>\n<div><pre><span class=\"cm-def\">CGO_CFLAGS<\/span><span class=\"cm-operator\">=<\/span><span class=\"cm-string\">&quot; &quot;<\/span> <span class=\"cm-def\">CGO_LDFLAGS<\/span><span class=\"cm-operator\">=<\/span><span class=\"cm-string\">&quot;-lrocksdb -lstdc++ -lm -lz -lbz2 -lsnappy&quot;<\/span> <span class=\"cm-def\">GOBIN<\/span><span class=\"cm-operator\">=<\/span>\/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/build\/bin go install github.com\/hyperledger\/fabric\/peer<\/pre><\/div>\n<div><pre>Binary available as build\/bin\/peer<\/pre><\/div>\n<\/div>\n<\/div>\n",
            "lines": 23,
            "lines_more": 18,
            "preview_is_truncated": null,
            "channels": [
                "C0YPYBVJM"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 1,
            "initial_comment": {
                "id": "Fc1CV1EBC6",
                "created": 1464701922,
                "timestamp": 1464701922,
                "user": "U0KPFAZNF",
                "is_intro": true,
                "comment": "<@U0XR6J961>:",
                "channel": ""
            }
        },
        "user": "U0KPFAZNF",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U0KPFAZNF|ghaskins>",
        "bot_id": null,
        "ts": "1464701923.001633"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "first build, 32s, second build, optimized-out, touch one file, third build 9s (because of cache)",
        "ts": "1464701970.001634"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "(if nothing changed, it takes about 3s if you force make to rebuild it, which is why I said 10x (3 vs 32)",
        "ts": "1464702009.001635"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "but practically speaking, its probably more like the 9 vs 32",
        "ts": "1464702024.001636"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "(though that is still pretty good)",
        "ts": "1464702032.001637"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "unfortunately the *-image targets do not (yet) benefit from the $GOPATH\/pkg cache, as they start with a fresh docker environment each time",
        "ts": "1464702090.001638"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "but I am working on that",
        "ts": "1464702094.001639"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "im my original design, I was injecting the .\/build\/bin\/peer binary into the container rather than building it natively\u2026that was really fast but I was worried it wouldnt result in portability",
        "ts": "1464702159.001640"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "so I backed away from that design",
        "ts": "1464702170.001641"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i think injecting the binary makes a lot of sense",
        "ts": "1464705738.001642"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "this yaml config business is a monster",
        "ts": "1464705987.001643"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i think we need something better than viper",
        "ts": "1464705995.001644"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "anaconda?",
        "ts": "1464709462.001645"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "there are other configuration solutions (that don't use yaml)",
        "ts": "1464709595.001646"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "which verify all spelling, etc.",
        "ts": "1464709605.001647"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0XR6J961>: at first I thought so to, as I can take advantage of the go-install acceleration and make-prereq optimizations\u2026but then I realized, i am assuming that the host and docker are compatible",
        "ts": "1464709617.001648"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "which parse directly into a struct, or behave like flags",
        "ts": "1464709623.001649"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "in vagrant they are, but there are no guarantees :wink:",
        "ts": "1464709629.001650"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "ghaskins: but they are for most people",
        "ts": "1464709651.001651"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "for instance, the host could have a different version of golang or libc, and the binary might not work",
        "ts": "1464709653.001652"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "ghaskins: oh.",
        "ts": "1464709663.001653"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but the binary should be static",
        "ts": "1464709679.001654"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "thats a misnomer",
        "ts": "1464709731.001655"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U0KPFAZNF|ghaskins> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/ghaskins\/F1D0Y411U\/-.sh|Untitled>",
        "file": {
            "id": "F1D0Y411U",
            "created": 1464709739,
            "timestamp": 1464709739,
            "name": "-.sh",
            "title": "Untitled",
            "mimetype": "text\/plain",
            "filetype": "shell",
            "pretty_type": "Shell",
            "user": "U0KPFAZNF",
            "editable": true,
            "size": 1002,
            "mode": "snippet",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1D0Y411U\/-.sh?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1D0Y411U\/download\/-.sh?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/ghaskins\/F1D0Y411U\/-.sh",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F1D0Y411U-d3b22c0e84",
            "edit_link": "https:\/\/hyperledgerproject.slack.com\/files\/ghaskins\/F1D0Y411U\/-.sh\/edit",
            "preview": "vagrant@hyperledger-devenv:v0.0.10-88fb082:\/opt\/gopath\/src\/github.com\/hyperledger\/fabric$ ldd build\/bin\/peer\r\n\tlinux-vdso.so.1 =>  (0x00007ffd58e9a000)\r\n\tlibpthread.so.0 => \/lib\/x86_64-linux-gnu\/libpthread.so.0 (0x00007f382d927000)\r\n\tlibrocksdb.so.4.1 => \/usr\/local\/lib\/librocksdb.so.4.1 (0x00007f382d41b000)\r\n\tlibdl.so.2 => \/lib\/x86_64-linux-gnu\/libdl.so.2 (0x00007f382d217000)\r",
            "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text\/plain',window.getSelection().toString().replace(\/\\u200b\/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>vagrant@hyperledger-devenv:v0.0.10-88fb082:\/opt\/gopath\/src\/github.com\/hyperledger\/fabric<span class=\"cm-def\">$ ldd<\/span> build\/bin\/peer<\/pre><\/div>\n<div><pre>\tlinux-vdso.so.1 <span class=\"cm-operator\">=<\/span>&gt;  (0x00007ffd58e9a000)<\/pre><\/div>\n<div><pre>\tlibpthread.so.0 <span class=\"cm-operator\">=<\/span>&gt; \/lib\/x86_64-linux-gnu\/libpthread.so.0 (0x00007f382d927000)<\/pre><\/div>\n<div><pre>\tlibrocksdb.so.4.1 <span class=\"cm-operator\">=<\/span>&gt; \/usr\/local\/lib\/librocksdb.so.4.1 (0x00007f382d41b000)<\/pre><\/div>\n<div><pre>\tlibdl.so.2 <span class=\"cm-operator\">=<\/span>&gt; \/lib\/x86_64-linux-gnu\/libdl.so.2 (0x00007f382d217000)<\/pre><\/div>\n<\/div>\n<\/div>\n",
            "lines": 14,
            "lines_more": 9,
            "preview_is_truncated": null,
            "channels": [
                "C0YPYBVJM"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 0
        },
        "user": "U0KPFAZNF",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U0KPFAZNF|ghaskins>",
        "bot_id": null,
        "ts": "1464709739.001656"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "probably because golang packages are sort of handled in a static manner",
        "ts": "1464709754.001657"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "but theres still \u201cthe rest of the world\u201d including all the stuff we explicitly cgo compile like rocksdb",
        "ts": "1464709774.001658"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "and stuff that golang implicitly depends on, like libc and vdso",
        "ts": "1464709798.001659"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "my guess: 99.999% of the time, I could build the binary on the host and inject it and it would work perfectly fine",
        "ts": "1464709826.001660"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "its the %0.0001 im worried about, heh",
        "ts": "1464709847.001661"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "figured \u201cget it right first and optimize later\"",
        "ts": "1464709855.001662"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "if people always build from vagrant, there is no issue since we lockstep vagrant+docker",
        "ts": "1464709891.001663"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "but as we have seen, that isn\u2019t always the case so its a dangerous assumption that I am trying to break us free of",
        "ts": "1464709911.001664"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "<@U0KPFAZNF>: if the TLS entry is the one your interested, try this:\n\nbehave -k --tags=@TLS",
        "edited": {
            "user": "U0UKTPMG8",
            "ts": "1464711695.000000"
        },
        "ts": "1464711666.001665"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "thanks <@U0UKTPMG8> ill give that a shot",
        "ts": "1464718862.001668"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0N1D1UAE>: do you have a test in busywork that measures the chaincode deployment rate?",
        "ts": "1464723902.001669"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "<@U0KPFAZNF>: you can view the chaincode deployment rate with the behave tests for the deploy transactions",
        "ts": "1464724111.001670"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "though this may not be exactly the information your looking for",
        "ts": "1464724166.001671"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "ok, ill try that, thanks",
        "ts": "1464724176.001672"
    },
    {
        "type": "message",
        "user": "U142E5N0P",
        "text": "anyone who could help to fix this issue ?\n<https:\/\/github.com\/hyperledger\/fabric\/issues\/1627>\n\nI think there might exist one situation to lead to this dead lock:  if the chaincode shim could not return, the lock of chaincode handler might block further requests.",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "System hangs under stress testing \u00b7 Issue #1627 \u00b7 hyperledger\/fabric \u00b7 GitHub",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/issues\/1627",
                "text": "Description I setup a simple stress testing environment, and use jmeter to perform the stress testing. When I set the number of clients to a relative large number, the system hung and would not a...",
                "fallback": "GitHub: System hangs under stress testing \u00b7 Issue #1627 \u00b7 hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/7248?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/issues\/1627",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/a.slack-edge.com\/e8ef6\/img\/unfurl_icons\/github.png",
                "id": 1
            }
        ],
        "ts": "1464742989.001673"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U142E5N0P>: I\u2019m looking at it",
        "ts": "1464745279.001675"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "the stack trace from your stress shows goroutines waiting on Lock but so far I have not found a \u201cdeadlock\"",
        "ts": "1464745343.001676"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I will be recreating with concurrent queries\u2026 will post on the issue as soon as I have something (or have more questions)",
        "ts": "1464745474.001677"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U142E5N0P>:  can you expand on  _if the chaincode shim could not return, the lock of chaincode handler might block further requests_ please ?",
        "edited": {
            "user": "U0ULK2JPP",
            "ts": "1464745820.000000"
        },
        "ts": "1464745776.001678"
    },
    {
        "type": "message",
        "user": "U142E5N0P",
        "text": "<@U0ULK2JPP>: thank you~\nMy suspection is: there is a single global lock within handler:\ntype Handler struct {\n\tsync.RWMutex\n   ...\n}\n\nAnd for each chaincode request, within the `exec` body, there are a series of places calling `Lock()`,say:\n\nfunc (handler *Handler) sendExecuteMessage{\n\ncreateTxContext\n\nserialSend\n\ndeleteTxContext\n\n}\nEach of the above three methods will have to call the `Lock` sequentially.   If `serialSend` would be blocked due to some reason, then other requests would be blocked by the global lock within `Handler` struct.  This is my suspection..",
        "ts": "1464746406.001680"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "but then we\u2019ll see serialSend on the peer\u2019s stack...",
        "ts": "1464746566.001681"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I didn\u2019t see that in yours",
        "ts": "1464746578.001682"
    },
    {
        "type": "message",
        "user": "U142E5N0P",
        "text": "could you reproduct it in your local environment?  it's pretty easy..",
        "ts": "1464746679.001683"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "yes",
        "ts": "1464746683.001684"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "that\u2019s what I\u2019m going to do",
        "ts": "1464746690.001685"
    },
    {
        "type": "message",
        "user": "U142E5N0P",
        "text": "Why `handler.Lock()` is required within the body of `func (handler *Handler) serialSend(msg *pb.ChaincodeMessage)` ?   It's just a gRPC call.  When I remove this lock operation, fabric corrupted without trace dumped,  and these are the error logs:\n```\n02:07:28.504 [rest] ProcessChaincode -&gt; INFO 2db19 REST successfully query chaincode: {\"jsonrpc\":\"2.0\",\"error\":{\"code\":-32003,\"message\":\"Query failure\",\"data\":\"Error when querying chaincode: Error:Failed to execute transaction or query(Timeout expired while executing transaction)\"},\"id\":5}\n02:07:28.504 [rest] processChaincodeInvokeOrQuery -&gt; ERRO 2db1b Error when querying chaincode: Error:Failed to execute transaction or query(Timeout expired while executing transaction)\n02:07:28.532 [rest] processChaincodeInvokeOrQuery -&gt; ERRO 2db1d Error when querying chaincode: Error:Failed to execute transaction or query(Timeout expired while executing transaction)\n```",
        "ts": "1464748723.001686"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "trying to understand _fabric corrupted without trace dumped, _ ...",
        "ts": "1464749417.001687"
    },
    {
        "type": "message",
        "user": "U142E5N0P",
        "text": "just commenting the lock..\n```\nfunc (handler *Handler) serialSend(msg *pb.ChaincodeMessage) error {\n\t\/\/handler.Lock()\n\t\/\/defer handler.Unlock()\n\n```",
        "ts": "1464749711.001688"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "ok...",
        "ts": "1464749725.001689"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "are you saying the same test case does not \u201chang\u201d but completes with a timeout ?",
        "ts": "1464749797.001690"
    },
    {
        "type": "message",
        "user": "U142E5N0P",
        "text": "yes..",
        "ts": "1464749849.001691"
    },
    {
        "type": "message",
        "user": "U142E5N0P",
        "text": "and the fabric quit directly",
        "ts": "1464749868.001692"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "the \u201c.\/peer node start\u201d process quit ?",
        "ts": "1464749897.001693"
    },
    {
        "type": "message",
        "user": "U142E5N0P",
        "text": "yes",
        "ts": "1464749907.001694"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "what\u2019s your ulimit -a ?",
        "ts": "1464749931.001695"
    },
    {
        "type": "message",
        "user": "U142E5N0P",
        "text": "```\ncore file size          (blocks, -c) 0\ndata seg size           (kbytes, -d) unlimited\nscheduling priority             (-e) 0\nfile size               (blocks, -f) unlimited\npending signals                 (-i) 256493\nmax locked memory       (kbytes, -l) 64\nmax memory size         (kbytes, -m) unlimited\nopen files                      (-n) 65536\npipe size            (512 bytes, -p) 8\nPOSIX message queues     (bytes, -q) 819200\nreal-time priority              (-r) 0\nstack size              (kbytes, -s) 8192\ncpu time               (seconds, -t) unlimited\nmax user processes              (-u) 256493\nvirtual memory          (kbytes, -v) unlimited\nfile locks                      (-x) unlimited\n```",
        "ts": "1464749963.001696"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "do you know how many concurrent queries you are running ?",
        "ts": "1464750030.001697"
    },
    {
        "type": "message",
        "user": "U142E5N0P",
        "text": "i set 2000 users within the jmeter.  and the peak tps is around 800.",
        "ts": "1464750091.001698"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "ok",
        "ts": "1464750176.001699"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I think the Lock is not necessary (probably something historical)",
        "ts": "1464750221.001700"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "but i think we are running into some system issues",
        "ts": "1464750252.001701"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I\u2019d have thought socket (open files) or memory limit",
        "ts": "1464750290.001702"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "but they seem plent",
        "ts": "1464750296.001703"
    },
    {
        "type": "message",
        "user": "U0NCW1DPX",
        "text": "I think we need more detail logs for debugging",
        "ts": "1464750371.001704"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U142E5N0P>: was able to recreate",
        "ts": "1464750442.001705"
    },
    {
        "type": "message",
        "user": "U0NCW1DPX",
        "text": "<@U142E5N0P>: It\u2019s better you enable the debug level and try your test again if it can be reproduced easily",
        "ts": "1464750478.001706"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U0NCW1DPX>: perhaps\u2026 but given that we can recreate easily, we can create logs",
        "ts": "1464750479.001707"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U0NCW1DPX>: I think its been narrowed sufficiently",
        "ts": "1464750523.001708"
    },
    {
        "type": "message",
        "user": "U142E5N0P",
        "text": "<@U0NCW1DPX>: the log level is set to debug already. it could be reproduced easily..",
        "ts": "1464750563.001709"
    },
    {
        "type": "message",
        "user": "U0NCW1DPX",
        "text": "I believe you are using the latest code, right? In our env, we are still running the code 1 month ago, we had tried 1000 tps performance test. BTW, how many vp nodes you have?",
        "ts": "1464750963.001710"
    },
    {
        "type": "message",
        "user": "U142E5N0P",
        "text": "yeah, i am using the latest code.  I just setup single peer node for stress testing.  If the number of jmeter clients is not that large, say 1000, the system could work with a peak tps of 2000, while when I enlarge the client number to 2000, the system would be hung easily, just a few seconds could make it happen every time.",
        "ts": "1464751152.001711"
    },
    {
        "type": "message",
        "user": "U142E5N0P",
        "text": "since the claimed overall TPS of fabric is 100K according to github documents...",
        "ts": "1464751202.001712"
    },
    {
        "type": "message",
        "user": "U0NCW1DPX",
        "text": ":slightly_smiling_face:, I believe to achieve the 100K TPS commitment, should run fabric on more powerful hardware. on x86, we still have a lot of enhancement on the todo list. <@U0ULK2JPP> do you have any benchmark report for our reference.",
        "edited": {
            "user": "U0NCW1DPX",
            "ts": "1464752115.000000"
        },
        "ts": "1464751845.001713"
    },
    {
        "type": "message",
        "user": "U142E5N0P",
        "text": "I perform the stress testing on server, with Intel(R) Xeon(R) CPU E5-2620 v3 @ 2.40GHz\uff0c64G Memory,  and CentOS 7.2, although jmeter and fabric run together on single machine",
        "ts": "1464752158.001715"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U142E5N0P>: I suspect a limit of some sort (possibly on the chaincode container side)\u2026. I\u2019ll keep investigating this. But 2 points",
        "ts": "1464752222.001716"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "1) the serialSend lock is unnecessary and is possibly clouding the issue",
        "ts": "1464752248.001717"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "2) could you try your test running chaincode in dev mode",
        "ts": "1464752272.001718"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "where we have better control of system limits via ulimit",
        "ts": "1464752288.001719"
    },
    {
        "type": "message",
        "user": "U142E5N0P",
        "text": "okay, i will test it in dev mode and let you know",
        "ts": "1464752301.001720"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "it\u2019ll be interesting to compare",
        "ts": "1464752302.001721"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I will try too but I have to rig up the env",
        "ts": "1464752316.001722"
    },
    {
        "type": "message",
        "user": "U142E5N0P",
        "text": "<@U0ULK2JPP>: \nI've just tried under dev mode.  I removed the lock within `serialSend`, and perform the testing, the chaincode process quit without core dump, while the peer node process remains alive. Here are the outputs:\n\n```\n11:53:28.425 [shim] DEBU : [7b4d539d]Query completed. Sending QUERY_COMPLETED\n11:53:28.425 [shim] DEBU : [5b1052ba]GetState received payload RESPONSE\n11:53:28.425 [shim] DEBU : [e2e396dd]Received message QUERY from shim\n11:53:28.425 [shim] DEBU : [e2e396dd]Handling ChaincodeMessage of type: QUERY(state:ready)\n11:53:28.425 [shim] DEBU : [24eac5e5]Sending GET_STATE\n11:53:28.425 [shim] DEBU : [37edd00d]GetState received payload RESPONSE\n11:53:28.425 [shim] ERRO : Received error from server: rpc error: code = 13 desc = \"grpc: proto: protos.ChaincodeSecurityContext: illegal tag 0 (wire type 0)\", ending chaincode stream\nError starting Simple chaincode: rpc error: code = 13 desc = \"grpc: proto: protos.ChaincodeSecurityContext: illegal tag 0 (wire type 0)\"bjs0-3a4:root ~\/codebase\/src\/github.com\/hyperledger\/fabric\/examples\/chaincode\/go\/chaincode_example02 $\n```",
        "ts": "1464753370.001723"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "thanks <@U142E5N0P>",
        "ts": "1464753841.001724"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "let me check something",
        "ts": "1464753867.001725"
    },
    {
        "type": "message",
        "user": "U142E5N0P",
        "text": "thank you~..",
        "ts": "1464753875.001726"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "do you have the peer log when running in peer mode (with the serialSend lock commented out)",
        "ts": "1464753977.001727"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "wonder if there\u2019s a  \"grpc server exited with error:\u201d there",
        "ts": "1464754002.001728"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "actually \u2026 just realized something\u2026 I think we may need that lock after all for serialization",
        "ts": "1464754298.001729"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I need to check something else for that",
        "ts": "1464754310.001730"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "but even if we do, it probably does not have to be the handler lock but a \u201ctransport serialization lock\u201d)",
        "ts": "1464754351.001731"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "the corruption could be because of the non-serialization (hence the name \u201cserialSend\u201d)",
        "ts": "1464754481.001732"
    },
    {
        "type": "message",
        "user": "U142E5N0P",
        "text": "I saw some peer outputs perhaps related to the issue you mentioned above:\n\n```\n[36m12:16:44.781 [dockercontroller] stopInternal -&gt; DEBU 31c32fESC[0m Stop container dev-jdoe-mycc(Post <http:\/\/unix.sock\/containers\/dev-jdoe-mycc\/stop?t=0>: dial unix \/var\/run\/docker.sock: socket: too many open files)\nESC[36m12:16:44.781 [dockercontroller] stopInternal -&gt; DEBU 31c330ESC[0m Kill container dev-jdoe-mycc (Post <http:\/\/unix.sock\/containers\/dev-jdoe-mycc\/kill>: dial unix \/var\/run\/docker.sock: socket: too many open files)\n```",
        "ts": "1464754691.001733"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "ok",
        "ts": "1464754703.001734"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I added another lock to the handler called transportLock and used that in serialSend",
        "ts": "1464754802.001735"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "i still see the problem",
        "ts": "1464754818.001736"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "which now cannot be because of the common lock",
        "ts": "1464754835.001737"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "can you try that in the \u201cdev\u201d env test ?",
        "ts": "1464754871.001738"
    },
    {
        "type": "message",
        "user": "U142E5N0P",
        "text": "yeah, sure",
        "ts": "1464754922.001739"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U0ULK2JPP|muralisr> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/muralisr\/F1D65RUFR\/pasted_image_at_2016_06_01_12_21_am.png|Pasted image at 2016-06-01, 12:21 AM>",
        "file": {
            "id": "F1D65RUFR",
            "created": 1464754922,
            "timestamp": 1464754922,
            "name": "Pasted image at 2016_06_01 12_21 AM.png",
            "title": "Pasted image at 2016-06-01, 12:21 AM",
            "mimetype": "image\/png",
            "filetype": "png",
            "pretty_type": "PNG",
            "user": "U0ULK2JPP",
            "editable": false,
            "size": 15103,
            "mode": "hosted",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1D65RUFR\/pasted_image_at_2016_06_01_12_21_am.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1D65RUFR\/download\/pasted_image_at_2016_06_01_12_21_am.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_64": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F1D65RUFR-1c55415c24\/pasted_image_at_2016_06_01_12_21_am_64.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_80": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F1D65RUFR-1c55415c24\/pasted_image_at_2016_06_01_12_21_am_80.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_360": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F1D65RUFR-1c55415c24\/pasted_image_at_2016_06_01_12_21_am_360.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_360_w": 360,
            "thumb_360_h": 43,
            "thumb_480": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F1D65RUFR-1c55415c24\/pasted_image_at_2016_06_01_12_21_am_480.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_480_w": 480,
            "thumb_480_h": 57,
            "thumb_160": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F1D65RUFR-1c55415c24\/pasted_image_at_2016_06_01_12_21_am_160.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "image_exif_rotation": 1,
            "original_w": 654,
            "original_h": 78,
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/muralisr\/F1D65RUFR\/pasted_image_at_2016_06_01_12_21_am.png",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F1D65RUFR-363104bbc6",
            "channels": [
                "C0YPYBVJM"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 0
        },
        "user": "U0ULK2JPP",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U0ULK2JPP|muralisr>",
        "bot_id": null,
        "ts": "1464754923.001740"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "and",
        "ts": "1464754941.001741"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U0ULK2JPP|muralisr> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/muralisr\/F1D6GRJ2W\/pasted_image_at_2016_06_01_12_22_am.png|Pasted image at 2016-06-01, 12:22 AM>",
        "file": {
            "id": "F1D6GRJ2W",
            "created": 1464754945,
            "timestamp": 1464754945,
            "name": "Pasted image at 2016_06_01 12_22 AM.png",
            "title": "Pasted image at 2016-06-01, 12:22 AM",
            "mimetype": "image\/png",
            "filetype": "png",
            "pretty_type": "PNG",
            "user": "U0ULK2JPP",
            "editable": false,
            "size": 21756,
            "mode": "hosted",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1D6GRJ2W\/pasted_image_at_2016_06_01_12_22_am.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1D6GRJ2W\/download\/pasted_image_at_2016_06_01_12_22_am.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_64": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F1D6GRJ2W-6b36bc31e7\/pasted_image_at_2016_06_01_12_22_am_64.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_80": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F1D6GRJ2W-6b36bc31e7\/pasted_image_at_2016_06_01_12_22_am_80.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_360": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F1D6GRJ2W-6b36bc31e7\/pasted_image_at_2016_06_01_12_22_am_360.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_360_w": 360,
            "thumb_360_h": 34,
            "thumb_480": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F1D6GRJ2W-6b36bc31e7\/pasted_image_at_2016_06_01_12_22_am_480.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_480_w": 480,
            "thumb_480_h": 45,
            "thumb_160": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F1D6GRJ2W-6b36bc31e7\/pasted_image_at_2016_06_01_12_22_am_160.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_720": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F1D6GRJ2W-6b36bc31e7\/pasted_image_at_2016_06_01_12_22_am_720.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_720_w": 720,
            "thumb_720_h": 68,
            "thumb_960": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F1D6GRJ2W-6b36bc31e7\/pasted_image_at_2016_06_01_12_22_am_960.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_960_w": 960,
            "thumb_960_h": 91,
            "thumb_1024": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F1D6GRJ2W-6b36bc31e7\/pasted_image_at_2016_06_01_12_22_am_1024.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_1024_w": 1024,
            "thumb_1024_h": 97,
            "image_exif_rotation": 1,
            "original_w": 1036,
            "original_h": 98,
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/muralisr\/F1D6GRJ2W\/pasted_image_at_2016_06_01_12_22_am.png",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F1D6GRJ2W-32f4afc316",
            "channels": [
                "C0YPYBVJM"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 0
        },
        "user": "U0ULK2JPP",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U0ULK2JPP|muralisr>",
        "bot_id": null,
        "ts": "1464754947.001742"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "thanks much",
        "ts": "1464754953.001743"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I\u2019m going to turn in for today\u2026.will check back later. thanks for all the help, <@U142E5N0P>",
        "ts": "1464755471.001744"
    },
    {
        "type": "message",
        "user": "U142E5N0P",
        "text": "<@U0ULK2JPP>:   I've run the stress test for 5 minutes already, it seems stable right now..",
        "ts": "1464755505.001745"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "interesting",
        "ts": "1464755513.001746"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "so it\u2019ll be interesting if you can run in dev with the old lock",
        "ts": "1464755538.001747"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "that would complete the matric",
        "ts": "1464755550.001748"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "matrix",
        "ts": "1464755554.001749"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "so I suspect resource issues with possible interference with using one lock (clouding the dynamics)",
        "ts": "1464755615.001750"
    },
    {
        "type": "message",
        "user": "U142E5N0P",
        "text": "the qps currently is pretty low, only around 80, and the cpu percentage is very low.  Perhaps the resource confliction is of many places..",
        "ts": "1464755688.001751"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "yes",
        "ts": "1464755710.001752"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "possibly",
        "ts": "1464755712.001753"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "well, wish you a good day for now",
        "ts": "1464755766.001754"
    },
    {
        "type": "message",
        "user": "U142E5N0P",
        "text": "thank you <@U0ULK2JPP>  :smile:",
        "ts": "1464755785.001755"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "thank you too!",
        "ts": "1464755802.001756"
    }
]
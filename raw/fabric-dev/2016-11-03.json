[
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U13TWBRBL> there is a known issue in orderer (will be fixed when rest of the protos stuff is in \u2026 <@U0XPR4NP4> to chime in\/correct)",
        "ts": "1478178508.002404"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "the workaround is",
        "ts": "1478178540.002405"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "```func createBroadcastRuleset(configManager configtx.Manager) *broadcastfilter.RuleSet {\n        return broadcastfilter.NewRuleSet([]broadcastfilter.Rule{\n                broadcastfilter.EmptyRejectRule,\n                configfilter.New(configManager),\n                broadcastfilter.AcceptRule,\n        })\n}```\nin orderer\/main.go \u2026. comment out `configfilter.New(configManager),` for now and see if it works ?",
        "edited": {
            "user": "U0ULK2JPP",
            "ts": "1478178596.000000"
        },
        "ts": "1478178573.002406"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "haha, i\u2019m just debugging that and realizing that the configRule inside the broadcastServer was causing the Reject",
        "ts": "1478178609.002408"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": ":slightly_smiling_face:",
        "ts": "1478178633.002409"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U13TWBRBL|jzhang> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/jzhang\/F2Y99E45A\/pasted_image_at_2016_11_03_09_10_am.png|Pasted image at 2016-11-03, 9:10 AM>",
        "file": {
            "id": "F2Y99E45A",
            "created": 1478178635,
            "timestamp": 1478178635,
            "name": "Pasted image at 2016_11_03 09_10 AM.png",
            "title": "Pasted image at 2016-11-03, 9:10 AM",
            "mimetype": "image\/png",
            "filetype": "png",
            "pretty_type": "PNG",
            "user": "U13TWBRBL",
            "editable": false,
            "size": 78687,
            "mode": "hosted",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F2Y99E45A\/pasted_image_at_2016_11_03_09_10_am.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F2Y99E45A\/download\/pasted_image_at_2016_11_03_09_10_am.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_64": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F2Y99E45A-f3c4f23148\/pasted_image_at_2016_11_03_09_10_am_64.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_80": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F2Y99E45A-f3c4f23148\/pasted_image_at_2016_11_03_09_10_am_80.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_360": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F2Y99E45A-f3c4f23148\/pasted_image_at_2016_11_03_09_10_am_360.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_360_w": 360,
            "thumb_360_h": 100,
            "thumb_480": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F2Y99E45A-f3c4f23148\/pasted_image_at_2016_11_03_09_10_am_480.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_480_w": 480,
            "thumb_480_h": 134,
            "thumb_160": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F2Y99E45A-f3c4f23148\/pasted_image_at_2016_11_03_09_10_am_160.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_720": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F2Y99E45A-f3c4f23148\/pasted_image_at_2016_11_03_09_10_am_720.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_720_w": 720,
            "thumb_720_h": 201,
            "thumb_960": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F2Y99E45A-f3c4f23148\/pasted_image_at_2016_11_03_09_10_am_960.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_960_w": 960,
            "thumb_960_h": 268,
            "thumb_1024": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F2Y99E45A-f3c4f23148\/pasted_image_at_2016_11_03_09_10_am_1024.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_1024_w": 1024,
            "thumb_1024_h": 286,
            "image_exif_rotation": 1,
            "original_w": 1086,
            "original_h": 303,
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/jzhang\/F2Y99E45A\/pasted_image_at_2016_11_03_09_10_am.png",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F2Y99E45A-f060a60917",
            "channels": [
                "C0YPYBVJM"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 0
        },
        "user": "U13TWBRBL",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U13TWBRBL|jzhang>",
        "bot_id": null,
        "ts": "1478178639.002410"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "thanks I\u2019ll give it a try",
        "ts": "1478178652.002411"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "sure, let me know if that doesn\u2019t work...",
        "ts": "1478178673.002412"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "<@U0ULK2JPP> that hack got me past it",
        "ts": "1478178877.002413"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "is there a bug opened for that?",
        "ts": "1478178885.002414"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "not yet <@U13TWBRBL> \u2026feel free to open and assign to <@U0XPR4NP4>",
        "ts": "1478179062.002415"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "<https:\/\/jira.hyperledger.org\/browse\/FAB-939>",
        "ts": "1478179260.002416"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "<@U0XPR4NP4> ^^^ thanks!",
        "ts": "1478179279.002417"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "<@U0ULK2JPP> thanks man for getting my unstuck!",
        "ts": "1478179312.002418"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "now need to figure out if I built the transaction object properly to be taken by the committer :wink:",
        "edited": {
            "user": "U13TWBRBL",
            "ts": "1478179360.000000"
        },
        "ts": "1478179348.002419"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "<@U1KFCPFQA> so the following log message says the transaction was valid and committed to the ledger right?\n\nvp0_1         | 13:24:57.104 [lockbasedtxmgmt] validateTx -&gt; DEBU 3ee Validating txRWSet:lccc::ReadSet~18chaincodes-default:1,18chaincodes-default64d93257dac2560fe52d7a62d8aacb150ac1a5f5ede2d7f6dca710f13aae1bfa9b:0,WriteSet~18chaincodes-default64d93257dac2560fe52d7a62d8aacb150ac1a5f5ede2d7f6dca710f13aae1bfa9b=[[]byte{0xa, 0x42, 0xa, 0x40, 0x64, 0x39, 0x33, 0x32, 0x35, 0x37, 0x64, 0x61, 0x63, 0x32, 0x35, 0x36, 0x30, 0x66, 0x65, 0x35, 0x32, 0x64, 0x37, 0x61, 0x36, 0x32, 0x64, 0x38, 0x61, 0x61, 0x63, 0x62, 0x31, 0x35, 0x30, 0x61, 0x63, 0x31, 0x61, 0x35, 0x66, 0x35, 0x65, 0x64, 0x65, 0x32, 0x64, 0x37, 0x66, 0x36, 0x64, 0x63, 0x61, 0x37, 0x31, 0x30, 0x66, 0x31, 0x33, 0x61, 0x61, 0x65, 0x31, 0x62, 0x66, 0x61, 0x39, 0x62, 0xa, 0x2, 0x10, 0x0, 0xa, 0xd5, 0xe, 0x32, 0xd2, 0xe, 0xa, 0x5e, 0x8, 0x1, 0x12, 0x42, 0x12, 0x40, 0x64, 0x39, 0x33, 0x32, 0x35, 0x37, 0x64, 0x61, 0x63, 0x32, 0x35, 0x36, 0x30, 0x66, 0x65, 0x35, 0x32, 0x64, 0x37, 0x61, 0x36, 0x32, 0x64, 0x38, 0x61, 0x61, 0x63, 0x62, 0x31, 0x35, 0x30, 0x61, 0x63, 0x31, 0x61, 0x35, 0x66, 0x35, 0x65, 0x64, 0x65, 0x32, 0x64, 0x37, 0x66, 0x36, 0x64, 0x63, 0x61, 0x37, 0x31, 0x30, 0x66, 0x31, 0x33, 0x61, 0x61, 0x65, 0x31, 0x62, 0x66, 0x61, 0x39, 0x62, 0x1a, 0x16, 0xa, 0x4, 0x69, 0x6e, 0x69, 0x74, 0xa, 0x1, 0x61, 0xa, 0x3, 0x31, 0x30, 0x30, 0xa, 0x1, 0x62, 0xa, 0x3, 0x32, 0x30, 0x30, 0x1a, 0xef, 0xd, 0x1f, 0x8b, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0xed, 0x58, 0x6d, 0x73, 0xda, 0x38, 0x10, 0xee, 0x57, 0xf4, 0x2b, 0xf6, 0x3c, 0xd7, 0xe, 0xf4, 0xa8, 0x79, 0x27, 0xd7, 0xdc, 0xe4, 0x83, 0x49, 0xd2, 0x96, 0x69, 0xf, 0x72, 0x90, 0x5e, 0xd2, 0x9, 0x99, 0x8c, 0xb0, 0x65, 0xf0, 0x5, 0x6c, 0x2a, 0xc9, 0x10, 0xae, 0xd3, 0xff, 0x7e, 0x2b, 0xc9, 0x80, 0x43, 0x42, 0xda, 0xb4, 0x49, 0x7b, 0xbd, 0x8b, 0x66, 0x1a, 0x61, 0xaf, 0xb4, 0x7a, 0xf6, 0xed, 0x59, 0xb9, 0xf6, 0xa3, 0xfb, 0x1f, 0xc5, 0x62, 0x71, 0xab, 0x56, 0x3, 0x3d, 0xd7, 0xcd, 0x5c, 0x2c, 0x57, 0xcd, 0x9c, 0xc, 0x28, 0x55, 0x8a, 0xc5, 0x7a, 0xbd, 0x52, 0x2b, 0x97, 0xaa, 0x80, 0xcb, 0x2a, 0x95, 0x32, 0x3c, 0xaa, 0x7d, 0x3, 0x6c, 0x8f, 0x62, 0x21, 0x29, 0x47, 0x28, 0x5f, 0...\nvp0_1         | 13:24:57.105 [kvledger] Commit -&gt; DEBU 3ef Committing block to storage\nvp0_1         | 13:24:57.105 [protos] ConstructSerBlock2 -&gt; DEBU 3f0 ConstructSerBlock2():TxOffsets=[]int{1, 4254}\nvp0_1         | Commit success, created a block!\nvp0_1         | 13:24:57.110 [kvledger] indexBlock -&gt; DEBU 3f1 Indexing block [blockNum=3, blockHash=[]byte{0x9c, 0x4d, 0xb, 0xf0, 0x80, 0x2a, 0x2c, 0x23, 0x44, 0x4c, 0xd0, 0xa9, 0xa4, 0x79, 0xa0, 0x11, 0x30, 0xfb, 0xbb, 0x6c, 0xd7, 0x86, 0xa5, 0x8e, 0xa4, 0xe3, 0x7f, 0xaa, 0xda, 0x56, 0x53, 0x65, 0x57, 0x80, 0xff, 0x51, 0xe8, 0x83, 0x7a, 0xb, 0xc7, 0x60, 0x7f, 0x52, 0xa9, 0x56, 0x2e, 0x1, 0x15, 0x70, 0x36, 0xd8, 0x71, 0x31, 0xd4, 0x15, 0x6c, 0xc3, 0xba, 0x25, 0x32, 0x21, 0xd6, 0x77}]\nvp0_1         | 13:24:57.110 [kvledger] indexBlock -&gt; DEBU 3f2 Adding txLoc [fileSuffixNum=0, offset=4354, bytesLength=4253] for tx [3:0] to index\nvp0_1         | 13:24:57.110 [kvledger] updateCheckpoint -&gt; DEBU 3f3 Broadcasting about update checkpointInfo: latestFileChunkSuffixNum=[0], latestFileChunksize=[8613], lastBlockNumber=[3]\nvp0_1         | 13:24:57.110 [kvledger] Commit -&gt; DEBU 3f4 Committing block to state database",
        "ts": "1478179573.002421"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "yes, that shows the chaincode deploy is indeed getting written to ledger",
        "ts": "1478179697.002422",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U13TWBRBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "<@U0XPR4NP4> <@U0ULK2JPP> regarding <https:\/\/jira.hyperledger.org\/browse\/FAB-939>, what needs to happen for this error to get resolved? Jason you said \"Once the fabric transitions onto the new transaction format\u201d, is that work that Muarli needs to do? will this impact the SDK?",
        "ts": "1478187684.002423"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "see <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/2219\/> for what I did in node.js to get things to work in the latest fabric (with the hack of commenting out configFilter)",
        "ts": "1478187733.002424"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U13TWBRBL> This is work that is currently underway.  Maybe I can briefly summarize.  The fabric transaction format was developed with the needs of the fabric in mind, but not with the needs of the orderer (which has much simpler requirements).  So, we attempted to pare down the usage of the fabric transaction to be what the orderer understood, but it ended up being a doomed endeavor.  Instead, it was decided to build the absolute simplest signed message format to use with the orderer, and then rework the fabric transaction on top of this new structure.  Ultimately, the `Envelope` messages will be the outer structure encoded into the block, and encapsulating the fabric transactions.  There's a plan in place, but I can't speak to its status, <@U0ULK2JPP> or <@U0ZR63HLK> might be better equipped to do so.",
        "ts": "1478188120.002425"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "But this leaves us in the position today where the fabric expects `Transaction2` type messages and the orderer expects `Envelope` messages.  Which is causing the bug you are seeing.",
        "ts": "1478188162.002426"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "thanks Jason for the details. makes sense.",
        "ts": "1478188262.002427"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "so what\u2019s the plan in the meantime to unblock squads that are dependent on the orderer service allowing the Transaction2 format through?",
        "ts": "1478188299.002428"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "does it make sense to add a temporary hack?",
        "ts": "1478188314.002429"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0ULK2JPP> and I had discussed this, told him I was happy to accommodate that, but he said it was easy enough for him to add the local hack (which he screenshotted you I believe)",
        "ts": "1478188373.002430"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "you mean commenting out the configFilter rule as I did above?",
        "ts": "1478188424.002431"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "that\u2019d be OK by me if there are no other ramifications :wink:",
        "ts": "1478188446.002432"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Ah, your screenshot, my mistake.  But yes, unless you are interested in testing reconfiguration, commenting out that line should be benign",
        "ts": "1478188466.002433"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "make sense. i can submit a changeset for that. will add you and Murali as reviewer, who else should review it?",
        "ts": "1478188521.002434"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I can",
        "ts": "1478188591.002435"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "If you submit, <@U0ULK2JPP> and I can each +2 and you should be good to go",
        "ts": "1478188604.002436"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "<http:\/\/gerrit.hyperledger.org\/r\/2225>",
        "ts": "1478188758.002437"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Done",
        "ts": "1478188941.002438"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "thanks <@U13TWBRBL> \u2026 I was hoping we\u2019d have checked in the protos consolidation work so we won\u2019t need this hack.",
        "ts": "1478188941.002439"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I\u2019ll +2 and submit as soon as the CI passes",
        "ts": "1478188992.002440"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "<@U0ULK2JPP> even if this temp fix lived for just one day it\u2019s useful",
        "ts": "1478188997.002441"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "agreed",
        "ts": "1478189001.002442"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I meant we were hoping to get the consolidation in sooner\u2026.its getting delayed",
        "ts": "1478189034.002443"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0ULK2JPP> Do you know the division of who is working on what? I got sidetracked moving the ab related protos to the main dir yesterday, was thinking to do that today, unless you think I'll be stepping on toes",
        "ts": "1478189111.002444"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "right\u2026give me a few minutes",
        "ts": "1478189301.002445"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "(on call with daughter\u2026 )",
        "ts": "1478189551.002446"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Definitely more important, take your time",
        "ts": "1478189994.002447"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "sorry back",
        "ts": "1478190651.002448"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U0XPR4NP4> `moving the ab related protos to the main dir` \u2026 I think please do that\u2026 only thing not sure how we are going to resolve is  collisions with Block ?",
        "ts": "1478190901.002449"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "there\u2019s already Block and Block2",
        "ts": "1478190918.002450"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Well, the proto import path will be different",
        "ts": "1478190919.002451"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "ok",
        "ts": "1478190923.002452"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "so just move the protos ?",
        "edited": {
            "user": "U0ULK2JPP",
            "ts": "1478190961.000000"
        },
        "ts": "1478190935.002453"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Assuming we like `protos\/common` `protos\/orderer` and `protos\/peer`",
        "ts": "1478190945.002454"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "and we will hook up implemetnation with ledger folks ?",
        "edited": {
            "user": "U0ULK2JPP",
            "ts": "1478190967.000000"
        },
        "ts": "1478190947.002455"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I see",
        "ts": "1478190985.002458"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I would assume that the ledger folks can add an import for `protos\/common` and then do `cb.Block` locally",
        "ts": "1478191007.002459"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "you\u2019ll do _some_ of the implementation fix to fix up paths",
        "ts": "1478191008.002460"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Right",
        "ts": "1478191013.002461"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "sounds great to me...",
        "ts": "1478191021.002462"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "perhaps check with others",
        "ts": "1478191039.002463"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "?",
        "ts": "1478191048.002464"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U1KFCPFQA> <@U0Z541B3P> Does this work for you?",
        "ts": "1478191071.002465"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I think sooner we all take the same protos the better \u2026 then we\u2019ll know what we are bumping against (missing fields etc)",
        "ts": "1478191102.002466"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "It will also make the end to end flow much less hacky and real, which I like",
        "ts": "1478191304.002467",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0ULK2JPP"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U0Z541B3P",
        "text": "<@U0XPR4NP4> - yes that works.",
        "ts": "1478191495.002468"
    },
    {
        "type": "message",
        "user": "U0Z541B3P",
        "text": "Further, I was looking at the changes required in the ledger and would like to understand from you what do you plan for serialization of Block ?",
        "ts": "1478191556.002469"
    },
    {
        "type": "message",
        "user": "U0Z541B3P",
        "text": "As of now that's what appears to be biggest dependency of ledger.. in addition to importing new path",
        "ts": "1478191612.002470"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I think <@U0ZR63HLK> or <@U0ULK2JPP> need to finish the fabric transaction proto changes on top of the new `Envelope` thing",
        "ts": "1478191747.002471"
    },
    {
        "type": "message",
        "user": "U0Z541B3P",
        "text": "The current Block2 is serialized in a custom manner.... It contains initial bytes for previous hash + tx1bytes + tx2bytes +... TxnBytes+txoffsetinfoBytes+a fixed length footer.",
        "ts": "1478191751.002472"
    },
    {
        "type": "message",
        "user": "U0Z541B3P",
        "text": "OK, till the serialzation is decided, it will not be possible to make changes in the ledger code.",
        "ts": "1478191829.002473"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "<@U0XPR4NP4> but how do you reccomend to proceed? Using directly the envelope or something like the following:",
        "edited": {
            "user": "U0ZR63HLK",
            "ts": "1478192036.000000"
        },
        "ts": "1478191961.002474"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U0ZR63HLK|adc> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/adc\/F2YEZ8SLX\/pasted_image_at_2016_11_03_05_52_pm.png|Pasted image at 2016-11-03, 5:52 PM>",
        "file": {
            "id": "F2YEZ8SLX",
            "created": 1478191964,
            "timestamp": 1478191964,
            "name": "Pasted image at 2016_11_03 05_52 PM.png",
            "title": "Pasted image at 2016-11-03, 5:52 PM",
            "mimetype": "image\/png",
            "filetype": "png",
            "pretty_type": "PNG",
            "user": "U0ZR63HLK",
            "editable": false,
            "size": 30798,
            "mode": "hosted",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F2YEZ8SLX\/pasted_image_at_2016_11_03_05_52_pm.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F2YEZ8SLX\/download\/pasted_image_at_2016_11_03_05_52_pm.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_64": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F2YEZ8SLX-801e54885f\/pasted_image_at_2016_11_03_05_52_pm_64.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_80": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F2YEZ8SLX-801e54885f\/pasted_image_at_2016_11_03_05_52_pm_80.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_360": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F2YEZ8SLX-801e54885f\/pasted_image_at_2016_11_03_05_52_pm_360.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_360_w": 360,
            "thumb_360_h": 203,
            "thumb_480": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F2YEZ8SLX-801e54885f\/pasted_image_at_2016_11_03_05_52_pm_480.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_480_w": 480,
            "thumb_480_h": 270,
            "thumb_160": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F2YEZ8SLX-801e54885f\/pasted_image_at_2016_11_03_05_52_pm_160.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "image_exif_rotation": 1,
            "original_w": 640,
            "original_h": 360,
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/adc\/F2YEZ8SLX\/pasted_image_at_2016_11_03_05_52_pm.png",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F2YEZ8SLX-d4f3d49625",
            "channels": [
                "C0YPYBVJM"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 0
        },
        "user": "U0ZR63HLK",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U0ZR63HLK|adc>",
        "bot_id": null,
        "ts": "1478191966.002475"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "which is essentially the structure you have just with different names more transaction oriented",
        "ts": "1478191993.002476"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "At the end of the day, what the fabric transaction looks like won't really affect me, so long as the thing that encapsulates it is an `Envelope`.  I'd be inclined to utilize the `Envelope` structure to reduce as much duplication as you can though",
        "ts": "1478192065.002478"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I thought the idea had been to utilize the envelope header concatenated with some inner header as the sort overall proposalaction header",
        "ts": "1478192104.002479"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "As it nicely makes explicit that the creator is the same for everything",
        "ts": "1478192124.002480"
    },
    {
        "type": "message",
        "user": "U0Z541B3P",
        "text": "<@U1ZT4H8MC> - We are fine with any serialization but the objective is to be able to get the txoffsets from the block bytes we receive at ledger so as to be able to index the tx related offsets by txID",
        "ts": "1478192148.002481"
    },
    {
        "type": "message",
        "user": "U0Z541B3P",
        "text": "<@U0ULK2JPP> I made a mistake while referring to your id ^^^^",
        "ts": "1478192184.002482"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "<@U0XPR4NP4> I was hoping to have singed transaction and transaction mapping directly to envelope and payload message that you have in such a way to have a unified transaction concept",
        "ts": "1478192286.002483"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I had posted this to <#C2GE7GXM1|fabric-crypto> earlier this week tagging you and <@U0ULK2JPP> and <@U0KN2SSKE> as to what this outer thing should be called.  The only votes were really from <@U0ULK2JPP> and <@U0KN2SSKE> for the `Envelope`\/`Payload`\/`Header` so that is what I finalized things on",
        "ts": "1478192356.002484"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "for the proposal I have something like this:",
        "ts": "1478192358.002485"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U0ZR63HLK|adc> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/adc\/F2YEP6VDJ\/pasted_image_at_2016_11_03_05_59_pm.png|Pasted image at 2016-11-03, 5:59 PM>",
        "file": {
            "id": "F2YEP6VDJ",
            "created": 1478192361,
            "timestamp": 1478192361,
            "name": "Pasted image at 2016_11_03 05_59 PM.png",
            "title": "Pasted image at 2016-11-03, 5:59 PM",
            "mimetype": "image\/png",
            "filetype": "png",
            "pretty_type": "PNG",
            "user": "U0ZR63HLK",
            "editable": false,
            "size": 30110,
            "mode": "hosted",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F2YEP6VDJ\/pasted_image_at_2016_11_03_05_59_pm.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F2YEP6VDJ\/download\/pasted_image_at_2016_11_03_05_59_pm.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_64": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F2YEP6VDJ-917fb32d01\/pasted_image_at_2016_11_03_05_59_pm_64.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_80": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F2YEP6VDJ-917fb32d01\/pasted_image_at_2016_11_03_05_59_pm_80.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_360": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F2YEP6VDJ-917fb32d01\/pasted_image_at_2016_11_03_05_59_pm_360.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_360_w": 360,
            "thumb_360_h": 203,
            "thumb_480": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F2YEP6VDJ-917fb32d01\/pasted_image_at_2016_11_03_05_59_pm_480.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_480_w": 480,
            "thumb_480_h": 270,
            "thumb_160": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F2YEP6VDJ-917fb32d01\/pasted_image_at_2016_11_03_05_59_pm_160.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "image_exif_rotation": 1,
            "original_w": 640,
            "original_h": 360,
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/adc\/F2YEP6VDJ\/pasted_image_at_2016_11_03_05_59_pm.png",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F2YEP6VDJ-123849dd90",
            "channels": [
                "C0YPYBVJM"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 0
        },
        "user": "U0ZR63HLK",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U0ZR63HLK|adc>",
        "bot_id": null,
        "ts": "1478192364.002486"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "ah, okay, sorry for that",
        "ts": "1478192394.002487"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "it is easy to remap to that",
        "ts": "1478192418.002488"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "No problem, I had just assumed you didn't have a strong opinion on the names so were abstaining.  I know the churn is obnoxious for those building changesets on top of these changes, but if you can talk <@U0KN2SSKE> and <@U0ULK2JPP> into changing their minds, we can always rename them again.",
        "ts": "1478192501.002489"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "nono, it's fine",
        "ts": "1478192535.002490"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "I had just missed those messages, sorry :disappointed:",
        "ts": "1478192545.002491"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Perfectly understandable, seems like I have spent 70% of my days typing on slack lately (instead of coding as I would prefer) so it is easy to miss these things as they scroll away",
        "ts": "1478192590.002492"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "So you can rework the fabric transaction on top of the `Envelope` and friends protos as defined? My plan is to move them to `protos\/common` so that you can call `import` in your fabric protos and utilize those structures so they are shared.",
        "ts": "1478192643.002493"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0Z541B3P> The offsets for the transactions do not have to have some fixed rule, correct? They can be computed and stored for each block? (I'm not sure how else this would be accomplished, but just checking)",
        "ts": "1478192698.002494"
    },
    {
        "type": "message",
        "user": "U0Z541B3P",
        "text": "yes, in current code, last portion of the block (offsetInfo) contains the offsets of the transactions in the block and last 4 bytes of the block store the beginning offset of the offsetInfo.",
        "edited": {
            "user": "U0Z541B3P",
            "ts": "1478192839.000000"
        },
        "ts": "1478192824.002495"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Okay, sounds like there should be no problem",
        "ts": "1478193107.002497"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "is this summary and understanding correct ?",
        "ts": "1478193137.002498"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "(1) Organize protos like <@U0XPR4NP4> suggested above into `protos\/common`, `protos\/peer` and `protos\/orderer`\u2026 basically collect and organize protos from different packages under protos\/\u2026 \n(2) Block2 in common would be replaced with ab.Block (i.e., ab.Block would be renamed to common.Block2)\n(3) we need to make sure Serialization of the new Block2 is done correctly per <@U0Z541B3P>",
        "edited": {
            "user": "U0ULK2JPP",
            "ts": "1478193173.000000"
        },
        "ts": "1478193144.002499",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0KN2SSKE"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "are there other crypto related changes <@U0ZR63HLK> <@U26T99AQ4> ?",
        "ts": "1478193234.002501"
    },
    {
        "user": "U26T99AQ4",
        "inviter": "U0ULK2JPP",
        "text": "<@U26T99AQ4|aso> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1478193241.002502"
    },
    {
        "type": "message",
        "user": "U0Z541B3P",
        "text": "sounds good to me... inviting <@U1KFCPFQA> here for his reference...",
        "ts": "1478193278.002503"
    },
    {
        "type": "message",
        "user": "U0Z541B3P",
        "text": "<@U0XPR4NP4>, <@U0ULK2JPP> - if you want to serialize in a simple manner e.g., len(tx1Bytes)+tx1Bytes+len(tx2Bytes)+tx2Bytes+.... instead of putting the offsets at the end of the block - even that should also be fine by us.",
        "ts": "1478194431.002504"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0Z541B3P> Serialization format doesn't particularly matter to me, would defer to whatever format you want.  We do need to decide on how to compute the `BlockData` hash and the `BlockHeader` hash.  For now I'm using naive (and theoretically incorrect) straight proto marshaling.  The data should probably be done as a wide Merkle tree, and the header should probably be some simple custom marshaling",
        "ts": "1478194567.002505"
    },
    {
        "type": "message",
        "user": "U0Z541B3P",
        "text": "I would prefer hash on simple custom serialized tx data for performance reasons...",
        "ts": "1478194678.002506"
    },
    {
        "type": "message",
        "user": "U0Z541B3P",
        "text": "close to what you are doing now... I do not think that this is incorrect. It's just that I am not sure whether we have a use case like bitcoin (where they have thin clients) for doing it Merkle-tree based",
        "ts": "1478194777.002507"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "There were several comments in support of the Merkle tree approach",
        "ts": "1478194842.002508"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "And if it is a wide Merkle tree, I would expect the performance to be relatively similar to a single large hash",
        "ts": "1478194867.002509"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "And there are performance reasons at the orderer why the Merkle tree approach is superior",
        "ts": "1478194902.002510"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U0Z541B3P> <@U0XPR4NP4> for the  first pass it\u2019ll be good to make changes that are not too disruptive to ledger ?",
        "ts": "1478194926.002511"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I'm slightly uncertain why the ledger even needs to compute this hash? Only valid blocks should make it into the ledger.  The only time would be verifying the hash chain.",
        "ts": "1478194979.002512"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "(I\u2019m making the assumption - perhaps unwarranted - that we are trying to go beyond the immediate here\u2026 )",
        "ts": "1478194989.002513"
    },
    {
        "type": "message",
        "user": "U0Z541B3P",
        "text": "<@U0XPR4NP4> - If you have done measurements for supporting this and convinced I am fine... but I have doubts based on my previous experiments",
        "ts": "1478194991.002514"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0Z541B3P> Real test are still a TODO, agreed with <@U0ULK2JPP> this doesn't have to be finalized at the moment, I just wanted to outline it as a TODO",
        "edited": {
            "user": "U0XPR4NP4",
            "ts": "1478195062.000000"
        },
        "ts": "1478195032.002515"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "We should do the real tests before committing",
        "ts": "1478195040.002516"
    },
    {
        "type": "message",
        "user": "U0Z541B3P",
        "text": "sure <@U0XPR4NP4> - don't get me wrong. I was just sharing my intuitions based on some experiments that I had done for crypto-hash computation of entire state in v0.5",
        "ts": "1478195148.002518",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0ULK2JPP"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Understood.  I am not married to the Merkle tree idea, if it's not better, let's not do it.  Are we certain we will never want 'light' nodes which prune some transactions out?",
        "ts": "1478195317.002519"
    },
    {
        "type": "message",
        "user": "U0Z541B3P",
        "text": "At least I am not certain either way..",
        "ts": "1478195384.002520"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Would also ask <@U0XV1HDL3> if he had other thoughts, as I recall him being a proponent of the Merkle tree",
        "ts": "1478195484.002521"
    },
    {
        "user": "U2X9KDDL7",
        "text": "<@U2X9KDDL7|vdods> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1478199534.002522"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "Is the v0.6 branch the basis for the hyperledger\/fabric-peer:x86_64-0.6.1-preview and hyperledger\/fabric-membersrvc:x86_64-0.6.1-preview images that are published on docker hub?",
        "ts": "1478204269.002523"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "Sorry, I just saw the tags for those -- the answer is no: it's based on the git tag v0.6.1-preview",
        "edited": {
            "user": "U2X9KDDL7",
            "ts": "1478204521.000000"
        },
        "ts": "1478204411.002524"
    },
    {
        "type": "message",
        "user": "U2Q0HP4HY",
        "text": "Today endorsement is done by the Peer service.  Could in the future these be implemented by two separate  services ?  endorsement  by one svc and deploy invoke by another. ?",
        "ts": "1478204681.002526"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U2X9KDDL7> v0.6.1-preview tag is the correct answer, but there is a correlation",
        "ts": "1478204710.002527"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "(e.g. v0.6.1-preview and v0.6.0-preview are both tags from the v0.6 branch",
        "ts": "1478204725.002528"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "<@U0KPFAZNF> Thanks -- is it necessary to checkout v0.6 branch before resetting to one of those tags?  Or is `git reset --hard v0.6.1-preview` sufficient?",
        "ts": "1478204919.002529"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "theres probably a dozen ways to do it in git: the one you provided should work fine as long as you understand the consequences",
        "ts": "1478204954.002530"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "a safer alternative is to perhaps do \u201cgit checkout v0.6.1-preview\"",
        "ts": "1478204985.002531"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "<@U0XPR4NP4> <@U0Z541B3P>  joining this late but I think we should anticipate that there may be valid cases for light clients ",
        "ts": "1478218105.002532"
    },
    {
        "type": "message",
        "user": "U0TFEHX8E",
        "text": "\"based on some experiments that I had done for crypto-hash computation of entire state in v0.5\"\nmaybe I'm wrong, but based on the conversation I assumed that the \"wide merkle\" was just over the transactions in a block, not the entire state. <@U0Z541B3P> we previously discussed having an array of all transactions hashes in a block which would be used to calculate the block hash. That would allow you to prune the transaction content. I believe that would be somewhat similar to a \"wide merkle\" until you hit some large number of TX",
        "ts": "1478221499.002533"
    },
    {
        "type": "message",
        "user": "U0TFEHX8E",
        "text": "I also think it could potentially be used for privacy in the future in addition to pruning",
        "ts": "1478221525.002534"
    },
    {
        "type": "message",
        "user": "U0Z541B3P",
        "text": "<@U0TFEHX8E> - long time :slightly_smiling_face:\nyes the conversation is about computing hash over the transactions. I was referring to my experiments from a general perspective, where I had observed that the cost of hash computation function is not a linear to the size of the data. It involves a significant setup cost that is incurred each time you invoke this function. For instance, on my Mac, the hash computation took almost the same time for any number of bytes &lt; 100 and there after it starts showing effect based on data volume. I heard once from z folks that for them this number is even larger. So, minimizing the number of times you call the hash function is desired (off course -  unless required by some concrete functionality\/use case - like a bitcoin thin client wants to verify whether a tx is present in a Block. Further, I believe these bit coin thin clients could be large in number and hence potentially the primary use case). The only thing I was saying that we should have some measurements and use cases we would need to support in order to make a judicious decision.",
        "edited": {
            "user": "U0Z541B3P",
            "ts": "1478237421.000000"
        },
        "ts": "1478236178.002535"
    }
]
[
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "hi all",
        "ts": "1466494511.000895"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<https:\/\/github.com\/hyperledger\/fabric\/pull\/1722>\n<https:\/\/github.com\/hyperledger\/fabric\/pull\/1719>\ncan somebody check those? :slightly_smiling_face: there are some issues that need to be solved and I would need some other opinion :slightly_smiling_face:",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "Add noop system chain code.  by tamasblummer \u00b7 Pull Request #1722 \u00b7 hyperledger\/fabric \u00b7 GitHub",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/pull\/1722",
                "text": "Add noop system chain code Description Noop system chain code simply stores invoke transactions without validation. This chaincode is useful for testing. The noop system chaincode is prepared to ...",
                "fallback": "GitHub: Add noop system chain code.  by tamasblummer \u00b7 Pull Request #1722 \u00b7 hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/4289351?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/pull\/1722",
                "thumb_width": 234,
                "thumb_height": 234,
                "service_icon": "https:\/\/a.slack-edge.com\/e8ef6\/img\/unfurl_icons\/github.png",
                "id": 1
            },
            {
                "service_name": "GitHub",
                "title": "Do not store failed invoke transactions into the ledger by tamasblummer \u00b7 Pull Request #1719 \u00b7 hyperledger\/fabric \u00b7 GitHub",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/pull\/1719",
                "text": "Do not store invoke transaction that fails to execute into the ledger Description Chain code will likely implement checks of a transaction. A transaction that does not pass the checks without err...",
                "fallback": "GitHub: Do not store failed invoke transactions into the ledger by tamasblummer \u00b7 Pull Request #1719 \u00b7 hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/4289351?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/pull\/1719",
                "thumb_width": 234,
                "thumb_height": 234,
                "service_icon": "https:\/\/a.slack-edge.com\/e8ef6\/img\/unfurl_icons\/github.png",
                "id": 2
            }
        ],
        "ts": "1466494548.000896"
    },
    {
        "user": "U1EE1TRQE",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1EE1TRQE|nashikkarh> has joined the channel",
        "ts": "1466498641.000898"
    },
    {
        "user": "U1GLPP8QN",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1GLPP8QN|deeflorian> has joined the channel",
        "ts": "1466508925.000899"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "```ESC[36m13:38:25.102 [chaincode] Launch -&gt; DEBU 4e3ESC[0m launchAndWaitForRegister failed Error starting container: Post <http:\/\/172.17.0.1:2375\/containers\/create?name=dev-vp1-a5389f7dfb9efae379900a41db1503fea2199fe400272b61ac5fe7bd0c6b97cf10ce3aa8dd00cd7626ce02f18accc7e5f2059dae6eb0786838042958352b89fb>: dial tcp 172.17.0.1:2375: i\/o timeout```",
        "edited": {
            "user": "U0XR6J961",
            "ts": "1466516483.000000"
        },
        "ts": "1466516465.000900"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "what's going on there?",
        "ts": "1466516500.000903"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "seems my docker doesn't react?",
        "ts": "1466516512.000904"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "weird",
        "ts": "1466516515.000905"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U0XR6J961>, from the message, seems to come from the docker client \u2026 unable to work with the docker daemon for some reason ?",
        "ts": "1466517096.000906"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "something about firewall i guess?",
        "ts": "1466517117.000907"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "that would fit I suppose",
        "ts": "1466517157.000908"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "perhaps a GET with  \"curl <http:\/\/172.17.0.1:2375\/containers\/>\u2026.\" ?",
        "ts": "1466517199.000909"
    },
    {
        "type": "message",
        "user": "U0YNFB22X",
        "text": "I get these errors when running behave tests",
        "ts": "1466522531.000910"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U0YNFB22X|satheesh> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/satheesh\/F1JRB64GK\/behave_test_error.txt|behave test error>",
        "file": {
            "id": "F1JRB64GK",
            "created": 1466522548,
            "timestamp": 1466522548,
            "name": "behave_test_error.txt",
            "title": "behave test error",
            "mimetype": "text\/plain",
            "filetype": "text",
            "pretty_type": "Plain Text",
            "user": "U0YNFB22X",
            "editable": true,
            "size": 861,
            "mode": "snippet",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1JRB64GK\/behave_test_error.txt?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1JRB64GK\/download\/behave_test_error.txt?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/satheesh\/F1JRB64GK\/behave_test_error.txt",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F1JRB64GK-aa7da838ea",
            "edit_link": "https:\/\/hyperledgerproject.slack.com\/files\/satheesh\/F1JRB64GK\/behave_test_error.txt\/edit",
            "preview": "15:19:41.543 [dockercontroller] createContainer -> DEBU 07a Create container: dev-vp0-a5389f7dfb9efae379900a41db1503fea2199fe400272b61ac5fe7bd0c6b97cf10ce3aa8dd00cd7626ce02f18accc7e5f2059dae6eb0786838042958352b89fb\r\n15:19:41.543 [dockercontroller] Start -> ERRO 07b start-could not recreate container cannot connect to Docker endpoint\r\n15:19:41.543 [container] unlockContainer -> DEBU 07c container lock deleted(dev-vp0-a5389f7dfb9efae379900a41db1503fea2199fe400272b61ac5fe7bd0c6b97cf10ce3aa8dd00cd7626ce02f18accc7e5f2059dae6eb0786838042958352b89fb)\r\n15:19:41.543 [chaincode] Launch -> DEBU 07d launchAndWaitForRegister failed Error starting container: cannot connect to Docker endpoint\r\n15:19:41.543 [rest] Query -> ERRO 07e {\"Error\": \"Querying Chaincode -- Error:Failed to launch chaincode spec(Error starting container: cannot connect to Docker endpoint)\"}\r",
            "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text\/plain',window.getSelection().toString().replace(\/\\u200b\/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>15:19:41.543 [dockercontroller] createContainer -&gt; DEBU 07a Create container: dev-vp0-a5389f7dfb9efae379900a41db1503fea2199fe400272b61ac5fe7bd0c6b97cf10ce3aa8dd00cd7626ce02f18accc7e5f2059dae6eb0786838042958352b89fb<\/pre><\/div>\n<div><pre>15:19:41.543 [dockercontroller] Start -&gt; ERRO 07b start-could not recreate container cannot connect to Docker endpoint<\/pre><\/div>\n<div><pre>15:19:41.543 [container] unlockContainer -&gt; DEBU 07c container lock deleted(dev-vp0-a5389f7dfb9efae379900a41db1503fea2199fe400272b61ac5fe7bd0c6b97cf10ce3aa8dd00cd7626ce02f18accc7e5f2059dae6eb0786838042958352b89fb)<\/pre><\/div>\n<div><pre>15:19:41.543 [chaincode] Launch -&gt; DEBU 07d launchAndWaitForRegister failed Error starting container: cannot connect to Docker endpoint<\/pre><\/div>\n<div><pre>15:19:41.543 [rest] Query -&gt; ERRO 07e {&quot;Error&quot;: &quot;Querying Chaincode -- Error:Failed to launch chaincode spec(Error starting container: cannot connect to Docker endpoint)&quot;}<\/pre><\/div>\n<div><pre><\/pre><\/div>\n<\/div>\n<\/div>\n",
            "lines": 6,
            "lines_more": 1,
            "preview_is_truncated": false,
            "channels": [
                "C0YPYBVJM"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 0
        },
        "user": "U0YNFB22X",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U0YNFB22X|satheesh>",
        "bot_id": null,
        "ts": "1466522549.000911"
    },
    {
        "type": "message",
        "user": "U0YNFB22X",
        "text": "`15:19:41.543 [dockercontroller] Start -&gt; ERRO 07b start-could not recreate container cannot connect to Docker endpoint`",
        "ts": "1466522574.000912"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "make sure that your docker daemon is listening on the port",
        "ts": "1466523070.000913"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "can the Peer persist data to the DB as things stand right now? I was looking for something similar to what the `consensus` package does with the validator <https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/consensus\/helper\/persist\/persist.go>",
        "edited": {
            "user": "U0XQ35CDD",
            "ts": "1466525632.000000"
        },
        "ts": "1466525153.000914"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "if there's no such functionality, shall we bring this package down to the peer level, while making the key prefix (currently set to `consensus.`) a variable?",
        "ts": "1466525930.000917"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "well, just use the db stuff?",
        "ts": "1466525999.000918"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "or move it",
        "ts": "1466526054.000919"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i think the persist interface is nicer",
        "ts": "1466526065.000920"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "I think so as well",
        "ts": "1466526087.000921"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but barely different",
        "ts": "1466526094.000922"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "this will be needed for #1874, unless you have a different take on how the rootNodes list should be persisted",
        "ts": "1466526121.000923"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i suggest configuring it statically for now",
        "ts": "1466526183.000924"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0KN2SSKE> <@U0TFEHX8E> <@U11HH3P7Y> trying to untangle a potential discrepancy between the developer preview branch and tag",
        "ts": "1466526206.000925"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "its a little confusing via the github interface, i need to dig in with command line to figure out what happened\u2026but it _looks_ like we might have two different branch points",
        "ts": "1466526249.000926"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "so: vp0, vp1, vp2, vp3 all do `CORE_PEER_DISCOVERY_ROOTNODE=vp0:30303,vp1:30303, etc.`?",
        "ts": "1466526265.000927"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "For instance, here: <https:\/\/github.com\/hyperledger\/fabric\/releases> shows the tag as 6905fec whereas the branch shows 72a7cbf",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/releases",
                "text": "fabric - Fabric is a blockchain project in Incubation proposed to the community and documented at <https:\/\/goo.gl\/RYQZ5N>. Information on what Incubation entails can be found in the Hyperledger Proj...",
                "fallback": "GitHub: hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/releases",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1466526400.000928"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "im guessing that the branch\/commit\/tag sequence interleaved",
        "ts": "1466526435.000930"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "but in addition, it seems that travis is very confused by the tag",
        "ts": "1466526447.000931"
    },
    {
        "type": "message",
        "user": "U0N1D1UAE",
        "text": "<@U0XPR4NP4> In your comments above are you suggesting that issue #1931 is expected?",
        "ts": "1466536758.000932"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0N1D1UAE> This is a known limitation\/bug at the moment, we are working on a solution",
        "ts": "1466536924.000933"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "We discussed some earlier today in <#C0Z4NBUN6>, but the correct way to fix it isn't immediately obvious, or necessarily trivial",
        "ts": "1466537056.000934"
    },
    {
        "type": "message",
        "user": "U0N1D1UAE",
        "text": "Regarding #1857 I am trying to reproduce. The \u201cstuck\u201d peers may have been experiencing buffer overflows.",
        "ts": "1466537183.000935"
    },
    {
        "type": "message",
        "user": "U0N1D1UAE",
        "text": "Queue overflows actually",
        "ts": "1466537223.000936"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0N1D1UAE>: The short explanation of 1931 is that when it takes longer for a broadcast message to go from say vp1 to vp3, than for that same message to from vp1 to vp0, plus have vp0,vp2,vp3 do the three phase message exchange, then you may see duplicated requests.  This obviously needs to be fixed, but it is hopefully an unlikely real life network latency scenario.",
        "ts": "1466537381.000937"
    },
    {
        "type": "message",
        "user": "U0N1D1UAE",
        "text": "I thought the protocols were formally verified?",
        "ts": "1466537828.000938"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "They are, but in adapting it for our use case, there are some deviations.  The protocol spec indicates that clients should wait for a response to their request before submitting a new one.  This allows for clean deduplication without risk of censorship.  But, we expect this would be unacceptable for our throughput in the long term, so we are trying to come up with a better solution.",
        "ts": "1466538060.000939"
    },
    {
        "type": "message",
        "user": "U0N1D1UAE",
        "text": "Interesting. I will put this to the test by having 1000 clients all sending and waiting for 1 TX at a time.",
        "ts": "1466538233.000940"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0N1D1UAE> This is client in terms of the paper",
        "ts": "1466538256.000941"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "So, for us, each VP is a client",
        "ts": "1466538267.000942"
    },
    {
        "type": "message",
        "user": "U0N1D1UAE",
        "text": "You are right, not interesting as a product.",
        "ts": "1466538296.000943"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "In the paper, clients submit PBFT requests directly to the network, in fabric, we receive something like a REST request, and then act like a client in submitting it to the PBFT network. There are some avenues to scale this, and I'm certain it can be worked around, but as I said, the solution is non-obvious",
        "ts": "1466538439.000944"
    },
    {
        "type": "message",
        "user": "U0N1D1UAE",
        "text": "<@U0XPR4NP4> I just updated #1857 with debug logs from a \u201cstuck\u201d run of stress2b",
        "ts": "1466539202.000945"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0N1D1UAE> <https:\/\/github.com\/hyperledger\/fabric\/pull\/1941>\n\nThis should be an effective workaround for the time being to remove those duplicate requests, until we can come up with a better solution",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "Deduplicate requests based on last execution time by jyellick \u00b7 Pull Request #1941 \u00b7 hyperledger\/fabric \u00b7 GitHub",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/pull\/1941",
                "text": "Description This changeset adds back in a portion of the deduplication logic which was removed. Specifically, it will cause a replica to ignore any requests from a peer which are timestamped prio...",
                "fallback": "GitHub: Deduplicate requests based on last execution time by jyellick \u00b7 Pull Request #1941 \u00b7 hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars0.githubusercontent.com\/u\/7431583?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/pull\/1941",
                "thumb_width": 420,
                "thumb_height": 420,
                "service_icon": "https:\/\/a.slack-edge.com\/e8ef6\/img\/unfurl_icons\/github.png",
                "id": 1
            }
        ],
        "ts": "1466539289.000946"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Also see what is going on with 1857, replied to you in the issue",
        "ts": "1466540295.000948"
    }
]
[
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "every merged patch I believe",
        "ts": "1473062892.000047"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "<@U0UHG4VP1> set it up",
        "ts": "1473062906.000048"
    },
    {
        "type": "message",
        "user": "U1M7K67EV",
        "text": "thanks <@U0KM61BCP>, it just seems to be a few days behind",
        "ts": "1473063211.000049"
    },
    {
        "type": "message",
        "user": "U1M7K67EV",
        "text": "Not that it bothers me, was just curious",
        "ts": "1473063219.000050"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "could be a glitch - will have it looked at",
        "ts": "1473064903.000051"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U0KM61BCP> <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/841\/> how exactly did you mean?",
        "edited": {
            "user": "U1AU8DRQR",
            "ts": "1473066636.000000"
        },
        "ts": "1473066619.000052"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "it seems like every day you are proposing yet another change",
        "ts": "1473071688.000054"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "this is not related to my other changes (which were only submitted to the feature branch...). this was requested by users",
        "ts": "1473072454.000059"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "and I don't think it is  big change to have a getter for a field",
        "ts": "1473072497.000060",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U1MNES6NR"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U2891BNAG",
        "text": "<@U2891BNAG|rvaughan> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1473072820.000061"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "IMHO, every change must be tied to a JIRA entry.  We need to be able to understand why changes are being made, who is requesting them and where they fit into the (eventual) release milestones",
        "ts": "1473072833.000062",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U268EB76W"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "I thought <@U0MM86C84> will open a JIRA for it, but I can do it if there isn't one",
        "ts": "1473072944.000063"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U0PB67X4K> what do you think if it this way? <https:\/\/jira.hyperledger.org\/browse\/FAB-306> <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/841\/>",
        "ts": "1473073632.000064",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0PB67X4K"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "although as <@U0KM61BCP> mentioned, there is definitely a lot of churn going on with the chaincode interfaces.  this is not a problem if you are someone who is keeping up with the bleeding edge of fabric, but the lack of releases causes a lot of issues when trying to simply build, compile and test chaincode",
        "ts": "1473074719.000065"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "the chaincode API on master hasn't changed yet, so I don't exactly understand your opinion",
        "ts": "1473075360.000066"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "ah - that's true - not on master - although it has changed significantly on master since we cut the v0.5-developer-preview release",
        "ts": "1473075417.000067"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "if you mean the base64 thing (as I remember that was the only change), that is unrelated to this, and it is kinda 'reverted' in a sense that one can use the 'old, usual' REST API and cli calls",
        "ts": "1473075468.000068"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "but my point is valid - even this one change is going to break people who store their chaincode in github and attempt to build it",
        "ts": "1473075479.000069"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "well maybe not this change  :wink:",
        "ts": "1473075516.000070"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "it would only break that kind of code (not only this but any chaincode related change) if it changed the API (Invoke, Init, Query). or not?",
        "ts": "1473075584.000071"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "I think we are generally safe as long as we don't break the interfaces chaincode is required to implement \/ use",
        "edited": {
            "user": "U0PB67X4K",
            "ts": "1473075899.000000"
        },
        "ts": "1473075865.000072"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "so adding a function should be ok.  changing one would break the chaincode if they compile \/ deploy it against an up level of the peer",
        "ts": "1473075954.000074"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "this is generally the same as what I said :slightly_smiling_face: - or not?",
        "ts": "1473076372.000075"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "yeah",
        "ts": "1473076431.000076"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "but it would be both the Chaincode and ChaincodeStubInterface",
        "ts": "1473076497.000077"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "we can also reject the change and I can upload it to feature\/convergence",
        "ts": "1473076591.000078"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "well now is the time to get in any changes we think would be worthwhile to merge down to the v0.6 release",
        "ts": "1473076712.000079"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "although it is still unclear to me how \/ when we are cutting that release",
        "ts": "1473076745.000080"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "and this one does seem useful",
        "ts": "1473076784.000081",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U1MNES6NR"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U268EB76W",
        "text": "<@U0KM61BCP> is it inferred that a \"merged patch\" does not break the build, since github is updated post-merge? So, one can at anytime clone github hyperledger-fabric and build without error?",
        "ts": "1473114316.000082"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "<@U268EB76W> - that's the goal and generally holds true",
        "ts": "1473114661.000083"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "occasionally there can be breakage",
        "ts": "1473115102.000084"
    },
    {
        "type": "message",
        "user": "U268EB76W",
        "text": "I have always maintained a master that ALWAYS builds. You don't add code unless it passes all tests performed by CI jobs responsible for committing code to the master. Everything else is in flux, but NO code gets in master if it breaks CI. There needs to be stages that code must move through, beginning with review. Then it is pushed to an integration CI build and if it passes then it is moved to a hot master tmp clone and if it builds with master then it is committed to the true master. Each primary branch should follow this pattern. And commits between branches also follow the \"no-breaks\" allowed rule. There is nothing more frustrating (and unproductive) to a developer than code that worked this morning but is broke this afternoon, because a peer added code that works in his env, but not in the system smoke out env :slightly_smiling_face: I'm new so maybe this is happening but has some issues yet to be shaken out :slightly_smiling_face: I just know that figuring out what and where to get the code that you can build without errors consistently is currently stressful, because you just cross your fingers and hope.",
        "attachments": [
            {
                "fallback": "[September 5th, 2016 4:25 AM] garisingh: although as <@U0KM61BCP> mentioned, there is definitely a lot of churn going on with the chaincode interfaces.  this is not a problem if you are someone who is keeping up with the bleeding edge of fabric, but the lack of releases causes a lot of issues when trying to simply build, compile and test chaincode",
                "ts": "1473074719.000065",
                "author_subname": "garisingh",
                "channel_id": "C0YPYBVJM",
                "channel_name": "fabric-dev",
                "is_msg_unfurl": true,
                "text": "although as <@U0KM61BCP> mentioned, there is definitely a lot of churn going on with the chaincode interfaces.  this is not a problem if you are someone who is keeping up with the bleeding edge of fabric, but the lack of releases causes a lot of issues when trying to simply build, compile and test chaincode",
                "author_link": "https:\/\/hyperledgerproject.slack.com\/team\/garisingh",
                "author_icon": "https:\/\/secure.gravatar.com\/avatar\/80cf890a6180fc256afbff3e251490b1.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2F66f9%2Fimg%2Favatars%2Fava_0019-48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "color": "D0D0D0",
                "from_url": "https:\/\/hyperledgerproject.slack.com\/archives\/fabric-dev\/p1473074719000065",
                "is_share": true,
                "footer": "Posted in #fabric-dev"
            }
        ],
        "ts": "1473115308.000085"
    },
    {
        "type": "message",
        "user": "U268EB76W",
        "text": "Can I be pointed to a document that explains the branches--their purpose, and relationship to the other branches? And another document that explains the CI design, jobs, procedures, etc. so I can understand the flow from developer to release? Is there a planned release cycle or target? How can I get tuned into the process being used to negotiate the features that are being decided on and scheduled for development?",
        "ts": "1473116087.000086"
    },
    {
        "type": "message",
        "user": "U1M7K67EV",
        "text": "Hi folks, just wondering if anyone might be aware if there were any particular reasons why the `CORE_VM_ENDPOINT` in the BDD Tests was chosen to be the Docker IP as opposed to the Socket at `\/var\/run\/docker.sock`. Just looking at changing it so that Jenkins doesn't need to do any nasty `sed` substitution in the docker-compose config files for running the tests",
        "ts": "1473125317.000087"
    },
    {
        "user": "U0NLP5909",
        "text": "<@U0NLP5909|hanhzf> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1473138754.000088"
    }
]
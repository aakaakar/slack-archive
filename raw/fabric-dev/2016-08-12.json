[
    {
        "type": "message",
        "user": "U1VG8LNP3",
        "text": "<@U0UHG4VP1>:  Updated 489.",
        "ts": "1470985240.001461"
    },
    {
        "type": "message",
        "user": "U1LES78TT",
        "text": "489 and 491 seem to be fixing the same thing?",
        "ts": "1470985299.001462"
    },
    {
        "type": "message",
        "user": "U1VG8LNP3",
        "text": "Yes. Basicly, they're same.",
        "ts": "1470985455.001463"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "bgorman: I will try to give you something like that",
        "ts": "1470985606.001464"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "we need this ASAP: <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/491\/>",
        "ts": "1470998296.001465"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "why don't i see this in my overview?",
        "ts": "1470999768.001466"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "oh",
        "ts": "1470999786.001467"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "because i had the wrong view",
        "ts": "1470999789.001468"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "WOW",
        "ts": "1470999791.001469"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "there are so many outstanding ones",
        "ts": "1470999798.001470"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "hgabor: \"fix failing test\" is not a good subject",
        "ts": "1470999895.001471"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "maybe now? what would be better?",
        "ts": "1471000194.001472"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "why does jenkins run when only the commit message changes?",
        "ts": "1471000246.001473"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "ry: ramesh: can we change that?",
        "ts": "1471000269.001474"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "it generates a new patchset and our Jenkins is not enough intelligent to know",
        "ts": "1471000271.001475"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "that is was only a commit message change",
        "ts": "1471000282.001476"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yea",
        "ts": "1471000288.001477"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "we can check it using git commands somewhere in the Jenkins job",
        "ts": "1471000298.001478"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "basically if the treeish is the same, no need to rerun",
        "ts": "1471000323.001479"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "maybe it can be done without checking it from shell. I mean maybe Jenkins can check it",
        "ts": "1471000356.001480"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1471000845.001481"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "don't look at the commit, but at the tree",
        "ts": "1471000864.001482"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "some offtopic: do we need all these apps?? I could add email app that could announce emails on the mailing lists to channels... I guess 3\/4 of ppl here do not read emails from those lists so it would be cool. <https:\/\/hyperledgerproject.slack.com\/apps\/manage>",
        "ts": "1471001174.001483"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "lots of apps",
        "ts": "1471001487.001484"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "10 apps can be installed on a free slack",
        "ts": "1471001509.001485"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "we have 10 apps",
        "ts": "1471001513.001486"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "great",
        "ts": "1471001532.001487"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "angellist",
        "ts": "1471001536.001488"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i think we should remove that",
        "ts": "1471001564.001489"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "me too",
        "ts": "1471001600.001490"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "who will press the remove button? :smile:",
        "ts": "1471001616.001491"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "oh look",
        "ts": "1471002303.001492"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "there are app spots free now",
        "ts": "1471002308.001493"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "hmm what could have happened",
        "ts": "1471002457.001494"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<https:\/\/hyperledgerproject.slack.com\/apps\/A0F81496D-email>",
        "attachments": [
            {
                "service_name": "Slack App Directory",
                "title": "Email",
                "title_link": "https:\/\/hyperledgerproject.slack.com\/apps\/A0F81496D-email",
                "text": "Send emails directly to a channel in Slack.",
                "fallback": "Slack App Directory: Email",
                "from_url": "https:\/\/hyperledgerproject.slack.com\/apps\/A0F81496D-email",
                "thumb_url": "https:\/\/a.slack-edge.com\/2fac\/plugins\/email\/assets\/service_72.png",
                "thumb_width": 72,
                "thumb_height": 72,
                "service_icon": "https:\/\/a.slack-edge.com\/66f9\/img\/icons\/ios-152.png",
                "id": 1
            }
        ],
        "ts": "1471002458.001495"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "what do you think of this?",
        "edited": {
            "user": "U1AU8DRQR",
            "ts": "1471002630.000000"
        },
        "ts": "1471002464.001497"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "btw we have exactly 10 apps now, before we had 11 :S",
        "ts": "1471002646.001499"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "can we  revist <@U1LES78TT> \u2019s comments on the need for change from []string to [][]bytes ? I can see both points of view. However if most of the arguments are expected to be strings, [][]bytes would be inefficient.  Whatever is decided is fine. However this is a direct user experience question and has to be thought out carefully",
        "edited": {
            "user": "U0ULK2JPP",
            "ts": "1471003057.000000"
        },
        "ts": "1471003006.001500"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "why inefficient?",
        "ts": "1471003049.001501"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "ux.",
        "ts": "1471003086.001503"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "representation would change at the user interface level",
        "ts": "1471003162.001504"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "what user interface?",
        "ts": "1471003176.001505"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "you mean API?",
        "ts": "1471003179.001506"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U0ULK2JPP>: yes, I think it is time to revisit it",
        "ts": "1471003296.001507"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U0ULK2JPP>: as I see the only problematic part is the REST API.",
        "ts": "1471003331.001508"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U0ULK2JPP>: I may be wrong but for me, it seems that it would be enough to somehow \"make the REST API work with strings\". in the background, it is OK if the chaincode input contains [][]byte and not []string",
        "ts": "1471003469.001509"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "what do you think?",
        "ts": "1471003494.001510"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I\u2019d love to know answer to \u201cwhat is more common input to transactions  ? Strings or byte objects (such as jpegs, zip files, etc\u2026)",
        "ts": "1471004108.001511"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "note that it also affects other chaincode env besides go",
        "ts": "1471004131.001512"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "and the bytes can also be used for proto structs",
        "ts": "1471004170.001513"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "true",
        "ts": "1471004177.001514"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "all forms of bytes",
        "ts": "1471004184.001515"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "and strings",
        "ts": "1471004189.001516"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "well, I\u2019d keep \u201cstrings are also bytes\u201d argument out of this one. If most of the times we deal with strings, question is should that be the representation",
        "ts": "1471004246.001517"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "why?",
        "ts": "1471004258.001518"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "it's a general purpose thing, we cannot assume that strings will be used most of the time",
        "ts": "1471004275.001519"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "I meant bytes can be string cause of the 1-1 mapping",
        "ts": "1471004281.001520"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "in java ?",
        "ts": "1471004292.001521"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i'd even argue that strings shouldn't be used most of the time, because they are an inefficient reprensentation for anything except actual strings",
        "ts": "1471004297.001522"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "that\u2019s my question. Is most of that time are inputs actual strings",
        "ts": "1471004325.001523"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "In Java, string makes it hard to encode anything, bytearray makes it easier - I think",
        "ts": "1471004340.001524"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "I can only talk about the examples, they all use strings,",
        "ts": "1471004382.001525"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "no, forget the examples",
        "ts": "1471004392.001526"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "I do not know about user code",
        "ts": "1471004392.001527"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "they are just toys",
        "ts": "1471004404.001528"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "right",
        "ts": "1471004409.001529"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "we don't know anything",
        "ts": "1471004412.001530"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "therefore it should be bytes",
        "ts": "1471004426.001531"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "that\u2019s not true",
        "ts": "1471004432.001532"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "http has gotten quite well with strings",
        "ts": "1471004444.001533"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "wat",
        "ts": "1471004451.001534"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "and when they had to convert, the convert",
        "ts": "1471004453.001535"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "http is oblivious to the content",
        "ts": "1471004465.001536"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "that's why you can download binaries",
        "ts": "1471004472.001537"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "correct",
        "ts": "1471004488.001538"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "rfc2822 is not, that's why you have to base64 encode your attachments",
        "ts": "1471004499.001539"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "but they don\u2019t say all uri\u2019s should be base64 encoded",
        "ts": "1471004532.001540"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "time for office\u2026later",
        "ts": "1471004561.001541"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but these are not uris",
        "ts": "1471004622.001542"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "the chaincode name is the equivalent of an URI",
        "ts": "1471004636.001543"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "the arguments are the equivalent of POST parameters",
        "ts": "1471004654.001544"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "(which don't work well)",
        "ts": "1471004665.001545"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "btw as I know there is (devops - will be deprecated) and there will be interfaces other than the REST",
        "ts": "1471004686.001546"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "we're talking about the arguments to the chaincode, which should really be discussed in the context of chaincode",
        "ts": "1471004727.001547"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i think it is simple.  chaincode can store bytes in state, so why shouldn't chaincode receive bytes from arguments",
        "ts": "1471004759.001548"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "I think byte is the most general",
        "ts": "1471004859.001549"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes, of course",
        "ts": "1471004916.001550"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "otherwise we should require an encoding for the strings",
        "ts": "1471004928.001551"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "e.g. utf-8",
        "ts": "1471004932.001552"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and possibly even a format, like json",
        "ts": "1471004942.001553"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "that would be an overkill (I think): encoding over encoding",
        "ts": "1471005052.001554"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "This integration is only available to teams on paid plans. Learn more",
        "ts": "1471005168.001555"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": ":confused:",
        "ts": "1471005171.001556"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "no mail for us",
        "ts": "1471005173.001557"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "if you click on learn more it takes you to the prices page, doesnt it? I guess then it means that we still have too much apps (we have 10 apps now - 10 is free for unpaid. we had 11 before, I do not know how)",
        "ts": "1471005257.001558"
    },
    {
        "user": "U20NAT0SF",
        "text": "<@U20NAT0SF|synechist> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1471005456.001559"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "hgabor: ah",
        "ts": "1471005515.001560"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "but not sure it works that way",
        "ts": "1471005563.001561"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "no, i think in general it costs money to use it",
        "ts": "1471005594.001562"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "maybe have to write our own",
        "ts": "1471005621.001563"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "using blockchain",
        "ts": "1471005625.001564"
    },
    {
        "type": "message",
        "user": "U0YP7KFGQ",
        "text": "Hi. I did some work to add flow control to all communication streams (events, peer and chaincode). I opened jira issue (<https:\/\/jira.hyperledger.org\/browse\/FAB-38>) and have some working code. How do I proceed with gerrit from here?",
        "ts": "1471005872.001565"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "if you're happy with the code, submit it to gerrit",
        "ts": "1471005948.001566"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and ask people to review it",
        "ts": "1471005951.001567"
    },
    {
        "type": "message",
        "user": "U0YP7KFGQ",
        "text": "Ok, how I choose reviewers?",
        "ts": "1471006022.001568"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "pick somebody you think would be familiar with the code",
        "ts": "1471006103.001569"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "or just talk to us here",
        "ts": "1471006111.001570"
    },
    {
        "type": "message",
        "user": "U0YP7KFGQ",
        "text": "ok, thanks.",
        "ts": "1471006152.001571"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U0YP7KFGQ>: I assume the work will work for java chaincode seamlessly ?",
        "ts": "1471007047.001572"
    },
    {
        "type": "message",
        "user": "U0YP7KFGQ",
        "text": "It should, I didn\u2019t touched shim code at all, so based on assumption that java shim works same way as go shim, it should work",
        "ts": "1471007138.001573"
    },
    {
        "type": "message",
        "user": "U0YP7KFGQ",
        "text": "Do any tests (behave, unit-tests) check java shim, so I could check it?",
        "ts": "1471007250.001574"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "ok",
        "ts": "1471007515.001575"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "that\u2019s fine then",
        "ts": "1471007520.001576"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "(no need to check\u2026.thank you, though!)",
        "ts": "1471007541.001577"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "how does that flow control work?",
        "ts": "1471007698.001578"
    },
    {
        "type": "message",
        "user": "U0YP7KFGQ",
        "text": "Once I will finish merge with gerrit head, will submit code for review.",
        "ts": "1471007701.001579"
    },
    {
        "type": "message",
        "user": "U0YP7KFGQ",
        "text": "I put some info in jira issue, but naive implementation just add 2 channels - in and out for each stream. Now instead of calling stream.Send, handler call new Send impl, that just put message to channel and go routing will move it from channel to real stream. Same with stream.Recv and handler.HandlerMessage: streamRecv runs in endless for loop (as before), but instead calling handler.HandlerMessage direct, it put message in channel  and another routing takes message from channel and invoke handler.HandlerMessage",
        "edited": {
            "user": "U0YP7KFGQ",
            "ts": "1471008159.000000"
        },
        "ts": "1471008120.001580"
    },
    {
        "type": "message",
        "user": "U0YP7KFGQ",
        "text": "Introducing this intermediate layer allow in future add more robust flow control, like sending messages back to sender, with request to stop sending, etc, without changing handlers logic",
        "ts": "1471008269.001582"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "why is the current code inadequate?",
        "ts": "1471008532.001583"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U0ULK2JPP>:  do you think the REST API would be still problematic if one could use strings istead of base64? the chaincode invocation args would remains [][]byte",
        "edited": {
            "user": "U1AU8DRQR",
            "ts": "1471008729.000000"
        },
        "ts": "1471008686.001584"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i never understood the need for \"chaincodeinvocationspec\"",
        "ts": "1471008755.001586"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "why don't we send a transaction?",
        "ts": "1471008771.001587"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U0XR6J961> I think sending a transaction is fundemental for the content generated ID. with the current implementation it is hard to implement it (content generated using the whole transaction). And as I know the new architecture will send transactions instead of invocations.",
        "ts": "1471008894.001588"
    },
    {
        "type": "message",
        "user": "U0YP7KFGQ",
        "text": "<@U0XR6J961>: It is not, but you don\u2019t have any control - you can\u2019t see if you process incoming messages much slower that they come in or send messages out to fast will cause Send to block. Now you have control over it - at least you will not block on Send and stop all state machine",
        "ts": "1471008898.001589"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "hgabor: good",
        "ts": "1471008971.001590"
    },
    {
        "type": "message",
        "user": "U0YP7KFGQ",
        "text": "<@U0XR6J961>: No, not correct - you still can block, but you have another option(s), fail during send and take care of the failure",
        "ts": "1471008991.001591"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "gennady.laventman: what failure?",
        "ts": "1471009024.001592"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U1AU8DRQR>: with REST either representation with affect the other type \u2026 the question is what is used most often. end user inputs will typically be strings\u2026 and in general I\u2019d think there\u2019d be a lot more strings. But I grant that, easier to go from bytes to string than the other way round (base64 etc)",
        "ts": "1471009171.001593"
    },
    {
        "type": "message",
        "user": "U0YP7KFGQ",
        "text": "<@U0XR6J961>:  Now, for example, you can block on Send to stream. In new design, with flow control, as developer, you can still implement it in same way (handler blocks on Send) or you can make Send to fail in this case and change handler logic to take care of it.",
        "edited": {
            "user": "U0YP7KFGQ",
            "ts": "1471009303.000000"
        },
        "ts": "1471009278.001594"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "gennady.laventman: i think in general, state machine operations should be non-blocking, so this in principle is good",
        "ts": "1471009433.001596"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but my experience is that goroutines add to non-determinism and complex behavior",
        "ts": "1471009488.001597"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U0ULK2JPP>: but I think this is only true for golang json that it needs base64 if you want to decode as byte array. this is not a json rule or a REST rule, this is just a golang implementational thing",
        "ts": "1471009527.001598"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U0ULK2JPP>: how to decide which to use? (string vs []byte)?",
        "ts": "1471009548.001599"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "trivial, you use the more general one",
        "ts": "1471009570.001600"
    },
    {
        "type": "message",
        "user": "U0YP7KFGQ",
        "text": "<@U0XR6J961>: Indeed, so I just limited myself to 2 for each stream. And hope I have all stop issues covered. But this is tests and code reviews are for",
        "ts": "1471009619.001601"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U0YP7KFGQ>: I still don\u2019t get the \u201cflow control\u201d part. Are there things like message buffers and retries etc ? perhaps I should go read code :slightly_smiling_face: ?",
        "ts": "1471009627.001602"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U1AU8DRQR>: I thought I was giving a point in your favor with the last statement of the comment :slightly_smiling_face:",
        "edited": {
            "user": "U0ULK2JPP",
            "ts": "1471009709.000000"
        },
        "ts": "1471009664.001603"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "sounds more like asynchronous send",
        "ts": "1471009667.001604"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "submit it to gerrit and we can easily talk about it",
        "ts": "1471009690.001605"
    },
    {
        "type": "message",
        "user": "U0YP7KFGQ",
        "text": "Channels are play buffers role, no retires yet. Once I finish to merge it with current head, will submit it.",
        "ts": "1471009739.001607"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U1AU8DRQR>: if represented as bytes I can convert to strings easy but if represented as strings \u2018ll have to encode bytes",
        "ts": "1471009773.001608"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U0ULK2JPP> yes but it seems that e.g. Chris does not agree that much <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/499\/>",
        "ts": "1471009773.001609"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "(I have to go, I will be back soon)",
        "ts": "1471009786.001610"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U1AU8DRQR>: right there\u2019s that problem in the sender side\u2026 I was talking about receiver",
        "ts": "1471009837.001611"
    },
    {
        "type": "message",
        "user": "U0YP7KFGQ",
        "text": "I started to work on it more that 2 weeks ago and it still in github, so nice experience with moving it to gerrit and merging ahead of me.",
        "ts": "1471009839.001612"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "it's simple",
        "ts": "1471009853.001613"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "do this:",
        "ts": "1471009856.001614"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "```git remote add gerrit ssh:\/\/$LFUSER@gerrit.hyperledger.org:29418\/fabric.git\ngit remote update\necho 0716064b25428ea2426fa589db365c419726b24b 346f9fb448140e931fed73b46f528de6dacbc0d0 &gt; .git\/info\/grafts```",
        "edited": {
            "user": "U0XR6J961",
            "ts": "1471009961.000000"
        },
        "ts": "1471009946.001615"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "well, imagine without linebreak in the echo line",
        "ts": "1471009974.001617"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "because why care about what i write...",
        "ts": "1471009981.001618"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "now you should have a history on the gerrit\/master that reaches to the beginning of time",
        "ts": "1471010011.001619"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "then you should be able to easily do a rebase",
        "ts": "1471010020.001620"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "onto gerrit\/master",
        "ts": "1471010028.001621"
    },
    {
        "type": "message",
        "user": "U0YP7KFGQ",
        "text": "ok, thanks. will do it. although, not promising to finish it today - I want to write little bit more tests, to make sure I didn\u2019t broke anything",
        "ts": "1471010166.001622"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "sure",
        "ts": "1471010483.001623"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "you can do a WIP submission",
        "ts": "1471010487.001624"
    }
]
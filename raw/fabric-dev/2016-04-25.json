[
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yacovm: are you asking about strong reads?",
        "ts": "1461578813.000158"
    },
    {
        "type": "message",
        "user": "U10U4K6JC",
        "text": "default: SSH auth method: private key\nTimed out while waiting for the machine to boot. This means that\nVagrant was unable to communicate with the guest machine within\nthe configured (\"config.vm.boot_timeout\" value) time period.\n\nIf you look above, you should be able to see the error(s) that\nVagrant had when attempting to connect to the machine. These errors\nare usually good hints as to what may be wrong.\n\nIf you're using a custom box, make sure that networking is properly\nworking and you're able to connect to the machine. It is a common\nproblem that networking isn't setup properly in these boxes.\nVerify that authentication configurations are also setup properly,\nas well.\n\nIf the box appears to be booting properly, you may want to increase\nthe timeout (\"config.vm.boot_timeout\") value.",
        "ts": "1461578879.000159"
    },
    {
        "type": "message",
        "user": "U10U4K6JC",
        "text": "command to increase increase\/\nthe timeout (\"config.vm.boot_timeout\") value.",
        "ts": "1461578910.000160"
    },
    {
        "type": "message",
        "user": "U10U4K6JC",
        "text": "<@U0XR6J961>:  any idea",
        "ts": "1461579000.000161"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "nope, i don't use vagrant",
        "ts": "1461579010.000162"
    },
    {
        "type": "message",
        "user": "U10U4K6JC",
        "text": "<@U0XR6J961>:  WHAT else are u using  ?",
        "ts": "1461579077.000163"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i just run directly on my linux",
        "ts": "1461579088.000164"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "<@U0XR6J961>:  no, I was wondering about reads that go to byzantine peers, the fact that we have byzantine consensus, but when a client performs a read that goes to a byzantine peer, it may return any values it wants, can't it?",
        "edited": {
            "user": "U0ZJZBJLF",
            "ts": "1461579654.000000"
        },
        "ts": "1461579637.000165"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "the client asks its local trusted peer",
        "ts": "1461579659.000167"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i.e. the bank's server",
        "ts": "1461579666.000168"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "oh, I see.",
        "ts": "1461579673.000169"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "thanks",
        "ts": "1461579740.000170"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "even if you did a strong read",
        "ts": "1461579758.000171"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "how do you know that the machines signing the answer are legitimate?",
        "ts": "1461579773.000172"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "a strong read you mean reading f+1 replicas?",
        "ts": "1461579773.000173"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1461579777.000174"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "if you read f+1 replicas then you have at least 1 \"correct\" read",
        "ts": "1461579795.000175"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "you might not know which one is that",
        "ts": "1461579811.000176"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes, but how do you know which machines you should ask?",
        "ts": "1461579812.000177"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "if you do \"get peers\" on the replica, for instance",
        "ts": "1461579831.000178"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "on the local peer, that is",
        "ts": "1461579855.000179"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but then you trust the local peer",
        "ts": "1461579863.000180"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "true, otherwise the local peer is also byzantine and returns to you many \"fake\" peers, etc. etc.",
        "ts": "1461579897.000181"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "correct",
        "ts": "1461579903.000182"
    },
    {
        "user": "U13DAL5V5",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U13DAL5V5|wimtobback> has joined the channel",
        "ts": "1461584327.000183"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "```11:51:53.120 [crypto] Deploy -&gt; INFO 0d7\u001b[0m Initializing client [binhn]...\n\u001b[31m11:51:53.600 [crypto] callTCACreateCertificateSet -&gt; ERRO 0d8\u001b[0m [client.binhn] Failed requesting tca create certificate set [rpc error: code = 2 desc = \"proto: bad wiretype for field protos.Signature.Type: got wiretype 2, want 0\"].\n11:51:53.600 [crypto] Deploy -&gt; INFO 0d9\u001b[0m Initializing client [binhn]...done!\n\u001b[36m11:51:53.600 [devops] Deploy -&gt; DEBU 0da\u001b[0m Creating secure transaction 5844bc142dcc9e788785e026e22c855957b2c754c912702c58d997dedbc9a042f05d152f6db0fbd7810d95c1b880c210566c9de3093aae0ab76ad2d90e9cfaa5\n\u001b[31m11:51:53.603 [crypto] callTCACreateCertificateSet -&gt; ERRO 0db\u001b[0m [client.binhn] Failed requesting tca create certificate set [rpc error: code = 2 desc = \"proto: bad wiretype for field protos.Signature.Type: got wiretype 2, want 0\"].\n\u001b[31m11:51:53.603 [crypto] NewChaincodeDeployTransaction -&gt; ERRO 0dc\u001b[0m [client.binhn] Failed getting next transaction certificate [Failed loading TCerts from TCA].\n11:51:53.603 [crypto] CloseClient -&gt; INFO 0dd\u001b[0m Closing client [binhn]...\n\u001b[31m11:51:53.603 [rest] Deploy -&gt; ERRO 0de\u001b[0m {\"Error\": \"Deploying Chaincode -- Failed loading TCerts from TCA\"}\n```",
        "ts": "1461585195.000184"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "any ideas?",
        "ts": "1461585200.000185"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "ah, i may have had to build a new obcca",
        "ts": "1461585686.000186"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "sheehan: why doesn't `Block` contain the block number?",
        "ts": "1461599033.000187"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "the fact that `ledger.GetBlock(ledger.GetBlockchainSize())` doesn't work is very confusing",
        "ts": "1461599115.000188"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "we need to fix our numbering",
        "ts": "1461599122.000189"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i keep having off by one errors",
        "ts": "1461599128.000190"
    },
    {
        "type": "message",
        "user": "U0TFEHX8E",
        "text": "I think we never had a use case for having the number in a block. Part of it is also likely historical as bitcoin does not have a number in a block. Not aware that `ledger.GetBlock(ledger.GetBlockchainSize())` is not working. Is there an open issue describing the problem?",
        "ts": "1461599358.000191"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "well, because size() returns 1 if there is just a genesis block",
        "ts": "1461599637.000192"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and getblock takes block number, i.e. 0",
        "ts": "1461599647.000193"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i wanted to talk with you about this before opening an issue",
        "ts": "1461599663.000194"
    },
    {
        "type": "message",
        "user": "U0TFEHX8E",
        "text": "it\u2019s designed to behave like an array",
        "ts": "1461599826.000195"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yea i understand",
        "ts": "1461599896.000196"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "still easy to make one off mistakes",
        "ts": "1461599905.000197"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "maybe have a function relating to \"head\", \"tip\", etc.",
        "ts": "1461599967.000198"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "well I just shipped a blockchaininfo over the network, and then tried to get the `info.Height` block, which of course failed",
        "ts": "1461600016.000199"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "gave me a different block",
        "ts": "1461600022.000200"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "sheehan: it's not the first time that I had to stop and think whether I had to subtract\/add `1`, so it seems that the interface is not intuitive to me",
        "ts": "1461600126.000201"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "ah, maybe something like `GetBlockByHeight`",
        "ts": "1461600214.000202"
    },
    {
        "type": "message",
        "user": "U0TFEHX8E",
        "text": "sure, understand the confusion. open to updating the api so that\u2019s it\u2019s more clear",
        "ts": "1461600220.000203"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "which then internally can subtract one",
        "ts": "1461600227.000204"
    },
    {
        "type": "message",
        "user": "U0TFEHX8E",
        "text": "So have both `GetBlockByNumber` and `GetBlockByHeight`? I\u2019m concerned that may be confusing also",
        "ts": "1461600480.000205"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "oh",
        "ts": "1461600553.000206"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "chuck the bynumber then",
        "ts": "1461600560.000207"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "oh i don't know!",
        "ts": "1461600568.000208"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i'll think more about it",
        "ts": "1461600579.000209"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "whatever makes all numbers the same :simple_smile:",
        "ts": "1461600593.000210"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "could we get rid of the errors returned by GetLedger()?",
        "ts": "1461605248.000211"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "under what situation would that even happen?",
        "ts": "1461605271.000212"
    },
    {
        "type": "message",
        "user": "U0TFEHX8E",
        "text": "<https:\/\/github.com\/hyperledger\/fabric\/issues\/904>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "On error, need to stop peer rather than return with error \u00b7 Issue #904 \u00b7 hyperledger\/fabric \u00b7 GitHub",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/issues\/904",
                "text": "As noted in openblockchain\/obc-peer@246d431#commitcomment-16896253, there are cases where a caller won't know how to recover given a error return, see <https:\/\/github.com\/openblockchain\/obc-peer\/bl>...",
                "fallback": "GitHub: On error, need to stop peer rather than return with error \u00b7 Issue #904 \u00b7 hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars1.githubusercontent.com\/u\/11295979?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/issues\/904",
                "thumb_width": 420,
                "thumb_height": 420,
                "id": 1
            }
        ],
        "ts": "1461606475.000213"
    },
    {
        "type": "message",
        "user": "U0TFEHX8E",
        "text": "would happen if there was a IO error",
        "ts": "1461606577.000215"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "right, but what then?",
        "ts": "1461606937.000216"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "shouldn't we just panic and abort execution?",
        "ts": "1461606945.000217"
    },
    {
        "type": "message",
        "user": "U0TFEHX8E",
        "text": "yeah, panic is likely the correct thing to do",
        "ts": "1461606979.000218"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "that would clean up a lot of code",
        "ts": "1461607042.000219"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and also provide a better uniform way of dealing with such fatal errors",
        "ts": "1461607109.000220"
    },
    {
        "user": "U13JUH485",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U13JUH485|fabio> has joined the channel",
        "ts": "1461617680.000221"
    }
]
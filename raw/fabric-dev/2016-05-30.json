[
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "<@U0KPFAZNF>: I was asking about running the unit tests *not* in parallel :slightly_smiling_face:",
        "ts": "1464600253.001554"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0XR6J961>: oh!  completely misunderstood you.  I didn\u2019t think we did, though?",
        "edited": {
            "user": "U0KPFAZNF",
            "ts": "1464609342.000000"
        },
        "ts": "1464609332.001555"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "they run in parallel by default",
        "ts": "1464609390.001557"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "I just read the opposite, they only run in parallel if you annotate them as compatible and use the \u2014parallelize flag, neither of which I thought we did",
        "ts": "1464610899.001558"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "I was reading this: <https:\/\/splice.com\/blog\/lesser-known-features-go-test\/>",
        "attachments": [
            {
                "title": "Lesser-Known Features of Go Test - Blog | Splice",
                "title_link": "https:\/\/splice.com\/blog\/lesser-known-features-go-test\/",
                "text": "Go test is Golang's built-in testing framework. Simple and elegant but it packs advanced features, learn how to leverage them.",
                "fallback": "Lesser-Known Features of Go Test - Blog | Splice",
                "thumb_url": "https:\/\/splice.com\/blog\/wp-content\/uploads\/2014\/09\/trafficLight.jpg",
                "from_url": "https:\/\/splice.com\/blog\/lesser-known-features-go-test\/",
                "thumb_width": 720,
                "thumb_height": 855,
                "service_name": "splice.com",
                "id": 1
            }
        ],
        "ts": "1464610967.001559"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "(see \u201cParallelizing Tests\u201d about 2\/3rds down",
        "ts": "1464610985.001561"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "you think its the opposite?",
        "ts": "1464610996.001562"
    },
    {
        "type": "message",
        "user": "U0N1D1UAE",
        "text": "<@U0XQ35CDD> `make stress2s` takes less than 1 minute on an x86 server after the clients start. This is the only part of the test that is not covered by a timeout. I would be very interested to find out what state the clients are in. I\u2019m effectively calling \u2018wait\u2019 on the client subprocesses - so if the job hasn\u2019t finished the client subprocesses have not terminated. Maybe take a look at the log files in your $BUSYWORK_HOME.",
        "ts": "1464627326.001563"
    },
    {
        "type": "message",
        "user": "U0N1D1UAE",
        "text": "<@U0KPFAZNF> <@U0XR6J961> We\u2019ve had to fix bugs related to tests running in parallel and colliding over TCP ports. This is from `go help testflag`",
        "ts": "1464627685.001564"
    },
    {
        "type": "message",
        "user": "U0N1D1UAE",
        "text": "`-parallel n\n\t    Allow parallel execution of test functions that call t.Parallel.\n\t    The value of this flag is the maximum number of tests to run\n\t    simultaneously; by default, it is set to the value of GOMAXPROCS.\n\t    Note that -parallel only applies within a single test binary.\n\t    The 'go test' command may run tests for different packages\n\t    in parallel as well, according to the setting of the -p flag\n\t    (see 'go help build\u2019).`",
        "ts": "1464627690.001565"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1464627701.001566"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "Ah, i see.  I interpreted the blog entry as it was completely opt in",
        "ts": "1464628772.001567"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "I was trying to see if there was any opportunities to make the tests complete faster",
        "ts": "1464628807.001568"
    },
    {
        "user": "U142E5N0P",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U142E5N0P|yingfeng> has joined the channel",
        "ts": "1464663127.001569"
    }
]
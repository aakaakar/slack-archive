[
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "Hi can anyone suggest in which place in the code do we need to look to open multiple endorsers? We are trying to implement an example using such a scenario. Thx.",
        "ts": "1484830653.001189"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "<@U0ULK2JPP> ^^",
        "ts": "1484833230.001190"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U3HN4GFA9> that code for a single command\/api to send to multiple endorsers is not there currently\u2026 the two high level interfaces for sending proposals to endorsers are the CLI and the SDK. They can be used - currently - to send to 1 endorser.",
        "edited": {
            "user": "U0ULK2JPP",
            "ts": "1484833663.000000"
        },
        "ts": "1484833489.001191"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "Please check on fabric-sdk-node or fabric-sdk-node-dev on plans for allowing a proposal to be sent to multiple endorsers",
        "ts": "1484833724.001193"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "what you *can* do today which is not satisfactory by any means \u2026 is to use the CLI  `CORE_PEER_ADDRESS=&lt;endorserip&gt;:&lt;endorserport&gt; peer chaincode query \u2026` multiple times",
        "ts": "1484833825.001194"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "the query command will NOT send the proposal response to the orderer",
        "ts": "1484833852.001195"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "this way you can send as many requests you want to N-1 endorsers",
        "ts": "1484833895.001196"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "and on the last one, do an invoke as `CORE_PEER_ADDRESS=&lt;endorserip&gt;:&lt;endorserport&gt; peer chaincode invoke \u2026`",
        "ts": "1484833929.001197"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "like I said - not satisfactory :slightly_smiling_face:",
        "ts": "1484833945.001198"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "it is not hard to add support for multiple endorsers to the CLI (hopefully will be done soon)\u2026 if you want take a stab at it, I can help. Do let me know",
        "ts": "1484834033.001199"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "but if you want to use the SDK to do the above please check on the fabric-sdk-dev or fabric-sdk-node-dev channels",
        "ts": "1484834084.001200"
    },
    {
        "user": "U3TNHH1NW",
        "text": "<@U3TNHH1NW|dknochen> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1484840367.001201"
    },
    {
        "type": "message",
        "user": "U1KFBBWG1",
        "text": "fabric-sdk-node supports multiple endorsers",
        "ts": "1484841412.001202"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "Thank you yes, I do want to implement and use this. I will check the suggested channels.",
        "ts": "1484842295.001203"
    },
    {
        "type": "message",
        "user": "U36UDC6RK",
        "text": "Is it possible to run all examples of the master branch(authorizable_counter, asset-management, etc. ) with v1.0 ? Or do I have to modify the chaincode?",
        "ts": "1484842904.001204"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U1KFBBWG1> thanks for the correction\u2026  <@U3HN4GFA9> so you should be able to use the SDK to send a proposal to multiple endorsers",
        "ts": "1484843309.001205"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "<@U0ULK2JPP> Thanks. I was wondering whether it is possible to run multiple endorser peers natively (without docker containers).",
        "ts": "1484845161.001210"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "I guess I just need to give them different ids and different ports. Or do I need to do something else?",
        "ts": "1484845232.001211"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U3HN4GFA9> I am not sure (I can imagine how it can be done)..",
        "ts": "1484845239.001212"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "well the ledger directory has to be different as well, for one thing",
        "edited": {
            "user": "U0ULK2JPP",
            "ts": "1484845287.000000"
        },
        "ts": "1484845262.001213"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "but the recommendation would be to use docker",
        "ts": "1484845292.001215"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "peer\u2019s being on the same os env would be a very unusual pattern",
        "ts": "1484845379.001216"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "Ok. I'll use docker.",
        "ts": "1484845419.001217"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "Do you have an example with docker containers with v1.0",
        "ts": "1484845435.001218"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "Up to now, I only used the skeletal example with one native peer and orderer",
        "ts": "1484845460.001219"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "yes\u2026 there are workable docker-compose files under bddtests",
        "ts": "1484845477.001220"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "Ok. Thanks. I'll look at it.",
        "ts": "1484845520.001221"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "fabric\/bddtests\/docker-compose-next-4.yml would be a good start but would defer to <@U0UKTPMG8> if there\u2019s a better one",
        "ts": "1484845536.001222"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "<@U3HN4GFA9> <@U0ULK2JPP> correct, that is the one",
        "ts": "1484845568.001223"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "over the next couple of days there should be a good example of actual usage",
        "ts": "1484845610.001224",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0ULK2JPP"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "<@U0UKTPMG8> Thanks. I can run it using docker-compose. But then, what's the best way to communicate to the peers \/ deploy a chaincode \/ invoke a chaincode? It seems that all the ports of the peers are closed from the outside of docker.",
        "ts": "1484846422.001225"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "that part is coming :slightly_smiling_face:",
        "ts": "1484846439.001226"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "every port is actually available",
        "ts": "1484846461.001227"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "just not exposed",
        "ts": "1484846468.001228"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "but you can connect to them",
        "ts": "1484846472.001229"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "we are working on behave tests to demonstrate the entire boostrap of the network",
        "ts": "1484846505.001230"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "to include the final create\/join channel with subsequent TXs (deploy, invoke, etc.)",
        "ts": "1484846529.001231"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "the purpose of the boostrap feature is to demonstrate the full configuration and usage of the network wrt to peers and orderers (and MSPs)",
        "ts": "1484846603.001232"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "if you like, can add you to the Jira isse to track",
        "ts": "1484846635.001233"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "<https:\/\/jira.hyperledger.org\/browse\/FAB-1141>",
        "ts": "1484846672.001234"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "Thanks.",
        "ts": "1484846917.001235"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "Is there a simple way to expose them to peer deploy?",
        "edited": {
            "user": "U3HN4GFA9",
            "ts": "1484847022.000000"
        },
        "ts": "1484846934.001236"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "I tried adding ports 7051 to vp0 in the docker-compose file",
        "ts": "1484846946.001237"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "ICYMI - we renamed the fabric-cop component to fabric-ca by popular demand;-)\nany changesets in flight may have merge conflicts\nbest to cherrypick the changeset and apply to a clone of the new repo\nand then push again",
        "ts": "1484847443.001239"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "<https:\/\/hyperledgerproject.slack.com\/archives\/fabric-ca\/p1484847124001218>",
        "attachments": [
            {
                "from_url": "https:\/\/hyperledgerproject.slack.com\/archives\/fabric-ca\/p1484847124001218",
                "fallback": "[January 19th, 2017 9:32 AM] ry: <@U0P2GSA8Z> all of your in-flight changes should exist on fabric-ca, and you _should_ be able to `git remote add ...` the new repo so you don't need to re-clone",
                "ts": "1484847124.001218",
                "author_subname": "ry",
                "channel_id": "C2Y3CPP16",
                "channel_name": "fabric-ca",
                "is_msg_unfurl": true,
                "text": "<@U0P2GSA8Z> all of your in-flight changes should exist on fabric-ca, and you _should_ be able to `git remote add ...` the new repo so you don't need to re-clone",
                "author_name": "Ry Jones",
                "author_link": "https:\/\/hyperledgerproject.slack.com\/team\/ry",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2016-12-03\/112352565781_af8a455dfc891821119c_48.jpg",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "footer": "Posted in #fabric-ca"
            }
        ],
        "ts": "1484847562.001240"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "per <@U0UHG4VP1> you don't need to clone the new repo, you can simply change your git remote",
        "ts": "1484847583.001242"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "<@U3HN4GFA9> you should be able to use docker exec -it &lt;container_id&gt; peer chaincode .... commands",
        "ts": "1484847642.001243"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "use the peerX node (your choice)",
        "ts": "1484847655.001244"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "and the SDK should also work fine",
        "ts": "1484847681.001245"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U3HN4GFA9> not sure this is exactly what you were looking for: but check out fabric.git\/test\/docker-compose.yml",
        "ts": "1484848064.001246"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "<@U0UKTPMG8> Thanks. I tried ```docker exec -it bddtests_vp0_1 peer chaincode deploy -n mycc -p <http:\/\/github.com\/hyperledger\/fabric\/examples\/chaincode\/go\/chaincode_example02|github.com\/hyperledger\/fabric\/examples\/chaincode\/go\/chaincode_example02> -c '{\"Args\":[\"init\",\"a\",\"100\",\"b\",\"200\"]}'1``` but I got ```2017-01-19 17:49:08.487 UTC [msp] GetDefaultSigningIdentity -&gt; INFO 01c Obtaining default signing identity\npanic: runtime error: index out of range```",
        "ts": "1484848217.001247"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "<@U3HN4GFA9> <@U0ULK2JPP> may be able to quickly answer that one",
        "ts": "1484848274.001248"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "and you have an extra 1 at end it appears",
        "ts": "1484848287.001249"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "not sure that is issue though",
        "ts": "1484848291.001250"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "No, that's just an issue when copy\/pasting...",
        "ts": "1484848446.001251"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "k, :wink:",
        "ts": "1484848493.001252"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "<@U0ULK2JPP> may need to step in to explain if params are complete",
        "ts": "1484848517.001253"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "<@U0KPFAZNF> Thanks. Unfortunately, this one has only one peer.",
        "ts": "1484848520.001254"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i meant it as an example of port surfacing",
        "ts": "1484848551.001255"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "Yes indeed.",
        "ts": "1484848583.001256"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "Thanks. Apparently, we need to expose also 7050",
        "ts": "1484848596.001257"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "otherwise, we have `Error: Error getting broadcast client: Error connecting to 0.0.0.0:7050 due to grpc: timed out when dialing` when peer chaincode deploy\n`",
        "ts": "1484848612.001258"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "via the orderer, though",
        "ts": "1484848629.001259"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "not the peer",
        "ts": "1484848630.001260"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "OK, but after adding ports: 7050:7050 to the orderer",
        "ts": "1484848716.001261"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "This example with one peer seemed to work.",
        "edited": {
            "user": "U3HN4GFA9",
            "ts": "1484848741.000000"
        },
        "ts": "1484848722.001262"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "when running `peer chaincode ...` outside `docker`",
        "ts": "1484848825.001264"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "So we'll try to add more peers after our lunch.",
        "edited": {
            "user": "U3HN4GFA9",
            "ts": "1484848848.000000"
        },
        "ts": "1484848830.001265"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "cool..be aware of <https:\/\/jira.hyperledger.org\/browse\/FAB-1652>",
        "ts": "1484848954.001267"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "it may impact the ability for the peer container to find the orderer, etc",
        "ts": "1484848969.001268"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i have it fixed locally, fwiw",
        "ts": "1484848977.001269"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "would be willing to share",
        "ts": "1484848981.001270"
    },
    {
        "type": "message",
        "user": "U1AJV5S2G",
        "text": "Test post (we're working on the format): Functional Integration Test (FIT): \nResult=Passed\n\nCommit level:\n\nPeer: 22ec03f     \nCOP: 9c6c125       \nnode-sdk: 7eef633",
        "ts": "1484848990.001271"
    },
    {
        "type": "message",
        "user": "U11HTMW0H",
        "text": "The CI team (Ramesh) has created an end-to-end Jenkins Job called FIT and is currently run in the Jenkins sandbox.  FIT stands for Functional Integration Test.  The test is currently based on node sdk end-to-end tests.  End-to-end implies the need for all architectural components and the corresponding docker images built from the corresponding repository for the: orderer, ca (formerly known as cop), and endorser.   The FIT test will grow and tests will be added to the Jenkins Job.   In particular, we will be adding the creation of channels\/chains in the near future.  The results from the Job will be posted to this channel, with pass\/fail status, a link to the job, the docker-compose used, and logs.  If the job fails a JIRA issue will be opened manually.   If the job passes the associated docker images will be pushed and tagged to org: rameshthoomu.  The publishing of images to Ramesh's public docker repository is a short-term solution.   Links to the tagged images will be in the slack message.  The Job will be run daily, at midnight, and primed with a run in the next hour.",
        "ts": "1484852904.001272",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0KM61BCP"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": "added an integration to this channel: <https:\/\/hyperledgerproject.slack.com\/services\/B3TQKS3K5|jenkins>",
        "bot_id": "B3TQKS3K5",
        "type": "message",
        "subtype": "bot_add",
        "user": "U11HH3P7Y",
        "ts": "1484853356.001273"
    },
    {
        "text": "",
        "bot_id": "B3TQKS3K5",
        "attachments": [
            {
                "fallback": "Slack\/Jenkins plugin: you're all set on <https:\/\/jenkins.hyperledger.org\/sandbox\/>",
                "id": 1,
                "color": "36a64f",
                "fields": [
                    {
                        "title": "",
                        "value": "Slack\/Jenkins plugin: you're all set on <https:\/\/jenkins.hyperledger.org\/sandbox\/>",
                        "short": false
                    }
                ],
                "mrkdwn_in": [
                    "pretext",
                    "text",
                    "fields"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1484853387.001274"
    },
    {
        "text": "",
        "bot_id": "B3TQKS3K5",
        "attachments": [
            {
                "fallback": "Functional-Integration-Testing - #62 Back to normal after 6 hr 9 min (<https:\/\/jenkins.hyperledger.org\/sandbox\/job\/Functional-Integration-Testing\/62\/|Open>)\nClick this Link to see the Commit Levels: <https:\/\/jenkins.hyperledger.org\/sandbox\/job\/Functional-Integration-Testing(FIT)\/62\/artifact\/gopath\/src\/github.com\/hyperledger\/fabric\/bddtests\/commit_history.log>\n\nBuild Images located here: \nPEER-IMAGE: <https:\/\/hub.docker.com\/r\/rameshthoomu\/fabric-peer-x86_64\/tags> \nORDERER-IMAGE:<https:\/\/hub.docker.com\/r\/rameshthoomu\/fabric-orderer-x86_64\/tags>\nCA_IMAGE:<https:\/\/hub.docker.com\/r\/rameshthoomu\/fabric-ca-x86_64\/tags>\nCCENV_IMAGE: <https:\/\/hub.docker.com\/r\/rameshthoomu\/fabric-ccenv-x86_64\/tags>",
                "id": 1,
                "color": "36a64f",
                "fields": [
                    {
                        "title": "",
                        "value": "Functional-Integration-Testing - #62 Back to normal after 6 hr 9 min (<https:\/\/jenkins.hyperledger.org\/sandbox\/job\/Functional-Integration-Testing\/62\/|Open>)\nClick this Link to see the Commit Levels: <https:\/\/jenkins.hyperledger.org\/sandbox\/job\/Functional-Integration-Testing(FIT)\/62\/artifact\/gopath\/src\/github.com\/hyperledger\/fabric\/bddtests\/commit_history.log>\n\nBuild Images located here: \nPEER-IMAGE: <https:\/\/hub.docker.com\/r\/rameshthoomu\/fabric-peer-x86_64\/tags> \nORDERER-IMAGE:<https:\/\/hub.docker.com\/r\/rameshthoomu\/fabric-orderer-x86_64\/tags>\nCA_IMAGE:<https:\/\/hub.docker.com\/r\/rameshthoomu\/fabric-ca-x86_64\/tags>\nCCENV_IMAGE: <https:\/\/hub.docker.com\/r\/rameshthoomu\/fabric-ccenv-x86_64\/tags>",
                        "short": false
                    }
                ],
                "mrkdwn_in": [
                    "pretext",
                    "text",
                    "fields"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1484857714.001275"
    },
    {
        "type": "message",
        "user": "U11HH3P7Y",
        "text": "Commit link is broken.. Fixed this now. Please see the commit log from this link `<https:\/\/jenkins.hyperledger.org\/sandbox\/job\/Functional-Integration-Testing\/62\/artifact\/gopath\/src\/github.com\/hyperledger\/fabric-sdk-node\/commit_history.log>`",
        "ts": "1484858029.001276"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "<@U0ULK2JPP> <@U0UKTPMG8> when run outside docker, `peer chaincode deploy ...` failed and the peer vp0 whose ports were mapped to the machine logged ```vp0_1         | 2017-01-19 20:43:10.501 UTC [dockercontroller] deployImage -&gt; ERRO 19b Error building images: cannot connect to Docker endpoint\nvp0_1         | 2017-01-19 20:43:10.501 UTC [dockercontroller] deployImage -&gt; ERRO 19c Image Output:\nvp0_1         | ********************\nvp0_1         | \nvp0_1         | ********************\n```",
        "ts": "1484859346.001277"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "But we managed to fix it by setting `CORE_VM_ENDPOINT` to `unix:\/\/\/var\/run\/docker.sock` instead of  `<http:\/\/172.17.0.1:2375>` in `bddtests\/compose-defaults.yml` and adding \n```volumes:\n       - \/var\/run\/docker.sock:\/var\/run\/docker.sock\n```\n to this file too inside `vp`.",
        "ts": "1484859499.001278"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "This seemed to work.",
        "ts": "1484859550.001279",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0ULK2JPP"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U3HN4GFA9> right\u2026 there are variations depending on how your docker env is setup",
        "ts": "1484859926.001280"
    },
    {
        "type": "message",
        "user": "U3HN4GFA9",
        "text": "<@U0ULK2JPP> thanks for your help, appreciate it!",
        "ts": "1484860203.001281",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0ULK2JPP"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "this is great progress <@U11HTMW0H> and <@U11HH3P7Y>",
        "ts": "1484860755.001282"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "but could we have the jenkins slack integration write to <#C11SL9YDV|fabric-ci-status>?",
        "edited": {
            "user": "U0KM61BCP",
            "ts": "1484860819.000000"
        },
        "ts": "1484860776.001283"
    },
    {
        "type": "message",
        "user": "U11HH3P7Y",
        "text": "yes we have",
        "ts": "1484860821.001285"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "oh good",
        "ts": "1484860825.001286"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "I saw the bot message above and was worried about spamming this channel",
        "ts": "1484860844.001287"
    },
    {
        "type": "message",
        "user": "U11HH3P7Y",
        "text": "ok next build result will publish to <#C11SL9YDV|fabric-ci-status>",
        "ts": "1484860870.001288",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0KM61BCP"
                ],
                "count": 1
            }
        ]
    }
]
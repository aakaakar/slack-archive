[
    {
        "user": "U1L1D0SP4",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1L1D0SP4|celder> has joined the channel",
        "ts": "1466770514.000276"
    },
    {
        "user": "U1L24390X",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1L24390X|wlahti> has joined the channel",
        "ts": "1466777526.000277"
    },
    {
        "type": "message",
        "user": "U0VKPD6A2",
        "text": "Agree with <@U0KPFAZNF> that determinism and Turing completeness are separate.  I can have transaction logic: \"return random(n)\" which does not require a Turing complete language, but also clearly is not deterministic.  \n\nThe contract security issue though seems more related to language complexity than determinism. It doesn't matter if f() is identified by its hash, the issue is whether f() reflects the real-world intent and whether a human can determine that - both to create the code and to verify someone else's code.  So called smart contracts are no different than any other program.  It's hard to take a conceptual idea and formalize it in code without creating bugs.",
        "ts": "1466778363.000278"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "I agree completely <@U0VKPD6A2>",
        "ts": "1466778422.000279"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "for that reason, I prefer to stay away from general purpose languages for contract definition purposes",
        "ts": "1466778459.000280"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "(actually also for determinism)",
        "ts": "1466778487.000281"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "for instance, a go routine probably has no place within f(), but that is hard to enforce in a GPL",
        "ts": "1466778520.000282"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "but also, to your point, for verification purposes",
        "ts": "1466778545.000283"
    },
    {
        "user": "U1L2C9F3R",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1L2C9F3R|cdaughtr> has joined the channel",
        "ts": "1466778826.000284"
    },
    {
        "type": "message",
        "user": "U1ENXTQRL",
        "text": "Is there any particular reason why Go was chosen as the implementation language for fabric?",
        "ts": "1466783378.000285"
    },
    {
        "type": "message",
        "user": "U1ENXTQRL",
        "text": "I'm not really acquainted with Go, but I was wondering what positive features does it have that make it into a good language for this type of project.",
        "ts": "1466783419.000286"
    },
    {
        "user": "U1L4079PX",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1L4079PX|sebastian.hassinger> has joined the channel",
        "ts": "1466787455.000287"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "<@U1ENXTQRL>: I will give it a 'go'.  :slightly_smiling_face:  Chosen for built-in concurrency support.  Cloud readiness from deployment perspective (e.g single binary, build speed).  Simplicity of language constructs, as well accessibility to the masses from uptake perspective.    Pragmatic design choice of composition over inheritance (no magic).  Readability of code (ie.  not enough language surface area to deviate due to tastes\/experience).",
        "ts": "1466791889.000288"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "<@U1ENXTQRL>: Continuing:  performance, while still maintaining ability to integrate C\/C++ easily if necessary or desired from lib reuse or refactoring for performance.",
        "ts": "1466792007.000289"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "the goal was to have a base design (an implementation) that was as simple as possible from both perspective of architecture and grammar.",
        "ts": "1466792067.000290"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "the cloud readiness is manifested through the pervasive use of docker from both a testing (behave) and implemenation (chaincode) perspective.",
        "ts": "1466792149.000291"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "in a nutshell, could not think of a more pragmatic\/performant\/understandable\/deployable\/learnable\/feature rich language choice.",
        "edited": {
            "user": "U0UKTPMG8",
            "ts": "1466792206.000000"
        },
        "ts": "1466792190.000292",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0ULK2JPP",
                    "U17GHSSFR",
                    "U1E795PLG",
                    "U0PCUJ69X"
                ],
                "count": 4
            }
        ]
    },
    {
        "type": "message",
        "user": "U0TFEHX8E",
        "text": "you should add a `dev_FAQ.md` to <https:\/\/github.com\/hyperledger\/fabric\/tree\/master\/docs\/FAQ> with that answer. It\u2019s a common question",
        "edited": {
            "user": "U0TFEHX8E",
            "ts": "1466792361.000000"
        },
        "ts": "1466792352.000294"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "me?",
        "ts": "1466792392.000297"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "or is it already answered?",
        "ts": "1466792407.000298"
    },
    {
        "type": "message",
        "user": "U0TFEHX8E",
        "text": "yeah, I don\u2019t think it is answered anywhere",
        "ts": "1466792661.000299"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U0UKTPMG8>: fair to say that it combines things like GC and strong typing that eliminates costly and difficult to catch bugs ?",
        "ts": "1466792753.000300"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "<@U0ULK2JPP>: Yes.... forgot that one.  Static type checking is critical IMO.",
        "ts": "1466792811.000301"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "particularly in light of the message oriented architecture of the system (ie. chaincode and p2p)",
        "ts": "1466792856.000302"
    },
    {
        "user": "U1L6PRGTF",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1L6PRGTF|boydjohnson> has joined the channel",
        "ts": "1466804316.000303"
    },
    {
        "user": "U1L6YKK9S",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1L6YKK9S|shparikh> has joined the channel",
        "ts": "1466810271.000304"
    },
    {
        "user": "U1L7GDUMA",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1L7GDUMA|lobinhojr> has joined the channel",
        "ts": "1466819556.000305"
    },
    {
        "user": "U1L82BEJK",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1L82BEJK|bhavarora17> has joined the channel",
        "ts": "1466827519.000306"
    }
]
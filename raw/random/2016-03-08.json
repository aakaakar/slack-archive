[
    {
        "type": "message",
        "user": "U0N2WR3KK",
        "text": "@dear IBMers, maybe missed it, but some remarks to below two reviews of your whitepaper in the email chain would be great. \nActually, it points to a broader issue, question of identity management on  blockchain, which seems worthwhile discussing. See also article shared.\n\nregards groet gruss\n\nBenedikt\n\nOn 23 feb. 2016, at 11:49, benedikt herudek &lt;benedikt.herudek@gmail.com&gt; wrote:\n\nok, get your point ! indeed, without turing complete machines, things\nlook different.\n\nTwo questions:\n1. How will you then have binding smart scripts ? You basically 'only\nsecure'  the data on the blockchain, you dont plug together atomic\ntransactions, like: you switch on some device for me, then blockchain\nscript sends you currency\n2. even if you have no turing complete language on the blockchain,\nwould see the need of a strong obligatory consensus mechanism. if you\nhave only identity management, it seems to me (happy to be corrected)\nyou basically rely on 'disciplining' your well-known members in case\nthey would introduce forged copies.\n\nHi Fabian, Hello Benedict, I would hope for an architecture where a blockchain stores more than letters of intent but implements somewhat more binding and automated smart contracts. A \"letter of intent\" can still execute a smart contract. The smart contract would just not be executed as part of the blockchain protocol but 'outside' of the blockchain. In the end, a turing machine consists of a storage and an executing unit and I propose the executing unit to be outside of the blockchain (which is just for storage). Well, this is just one way to do it and I would rather see the features of the chain be implemented as blockchain protocol. I envision a blockchain that has some reduced (but extendable) set of allowed operations (non turing complete) that enable the implementation of a high-speed and highly scalable blockchain, while turing complete scripting (e.g. the EVM) can be plugged in as an outside protocol, that can be executed by 3rd party but is not part of the blockchain protocol. Agree with the necessity of Identity Management and scalability. Copied in my points below (to have on thread): 1. would see the need of a strong obligatory consensus mechanismus, it seems optional in OBC. 2.An open question to me seems how you want to block malicious code (turing halting problem), if you don't introduce a digitcal currency and hence allow something like the notion of gas in ethereum to stop too long running transactions. With what I proposed above, you don't have that issue since the blockchain doesn't execute any user defined script but only runs those that have been integrated into the blockchain protocol. Cheers -- Fabian regards benedikt --- regards groet gruss benedikt herudek On 23.02.2016 10:29, Fabian Schuh via hyperledger-tsc wrote: &amp;gt; This is an excellent paper to get a rough idea and it is well written. Good job. &amp;gt; &amp;gt; We at Cryptonomex have though about some parts of your design already and agree on most of them: &amp;gt; &amp;gt; * There is a need for an identity management on top of a blockchain. For that reasons, you would like to have customers register an account name (together with public keys)on the blockchain and authenticate every transaction with on of your accounts &amp;gt; * The blockchain mere purpose is to store \"letters of intent\" from users (e.g. instructions) and they could be anything from \"transfers\" to sell orders for decentralized order books. &amp;gt; &amp;gt; Now comes the \"issue\": If you want these instructions to be \"executed\" as a part of your blockchain protocol (you call them chaincode) such that the blockchain as a database transits into a new \"state\", then you need to take quite some care about scalability and speed as every instruction has to be executed on every full node if you want to have a trustless system. &amp;gt; &amp;gt; Two strategies exist out of this misery: &amp;gt; a) not every node on your network validates every instruction but only &amp;gt; a set of elected validators do and &amp;gt; they validate each other. &amp;gt; b) you don't execute any instruction at all and let the end users (or &amp;gt; intermediate service) determine the &amp;gt; actual state of the whole (or a part) of the blockchain database. &amp;gt; (We have this implemented already and &amp;gt; call this technology \"Plasma\" internally). &amp;gt; &amp;gt; Anyway, seeing how you would like this technology to evolve and knowing that we already have parts of it implemented, maybe we should consider a closer partnership between IBM and Cryptonomex. &amp;gt; &amp;gt; Best regards &amp;gt; -- Fabian !!!!!!!!!!!!!! COPIED IN !!!!!!!!!!",
        "ts": "1457427876.000273"
    },
    {
        "user": "U0R6B47PX",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0R6B47PX|samchadwick> has joined the channel",
        "ts": "1457442065.000274"
    },
    {
        "user": "U0R6WK726",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0R6WK726|clark.thompson> has joined the channel",
        "ts": "1457447522.000275"
    },
    {
        "user": "U0R7Q5C30",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0R7Q5C30|zsolt> has joined the channel",
        "ts": "1457451389.000276"
    },
    {
        "user": "U0R7UDW2Y",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0R7UDW2Y|echang> has joined the channel",
        "ts": "1457453220.000277"
    },
    {
        "user": "U0R9RCEAV",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0R9RCEAV|jaekwon> has joined the channel",
        "ts": "1457463450.000278"
    },
    {
        "user": "U0R9A1FAP",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0R9A1FAP|mark_atwood> has joined the channel",
        "ts": "1457469874.000279"
    },
    {
        "user": "U0RD1ALMV",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0RD1ALMV|hart.montgomery> has joined the channel",
        "ts": "1457483971.000280"
    },
    {
        "user": "U0RD2KYHW",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0RD2KYHW|ebuchman> has joined the channel",
        "ts": "1457488094.000281"
    },
    {
        "user": "U0RBTKBFV",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0RBTKBFV|sarose> has joined the channel",
        "ts": "1457491968.000282"
    }
]
[
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U0UKTPMG8> do you mean something like this? <http:\/\/labix.org\/gopkg.in>",
        "attachments": [
            {
                "title": "gopkg.in - Stable APIs for the Go language",
                "title_link": "http:\/\/labix.org\/gopkg.in",
                "text": "Stable APIs for the Go language",
                "fallback": "gopkg.in - Stable APIs for the Go language",
                "from_url": "http:\/\/labix.org\/gopkg.in",
                "service_icon": "http:\/\/labix.org\/favicon.ico",
                "service_name": "labix.org",
                "id": 1
            }
        ],
        "ts": "1475656984.000823"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "we have been thinking about \/ playing around with using <http:\/\/gopkg.in|gopkg.in> in order to version packages where it makes sense.  the most obvious one(s) tend to be the interfaces which \"clients\" use - e.g. chaincode shim, GRPC APIs, etc.  Chaincode shim has been the biggest trouble maker to date.  Now <http:\/\/gopkg.in|gopkg.in> follow a model where you do not break interfaces within a release stream only when doing a major version release.  For example, `go get <http:\/\/gopkg.in\/mastersingh24\/mypackage.v0|gopkg.in\/mastersingh24\/mypackage.v0>` will be pull the latest branch\/tag form `<http:\/\/github.com\/mastersingh24\/mypackage|github.com\/mastersingh24\/mypackage>` which matches the the form `v0.N.N`.  If we change the interface, you need to bump the version to `v1.N.N`",
        "edited": {
            "user": "U0PB67X4K",
            "ts": "1475667632.000000"
        },
        "ts": "1475665997.000825"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "sounds good?",
        "ts": "1475666358.000827"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "it can work",
        "ts": "1475668424.000829"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0PB67X4K> I like the overall plan, but I would encourage specific tags rather than ones that allow it to float",
        "ts": "1475669921.000830"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "Agreed",
        "ts": "1475669949.000831"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "my only other concern is the long term reliability of <http:\/\/gopkg.in|gopkg.in>\u2026we saw it go down a few weeks back",
        "ts": "1475669953.000832"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i wonder if there is a hosting option, e.g. <http:\/\/gopkg.hyperledger.org|gopkg.hyperledger.org>",
        "ts": "1475669973.000833"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "not saying we would be more reliable than <http:\/\/gopkg.in|gopkg.in>, but at least we control our destiny :wink:",
        "ts": "1475670007.000834"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": " <@U0P2GSA8Z> suggested we might want to see if LF could host a version",
        "ts": "1475670043.000835"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "Always best when you can blame yourself ",
        "ts": "1475670065.000836",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U11MANG9G",
                    "U0UHG4VP1"
                ],
                "count": 2
            }
        ]
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "right",
        "ts": "1475670069.000837"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "Hi Jeff, I just don\u2019t want to miss anything. When you say:",
        "attachments": [
            {
                "fallback": "[October 4th, 2016 7:14 AM] jeffgarratt: I am on the don't do it side",
                "ts": "1475590472.000821",
                "author_subname": "jeffgarratt",
                "channel_id": "C28CXQXD5",
                "channel_name": "fabric-maintainers",
                "is_msg_unfurl": true,
                "text": "I am on the don't do it side",
                "author_name": "Jeff Garratt",
                "author_link": "https:\/\/hyperledgerproject.slack.com\/team\/jeffgarratt",
                "author_icon": "https:\/\/secure.gravatar.com\/avatar\/9804aef51ff2b9a2166d0383f2cf81ea.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2F66f9%2Fimg%2Favatars%2Fava_0005-48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "color": "D0D0D0",
                "from_url": "https:\/\/hyperledgerproject.slack.com\/archives\/fabric-maintainers\/p1475590472000821",
                "is_share": true,
                "footer": "Posted in #fabric-maintainers"
            }
        ],
        "ts": "1475670844.000838"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "\u2026 what exactly do you mean?",
        "ts": "1475670856.000839"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "You suggest not to separate to components\/modules?",
        "ts": "1475670876.000840"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "Just to say that I am OK with the (\"non-exisitng\u201d) dependencies injection which Golang provides\u2026(pardon the triple negative here)...",
        "ts": "1475670951.000841"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "\u2026 and some of these modules are certainly not stateless. That\u2019s also true\/known, etc. But I am happy to hear\/discuss more.",
        "ts": "1475671007.000844"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "btw what do you think about the connections between the parts that simon pointed out? e.g. will we have to implement xyz proto client multiple times, or will we have that in proto repo?",
        "ts": "1475671345.000845"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "((( maintainers: please review these <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/1467\/> \n      <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/1271\/> )))",
        "ts": "1475675040.000846"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "<@U11MANG9G> I am unclear as to the advantage of this effort, or what problem it is solving.  We do have separate components\/modules.  What seems to be being discussed here is separation into different repos.  I do not see these as analogous.",
        "ts": "1475675088.000847"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "It would be of interest to me to see how the workflow is improved for the developer who would be the consumer of this proposal.",
        "ts": "1475675284.000848"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "To some extent the original choice of golang was meant to narrow the choices wrt to module organization, to obviate the issues associated with modularity (see Jigsaw and Java for example).  Thus limiting our options, and not incurring the complexity associated with attempting such a feat, at the cost of development aesthetics (aka it aint pretty, but it's simple).",
        "ts": "1475675710.000849"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "Golang was predicated on the tenet of limiting your options.",
        "edited": {
            "user": "U0UKTPMG8",
            "ts": "1475675782.000000"
        },
        "ts": "1475675755.000850"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U0UKTPMG8> the developer would face less code (easier to understand), the source would be more organized and the components would have a well-defined API",
        "ts": "1475676104.000852"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "I understand where <@U0UKTPMG8> is coming from, and I would add one more challenge to splitting things up",
        "ts": "1475676256.000853"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i would classify it as \u201cthe branching problem\"",
        "ts": "1475676266.000854"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "that is, things in one repo are naturally branchable\u2026when you split them up, this becomes more awkward (consider parallel efforts for v0.6 and convergence",
        "ts": "1475676294.000855"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "<@U1AU8DRQR> At what cost?   I would assert that all of the above can be achieved by reorganizing the code in the fabric repo, (wrt less code, if the developer focuses simply on a module, the same result is attained)",
        "ts": "1475676310.000856"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "you have to manage the branching with version numbers carefully, and it can be awkward",
        "ts": "1475676333.000857"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "maybe a heavy reorganization would also do it, no doubt",
        "ts": "1475676340.000858"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "that said, I am for the split and heres why",
        "ts": "1475676341.000859"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "if we were talking about purely go modules, the argument to stay as a monolith repo would be stronger, but we arent",
        "ts": "1475676374.000860"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "node sdk, and java shim are good examples: they are super awkward to be in something considered\\ a go-module in certain contexts",
        "edited": {
            "user": "U0KPFAZNF",
            "ts": "1475676409.000000"
        },
        "ts": "1475676396.000861"
    },
    {
        "type": "message",
        "user": "U0UHG4VP1",
        "text": "We will soon have NEXUS available ",
        "ts": "1475676402.000862"
    },
    {
        "type": "message",
        "user": "U0UHG4VP1",
        "text": "If this informs your discussion ",
        "ts": "1475676414.000864"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "(ty <@U0UHG4VP1>, that is good news indeed)",
        "ts": "1475676427.000865"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "but i will also point out that we have run into some issues with even the pure go space",
        "ts": "1475676451.000866"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "having the golang shim be under the fabric project, which has its own vendor, has been a problem",
        "edited": {
            "user": "U0KPFAZNF",
            "ts": "1475676555.000000"
        },
        "ts": "1475676467.000867"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "so, i think I am in favor of at least seeing things like sdks and shims as separate repos",
        "ts": "1475676505.000868"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i dont have an opinion on the finer grained parts of the conversation, like splitting out orderer or membersrvc",
        "ts": "1475676530.000869"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0UKTPMG8> does have a point that at least some aspects of the problem could be addressed with code reorganization within the single repo",
        "ts": "1475676705.000871"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "<@U0KPFAZNF>, <@U0UKTPMG8> I agree. I would argue that the code reorganization within the repo is a critical milestone (which is needed either way).",
        "ts": "1475691516.000872"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "I think that would be a good start.",
        "ts": "1475691527.000873"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "I also believe that separating the functionality (even logically) so that the boundaries are clearer\u2026 where one can see what services\/APIs each component consumes\/provides and how\u2026 is what we need.",
        "ts": "1475691619.000875",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0UHG4VP1",
                    "U1AU8DRQR"
                ],
                "count": 2
            }
        ]
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "___\nVendoring in go is a good topic, but one that we should resolve regardless too.",
        "ts": "1475691694.000877"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "I\u2019m more about separating to components\/modules (that are more than just directories) where we include whatever is missing (and by that cross the boundaries)\u2026 I argue that this is where the bulk of the work lies. The rest should be a lot simpler (and hopefully, will be more convincing\/appealing to you <@U0UKTPMG8> and others) once the first step is complete).",
        "ts": "1475691814.000878"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "Or otherwise, maybe after restructuring the code so nicely, we\u2019ll learn that it\u2019s good enough. But still, it\u2019s a good goal to have, especially when people promote the pluggable architecture. I think that more\/better componentization is needed.",
        "ts": "1475691921.000879",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U1AU8DRQR"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "\u2014\nHmmm. Such a long answer\u2026. Maybe I should start a blog? Nah, maybe not  :wink:\n\u2014",
        "ts": "1475691996.000883",
        "reactions": [
            {
                "name": "chicken",
                "users": [
                    "U1AU8DRQR",
                    "U0UHG4VP1"
                ],
                "count": 2
            }
        ]
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "I support the code reorganization to separate components ",
        "ts": "1475696640.000884"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "We should have a plan for that. Do you think we should do it in small steps or with one big commit?",
        "ts": "1475696690.000885"
    },
    {
        "type": "message",
        "user": "U0UHG4VP1",
        "text": "<@U1AU8DRQR>: flag days are good.",
        "ts": "1475698572.000886"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "Chicken is my fav",
        "ts": "1475698822.000887",
        "reactions": [
            {
                "name": "chicken",
                "users": [
                    "U0UHG4VP1"
                ],
                "count": 1
            }
        ]
    }
]
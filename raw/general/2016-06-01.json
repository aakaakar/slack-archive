[
    {
        "type": "message",
        "user": "U143D0EQ4",
        "text": "<@U1CTBUNEN>: What type of query are you trying to perform?",
        "ts": "1464765225.002194"
    },
    {
        "type": "message",
        "user": "U143D0EQ4",
        "text": "<@U1CTBUNEN>",
        "ts": "1464765238.002195"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "say I have registered an asset that changes custody and ownership as it travels down a supply chain",
        "ts": "1464765342.002196"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "I want to be able to query based on things like serial number, manufecturer, timeframe, etc...",
        "ts": "1464765357.002197"
    },
    {
        "user": "U1D6J97CL",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1D6J97CL|jb> has joined the channel",
        "ts": "1464765643.002198"
    },
    {
        "type": "message",
        "user": "U143D0EQ4",
        "text": "<@U1CTBUNEN>: Ok, I understand Are the attributes you described, such as serial number and manufacturer, stored as part of the value when calling PutState?",
        "ts": "1464765725.002199"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "I get JSON documents with key-values that describe a transaction (change of custody, old owner, new owner, business step, etc...)",
        "ts": "1464765898.002200"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "I have experience with Ethereum where I would use the transaction event logs to log those values so that I can scan the blockchain for them later",
        "ts": "1464765919.002201"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "I'm not sure how PutState could be utilized in my example - is that using native storage or it somehow works with logs as well ?",
        "ts": "1464765942.002202"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "<@U143D0EQ4>: I can chat you privately a full JSON example of the data I'm trying to store",
        "ts": "1464765976.002203"
    },
    {
        "type": "message",
        "user": "U143D0EQ4",
        "text": "<@U1CTBUNEN>: I don\u2019t think the answer I am going to give right now is going to be as satisfying as you might like, but you have \"run into\" the right person, as I am the \"database guy\" that has a proposal to address short-comings of the present implementation. I do want to help.",
        "ts": "1464766383.002205"
    },
    {
        "type": "message",
        "user": "U143D0EQ4",
        "text": "<@U1CTBUNEN>: The PutState method is used when writing chaincode to save state to the ledger. Ultimately, this state gets saved into a RocksDB key-value store with a name of the form &lt;chaincode-id&gt;_&lt;key&gt;.",
        "ts": "1464766489.002206"
    },
    {
        "type": "message",
        "user": "U143D0EQ4",
        "text": "<@U1CTBUNEN>: While this state can be queried, if you wanted to have an expression to pull out something from a JSON-value, that would not perform well today, as there are no secondary indexes (database terminology).",
        "ts": "1464766550.002207"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "<@U143D0EQ4>: well I'm getting JSON documents from from my API but I don't want to store the data in JSON format on the blockchain",
        "ts": "1464766623.002208"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "I can store them as key-values but I need to encapsulate them somehow so that I know those are part of one single transaction",
        "ts": "1464766689.002209"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "does that make sense ?",
        "ts": "1464766702.002210"
    },
    {
        "type": "message",
        "user": "U143D0EQ4",
        "text": "Yes, it does. I wish somehow the work I just started were magically done because I think it would address your issue nicely. We just started the wiki page for the proposed ledger storage architecture and capabilities: <https:\/\/github.com\/hyperledger\/fabric\/wiki\/Next-Ledger-Architecture-Proposal>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/wiki\/Next-Ledger-Architecture-Proposal",
                "text": "fabric - Fabric is a blockchain project in Incubation proposed to the community and documented at <https:\/\/goo.gl\/RYQZ5N>. Information on what Incubation entails can be found in the Hyperledger Proj...",
                "fallback": "GitHub: hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/wiki\/Next-Ledger-Architecture-Proposal",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1464766861.002211"
    },
    {
        "type": "message",
        "user": "U143D0EQ4",
        "text": "I have a *very* rough prototype and design sketches. I will be adding details and having discussions to address issues such as the ones you bring up in the coming days\/weeks.",
        "ts": "1464767054.002213"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "<@U143D0EQ4>: I guess it would be awesome if one can store data on the chain in JSON-LD format and then use graph queries to get data back???",
        "ts": "1464767232.002214"
    },
    {
        "type": "message",
        "user": "U143D0EQ4",
        "text": "<@U1CTBUNEN>: Yes. My proposal does not use JSON-LD at present. I store a compact pointer to the graph edge vertices as part of each transaction in the database. This helps to quickly traverse while inspecting the value(s) at each vertex.",
        "ts": "1464767765.002215"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "<@U143D0EQ4>: any thoughts on using transaction event logs as a pseudo data layer ?",
        "ts": "1464768015.002216"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "I made some progress with that approach with Ethereum",
        "ts": "1464768027.002217"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "they are using bloom filters to store indexed event logs",
        "ts": "1464768045.002218"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "one can have as many event logs per transaction as needed",
        "ts": "1464768059.002219"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "and since one business transaction = one blockchain transaction",
        "ts": "1464768076.002220"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "I use the event logs to log key:values",
        "ts": "1464768088.002221"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "and the transaction itself as the container",
        "ts": "1464768104.002222"
    },
    {
        "type": "message",
        "user": "U143D0EQ4",
        "text": "It isn\u2019t a bad approach. And the new direction I am headed in is similar. For example, I also use the transaction as the container. I had an additional constraint to create a more cryptographically secure datastore, so that required some architectural fancy-footwork. I also wanted to create something that would work with WORM media, which was more of a personal pet-project to create something that would support some physical integrity protections as well.",
        "ts": "1464768478.002223"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "I see",
        "ts": "1464768698.002224"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "hyperledger DOES support event logs right ?",
        "ts": "1464768713.002225"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "and not only pub\/sub for new ones but a client can scan older events as well ?",
        "ts": "1464768738.002226"
    },
    {
        "type": "message",
        "user": "U143D0EQ4",
        "text": "Yes.",
        "ts": "1464769575.002227"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "awesome",
        "ts": "1464769883.002228"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "and is there something like getTransactionReceipt(trans_hash) which will also return all event logs produced by the transaction?",
        "ts": "1464769911.002229"
    },
    {
        "type": "message",
        "user": "U143D0EQ4",
        "text": "Good question. I don\u2019t know the answer.",
        "ts": "1464770121.002230"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "well if I can find the transaction protocol description, we may know the answer",
        "ts": "1464770351.002231"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "where can I find the transaction header specs ?",
        "ts": "1464770359.002232"
    },
    {
        "type": "message",
        "user": "U143D0EQ4",
        "text": "Are you looking for the network protocol?",
        "ts": "1464770745.002233"
    },
    {
        "user": "U1D7EK7HN",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1D7EK7HN|bitcoindevotee> has joined the channel",
        "ts": "1464770785.002234"
    },
    {
        "user": "U1D788RB6",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1D788RB6|mdeubel> has joined the channel",
        "ts": "1464770839.002235"
    },
    {
        "type": "message",
        "user": "U143D0EQ4",
        "text": "fabric\/proto\/fabric.proto is the protcol buffer spec for a transaction",
        "ts": "1464770958.002236"
    },
    {
        "type": "message",
        "user": "U1CTBUNEN",
        "text": "thanks <@U143D0EQ4> - I will take a look",
        "ts": "1464772058.002237"
    },
    {
        "user": "U1D7TR679",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1D7TR679|gl> has joined the channel",
        "ts": "1464773277.002238"
    },
    {
        "user": "U1D832BL5",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1D832BL5|yukio_takagi> has joined the channel",
        "ts": "1464775735.002239"
    },
    {
        "user": "U1D89DP47",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1D89DP47|subzer0> has joined the channel",
        "ts": "1464777697.002240"
    },
    {
        "user": "U1D7Z9R4K",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1D7Z9R4K|nickposkitt> has joined the channel",
        "ts": "1464787884.002241"
    },
    {
        "user": "U1D9WCB2N",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1D9WCB2N|sganesan> has joined the channel",
        "ts": "1464788970.002242"
    },
    {
        "user": "U1D8B8RC3",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1D8B8RC3|ahsmirza> has joined the channel",
        "ts": "1464790094.002243"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "<@U1CK6522F> Down the road this may be possible, with the next consensus architecture (<https:\/\/github.com\/hyperledger\/fabric\/wiki\/Next-Consensus-Architecture-Proposal>), at some point, depending also on how you implement the chaincode",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/wiki\/Next-Consensus-Architecture-Proposal",
                "text": "fabric - Fabric is a blockchain project in Incubation proposed to the community and documented at <https:\/\/goo.gl\/RYQZ5N>. Information on what Incubation entails can be found in the Hyperledger Proj...",
                "fallback": "GitHub: hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/wiki\/Next-Consensus-Architecture-Proposal",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1464792223.002244"
    },
    {
        "user": "U1DAXEU65",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1DAXEU65|tobyproctor> has joined the channel",
        "ts": "1464795904.002246"
    },
    {
        "user": "U1D9R3WAX",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1D9R3WAX|szlaci83> has joined the channel",
        "ts": "1464798107.002247"
    },
    {
        "user": "U1DB44RSA",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1DB44RSA|lmclough> has joined the channel",
        "ts": "1464799272.002248"
    },
    {
        "user": "U1DARJ6TD",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1DARJ6TD|mariondaly> has joined the channel",
        "ts": "1464804250.002249"
    },
    {
        "user": "U1DCB9HSB",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1DCB9HSB|mirabuck> has joined the channel",
        "ts": "1464805188.002250"
    },
    {
        "user": "U1DEMKM7H",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1DEMKM7H|bhgandhi> has joined the channel",
        "ts": "1464822104.002251"
    },
    {
        "user": "U1DFLKJ15",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1DFLKJ15|ananthnadgir> has joined the channel",
        "ts": "1464834614.002252"
    },
    {
        "user": "U1DFP9MHU",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1DFP9MHU|somnath> has joined the channel",
        "ts": "1464839675.002253"
    },
    {
        "user": "U1DFU0M32",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1DFU0M32|chenhua> has joined the channel",
        "ts": "1464839956.002254"
    },
    {
        "user": "U1DFTDGKG",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1DFTDGKG|xiaoyuhe> has joined the channel",
        "ts": "1464841855.002256"
    },
    {
        "user": "U1DG1J63Z",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1DG1J63Z|elon> has joined the channel",
        "ts": "1464841987.002257"
    },
    {
        "user": "U1DG82RRV",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1DG82RRV|shenmq> has joined the channel",
        "ts": "1464845612.002258"
    }
]
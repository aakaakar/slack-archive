[
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "Is there anyone in charge of the docs?",
        "ts": "1467016535.000792"
    },
    {
        "type": "message",
        "user": "U10PFCC4R",
        "text": "for fabric? i think <@U0KN2SSKE>  .... but i only assume so cause he's been modifying them on github",
        "ts": "1467016939.000793"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "cool, thanks",
        "ts": "1467017341.000794"
    },
    {
        "user": "U1LESNKH9",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1LESNKH9|intrepidhk> has joined the channel",
        "ts": "1467019894.000795"
    },
    {
        "type": "message",
        "user": "U1LESNKH9",
        "text": "I'm assuming it's supposed to be like a modern \"enigma\" messaging application not for \"chatting\" per se but to send critical messages.",
        "attachments": [
            {
                "fallback": "[June 22nd, 2016 5:51 AM] garisingh: <@U0XQ35CDD> - the idea from DARPA is kinda interesting - \"messaging\" may be the wrong term as it is not so much a true chat app (at least the proposal I read).  More of a secret distributed message exchange",
                "author_subname": "garisingh",
                "ts": "1466545883.000474",
                "channel_id": "C0J02NU1E",
                "channel_name": "general",
                "is_msg_unfurl": true,
                "text": "<@U0XQ35CDD> - the idea from DARPA is kinda interesting - \"messaging\" may be the wrong term as it is not so much a true chat app (at least the proposal I read).  More of a secret distributed message exchange",
                "author_link": "https:\/\/hyperledgerproject.slack.com\/team\/garisingh",
                "author_icon": "https:\/\/secure.gravatar.com\/avatar\/80cf890a6180fc256afbff3e251490b1.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2F66f9%2Fimg%2Favatars%2Fava_0019-48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "color": "D0D0D0",
                "from_url": "https:\/\/hyperledgerproject.slack.com\/archives\/general\/p1466545883000474",
                "is_share": true,
                "footer": "Posted in #general"
            }
        ],
        "ts": "1467021474.000796"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "<http:\/\/www.coindesk.com\/darpa-seeks-blockchain-messaging-system-for-battlefield-back-office-use\/>",
        "attachments": [
            {
                "service_name": "CoinDesk",
                "title": "DARPA Seeks Blockchain Messaging System for Battlefield Use - CoinDesk",
                "title_link": "http:\/\/www.coindesk.com\/darpa-seeks-blockchain-messaging-system-for-battlefield-back-office-use\/",
                "text": "A major US defense agency devoted to advanced R&amp;D is seeking to create a secure-blockchain-based messaging system.",
                "fallback": "CoinDesk: DARPA Seeks Blockchain Messaging System for Battlefield Use - CoinDesk",
                "image_url": "http:\/\/media.coindesk.com\/2016\/04\/top-secret-e1461602528951.jpg",
                "image_width": 375,
                "image_height": 250,
                "ts": 1461603005,
                "from_url": "http:\/\/www.coindesk.com\/darpa-seeks-blockchain-messaging-system-for-battlefield-back-office-use\/",
                "image_bytes": 346148,
                "service_icon": "http:\/\/www.coindesk.com\/wp-content\/uploads\/2013\/04\/favicon1.ico?b6542b",
                "id": 1
            }
        ],
        "ts": "1467022302.000797",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U1LESNKH9"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U1LF57TGT",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1LF57TGT|kakarlapudi1> has joined the channel",
        "ts": "1467022994.000799"
    },
    {
        "user": "U1LGW5VC6",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1LGW5VC6|saurabh> has joined the channel",
        "ts": "1467028017.000800"
    },
    {
        "user": "U1LHHCE2J",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1LHHCE2J|yongkook> has joined the channel",
        "ts": "1467032904.000801"
    },
    {
        "user": "U1LHWHGGP",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1LHWHGGP|hdaly> has joined the channel",
        "ts": "1467033798.000802"
    },
    {
        "user": "U1LJ43537",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1LJ43537|ravi.malladi> has joined the channel",
        "ts": "1467035079.000803"
    },
    {
        "type": "message",
        "user": "U1JHMHW66",
        "text": "hey all",
        "ts": "1467036888.000804"
    },
    {
        "type": "message",
        "user": "U1JHMHW66",
        "text": "I am trying to deploy hyperledger peers in docker multihost overlay",
        "ts": "1467036908.000805"
    },
    {
        "type": "message",
        "user": "U1JHMHW66",
        "text": "the validating peers can talk fine to eachother, however the chaincode containers cannot talk back to peers",
        "ts": "1467036945.000806"
    },
    {
        "type": "message",
        "user": "U1JHMHW66",
        "text": "anyone having this issue?",
        "ts": "1467036965.000807"
    },
    {
        "user": "U1LJUAJH5",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1LJUAJH5|ejstutz> has joined the channel",
        "ts": "1467038761.000808"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "<@U1JHMHW66> - take a look at the `vm.docker.hostConfig` section of `core.yaml`.  You'll need to supply the correct network config in order for the chaincode containers to join the overlay network",
        "ts": "1467039753.000809"
    },
    {
        "type": "message",
        "user": "U0KM0C3M3",
        "text": "Still trying to wrap my mind around chain code - is it code that can be deployed, by users, into the blockchain, in order to extend a given blockchain's functionality, or is it better described as a set of transaction definitions and validation logic.  I guess the main difference I am wondering about is whether you can deploy chain code to the blockchain, on the fly - like ethereum smart contracts.",
        "ts": "1467047304.000810"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes you can",
        "ts": "1467047487.000811"
    },
    {
        "type": "message",
        "user": "U18D82GJH",
        "text": "<@U0KM0C3M3>: yes, you can write smart contracts in chaincode",
        "ts": "1467047509.000812"
    },
    {
        "type": "message",
        "user": "U18D82GJH",
        "text": "<@U0KM0C3M3>: What do you mean by \u201cset of transaction definitions and validation logic\u201d?",
        "ts": "1467047565.000813"
    },
    {
        "type": "message",
        "user": "U18D82GJH",
        "text": "<https:\/\/github.com\/hyperledger\/fabric\/tree\/master\/examples\/chaincode\/go>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/tree\/master\/examples\/chaincode\/go",
                "text": "fabric - Fabric is a blockchain project in Incubation proposed to the community and documented at <https:\/\/goo.gl\/RYQZ5N>. Information on what Incubation entails can be found in the Hyperledger Proj...",
                "fallback": "GitHub: hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/tree\/master\/examples\/chaincode\/go",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1467047623.000814"
    },
    {
        "type": "message",
        "user": "U18D82GJH",
        "text": "examples of cc ^^",
        "ts": "1467047633.000816"
    },
    {
        "type": "message",
        "user": "U0KM0C3M3",
        "text": "upthread, there was a description as \"different rule sets for authoring txn logic.\" - the above is how I would paraphrase that",
        "ts": "1467047641.000817"
    },
    {
        "user": "U1LLN7GTF",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1LLN7GTF|skamireddi> has joined the channel",
        "ts": "1467047894.000818"
    },
    {
        "type": "message",
        "user": "U0KM0C3M3",
        "text": "Ive read through the examples, and, while I can't claim to understand them fully, my question is more around how chaincode gets deployed, than what it is.  In ethereum, a smart contract is represented by bytecode, and any user can author brand new contracts and deploy them.  The byte code for that contract is recorded in the ethereum blockchain, and is executed by miners.  I'm wondering if chain code works the same way - ie. can a user, or validating node, author chain code, and inform other nodes that now it exists, and update the blockchain with this new business logic that will, henceforth, be executed by the other validating nodes.",
        "edited": {
            "user": "U0KM0C3M3",
            "ts": "1467047996.000000"
        },
        "ts": "1467047965.000819"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes, exactly the same",
        "ts": "1467048027.000821"
    },
    {
        "type": "message",
        "user": "U0KM0C3M3",
        "text": "if so, how is it transmitted - I doubt formatted golang is the way to do it",
        "ts": "1467048034.000822"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "just in docker containers",
        "ts": "1467048035.000823"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "<@U0KM0C3M3> - basically yes - this is called a \"deploy\" transaction",
        "ts": "1467048038.000824"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "<@U0KM0C3M3>: why do doubt that?",
        "ts": "1467048072.000825"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "basically, the code is packaged up in a portable Docker tar.gz file which is distributed to all of the nodes and deployed a a container",
        "ts": "1467048081.000826"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "<https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/sdk\/node\/lib\/sdk_util.js#L119>  shows how the code package is created",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/sdk\/node\/lib\/sdk_util.js#L119",
                "text": "fabric - Fabric is a blockchain project in Incubation proposed to the community and documented at <https:\/\/goo.gl\/RYQZ5N>. Information on what Incubation entails can be found in the Hyperledger Proj...",
                "fallback": "GitHub: hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/sdk\/node\/lib\/sdk_util.js#L119",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1467048170.000827"
    },
    {
        "type": "message",
        "user": "U0KM0C3M3",
        "text": "hmm, ok.  interesting.",
        "ts": "1467048200.000829"
    },
    {
        "type": "message",
        "user": "U0KM0C3M3",
        "text": "thanks - I will need to dig deeper, i see",
        "ts": "1467048269.000830"
    },
    {
        "type": "message",
        "user": "U0KM0C3M3",
        "text": "it means that the validating node must have access to a go compiler",
        "ts": "1467048344.000831"
    },
    {
        "type": "message",
        "user": "U0KM0C3M3",
        "text": "how is the chaincode sandboxed from the host OS?",
        "ts": "1467048421.000832"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "well it is in the docker container, but that's it",
        "ts": "1467048436.000833"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i opened an issue about sandboxing long ago",
        "ts": "1467048453.000834"
    },
    {
        "type": "message",
        "user": "U0KM0C3M3",
        "text": "is chaincode restricted in anyway, or can it be arbitrary golang?",
        "ts": "1467048591.000835"
    },
    {
        "type": "message",
        "user": "U18D82GJH",
        "text": "<@U0KM0C3M3>: I wont say \u201crestrictive\u201d rather it requires implementing the chaincode interfaces...",
        "ts": "1467048820.000836"
    },
    {
        "type": "message",
        "user": "U18D82GJH",
        "text": "<https:\/\/github.com\/IBM-Blockchain\/learn-chaincode>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "IBM-Blockchain\/learn-chaincode",
                "title_link": "https:\/\/github.com\/IBM-Blockchain\/learn-chaincode",
                "text": "learn-chaincode - Learn how to write chaincode.",
                "fallback": "GitHub: IBM-Blockchain\/learn-chaincode",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/17178768?v=3&s=400",
                "from_url": "https:\/\/github.com\/IBM-Blockchain\/learn-chaincode",
                "thumb_width": 200,
                "thumb_height": 200,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1467048821.000837"
    },
    {
        "user": "U1LLKFHJ8",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1LLKFHJ8|nsubrahm> has joined the channel",
        "ts": "1467049149.000839"
    },
    {
        "type": "message",
        "user": "U0KM0C3M3",
        "text": "is fabric chaincode pretty much the same as IBM Bluemix chaincode?",
        "ts": "1467049300.000840"
    },
    {
        "type": "message",
        "user": "U18D82GJH",
        "text": "yes",
        "ts": "1467049317.000841"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "exactly the same.  We use fabric for Bluemix",
        "ts": "1467049473.000842"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "we just (attempt) to take away the pain of you needing to stand up your own network and give you a cool dashboard  (full disclosure my team owns the BMX blockchain service so pardon the pseudo-marketing)",
        "ts": "1467049550.000843"
    },
    {
        "type": "message",
        "user": "U0KM0C3M3",
        "text": "not marketing - im glad for the comparison",
        "ts": "1467049855.000844"
    },
    {
        "type": "message",
        "user": "U18T2HJRM",
        "text": "has anyone registered BMX trademark yet? i couldn't find it here: <https:\/\/new-console.ng.bluemix.net\/docs\/navigation\/notices.html> but i would recommend it if it's available for registration",
        "ts": "1467050386.000845"
    },
    {
        "type": "message",
        "user": "U0KMJF9AA",
        "text": "I have a question....does thr endorsement policy have to be static or can the chaincode choose the endorsers dynamically based on the data in the transaction?",
        "ts": "1467050819.000846"
    },
    {
        "type": "message",
        "user": "U1LLKFHJ8",
        "text": "Why does HL not have PoW algorithm?\n",
        "ts": "1467051299.000847"
    },
    {
        "type": "message",
        "user": "U0KM0C3M3",
        "text": "for example, chaincode, either in fabric, or in IBM Bluemix is not prevented from running things using `os\/exec`",
        "ts": "1467052326.000848"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "correct - chaincode can (although it shouldn't) do anything you can do in Go within a Docker container",
        "ts": "1467052870.000849"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "This will eventually be locked down, I imagine, at least within the constraints of what Docker is able to do",
        "ts": "1467053129.000850"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U0KMJF9AA>: so the question is about in the next generation consensus, can transactions against chaincodes be dyamically be directed towards a set of endorsers ?",
        "ts": "1467053165.000851"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "by \u201cdynamically\u201d - different transactions to the same chaincode be endorsed by different set of endorsers ?",
        "ts": "1467053427.000852"
    },
    {
        "type": "message",
        "user": "U0KMJF9AA",
        "text": "<@U0ULK2JPP>  that is correct. Our requirement is to have endorsers dynamically selected based on transaction data",
        "ts": "1467054392.000853"
    },
    {
        "user": "U1LN505BR",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1LN505BR|danielssribeiro> has joined the channel",
        "ts": "1467056016.000854"
    },
    {
        "user": "U1LNF4VHP",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1LNF4VHP|zac> has joined the channel",
        "ts": "1467056729.000855"
    },
    {
        "user": "U1LNG6E8H",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1LNG6E8H|mikej> has joined the channel",
        "ts": "1467056906.000856"
    },
    {
        "user": "U1LP8PUPR",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1LP8PUPR|cbl> has joined the channel",
        "ts": "1467062596.000857"
    },
    {
        "user": "U1LP4T69E",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1LP4T69E|jeffprestes> has joined the channel",
        "ts": "1467062668.000858"
    },
    {
        "user": "U1LPLB8AK",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1LPLB8AK|ewuehler> has joined the channel",
        "ts": "1467064984.000859"
    },
    {
        "user": "U1LQEEZ0Q",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1LQEEZ0Q|pcasaretto> has joined the channel",
        "ts": "1467074310.000860"
    },
    {
        "user": "U1LQLCTQD",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1LQLCTQD|pshah> has joined the channel",
        "ts": "1467074832.000861"
    },
    {
        "type": "message",
        "user": "U10PFCC4R",
        "text": "maybe every transaction should be run in a VM",
        "ts": "1467076730.000862"
    },
    {
        "type": "message",
        "user": "U10PFCC4R",
        "text": "ethereum does that, right?",
        "ts": "1467076771.000863"
    },
    {
        "type": "message",
        "user": "U1JHMHW66",
        "text": "<@U0PB67X4K>: Thanks, I found that section. However it seems to still put the cc containers in `host` network mode.  How do I ensure that the core.yaml is being loaded? Is there an ENV variable for this setting? I can confirm that all ENV variables I have set work properly. Is there a full list of ENV variables that I can view that pertain to different options in the core.yaml?",
        "ts": "1467081345.000864"
    },
    {
        "type": "message",
        "user": "U1JHMHW66",
        "text": "```root@vp1:\/go\/src\/github.com\/hyperledger\/fabric# grep NetworkMode peer\/core.yaml                           \n        # NetworkMode Sets the networking mode for the container. Supported standard values are: `host`(default),`bridge`,`ipvlan`,`none`\n            NetworkMode: hlnet```",
        "ts": "1467081726.000865"
    },
    {
        "type": "message",
        "user": "U1JHMHW66",
        "text": "```\ndocker network inspect host\n\n[\n    {\n        \"Name\": \"host\",\n        \"Id\": \"0a6dbc72cdbe81ec167de4c85bfd49175444fb4d67e7d5eaa7a978d2cb023f50\",\n        \"Scope\": \"local\",\n        \"Driver\": \"host\",\n        \"IPAM\": {\n            \"Driver\": \"default\",\n            \"Options\": null,\n            \"Config\": []\n        },\n        \"Containers\": {\n            \"2eef268fad91774f3745c65037faa566365b4748eba02448524bcc4ac3a5ac5f\": {\n                \"Name\": \"dev-vp0-a5389f7dfb9efae379900a41db1503fea2199fe400272b61ac5fe7bd0c6b97cf10ce3aa8dd00cd7626ce02f18accc7e5f2059dae6eb0786838042958352b89fb\",\n                \"EndpointID\": \"19ca8863e03c135ba7608c7a6d47e1ad9928012b87fa82475e9a654e70ea6406\",\n                \"MacAddress\": \"\",\n                \"IPv4Address\": \"\",\n                \"IPv6Address\": \"\"\n            },\n            \"7b4d8484e3ea1024b48bf3fe41dfa53c50507540a70c8e0f45a499c4c6e96d38\": {\n                \"Name\": \"dev-vp3-a5389f7dfb9efae379900a41db1503fea2199fe400272b61ac5fe7bd0c6b97cf10ce3aa8dd00cd7626ce02f18accc7e5f2059dae6eb0786838042958352b89fb\",\n                \"EndpointID\": \"04db8ab8e22bd6091a55864812bf99d7850baff3289527659639a0bf8b3a0d8e\",\n                \"MacAddress\": \"\",\n                \"IPv4Address\": \"\",\n                \"IPv6Address\": \"\"\n            },\n            \"a292ced665e5dd41426873578f48711b40831884930c9548cfccfadfd89dd326\": {\n                \"Name\": \"dev-vp2-a5389f7dfb9efae379900a41db1503fea2199fe400272b61ac5fe7bd0c6b97cf10ce3aa8dd00cd7626ce02f18accc7e5f2059dae6eb0786838042958352b89fb\",\n                \"EndpointID\": \"b194205b08e6b4f4b25308044f59ffd0746c966db4decd6cd7ca45800a6593eb\",\n                \"MacAddress\": \"\",\n                \"IPv4Address\": \"\",\n                \"IPv6Address\": \"\"\n            },\n            \"f08ebe6a940cf143bb2647bf4e9c7b2c01133dfc7c2f2143c8c62436ee0dec55\": {\n                \"Name\": \"dev-vp1-a5389f7dfb9efae379900a41db1503fea2199fe400272b61ac5fe7bd0c6b97cf10ce3aa8dd00cd7626ce02f18accc7e5f2059dae6eb0786838042958352b89fb\",\n                \"EndpointID\": \"30a371df047e30d0e50f8743ee112cc447a97d01e0de3062e18a3c2dab166eb3\",\n                \"MacAddress\": \"\",\n                \"IPv4Address\": \"\",\n                \"IPv6Address\": \"\"\n            }\n        },\n        \"Options\": {}\n    }\n]\n```",
        "edited": {
            "user": "U1JHMHW66",
            "ts": "1467081812.000000"
        },
        "ts": "1467081794.000866"
    },
    {
        "type": "message",
        "user": "U1JHMHW66",
        "text": "all 4 validating peers apear fine on the overlay hlnet",
        "ts": "1467081850.000868"
    },
    {
        "type": "message",
        "user": "U1JHMHW66",
        "text": "I tried setting ENV  CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE",
        "ts": "1467083916.000869"
    },
    {
        "type": "message",
        "user": "U1JHMHW66",
        "text": "but it did not work :slightly_smiling_face:",
        "ts": "1467083922.000870"
    },
    {
        "user": "U1LRF16FR",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1LRF16FR|lt.tsai> has joined the channel",
        "ts": "1467085943.000871"
    },
    {
        "user": "U1LS078V8",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1LS078V8|vmishra> has joined the channel",
        "ts": "1467089918.000872"
    },
    {
        "user": "U1LS53J3F",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1LS53J3F|peterlundgren> has joined the channel",
        "ts": "1467096512.000873"
    },
    {
        "user": "U1LS5QSGM",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1LS5QSGM|pavel> has joined the channel",
        "ts": "1467096772.000874"
    },
    {
        "type": "message",
        "user": "U0KM0C3M3",
        "text": "is each piece of chaincode executed in it's own docker container?",
        "ts": "1467097035.000875"
    }
]
[
    {
        "user": "U1QRN97UG",
        "text": "<@U1QRN97UG|orijrp> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468308299.001771"
    },
    {
        "user": "U1QRLJ06A",
        "text": "<@U1QRLJ06A|chrido> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468308753.001772"
    },
    {
        "user": "U1QSAT4T1",
        "text": "<@U1QSAT4T1|enidz> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468311426.001773"
    },
    {
        "user": "U1QTD4ZNU",
        "text": "<@U1QTD4ZNU|somii1.01> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468321422.001774"
    },
    {
        "type": "message",
        "user": "U1K5R1CP9",
        "text": "Is anyone using the docker image <https:\/\/hub.docker.com\/r\/yeasy\/hyperledger-peer\/>?",
        "ts": "1468321775.001775"
    },
    {
        "type": "message",
        "user": "U1K5R1CP9",
        "text": "When I try to deploy the chain code (example02) by following the steps on this page -",
        "ts": "1468321817.001776"
    },
    {
        "type": "message",
        "user": "U1K5R1CP9",
        "text": "I get an error saying [dockercontroller] deployImage -&gt; ERRO 0e4 Error building images: Tag latest not found in repository <http:\/\/docker.io\/hyperledger\/fabric-baseimage|docker.io\/hyperledger\/fabric-baseimage>",
        "ts": "1468321851.001777"
    },
    {
        "type": "message",
        "user": "U1K5R1CP9",
        "text": "All I need is a small cluster of peers running on docker (without vagrant)",
        "ts": "1468321900.001778"
    },
    {
        "type": "message",
        "user": "U1K5R1CP9",
        "text": "Any clues?",
        "ts": "1468322229.001781"
    },
    {
        "user": "U1QTHE9K2",
        "text": "<@U1QTHE9K2|tejas> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468322646.001782"
    },
    {
        "type": "message",
        "user": "U1CK6522F",
        "text": "Ask for help: I have to increase a counter (pay-per-query) in the Query function in chaincode. But I can't do it as Query function call is not a transaction.  What should I do?",
        "ts": "1468323522.001783"
    },
    {
        "user": "U1QTZ6HPT",
        "text": "<@U1QTZ6HPT|r4v4n> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468323898.001784"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "zuowang: you can't",
        "ts": "1468324757.001785"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "convert the query to invoke",
        "ts": "1468324763.001786"
    },
    {
        "type": "message",
        "user": "U1MA81VBK",
        "text": "We running a use case like, deploy, invoke( insert some data into table), into one peer (172.17.0.2) then query the table data from another peer (172.19.0.3). but we are not able to get the value and it throwing the error like \"Error: Error querying chaincode: rpc error: code = 2 desc = \"Error:Failed to launch chaincode spec(Failed to init chaincode(handler not found for chaincode usecase))\". it is not working for both security is turned off\/on.",
        "ts": "1468325425.001787"
    },
    {
        "type": "message",
        "user": "U1CS08EP3",
        "text": "george,",
        "ts": "1468325603.001788"
    },
    {
        "type": "message",
        "user": "U1CS08EP3",
        "text": "ping this guy",
        "ts": "1468325607.001789"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "g_alexander: can you query on the first peer?",
        "ts": "1468325924.001790"
    },
    {
        "type": "message",
        "user": "U1MA81VBK",
        "text": "Yes, if we query it in first peer, we are getting the value",
        "ts": "1468325989.001791"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "odd",
        "ts": "1468326036.001792"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "seems the second peer can't init the chaincode?",
        "ts": "1468326055.001793"
    },
    {
        "type": "message",
        "user": "U1CS08EP3",
        "text": "what is the error u are getting on the console when u deploy?",
        "ts": "1468326107.001794"
    },
    {
        "type": "message",
        "user": "U1MA81VBK",
        "text": "when  we enable the security , then we are getting \"[ledger] sendProducerBlockEvent -&gt; ERRO 702 Error unmarshalling deployment transaction for block event: proto: protos.ChaincodeDeploymentSpec: wiretype end group for non-group\" while deploying the chain code. there no error of security off mode",
        "ts": "1468326218.001795"
    },
    {
        "type": "message",
        "user": "U1CS08EP3",
        "text": "but in both cases its not replicating to the other nodes?",
        "ts": "1468326325.001796"
    },
    {
        "user": "U1QUW6W82",
        "text": "<@U1QUW6W82|michele> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468329678.001797"
    },
    {
        "user": "U1QUCDJ8N",
        "text": "<@U1QUCDJ8N|ericsomdahl> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468329932.001798"
    },
    {
        "type": "message",
        "user": "U1PP0MX61",
        "text": "<@U1LS81ER3>: I was getting that same error running in Docker on the Vagrant VM.  I was able to get it working by switching to the \"sandbox setup\" and running from the shell.",
        "ts": "1468331465.001799"
    },
    {
        "type": "message",
        "user": "U1PP0MX61",
        "text": "I think the Docker images have the chain code baked in",
        "ts": "1468331481.001800"
    },
    {
        "type": "message",
        "user": "U1PP0MX61",
        "text": "So another workaround might be to rebuild the Docker image?",
        "ts": "1468331499.001801"
    },
    {
        "type": "message",
        "user": "U1PP0MX61",
        "text": "<https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/docs\/API\/SandboxSetup.md>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/docs\/API\/SandboxSetup.md",
                "text": "fabric - Fabric is a blockchain project in Incubation proposed to the community and documented at <https:\/\/goo.gl\/RYQZ5N>. Information on what Incubation entails can be found in the Hyperledger Proj...",
                "fallback": "GitHub: hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/docs\/API\/SandboxSetup.md",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1468331613.001802"
    },
    {
        "user": "U1QV9CRT3",
        "text": "<@U1QV9CRT3|david> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468332522.001804"
    },
    {
        "user": "U1R0WAVUH",
        "text": "<@U1R0WAVUH|chouyufei> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468337464.001805"
    },
    {
        "user": "U1R0TJD3J",
        "text": "<@U1R0TJD3J|jerry> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468338653.001806"
    },
    {
        "type": "message",
        "user": "U1LS81ER3",
        "text": "<@U1PP0MX61> thanks I will test it",
        "ts": "1468341329.001807"
    },
    {
        "type": "message",
        "user": "U1LS81ER3",
        "text": "does anyone know if there is a limit in terms of how much we can store in the state?",
        "ts": "1468341665.001808"
    },
    {
        "type": "message",
        "user": "U1LS81ER3",
        "text": "since its nothing but a key value store",
        "ts": "1468341676.001809"
    },
    {
        "type": "message",
        "user": "U1LS81ER3",
        "text": "i wonder how much content we can store on it",
        "ts": "1468341684.001810"
    },
    {
        "type": "message",
        "user": "U1LS81ER3",
        "text": "also, another question. Each invokation is recorded on the blockchain right? ideally. So we can track everyting that is stored there? If so, how do we decode the tx information. For bitcoin there are plenty of utilities that decode tx hashes\/serialized content. Are there such utilities for hyperledger?",
        "ts": "1468341772.001811"
    },
    {
        "type": "message",
        "user": "U1LS81ER3",
        "text": "like I can use a tx hash to fetch its contents and deserialize them",
        "ts": "1468341802.001812"
    },
    {
        "type": "message",
        "user": "U1LS81ER3",
        "text": "in the bitcoin client, not sure if that is doable with hyperledger",
        "ts": "1468341820.001813"
    },
    {
        "type": "message",
        "user": "U1PP0MX61",
        "text": "I think it uses RocksDB for the key-value store",
        "ts": "1468343021.001814"
    },
    {
        "type": "message",
        "user": "U1PP0MX61",
        "text": "I haven't figured out how to decode the TX payload yet.",
        "ts": "1468343046.001815"
    },
    {
        "type": "message",
        "user": "U1PP0MX61",
        "text": "If you do, please post it here",
        "ts": "1468343058.001816"
    },
    {
        "type": "message",
        "user": "U1PP0MX61",
        "text": "bgorman didn't seem to think it was possible",
        "ts": "1468343105.001817"
    },
    {
        "type": "message",
        "user": "U1LS81ER3",
        "text": "mmm, interesting. It would be nice to be able to decode txs",
        "ts": "1468344693.001818"
    },
    {
        "type": "message",
        "user": "U1LS81ER3",
        "text": "right I know it uses rocks db",
        "ts": "1468344701.001819"
    },
    {
        "type": "message",
        "user": "U1LS81ER3",
        "text": "but when you do a write, say using chaincode, is there limit in terms on how much data you persist?",
        "ts": "1468344724.001820"
    },
    {
        "type": "message",
        "user": "U1PP0MX61",
        "text": "<https:\/\/github.com\/facebook\/rocksdb\/issues\/513>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "what is the maximum size of a value in rocksdb? \u00b7 Issue #513 \u00b7 facebook\/rocksdb \u00b7 GitHub",
                "title_link": "https:\/\/github.com\/facebook\/rocksdb\/issues\/513",
                "text": "As per the title, how big of an object can be stored in rocksdb? Is there any limit?",
                "fallback": "GitHub: what is the maximum size of a value in rocksdb? \u00b7 Issue #513 \u00b7 facebook\/rocksdb",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/145425?v=3&s=400",
                "from_url": "https:\/\/github.com\/facebook\/rocksdb\/issues\/513",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/a.slack-edge.com\/e8ef6\/img\/unfurl_icons\/github.png",
                "id": 1
            }
        ],
        "ts": "1468344820.001821"
    },
    {
        "type": "message",
        "user": "U1PP0MX61",
        "text": "RocksDB doesn't seem to have a real limit, but there may be one in Fabric",
        "ts": "1468344838.001823"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "the storage is limited by the physical constraints\u2026 there is currently some thought being given to pruning a blockchain (think of archiving from the active database to some other store, ala glacier",
        "ts": "1468344886.001824"
    },
    {
        "type": "message",
        "user": "U1LS81ER3",
        "text": "yeah rocks doesnt but does the fabric limit chaincode from storing too much",
        "ts": "1468344923.001825"
    },
    {
        "type": "message",
        "user": "U1LS81ER3",
        "text": "well like <@U0KM61BCP> said, physical limits",
        "ts": "1468344942.001826"
    },
    {
        "type": "message",
        "user": "U1LS81ER3",
        "text": "mmm,  ill look into the decoding part and share anything i find",
        "ts": "1468345000.001827"
    },
    {
        "type": "message",
        "user": "U1LS81ER3",
        "text": "that is a really useful thing, the python tools i used to decode bitcoin tx were a life saver, something like that would be very useful here too imo",
        "ts": "1468345043.001828"
    },
    {
        "type": "message",
        "user": "U1PP0MX61",
        "text": "I agree.",
        "ts": "1468345054.001829"
    },
    {
        "type": "message",
        "user": "U1PP0MX61",
        "text": "Without it, there's no way for an auditor to verify the transactions",
        "ts": "1468345066.001830"
    },
    {
        "type": "message",
        "user": "U0XKW9PV5",
        "text": "<https:\/\/bobsummerwill.com\/2016\/07\/12\/ethereum-everywhere\/>\n\nTL;DR \u2013 What are you proposing?\n\nI am proposing to the contributors that the C++ Ethereum client runtime cpp-ethereum be re-licensed from the copyleft GPLv3 license to the more permissive Apache 2.0 license, to enable Ethereum software to be used as broadly as possible - a long-standing plan. This proposal only addresses the client runtime and does not include Solidity or Mix (the C++ tools).\n\nThere is another blog post detailing the likely operational steps in that process. This document seeks to explain why I am making that proposal.\n\n<https:\/\/bobsummerwill.com\/2016\/07\/12\/c-re-licensing-plan\/>\n\nI would personally love to see Ethereum as part of the Hyperledger story, and I know that many others feel the same way.    Hopefully this re-licensing can be the first step in the journey leading to that outcome.\n\nSee also <https:\/\/bobsummerwill.com\/2016\/06\/12\/cats-and-dogs-can-be-friends\/>.\n\nBest wishes to you all!\n\nBob Summerwill\nEthereum Foundation",
        "attachments": [
            {
                "service_name": "Bob&amp;#039;s Blog",
                "service_url": "http:\/\/bobsummerwill.com",
                "title": "Ethereum Everywhere",
                "title_link": "https:\/\/bobsummerwill.com\/2016\/07\/12\/ethereum-everywhere\/",
                "author_name": "bobsummerwill",
                "author_link": "https:\/\/bobsummerwill.com\/author\/bobsummerwill\/",
                "thumb_url": "https:\/\/i2.wp.com\/bobsummerwill.files.wordpress.com\/2016\/06\/tim.jpg?fit=200%2C150&ssl=1",
                "thumb_width": 200,
                "thumb_height": 133,
                "text": "&amp;ldquo;The Ethereum Foundation&amp;rsquo;s mission is to promote and support research, development and education to bring decentralized protocols and tools to the world that empower developers to produce next generation decentralized applications (dapps), and together build a more globally accessible, more free and more trustworthy Internet.&amp;rdquo;\nFrom&amp;nbsp;https:\/\/ethereum.org\/foundation\n\nTL;DR &amp;ndash; What are you proposing?\nI am&amp;nbsp;proposing to the contributors that the C++ Ethereum&amp;nbsp;VM (cpp-ethereum) be re-licensed from the&amp;nbsp;copyleft&amp;nbsp;GPLv3&amp;nbsp;license to the more permissive&amp;nbsp;Apache 2.0&amp;nbsp;license,&amp;nbsp;to enable Ethereum software to be used as broadly as possible (a long-standing plan). &amp;nbsp; This proposal only addresses the EVM and does&amp;nbsp;not include Solidity or Mix (the C++ tools).\nThere is another blog post detailing the likely operational steps in that process. &amp;nbsp; This document seeks to explain why I am making that proposal.\n&amp;nbsp;\nWhat is Ethereum?\nWhen we think about&amp;nbsp;Ethereum, we usually think about public chain, and more specifically we think about the public chain (the &amp;ldquo;mainnet&amp;rdquo;). &amp;nbsp; &amp;nbsp;That is quite natural within the frame of reference of Ethereum purely as a cryptocurrency, but&amp;nbsp;it is a limited view of the possibilities which this new decentralized computing platform offers.\nEthereum is much more than &amp;ldquo;a better cryptocurrency&amp;rdquo;. &amp;nbsp;&amp;nbsp;Ether is the fuel for the engine, but it is the Ethereum engine&amp;nbsp;itself which opens up these new possibilities. &amp;nbsp;The fuel is just a means to an end.\nWe have the opportunity to build a set of technologies in the next few years which could have&amp;nbsp;similar societal impact as when the Internet, the World Wide Web and open source languages, databases, etc. became available. &amp;nbsp;We are building a decentralized computing platform which every individual&amp;nbsp;on Earth should benefit from.\n                  \nThese technologies need to reach into every nook and cranny of our computing fabric: big and small, public and private, independent and corporate; smartwatches to mainframes.\nThis is&amp;nbsp;a large and ambitious undertaking that is addictive and all-consuming for many of us. &amp;nbsp;Diversity of viewpoints, a broad spectrum of use-cases to mature the base technology, and an open and inclusive attitude and environment of collaboration will help us achieve our shared goals.\n&amp;nbsp;\nWhy do private and consortium chains matter?\n\n&amp;ldquo;It is important to note that while the original Ethereum blockchain is a public blockchain, the Ethereum state transition rules (i.e. the part of the protocol that deals with processing transactions, executing contract code, etc.) can be separated from the Ethereum public blockchain consensus algorithm (i.e. proof of work), and it is entirely possible to create private (run by one node controlled by one company) or consortium (run by a pre- specified set of nodes) blockchains that run the Ethereum code.&amp;rdquo;\n&amp;ldquo;Ethereum technology itself is thus arguably agnostic between whether it&amp;rsquo;s applied in a public, consortium or private model, and it is our goal to maximally aim for interoperability between various instantiations of Ethereum &amp;ndash; i.e. one should be able to take contracts and applications that are written for public chain Ethereum and port them to private chain Ethereum and vice versa.&amp;rdquo;\nVitalik Buterin, Ethereum Platform Review paper\n\nMany individuals and companies, large and small, see that opportunity the Ethereum platform has to offer, and are equally supportive of and inspired by the technical vision, even if their business goals vary dramatically. Public chains and private or consortium chains will likely end up having a lot more in common than meets the eye.\nWe have a working example of a permissioned Ethereum chain in the form of HydraChain, which was demonstrated at Ethereum DEVCON1 last November (2015):\n\nConsortium chains can provide certain benefits beyond the general purpose public chain because they are special-purpose, such as:\nThey can choose to have 1 second block-times.\nThey might not&amp;nbsp;need to do any node-discovery because the nodes are fixed.\nThey can have incredible throughout (e.g. JP Morgan&amp;rsquo;s Juno boasts 2,000 txns\/sec).\nThey can modify consensus rules for performance (i.e. using PBFT).\nThey can be a testbed for experimentation and innovation, because there will often be much smaller groups of stakeholders.\nThe interest in Ethereum can be seen in the ever-growing volume of news stories about blockchain and decentralized ledger technologies in general, but In particular, the interest in the Ethereum platform emanating from &amp;nbsp;major technology companies has escalated rapidly and noticeably since the last Ethereum developer conference, DEVCON1, which was held in London in November 2015.\nThe Ethereum platform is unique in the crypto space in &amp;nbsp;that a significant number of &amp;nbsp;large publicly owned corporations are either already using it, have experimented with it, or are exploring how it may be used in or integrated with their current systems.\nThe author believes providing a permissive licensing will facilitate moving towards the dream of mass adoption of the Ethereum platform.\nSome articles from Vitalik Buterin on private and consortium blockchains:\nOn Public and Private Blockchains (August 2015)\nVitalik Buterin on Misconceptions in the Private vs Public Blockchain Debate\nEthereum Platform Review: Opportunities and Challenges for Private and Consortium Blockchains\n&amp;nbsp;\nWhy permissive licensing over copyleft?\nSoftware licensing is obviously somewhat of a religious matter, but there are practical reasons to favor permissive licenses for low-level components like Ethereum.\n                  \nBeyond incompatibility between the GPL and corporate business models there are practical ways in which the GPL reduces Ethereum&amp;rsquo;s reach. &amp;nbsp; The author was witness to these restrictions in his &amp;ldquo;past life&amp;rdquo; as a video games developer.\nWorst of all are the games consoles. &amp;nbsp; Code for PlayStation and XBOX usually has to be closed-source, because developers must sign NDAs (non-disclosure agreements) to be allowed access to the SDKs and they cannot redistribute those SDKs or any information about the platform APIs. &amp;nbsp; That is commonly interpreted to include any code using those APIs. &amp;nbsp; &amp;nbsp;Some&amp;nbsp;embedded platforms are similarly locked down.\nWhile we could argue until the cows come home about the ethics of even using such systems, they are a reality, and making Ethereum available on them has value.\nThe Apple stores &amp;ndash; App Store for iOS and Mac Store for macOS &amp;ndash; are incompatible with the GPL, and the same is likely true of the Windows Store. &amp;nbsp; &amp;nbsp;The Terms of Service are applying additional constraints which are incompatible with the GPL.\nThe only &amp;ldquo;workaround&amp;rdquo; which I have seen for this incompatibility is for there to be a single copyright owner for the software, such that they can dual license it as GPL and commercial, and for the commercial version of the software to be used in the App Store. &amp;nbsp; That is the approach which Mono used for nearly a decade, which means that developers wanting to use C# on iOS had to pay for a commercial license for Mono for all that time.\nOpen Whisper Systems recently added an exception to the GPLv3 license&amp;nbsp;for their libsignal-protocol-c library, which permits people to incorporate that library into applications distributed through the App Store under Mozilla Public License 2.0, providing that the licensees are otherwise in compliance with the GPL. &amp;nbsp; That exception looks similar to dual-licensin\u2026",
                "fallback": "Bob&amp;#039;s Blog Link: Ethereum Everywhere",
                "from_url": "https:\/\/bobsummerwill.com\/2016\/07\/12\/ethereum-everywhere\/",
                "service_icon": "https:\/\/secure.gravatar.com\/blavatar\/96c670896fc304f0aebd91a6a7678264?s=114",
                "id": 1
            },
            {
                "service_name": "Bob&amp;#039;s Blog",
                "service_url": "http:\/\/bobsummerwill.com",
                "title": "C++ re-licensing plan",
                "title_link": "https:\/\/bobsummerwill.com\/2016\/07\/12\/c-re-licensing-plan\/",
                "author_name": "bobsummerwill",
                "author_link": "https:\/\/bobsummerwill.com\/author\/bobsummerwill\/",
                "thumb_url": "https:\/\/i1.wp.com\/bobsummerwill.files.wordpress.com\/2016\/06\/cpp.png?fit=200%2C150&ssl=1",
                "thumb_width": 150,
                "thumb_height": 150,
                "text": "Overview\nThis is a&amp;nbsp;proposal is to re-license the C++ implementation of the Ethereum&amp;nbsp;VM (cpp-ethereum)&amp;nbsp;from the copyleft&amp;nbsp;GPLv3&amp;nbsp;license to the permissive&amp;nbsp;Apache 2.0&amp;nbsp;license,&amp;nbsp;to enable Ethereum to be used as broadly as possible.\nNB: &amp;nbsp;If you would like to discuss this plan, please let&amp;rsquo;s all do so on cpp-ethereum Gitter channel. &amp;nbsp; Thanks!\nMoving to permissive licensing has been the &amp;ldquo;plan of record&amp;rdquo; for a year or so, which we are belatedly executing on. &amp;nbsp; Gavin Wood actually started the process of relicensing to MIT last year, but it was never completed. &amp;nbsp; &amp;nbsp;So we&amp;rsquo;re going through the process again now.\nThere is another long-form article talking about the rationale for the change and the history leading up to this proposed change of licensing, so I won&amp;rsquo;t duplicate that content here.\nThis post talks through the expected operational steps for making this change. &amp;nbsp; These steps aren&amp;rsquo;t entirely sequential, and we will be doing overlapping steps in parallel wherever we can, to try to get through the&amp;nbsp;tedious process as quickly as we can.\nUltimately the contributors to the C++ codebase will make the decision on whether or not we relicense, and there is no intention from the Ethereum Foundation to &amp;ldquo;force&amp;rdquo; the process.\n&amp;nbsp;\n&amp;nbsp;\nSteps to be followed\nCreation of a Github issue to start the ball rolling &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [May 25th]\nStart to gather contributor details (Piratepad, then Wiki) &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [Ongoing]\nMention in the last few releases that we are contacting contributors &amp;nbsp;[Ongoing]\nAd-hoc conversations with contributors on the issue, Gitter, email &amp;nbsp; [Ongoing]\nTalk to an IP lawyer to verify what we need to do, in rough strokes &amp;nbsp;&amp;nbsp;[June 22nd]\nPublicize &amp;ldquo;the plan&amp;rdquo; and work through any disagreements &amp;nbsp; &amp;nbsp; &amp;nbsp;[July 12th onwards]\nDistribute paperwork to all contributors\nComplete the process and change the license\nAnnounce that change to the world\n&amp;nbsp;\n\nWhat is the paperwork?\nEverybody who has contributed to the code in question (see below) will be sent a letter, probably both as a PDF and physically, which essentially attests to the fact that they were the author of that code, and giving their approval for that contribution to be used under the Apache 2.0 license.\nFuture contributors will be required to make a similar declaration. &amp;nbsp; &amp;nbsp;The one page document just ensures that there is no ambiguity for any party in the case of future disagreement or legal action.\nHere is a template for the paperwork, which is legal boilerplate from the Linux Foundation adjusted to our project.\nThis is not final paperwork. &amp;nbsp; Discussion ongoing.\n&amp;nbsp;\nContent to be relicensed\nThe&amp;nbsp;following repositories are in the process of being reorganized into a restored cpp-ethereum repository, which will be relicensed as Apache 2.0:\nlibethereum\nlibweb3core\nwebthree\nwebthree-helpers\nThat&amp;nbsp;will include the following applications:\nEthereum VM:\neth\nethvm\n\nUnit-testing:\ntesteth\ntestweb3\ntestweb3core\n\nSupport tools:\nbench\nethkey\nethminer\nrlp\n\nThe following standalone repositories will&amp;nbsp;also be relicensed to Apache 2.0:\ncpp-dependencies\nevmjit\nThe following repositories, containing the Solidity compiler and the deprecated C++ GUI applications will remain under GPLv3:\nalethzero\nmix\nsolidity\nThe following repository, containing the new &amp;ldquo;Remix&amp;rdquo; debugging components will remain under MIT, though we might want to consider whether that should be Apache 2.0 as well?\nremix",
                "fallback": "Bob&amp;#039;s Blog Link: C++ re-licensing plan",
                "from_url": "https:\/\/bobsummerwill.com\/2016\/07\/12\/c-re-licensing-plan\/",
                "service_icon": "https:\/\/secure.gravatar.com\/blavatar\/96c670896fc304f0aebd91a6a7678264?s=114",
                "id": 2
            },
            {
                "service_name": "Bob&amp;#039;s Blog",
                "service_url": "http:\/\/bobsummerwill.com",
                "title": "Cats and dogs can be\u00a0friends!",
                "title_link": "https:\/\/bobsummerwill.com\/2016\/06\/12\/cats-and-dogs-can-be-friends\/",
                "author_name": "bobsummerwill",
                "author_link": "https:\/\/bobsummerwill.com\/author\/bobsummerwill\/",
                "thumb_url": "https:\/\/i0.wp.com\/bobsummerwill.files.wordpress.com\/2016\/06\/hector.jpeg?fit=200%2C150&ssl=1",
                "thumb_width": 95,
                "thumb_height": 150,
                "text": "A couple of weeks back, I had the pleasure of making a number of new friends and acquaintances while I was in Austin, Texas for the OSCON 2016 Open Source Conference.\nI will do another blog post about OSCON more generally, but here I focus on the open source blockchain Meetup.\nNB: If anybody has further photos or notes to add, please let me know, and I will update this blog post.\n\nCapital Factory were good enough to donate meeting space for about 30-40 attendees for the Open Source Blockchain Meetup which I organized to bring together blockchainers of all stripes, both Austin-local and out-of-towners who were at OSCON. &amp;nbsp; &amp;nbsp;We also had several people who drove to Austin specifically for the event, which was very humbling.\nI certainly enjoyed the evening immensely, and I hope that everybody else did too!\nThe idea was simply to bring together people from across all of the many&amp;nbsp;open source blockchain and decentralized ledger technology projects, to get some common understanding of what we are all working on, and to make some personal connections and friendships.\nI think that these technologies have the potential to have as large an impact as the Internet, or Linux, and that we will all have a lot more in the way of common goals than we will have differences. &amp;nbsp; &amp;nbsp;It is a big pool and there is more than enough room for us all to swim in it\nWe started with Brian Deery of Factom, who talked briefly about Bitcoin, though most people present were already familiar with the granddaddy of blockchain technologies\n\n\nI then gave a quick introduction to Ethereum. &amp;nbsp; Slides below. &amp;nbsp; No photo of my ugly mug available, I am afraid!\n \n  Foss blockchain meetup_austin_oscon  from Bob Summerwill \n\n\nI was delighted that Christopher Ferris, who is the Chair of the Hyperledger Steering Committee was able to join us to talk about &amp;ldquo;What is Hyperledger?&amp;rdquo; &amp;nbsp; &amp;nbsp; That was a very last-minute. &amp;nbsp;He was in town for OSCON, but it looked like he wouldn&amp;rsquo;t be able to make the meeting, but his travel plans changed last minute, so he was able to join us.\n\n\nWe also had Renat Khasanshyn&amp;nbsp;whose company Altoros, has been doing much of the early presentation material for Hyperledger, along with building sample applications.\n&amp;hellip;&amp;nbsp;and Bishop Brock, of IBM Research, who is focussed on blockchain on Mainframes. &amp;nbsp; Yes, blockchain on mainframes. &amp;nbsp; I bet they get some decent transaction throughput! &amp;nbsp; There were some other local IBM-ers too.\n\nBrian Deery&amp;nbsp;spoke again on the topic of Factom, and what they are building there.\nPete Harris, of Lighthouse Partners spoke about a new&amp;nbsp;Austin Blockchain for Business Meetup which he is just starting up. &amp;nbsp; &amp;nbsp;Pete is a great networker and organizer. &amp;nbsp; I look forward to seeing all of the blockchain businesses which will come out of Austin in the coming years.\nAnd then we mingled until 9pm, when our time at Capital Factory was up, but many more of us continued to talk for a few more hours around the fine drinking establishments of Austin.\n\nScott Travis (below) contacted me after the Meetup and said &amp;hellip; &amp;ldquo;That was my first meetup&amp;nbsp;to attend, brought me out of my coding cave to meet some fellow Ethereum enthusiasts.&amp;rdquo;\n\nI think there were other first-timers there too. &amp;nbsp; &amp;nbsp;I think that Meetups are fantastic. &amp;nbsp; Talking to other people with similar interests is so helpful. &amp;nbsp; &amp;nbsp;We&amp;rsquo;re all human, and face-to-face interactions are unbeatable.\nHector Torres was looking for collaborators for healthcare use-cases on the blockchain, and invited people to contact him at&amp;nbsp;hector@ulahealth.me.\n\nI also got to meet Niran Babalola of ConsenSys and Dustin Byington, of Satoshi Talent and&amp;nbsp;SmartContract Exchange Inc, formerly at Tendermint. &amp;nbsp; &amp;nbsp;And many others whose names I have sadly forgotten. &amp;nbsp; That&amp;rsquo;s what the beers after the meeting did to me\nGetting out from behind our keyboards is very important, and I&amp;rsquo;m glad that I got the opportunity to meet you all down in Austin. &amp;nbsp; &amp;nbsp;Best wishes!\n&amp;nbsp;\nThanks to Paul Snow, of the Austin Bitcoin Meetup, Niran Babalolo of the Austin Ethereum Meetup, Mark Morris of the Austin Blockchain Meetup for helping to gather attendees!",
                "fallback": "Bob&amp;#039;s Blog Link: Cats and dogs can be&nbsp;friends!",
                "from_url": "https:\/\/bobsummerwill.com\/2016\/06\/12\/cats-and-dogs-can-be-friends\/",
                "service_icon": "https:\/\/secure.gravatar.com\/blavatar\/96c670896fc304f0aebd91a6a7678264?s=114",
                "id": 3
            }
        ],
        "ts": "1468357750.001831"
    },
    {
        "user": "U1R4MMTF1",
        "text": "<@U1R4MMTF1|anubhavsinha> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468357923.001833"
    },
    {
        "user": "U1R3610FM",
        "text": "<@U1R3610FM|alexrosen> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468358725.001834"
    },
    {
        "type": "message",
        "user": "U0TFEHX8E",
        "text": "<@U1LS81ER3>: You may want to look at <https:\/\/github.com\/hyperledger\/fabric\/tree\/master\/tools\/dbutility>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/tree\/master\/tools\/dbutility",
                "text": "fabric - Fabric is a blockchain project in Incubation proposed to the community and documented at <https:\/\/goo.gl\/RYQZ5N>. Information on what Incubation entails can be found in the Hyperledger Proj...",
                "fallback": "GitHub: hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/tree\/master\/tools\/dbutility",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1468365749.001835"
    },
    {
        "user": "U1R5RTWTH",
        "text": "<@U1R5RTWTH|michael_tang> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468366630.001837"
    },
    {
        "user": "U1R65QZA6",
        "text": "<@U1R65QZA6|shin> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468367585.001838"
    },
    {
        "user": "U1R5ZL89L",
        "text": "<@U1R5ZL89L|blueskydetector> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468371697.001839"
    },
    {
        "user": "U1R65GCFQ",
        "text": "<@U1R65GCFQ|tigmi> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468373687.001840"
    },
    {
        "type": "message",
        "user": "U1LS81ER3",
        "text": "thanks <@U0TFEHX8E> I had an old fork, so I did not see that",
        "ts": "1468377687.001841"
    },
    {
        "type": "message",
        "user": "U1LS81ER3",
        "text": "I merged with upstream and got it now :slightly_smiling_face:",
        "ts": "1468377697.001842"
    },
    {
        "type": "message",
        "user": "U1LS81ER3",
        "text": "darn, now it broke... panic: Error reading CORE_PBFT plugin config: Unsupported Config Type \"\"",
        "ts": "1468378625.001843"
    },
    {
        "type": "message",
        "user": "U1LS81ER3",
        "text": "haha",
        "ts": "1468378629.001844"
    },
    {
        "user": "U1R5LGEQK",
        "text": "<@U1R5LGEQK|zjgsuwk> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468384215.001845"
    },
    {
        "type": "message",
        "user": "U1R5LGEQK",
        "text": "hi,can you help me",
        "ts": "1468389976.001846"
    },
    {
        "type": "message",
        "user": "U1R5LGEQK",
        "text": "i have a problem when i make peer",
        "ts": "1468389994.001847"
    },
    {
        "type": "message",
        "user": "U1R5LGEQK",
        "text": "when i execute make peer,occur error",
        "ts": "1468390052.001848"
    },
    {
        "type": "message",
        "user": "U1R5LGEQK",
        "text": "make peer\nBuilding docker base-image\nBUILD-CACHE: Pulling \"hyperledger\/fabric-baseimage:x86_64-0.0.10\" from dockerhub..\nx86_64-0.0.10: Pulling from hyperledger\/fabric-baseimage\n6599cadaf950: Already exists\n23eda618d451: Already exists\nf0be3084efe9: Already exists\n52de432f084b: Already exists\na3ed95caeb02: Already exists\nfe87512d962f: Already exists\n3ab00b537a04: Already exists\n394221632d6f: Already exists\n93f2f8cf004e: Already exists\nDigest: sha256:6c4c7e63677f09083ca532ed6136bb12f9bb6324f9d2304f2c78a5b0b99bdddc\nStatus: Image is up to date for hyperledger\/fabric-baseimage:x86_64-0.0.10\nBUILD-CACHE: Success!\nusage: mktemp [-d] [-q] [-t prefix] [-u] template ...\n       mktemp [-d] [-q] [-u] -t prefix\nmake: *** [build\/image\/base\/.dummy] Error 1",
        "ts": "1468390059.001849"
    },
    {
        "type": "message",
        "user": "U1R5LGEQK",
        "text": "how to fix it ?",
        "ts": "1468390065.001850"
    },
    {
        "user": "U1R7U9U2D",
        "text": "<@U1R7U9U2D|yuanlaishiluda> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468391218.001851"
    }
]
[
    {
        "type": "message",
        "user": "U1MJ9SRF0",
        "text": "Is there any way to query the consensus method currently adopted by a running peer?",
        "ts": "1470295595.000929"
    },
    {
        "user": "U1Y4P0HM4",
        "text": "<@U1Y4P0HM4|yangtao76> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1470296985.000930"
    },
    {
        "type": "message",
        "user": "U1RMPU91Q",
        "text": "Hello, I have configured 2 node (docker-container) in my local using vagrant to VM.  while deploying the the simple example for chain code , I am getting error:",
        "ts": "1470298869.000931"
    },
    {
        "type": "message",
        "user": "U1RMPU91Q",
        "text": "07:04:21.868 [dockercontroller] Start -&gt; ERRO 019 start-could not start containe\nr API error (400): {\"message\":\"starting container with HostConfig was deprecated\n since v1.10 and removed in v1.12\"}",
        "ts": "1470298870.000932"
    },
    {
        "type": "message",
        "user": "U1RMPU91Q",
        "text": "Any help or pointer on this please",
        "ts": "1470298892.000933"
    },
    {
        "type": "message",
        "user": "U1MJ9SRF0",
        "text": "you have to use docker version &lt; 1.12",
        "ts": "1470299131.000934"
    },
    {
        "user": "U1Y5BH29E",
        "text": "<@U1Y5BH29E|rajaboini> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1470300857.000935"
    },
    {
        "type": "message",
        "user": "U1K5R1CP9",
        "text": "hi everyone - how mature is the Java shim support currently for chaincode development?",
        "ts": "1470302042.000936"
    },
    {
        "type": "message",
        "user": "U1K5R1CP9",
        "text": "Is it just as good as golang chaincode?",
        "ts": "1470302086.000937"
    },
    {
        "type": "message",
        "user": "U1K5R1CP9",
        "text": "I ask this because, there is whole lot of existing business code in Java, which may need to be converted into smart contracts \/ chaincode. And there is an easily available Java skilled resource pool compared to golang.",
        "ts": "1470302186.000938"
    },
    {
        "type": "message",
        "user": "U1K5R1CP9",
        "text": "So what do you think of using Java instead of Golang for chaincode development?",
        "edited": {
            "user": "U1K5R1CP9",
            "ts": "1470302227.000000"
        },
        "ts": "1470302212.000939"
    },
    {
        "type": "message",
        "user": "U1RLZ5729",
        "text": "Hey all, I am running the setup outside of vagrant which uses docker compose to run peer and member services. \nWhen we are in dev mode, it works fine but we we go out of that mode and come to network\/production mode, containers for the chaincode should have been created for all the peers.\nBut in my case, it is throwing error saying \u201cnot able to build images and hence not able to create containers.\"",
        "ts": "1470306524.000941"
    },
    {
        "type": "message",
        "user": "U1RLZ5729",
        "text": "Any pointer or help is appreciated.",
        "ts": "1470306546.000942"
    },
    {
        "type": "message",
        "user": "U0YNFB22X",
        "text": "<@U1K5R1CP9>: I wouldn't call the Java shim support as mature yet, but it is slowly catching up with goland counterpart.  There are couple of releases planned for Java chaincode development. The first one carries huge re-organizaion of the project structure to make it easier for chaincode development easier, and a separate java docker image for chaincode deployment. It also gets support for range queries. This will be pushed to gerrit in a day or two.",
        "ts": "1470323148.000943"
    },
    {
        "type": "message",
        "user": "U0YNFB22X",
        "text": "<@U1K5R1CP9>: Spec wise it will soon reach golang's equivalence. Table support is in progress.",
        "ts": "1470323313.000944"
    },
    {
        "type": "message",
        "user": "U0YNFB22X",
        "text": "<@U1K5R1CP9> join <#C1D3VRND8>",
        "ts": "1470323314.000945"
    },
    {
        "type": "message",
        "user": "U1K5R1CP9",
        "text": "<@U0YNFB22X> - thanks for the update on Java shim support and the room link.",
        "ts": "1470323358.000946"
    },
    {
        "type": "message",
        "user": "U0YNFB22X",
        "text": "And yes you are correct, we started this with the objective to make existing java business code reusable in the hyperledger\/chaincode environment",
        "ts": "1470323491.000947"
    },
    {
        "type": "message",
        "user": "U1JAPLQSY",
        "text": "hi there, from what I google so far. At this moment, state change is not recorded in ledger (only in proposed next generation architecture)",
        "ts": "1470325775.000948"
    },
    {
        "type": "message",
        "user": "U1JAPLQSY",
        "text": "the state only stores the latest value",
        "ts": "1470325786.000949"
    },
    {
        "type": "message",
        "user": "U1JAPLQSY",
        "text": "the ledger only stores transaction invocation history (which func is called, what input param, and result hash)",
        "ts": "1470325830.000950"
    },
    {
        "type": "message",
        "user": "U1JAPLQSY",
        "text": "I read the source code as well.. and seems my understanding is correct... is that anyone on the same page with me?",
        "ts": "1470325895.000951"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "the ledger only stores current state",
        "ts": "1470326111.000952"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "the blockchain stores transactions",
        "ts": "1470326125.000953"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "there is some side table that stores the changes of transactions",
        "ts": "1470326149.000954"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "<@U1XSB8QKH>: IBM Blockchain is Hyperledger with our chosen container orchestration (Swarm). Basically, you can deploy Hyperledger anywhere you can deploy Docker containers",
        "ts": "1470326772.000955"
    },
    {
        "user": "U1YAP67GX",
        "text": "<@U1YAP67GX|weisenfluh> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1470331636.000956"
    },
    {
        "user": "U1YBS1JNA",
        "text": "<@U1YBS1JNA|girish_c> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1470338273.000957"
    },
    {
        "user": "U1YC7CQ4E",
        "text": "<@U1YC7CQ4E|branciard> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1470340665.000958"
    },
    {
        "user": "U1YDUR9QD",
        "text": "<@U1YDUR9QD|jblack> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1470348737.000959"
    },
    {
        "type": "message",
        "user": "U1JAPLQSY",
        "text": "<@U0XR6J961>: I didn't find any side table information in specification or documentation on github. We need to find them in source code?",
        "ts": "1470358619.000960"
    },
    {
        "type": "message",
        "user": "U1JAPLQSY",
        "text": "<https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/core\/chaincode\/shim\/chaincode.go>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/core\/chaincode\/shim\/chaincode.go",
                "text": "Read-only historic repo. Current development is at <https:\/\/gerrit.hyperledger.org\/r\/#\/admin\/projects\/fabric> . pull requests not accepted",
                "fallback": "GitHub: hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/core\/chaincode\/shim\/chaincode.go",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1470358864.000961"
    },
    {
        "type": "message",
        "user": "U1JAPLQSY",
        "text": "i read in the source code, i found there are createTable \/ insert row in chaincode.go",
        "ts": "1470358886.000963"
    },
    {
        "type": "message",
        "user": "U1JAPLQSY",
        "text": "<https:\/\/github.com\/hyperledger\/fabric\/tree\/master\/examples\/chaincode\/go\/asset_management>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/tree\/master\/examples\/chaincode\/go\/asset_management",
                "text": "Read-only historic repo. Current development is at <https:\/\/gerrit.hyperledger.org\/r\/#\/admin\/projects\/fabric> . pull requests not accepted",
                "fallback": "GitHub: hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/tree\/master\/examples\/chaincode\/go\/asset_management",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1470359265.000964"
    },
    {
        "type": "message",
        "user": "U1JAPLQSY",
        "text": "sample",
        "ts": "1470359266.000966"
    },
    {
        "type": "message",
        "user": "U1JAPLQSY",
        "text": "found it.",
        "ts": "1470359271.000967"
    },
    {
        "user": "U1YDGBQ2X",
        "text": "<@U1YDGBQ2X|ychsiao> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1470360842.000968"
    },
    {
        "type": "message",
        "user": "U1WUAQJVC",
        "text": "Hi all, \n\nIn go, only these are the column types supported? anyone is aware if we can store the complex types like os.File ? \n\n       ColumnDefinition_STRING \n\tColumnDefinition_INT32  \n\tColumnDefinition_INT64  \n\tColumnDefinition_UINT32\n\tColumnDefinition_UINT64\n\tColumnDefinition_BYTES \n\tColumnDefinition_BOOL\nPlease share your thoughts.",
        "edited": {
            "user": "U1WUAQJVC",
            "ts": "1470365928.000000"
        },
        "ts": "1470365530.000969"
    },
    {
        "type": "message",
        "user": "U1LES78TT",
        "text": "<@U1WUAQJVC>: that's a Hyperledger\/RocksDB thing ... you could always serialise your file into []bytes",
        "ts": "1470367453.000971"
    },
    {
        "type": "message",
        "user": "U1WUAQJVC",
        "text": "<@U1LES78TT>: Thank  you so much for the quick response. I was wondering if rock's db supports complex files types like, pdf, images, cvs, xml etc. But I guess no. Hence thought that if you guys have come across any such scenarios and any workarounds for the same.",
        "ts": "1470371841.000972"
    },
    {
        "type": "message",
        "user": "U1LES78TT",
        "text": "<@U1WUAQJVC>: if you really want to store files in a blockchain, you could just store them as bytes keyed to a filename",
        "ts": "1470373926.000973"
    },
    {
        "type": "message",
        "user": "U12452RAP",
        "text": "yep, why need store files in DB?just need store info which can find the file on server",
        "ts": "1470374053.000974"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "[While I don't know enough about the use-case need, FWIW:]\nAnother technique is to `hash(something)` where `something` is uniquely identifying what was hashed.",
        "ts": "1470374534.000975"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "So some people store a hash of a document (or a URL to the document) and then they can prove that a block that was added to the blockchain contained a (\"timed\") hash of that doc.",
        "ts": "1470374612.000976"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "... where one may or may not want to reveal the context of that `something`.",
        "ts": "1470374655.000977"
    },
    {
        "type": "message",
        "user": "U1RLLLQCU",
        "text": "Anyone recieved this error, while trying to use HFC, Node.js SDK for blockchain? \nTypeError: Cannot read property 'pb' of undefined\n    at C:\\workspace\\example\\poc\\hfc\\node_modules\\hfc\\lib\\hfc.js:992:19\n    at TransactionContext.getMyTCert (C:\\workspace\\example\\poc\\hfc\\node_modu\nles\\hfc\\lib\\hfc.js:1038:20)\n    at TransactionContext.execute (C:\\workspace\\example\\poc\\hfc\\node_modules\n\\hfc\\lib\\hfc.js:985:14)\n    at C:\\workspace\\example\\poc\\hfc\\node_modules\\hfc\\lib\\hfc.js:924:29\n    at C:\\workspace\\example\\poc\\hfc\\node_modules\\hfc\\lib\\hfc.js:1136:24\n    at C:\\workspace\\example\\poc\\hfc\\node_modules\\hfc\\lib\\hfc.js:1260:28\n    at WriteStream.&lt;anonymous&gt; (C:\\workspace\\example\\poc\\hfc\\node_modules\\hf",
        "ts": "1470376217.000978"
    },
    {
        "type": "message",
        "user": "U1WUAQJVC",
        "text": "@bgoeman:  <@U12452RAP>: <@U11MANG9G>  : Thank you all. Very useful inputs. it helps.",
        "ts": "1470376238.000979",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U11MANG9G",
                    "U12452RAP",
                    "U1ZEX4FTP"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U1YGQCGLS",
        "text": "<@U1YGQCGLS|ankaplan> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1470378892.000980"
    }
]
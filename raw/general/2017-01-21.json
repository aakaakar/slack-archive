[
    {
        "user": "U3V9MQD8E",
        "text": "<@U3V9MQD8E|dagdeng> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1484987545.003801"
    },
    {
        "user": "U3TU10KU0",
        "text": "<@U3TU10KU0|olufotebig> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1484996596.003802"
    },
    {
        "user": "U3TVA1JQG",
        "text": "<@U3TVA1JQG|bbarnett> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485016978.003806"
    },
    {
        "user": "U3U0W943T",
        "text": "<@U3U0W943T|mariogemoll> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485019891.003807"
    },
    {
        "user": "U3UPDJXV2",
        "text": "<@U3UPDJXV2|miketwenty1> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485023747.003808"
    },
    {
        "type": "message",
        "user": "U3UPDJXV2",
        "text": "how would you differentiate hyper ledger and fabric?\nand which one is using a blockchain?",
        "ts": "1485025052.003809",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U3EGXRAJG",
                    "U3UPDJXV2"
                ],
                "count": 2
            }
        ]
    },
    {
        "type": "message",
        "user": "U3NKHU4F7",
        "text": "<@U0PB67X4K> thanks for the answer.",
        "ts": "1485027584.003810"
    },
    {
        "type": "message",
        "user": "U3NKHU4F7",
        "text": "On dev mode I am seeing the message vp0_1  | 19:38:34.665 [ledger] CommitTxBatch -&gt; DEBU 2f8 There were some erroneous transactions. We need to send a 'TX rejected' message here.",
        "ts": "1485027599.003811"
    },
    {
        "type": "message",
        "user": "U3NKHU4F7",
        "text": "after deploying and quering.",
        "ts": "1485027608.003812"
    },
    {
        "type": "message",
        "user": "U3NKHU4F7",
        "text": "However all seems ok. Someone knows what it means? It is possible to know what hass been exactly \u201cerroneous\u201d? I am on dev mode.",
        "ts": "1485027669.003813"
    },
    {
        "type": "message",
        "user": "U3NKHU4F7",
        "text": "With one VP",
        "ts": "1485027674.003814"
    },
    {
        "user": "U3UPNQL3E",
        "text": "<@U3UPNQL3E|bcq> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485027899.003815"
    },
    {
        "type": "message",
        "user": "U0YJUECE8",
        "text": "<@U3UPDJXV2>     Blockchain is a technology- first popularized with Bitcoin.    Hyperledger is a consortium based on enabling blockchain technology for business (my words, go to <https:\/\/www.hyperledger.org> for \"offiicial\" verbiage).  Multiple projects have been submitted to the Hyperledger consortium.  Fabric is one of them.   Fabric is built on top of blockchain technology.  The fundamental difference between, say, Fabric and Bitcoin is that Bitcoin uses an anonymous, permissionless model where consensus on transactions is achieved through Proof of Work,  while Fabric is based on a permissioned, authenticated model-  users are typically not anonymous and thus consensus for transactions can be achieved more efficiently as compared to Proof of Work.",
        "ts": "1485036368.003819"
    },
    {
        "type": "message",
        "user": "U3UPDJXV2",
        "text": "<@U0YJUECE8> so does that mean fabric is using blocks? ",
        "ts": "1485036623.003820"
    },
    {
        "type": "message",
        "user": "U0YJUECE8",
        "text": "<@U3UPDJXV2> yes, Fabric has the same concept of blocks that can contain multiple transactions, and blocks are hashed, and linked together such that immutability is achieved-  achieved in the sense that if a bad actor were to tamper with a block's contents, the good guys can catch that through verifying the chain",
        "ts": "1485036851.003821"
    },
    {
        "user": "U3UMXRM0S",
        "text": "<@U3UMXRM0S|scott_simons> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485036892.003822"
    },
    {
        "type": "message",
        "user": "U3UPDJXV2",
        "text": "<@U0YJUECE8> how are the block size and block times determined?",
        "ts": "1485036936.003823"
    },
    {
        "type": "message",
        "user": "U0YJUECE8",
        "text": "<@U3UPDJXV2> At a high level, block size and frequency are controlled by configuration variables-  details differ between v0.6 and v1.0 of Fabric-  but for both,  you can say that a block is cut when a maximum of *X* transactions are ready to block, or after an elapsed time, even if the max of *X* transactions isn't ready.",
        "ts": "1485037099.003824"
    },
    {
        "type": "message",
        "user": "U3UPDJXV2",
        "text": "arbitrary parameters? I guess what I'm wondering is.. in a normal permission based system using something like a message broker or database I would like transactions to be near instant, what advantages are achieved through grouping data in blocks.",
        "ts": "1485037334.003825"
    },
    {
        "type": "message",
        "user": "U0YJUECE8",
        "text": "user-configurable, not sure the min and max values, not sure if the elapsed time is in seconds or milliseconds.   \"Near instant\" is in the eye of the beholder, for instance there is a lot of work going on under the covers, a lot of cryptography, and most consensus algorithms require some work-   if you're used to millions of transactions a second, e.g., you're just not going to get that at this point with Fabric.....the stated performance goal is 100,000 txns\/sec and we're not there yet.   It's a different paradigm.",
        "ts": "1485037639.003826"
    },
    {
        "type": "message",
        "user": "U0YJUECE8",
        "text": "<@U3UPDJXV2> ^^",
        "ts": "1485037647.003827"
    },
    {
        "type": "message",
        "user": "U3UPDJXV2",
        "text": "so was doing a little research.. fabric is using couchdb? ",
        "ts": "1485037707.003828"
    },
    {
        "type": "message",
        "user": "U0YJUECE8",
        "text": "<@U3UPDJXV2> For v0.6 the chain itself and the state are both in RocksDB.   For v1.0  the chain has moved to goLevelDB and that's hard-coded,  but the state is pluggable- it defaults also to goLevelDB, but a couchdb implementation is being (or has been, not sure if the coding for it is complete)  developed for the state.",
        "ts": "1485037870.003829"
    },
    {
        "type": "message",
        "user": "U3UPDJXV2",
        "text": "<@U0YJUECE8> seems like a cool system, but still confused on why the need for blocks. ",
        "ts": "1485038166.003830"
    },
    {
        "type": "message",
        "user": "U0YJUECE8",
        "text": "<@U3UPDJXV2> the hashing that provides the links is done at the block level, not at the transaction level, so the immutability that is a salient feature of blockchain needs this concept of blocks.",
        "ts": "1485038399.003831"
    },
    {
        "type": "message",
        "user": "U3UPDJXV2",
        "text": "since no proof of work is being done.. I would imagine no nonce is needed.. no miners.. so the hash link is just using data from the previous block and agreed upon by trusted nodes\/actors?",
        "ts": "1485038593.003832"
    },
    {
        "type": "message",
        "user": "U0YJUECE8",
        "text": "<@U3UPDJXV2> no miners are needed....you're getting into the implementation details and pushing up against the boundaries of my current level of knowledge,  I think nonces may still be used in places to help prevent replay attacks and stuff like that...   each block contains a hash of the previous block...   the agreement among multiple nodes is done by consensus.    In v0.6 there is \"noop\" which is essentially for testing purposes with a single node, and then there is PBFT (Practical Byzantine Fault Tolerance) which requires a minimum of 4 nodes to work right, because the algorithm says you need *3f + 1* nodes if you are willing to tolerate *f* bad actors.   I think in v1.0 the consensus algorithms are 'Solo' which is similar to noop in that it's really just meant for 1 node and testing purposes, and then a consensus called Kafka has been implemented.  A variant of PBFT called SBFT (for Simplified Practical Byzantine Fault Tolerance) is under development for Fabric v1.0 but I think that one may not be fully baked when v1.0 is first released.     If you need more details <#C0Z4NBUN6|fabric-consensus-dev> is a good channel to drill down deeper,  maybe <#C2GE7GXM1|fabric-crypto> for questions on nonces.  If you're ever unsure where to ask start at <#C0Y4PEU22|fabric> and if someone thinks you should ask elsewhere, they'll point you in the right direction.",
        "edited": {
            "user": "U0YJUECE8",
            "ts": "1485039060.000000"
        },
        "ts": "1485039045.003833"
    },
    {
        "type": "message",
        "user": "U3UPDJXV2",
        "text": "wow thanks a lot I'll move over to the other channels for some more questions.. thanks for getting me started",
        "ts": "1485039222.003835",
        "reactions": [
            {
                "name": "white_check_mark",
                "users": [
                    "U0YJUECE8",
                    "U3CBZ7S94"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U3U1NHNRE",
        "text": "<@U3U1NHNRE|jcmldev> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485047599.003836"
    }
]
[
    {
        "user": "U0P61VA73",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0P61VA73|jerome> has joined the channel",
        "ts": "1456475631.000376"
    },
    {
        "type": "message",
        "user": "U0NLZCF8V",
        "text": "nice explanation of obc on the tsc <https:\/\/drive.google.com\/open?id=0B42vMkapQi1MQ2RTRXpudzEySUE> video",
        "edited": {
            "user": "U0NLZCF8V",
            "ts": "1456479999.000000"
        },
        "ts": "1456479959.000378"
    },
    {
        "type": "message",
        "user": "U0N25BLQH",
        "text": "<@U0NCNSRV5>:  my understanding is primarily to provide isolation from the OBC peer. On the TSC call yesterday, the subject of containers came up and my take away from that was that alternate container solutions should be possible from an architectural perspective. I believe the approach being taken by the project is to make components interchangeable wherever possible.",
        "ts": "1456480816.000380"
    },
    {
        "user": "U0P6K5BTL",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0P6K5BTL|sillytuna> has joined the channel",
        "ts": "1456482842.000381"
    },
    {
        "type": "message",
        "user": "U0NJ0M5HB",
        "text": "How \u201clocked down\u201d are the docker containers in OBC? Can chaincode make external network connections? eg API calls to external services outside the OBC?",
        "ts": "1456489773.000382"
    },
    {
        "type": "message",
        "user": "U0NN4MRME",
        "text": "not that I fully understand OBC .. but if those containers are part of the blockchain protocol .. than it is a bad idea to poll outside sources since they could render a formerly valid transaction\/block invalid at a later time",
        "ts": "1456490520.000383"
    },
    {
        "type": "message",
        "user": "U0NJ0M5HB",
        "text": "I was thinking of use cases like: 1. to get data external data as part of a smart contract. eg stock price. 2. to do external service calls. eg sanctions check 3. to act as an eventing mechanism to systems outside the OBC. eg notify customer of new transaction",
        "ts": "1456491941.000384"
    },
    {
        "type": "message",
        "user": "U0NLZCF8V",
        "text": "if you get external data, that might change so it will invalidate consensus.",
        "ts": "1456492064.000385"
    },
    {
        "type": "message",
        "user": "U0NLZCF8V",
        "text": "oracles ie.. notifications etc should be driven by a transaction",
        "ts": "1456492115.000386"
    },
    {
        "type": "message",
        "user": "U0NLZCF8V",
        "text": "that is part of \"external\" bl which interacts with the chain",
        "ts": "1456492140.000387"
    },
    {
        "type": "message",
        "user": "U0NLZCF8V",
        "text": "now...",
        "ts": "1456492170.000388"
    },
    {
        "type": "message",
        "user": "U0NLZCF8V",
        "text": "an smart contract could react of an event raised by another contract on the chain",
        "ts": "1456492196.000389"
    },
    {
        "type": "message",
        "user": "U0NLZCF8V",
        "text": "as this can be part of the consensus",
        "ts": "1456492208.000390"
    },
    {
        "type": "message",
        "user": "U0NLZCF8V",
        "text": "-------------",
        "ts": "1456492257.000391"
    },
    {
        "type": "message",
        "user": "U0NLZCF8V",
        "text": "the question is if chaincode is deployed through containers how do they interact with each other and limited to interoperability within the chain, together with consensus of state and transaction",
        "ts": "1456492328.000392"
    },
    {
        "type": "message",
        "user": "U0NLZCF8V",
        "text": "but I don't know much so somebody can correct me \/ guide me",
        "ts": "1456492385.000393"
    },
    {
        "type": "message",
        "user": "U0NJ0M5HB",
        "text": "Ah, I get it now. The validating peers will run a slightly different times hence the external service calls can have difference data which will throw concensus",
        "ts": "1456494311.000394"
    },
    {
        "user": "U0P75RFT4",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0P75RFT4|tim.blankers> has joined the channel",
        "ts": "1456494508.000395"
    },
    {
        "type": "message",
        "user": "U0NN4MRME",
        "text": "<@U0NJ0M5HB>: also .. you need to be sure that the external service provides the same data EVERYTIME you need to replay the whole blockchain to get to your most recent database state",
        "ts": "1456496227.000396"
    },
    {
        "type": "message",
        "user": "U0NJ0M5HB",
        "text": "thanks <@U0NN4MRME>. next dumb question, when would you need to replay the whole blockchain? And what exactly is a reply? Surely it\u2019s not running all chaincode since the genesis block",
        "ts": "1456497002.000397"
    },
    {
        "type": "message",
        "user": "U0NCNSRV5",
        "text": "<@U0NCW1DPX>: yes for isolation or deployment?",
        "ts": "1456497545.000398"
    },
    {
        "type": "message",
        "user": "U0NCNSRV5",
        "text": "<@U0N25BLQH>: The problem is that Linux container is not that isolated, e.g. shared kernel",
        "ts": "1456497598.000399"
    },
    {
        "type": "message",
        "user": "U0NN4MRME",
        "text": "<@U0NJ0M5HB>: replaying is EXACTLY rerunning every thing since genesis block .. only that way you can be sure that your local database state is consistent with everyone else",
        "ts": "1456497795.000400"
    },
    {
        "type": "message",
        "user": "U0NN4MRME",
        "text": "you can though surely do some optimizations here and there and assume that if the blockchain is way longer than the currently block that you replay .. that you don't need to re run everything but can assume a degree of consensus on it ... similar to checkpoints ..",
        "ts": "1456497841.000401"
    },
    {
        "type": "message",
        "user": "U0P61VA73",
        "text": "Dear all, to securely *sandbox the execution of contracts* written in Golang or C\/C++, Google *NaCL* may help: <https:\/\/github.com\/golang\/go\/wiki\/NativeClient>",
        "edited": {
            "user": "U0P61VA73",
            "ts": "1456498428.000000"
        },
        "ts": "1456498272.000402"
    },
    {
        "type": "message",
        "user": "U0P6K5BTL",
        "text": "<@U0NJ0M5HB>: also potential issue of spamming service requests as well as dif data",
        "ts": "1456501442.000405"
    },
    {
        "type": "message",
        "user": "U0P6K5BTL",
        "text": "Even x-chain support has small but real risk due to hard fork",
        "ts": "1456501463.000406"
    },
    {
        "user": "U0P8A7ZNX",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0P8A7ZNX|timswanson> has joined the channel",
        "ts": "1456508263.000407"
    },
    {
        "type": "message",
        "user": "U0NJ0M5HB",
        "text": "<@U0NN4MRME>:  thanks again for explaining. I like the checkpointing idea after a level of consensus. I wouldn\u2019t want to see a peer having to run a few years worth of chaincode just to work out the state of the systems",
        "ts": "1456517201.000408"
    },
    {
        "type": "message",
        "user": "U0N81PGKV",
        "text": "I think the concept of inclusion of external data falls more under \u201cbest practices\u201d than something that should be deliberately codified.  One can easily envision a market for a number of distributed ledgers which do little else but serve commonly consumed data in a format suitable for bootstrapping oracles.",
        "ts": "1456540178.000409"
    },
    {
        "type": "message",
        "user": "U0NM25NQ3",
        "text": "I was too wondering about the \"locked down\"ness of these Docker containers. I'm usually a fan of the approach of feeding external data as transactions when necessary, but here I think that in some use cases it's not as important to be replayable as it is in Ethereum, for example. causing all external data to only be inserted  as transactions might be counter-productive. having a system that provides a point-in-time consensus about something would be beneficial",
        "ts": "1456542681.000410"
    },
    {
        "user": "U0PAH9SQP",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0PAH9SQP|bpreston> has joined the channel",
        "ts": "1456545078.000411"
    }
]
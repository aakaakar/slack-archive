[
    {
        "user": "U24JMTPRQ",
        "text": "<@U24JMTPRQ|aliblackwell> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1476698593.000296"
    },
    {
        "type": "message",
        "user": "U184J2R7S",
        "text": "Talking with Keith Smith and Angeloa de Caro today-&gt; One of the questions that came up last week was whether bcssp (crypto service provider for blockchain) would work related to cfssl- there is no problem plugging that in and we have proven that out.   Angelo also has 11 change sets to check in bcssp, but noone has reviewed it yet.  I suggested going to fabric-maintainers and requesting help.",
        "ts": "1476718750.000297"
    },
    {
        "type": "message",
        "user": "U184J2R7S",
        "text": "The HSM work is being put in 0.6.  This week, Angelo will start the implementation on client SDK at committing peers to perform signature and verification of signatures for Version 1.0.",
        "ts": "1476718868.000298"
    },
    {
        "type": "message",
        "user": "U184J2R7S",
        "text": "Elli submitted deck of slides on channel bootstrapping and putting it on Jira-- I asked Angelo to get the right JIRA numbers posted here.",
        "ts": "1476718942.000299"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "I have actually looked at some of the bcssp stuff",
        "ts": "1476722885.000300"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "Here's the problem - I \/ we want to be done with v0.6.  You just saw the struggle we had actually getting that thing out and we are going to have to fix bugs against it.  It frankly seems very risky and not worth our time overall to try to merge this stuff into the v0.6 branch.",
        "edited": {
            "user": "U0PB67X4K",
            "ts": "1476722994.000000"
        },
        "ts": "1476722964.000301"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "folks - no other comments about <https:\/\/jira.hyperledger.org\/browse\/FAB-635>?",
        "ts": "1476725383.000303"
    },
    {
        "user": "U11MANG9G",
        "text": "<@U11MANG9G|jonathanlevi> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1476726812.000304"
    },
    {
        "user": "U1FBDMBMG",
        "text": "<@U1FBDMBMG|ryokawawork> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1476754168.000305"
    },
    {
        "type": "message",
        "user": "U1FBDMBMG",
        "text": "Hi, is there any documentation for the specification of encryption of the transactions and the world state (KVS)? I am asking this because it is often required to encrypt databases in the financial industry. And also I am thinking about using the history of the transactions for auditing, where decryption of the transaction payloads is required.",
        "ts": "1476755069.000306"
    },
    {
        "type": "message",
        "user": "U1FBDMBMG",
        "text": "According to the source codes (fabric\/sdk\/node\/src\/hfc.ts, and fabric\/core\/crypto\/validator_state.go), the payload of a invoke transaction is encrypted by a one-time public key, its private key is encrypted by the chain key, and transferred to a peer using toValidator field of a transaction.",
        "ts": "1476755290.000307"
    },
    {
        "type": "message",
        "user": "U1FBDMBMG",
        "text": "A value of the world state is encrypted by State Key, which is derived  from the Chain Key and used fro decryption of return values of query transactions. Keys (of KVS) are not encrypted. The Chain Key is common to all the members and is a symmetric key.",
        "ts": "1476755508.000308"
    },
    {
        "type": "message",
        "user": "U1FBDMBMG",
        "text": "Am I understanding the spec correctly?  I am also reading Protocol Spec, but bit confused. I suppose this document includes future plans, or parts which is not up-to-date...  <http:\/\/hyperledger-fabric.readthedocs.io\/en\/latest\/protocol-spec\/#4-security_1>",
        "ts": "1476755653.000309"
    },
    {
        "type": "message",
        "user": "U1FBDMBMG",
        "text": "I am now using Fabric v0.6.0-preview.",
        "ts": "1476755748.000310"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "<@U0PB67X4K>, understandable. Luckily that code can be reused in v1 easily",
        "ts": "1476773400.000311"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "<@U1FBDMBMG>, you are mostly correct. regarding transactions, let me clarify that the chain key is public-key whose associated secret key is distributed to all the validators at enrollment time. For the state, there is a root state key that is specified in the deploy transaction. From this key, the code derives the keys and the IVs. The chain (secret) key is involved in this process only to extract the root state key from the deploy transaction",
        "ts": "1476773771.000313"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "<@U184J2R7S>, just to clarify, Alessandro will work on the implementation on client SDK at endorsing\/committing peers to perform signature and verification of signatures for Version 1.0. Elli, will submit slides on channel bootstrapping asap. Thanks :slightly_smiling_face:",
        "ts": "1476773902.000314"
    }
]
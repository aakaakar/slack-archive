[
    {
        "user": "U1TA5FDU7",
        "text": "<@U1TA5FDU7|warm3snow> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1478680543.002211"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "Anyone home?",
        "ts": "1478694196.002212"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "I've a question related to multi-channels. \nWhen an application (via node SDK) makes a peer join a channel, how does it identify itself to the peer? How does the peer recognize the \"joinChannel\" gRPC call is authentic?",
        "edited": {
            "user": "U0ZJZBJLF",
            "ts": "1478694399.000000"
        },
        "ts": "1478694258.002213"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "the same way that it would make sure that the endorsement call is authentic - it checks the signature on the \"message\" - and of course the certificate used to sign the \"message\" must be trusted by the peers",
        "ts": "1478695268.002216"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "Maybe I am missing something in the question?",
        "ts": "1478695280.002217"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "the bottom line is that the entire system is basically based on extracting \"identity\" from the certificates used to sign \"messages \/ transactions\".  And you can either explicitly trust the certificate or the issuer (root authority) of the certificate.  (on top of this, you can also start to use attributes \"embedded\" in the certificates as well, but the carrier is a certificate)",
        "ts": "1478695599.002218"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "The cert is included in the joinChannel message?",
        "ts": "1478695744.002219"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "you're not missing anything in the question, I'm simply wondering whether a peer `p0` can relay that message to another peer `p1` and if `p1` can validate that message, that's all.",
        "ts": "1478695801.002220"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "I don't see why not - given we are checking the signature of the original submitter and the signature would cover the contents to make sure that have not been changed",
        "ts": "1478695935.002221"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "ok thanks, just making sure,",
        "ts": "1478696035.002222"
    },
    {
        "type": "message",
        "user": "U1BC5A0F9",
        "text": "Hi, <@U0XPR4NP4>, <@U26T99AQ4>, <@U0KN2SSKE>, <@U0ULK2JPP>; so were wondering on the config message payload structure. Would these have a json form?",
        "edited": {
            "user": "U1BC5A0F9",
            "ts": "1478711647.000000"
        },
        "ts": "1478711636.002223"
    },
    {
        "type": "message",
        "user": "U1BC5A0F9",
        "text": "The reason i am asking is the following: the MSPs would need to understand that message (payload) to evaluate it with the rules associated to that MSP (if e.g., proper signatures have been provided)",
        "ts": "1478711703.002225"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "just curious <@U1BC5A0F9> is this wrt <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/2243\/>",
        "ts": "1478711712.002226"
    },
    {
        "type": "message",
        "user": "U1BC5A0F9",
        "text": "And though json seems to be the simples one",
        "ts": "1478711715.002227"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "ah never mind :slightly_smiling_face:",
        "ts": "1478711715.002228"
    },
    {
        "type": "message",
        "user": "U1BC5A0F9",
        "text": "yes",
        "ts": "1478711718.002229"
    },
    {
        "type": "message",
        "user": "U1BC5A0F9",
        "text": "<@U0ULK2JPP> indeed",
        "ts": "1478711731.002230"
    },
    {
        "type": "message",
        "user": "U1BC5A0F9",
        "text": "(the changeset that i am working on)",
        "ts": "1478711736.002231"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I was thinking we could find one more use for <@U0XPR4NP4> policy framework\u2026 is that where you were going with this ?",
        "ts": "1478711775.002232"
    },
    {
        "type": "message",
        "user": "U1BC5A0F9",
        "text": "Had a discussion eearlier with <@U26T99AQ4> on the way an MSP should be updating its state, as well as with <@U0S5KF44D> earlier.",
        "ts": "1478711777.002233"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "ok",
        "ts": "1478711819.002234"
    },
    {
        "type": "message",
        "user": "U1BC5A0F9",
        "text": "And what do you mean by policy framework?",
        "ts": "1478711821.002235"
    },
    {
        "type": "message",
        "user": "U1BC5A0F9",
        "text": "In my mind certain config tx-s would refer to membership service provider reconfiguration.",
        "ts": "1478711857.002236"
    },
    {
        "type": "message",
        "user": "U1BC5A0F9",
        "text": "Each MSP may have its own rules or policy w.r.t. how the reconfiguration takes place. E.g., MSP 1 may require that CA1 signs configuration changes of MSP1, while MSP2 would require that CA2 signs configuration changes to MSP2.",
        "ts": "1478711924.002237"
    },
    {
        "type": "message",
        "user": "U1BC5A0F9",
        "text": "As configuration changes go through the blockchain and included in special transactions, i am wondering if json would still make sense to be used as an argument passed to the",
        "ts": "1478711968.002238"
    },
    {
        "type": "message",
        "user": "U1BC5A0F9",
        "text": "MSP reconfigure function... or rather send to it the entire tx...",
        "ts": "1478711994.002239"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "ok <@U1BC5A0F9> . My question on policy framework is relevant but might be a distraction for your discussion (here\u2019s a change set <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/1957>  though)",
        "ts": "1478712167.002240"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "we are once again on the verge of making this TOO complex without even getting the piece parts working yet  :wink:",
        "ts": "1478712251.002241"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "if that\u2019s directed towards my comment <@U0PB67X4K> , I agree :slightly_smiling_face: \u2026 my only intent was I saw policy defined and wanted to call out there could be scope for code reusus",
        "ts": "1478712390.002242"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "not just you",
        "ts": "1478712557.002243"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "yes - agreed on that piece",
        "ts": "1478712579.002244"
    },
    {
        "type": "message",
        "user": "U1BC5A0F9",
        "text": "hm.. ok, i just put jsn now on the interface, and revise that later if needed :smile:",
        "ts": "1478712703.002245"
    },
    {
        "type": "message",
        "user": "U1BC5A0F9",
        "text": "(moving on to a simpler note)",
        "ts": "1478712718.002246"
    },
    {
        "type": "message",
        "user": "U26T99AQ4",
        "text": "One way or another, it would be *great* to have a tentative IDP interface merged soon so that on the peer side we can get a sense of what the full endorsement flow looks like",
        "ts": "1478712765.002247"
    },
    {
        "type": "message",
        "user": "U26T99AQ4",
        "text": "and I think <@U1BC5A0F9> has one ready, where the format of the configuration is json, right?",
        "ts": "1478712820.002248"
    },
    {
        "type": "message",
        "user": "U1BC5A0F9",
        "text": "sort of :slightly_smiling_face:",
        "ts": "1478712831.002249"
    },
    {
        "type": "message",
        "user": "U1BC5A0F9",
        "text": "I have the setup method taking a input json formed string, and a sample of that string",
        "edited": {
            "user": "U1BC5A0F9",
            "ts": "1478712868.000000"
        },
        "ts": "1478712847.002250"
    },
    {
        "type": "message",
        "user": "U1BC5A0F9",
        "text": "hence i was wondering if it would make sense to use the same thing for reconfiguration related messages.",
        "ts": "1478712886.002252"
    },
    {
        "type": "message",
        "user": "U26T99AQ4",
        "text": "<@U1BC5A0F9> got it",
        "ts": "1478712900.002253"
    },
    {
        "type": "message",
        "user": "U26T99AQ4",
        "text": "thx",
        "ts": "1478712902.002254"
    },
    {
        "type": "message",
        "user": "U1BC5A0F9",
        "text": "And extending my thought, i was more generally asking\/wondering, why cant a reconfiguration messages simply be defined as payload (in json format) that has added a signature on top?",
        "ts": "1478713022.002255"
    },
    {
        "type": "message",
        "user": "U1BC5A0F9",
        "text": "Or is this the way we do it already?",
        "ts": "1478713032.002256"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U1BC5A0F9> There is an encoding for policy defined you can see in the protos.  As far as specific encodings for certs and such, I was going to leave this to the crypto team",
        "ts": "1478713704.002257"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "The configuration messages are defined via protobuf (I don't see why this is inferior to JSON, as you can convert it to\/from JSON if you want)",
        "ts": "1478713753.002258"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "And the payload is essentially key value pairs, where the encoding of the value is simply bytes, likely a marshaled message of whatever form is desired.",
        "ts": "1478713784.002259"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Have you seen the configuration section in the \"Next Hyperledger-Fabric Architecture Protocol messages\" doc?",
        "ts": "1478713848.002260"
    },
    {
        "type": "message",
        "user": "U1BC5A0F9",
        "text": "But wouldn't things be easier if we specified in the configuration the component of the system this configuration refers to and some payload that this component is able to understand?",
        "ts": "1478713854.002261"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "There is a type attached to the configuration item, which indicates the encoding",
        "ts": "1478713881.002262"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "(Though what that encoding is is TBD)",
        "ts": "1478713893.002263"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "For the policy type, the encoding is a marshaled `Policy` message",
        "ts": "1478713910.002264"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "For the orderer\/peer\/chain types, the encoding is not yet defined",
        "ts": "1478713924.002265"
    },
    {
        "type": "message",
        "user": "U1BC5A0F9",
        "text": "I have not see i think the configuration part",
        "ts": "1478713928.002266"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<https:\/\/docs.google.com\/document\/d\/1qD2zOTxmPoss3Xop_pDdkSXHozIR4N27NEsymosW4Gk\/>",
        "ts": "1478713954.002267"
    },
    {
        "user": "U13Q594J2",
        "text": "<@U13Q594J2|ratnakar> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1478741275.002269"
    },
    {
        "type": "message",
        "user": "U1BC5A0F9",
        "text": "<@U0XPR4NP4> so i took a look at the configuration section (thanks for sending this along!) and i made some comments therein :slightly_smiling_face:",
        "ts": "1478763522.002270"
    }
]
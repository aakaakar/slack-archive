[
    {
        "user": "U1V6SJ1FF",
        "text": "<@U1V6SJ1FF|dgorman> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1482399460.000879"
    },
    {
        "type": "message",
        "user": "U2E87MX1A",
        "text": "<@U11MANG9G> Okay. Well, I will tell you about a part of my use case and you tell me if hyperledger provides tools to do it. I need a smart contract which data is encrypted on the blockchain and only accessible by 2 involved accounts. The hard part is that I can't store public\/private keys to encrypt data on the blockchain (cause they would be publically accessible) so I want to know if membersrvc or something like that can generate and keep safe those keys for me, and maybe only serve them to those 2 peers that can access the contract. I also have another question but isnt really related to this channel: can a go smart contract deploy another smart contract (like solidity does) ? Thanks in advance.",
        "ts": "1482405940.000880"
    },
    {
        "type": "message",
        "user": "U1TA5FDU7",
        "text": "<@U2E87MX1A>  why you want to store your private key on the chain?  In your case, when you deploy your contract, you can specify the 2 participants' certificates in the metadata. And you design your chaincode,  only if you two provide correct signature, you can continue to perform the contract or access the data.  For 2, i cannot understand you clearly. Are you saying one contract invokes another contract? if so, it's yes.",
        "ts": "1482456420.000881"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "Hi again <@U2E87MX1A>, so let\u2019s focus on (hyperledger, of course) fabric. So a few things:\n\nIn addition to attempting to answering your questions, may repeat\/cover also some of what <@U1TA5FDU7> has above and I will also try to give you more info about fabric, while we are at it:\n\n1. Do you need the smart contract (fabric has \u201cchaincode\u201ds that are executed within containers) to encrypt  some payload? Where are these private keys coming from?\n\n2. Membership Services (fabric v0.5, 0.6) has changed considerably and some of its logic (and more) lives in fabric-cop in v1.0. The private\/public key pairs (and signed certificates that we remember (&amp; cache) are used mostly for AUTH\/N, AUTH\/Z). So you can think about the having the public keys somewhere, for (a weak) identity.\n\n3. The Go \u201csmart contracts\u201d (aka \u201cchaincode\u201d) can invoke another (say again, Go) function that was deployed. It does not work the same way as Ethereum, for example, works - where the contracts have addresses that are reference-able. Here names (strings) are used, and indeed it is the same notion (in that case),",
        "ts": "1482460470.000884"
    }
]
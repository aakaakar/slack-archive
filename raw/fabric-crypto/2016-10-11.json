[
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "<@U0PB67X4K>, <@U0S5KF44D>, @lli: if I got it correctly, CFSSL exposes an interface called signer.Signer that can be used to plug different signing capabilities. So, if we really want, we can potentially put our BCCSP there.",
        "ts": "1476175293.000260"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "I'm also trying to understand how HSM is integrated in CFSSL but I'm struggling in setting it up using SoftHSM. Any idea?",
        "ts": "1476175332.000261"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "here's a link to see work that the LetsEncrypt team did - <https:\/\/github.com\/letsencrypt\/pkcs11key>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "letsencrypt\/pkcs11key",
                "title_link": "https:\/\/github.com\/letsencrypt\/pkcs11key",
                "text": "pkcs11key - An interface to PKCS#11 devices that satisfies the crypto.Signer interface",
                "fallback": "GitHub: letsencrypt\/pkcs11key",
                "thumb_url": "https:\/\/avatars0.githubusercontent.com\/u\/9289019?v=3&s=400",
                "from_url": "https:\/\/github.com\/letsencrypt\/pkcs11key",
                "thumb_width": 256,
                "thumb_height": 256,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1476177080.000262"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "Yes, yes. So, essentially in CFSSL one creates a new local signer (local.NewSigner) and passes a crypto.Signer. Then, letsencrypt provides the PKCS11-based crypto.Signer",
        "ts": "1476177660.000264"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "super easy",
        "ts": "1476177665.000265"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "actually, we have to do the same in fabric",
        "edited": {
            "user": "U0ZR63HLK",
            "ts": "1476177790.000000"
        },
        "ts": "1476177676.000266"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "we need a BCCSP-based crypto.Signer in order to sign TCert and ECert",
        "ts": "1476177708.000267"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "so the BCCSP can be integrated in CFSSL easily",
        "edited": {
            "user": "U0ZR63HLK",
            "ts": "1476177816.000000"
        },
        "ts": "1476177736.000268"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "if needed at all",
        "ts": "1476177740.000269"
    },
    {
        "user": "U2MSDAQG2",
        "text": "<@U2MSDAQG2|hurui777> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1476186285.000272"
    },
    {
        "user": "U2MCH9EEB",
        "text": "<@U2MCH9EEB|crazybit> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1476187380.000273"
    }
]
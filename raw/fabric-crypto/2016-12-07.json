[
    {
        "type": "message",
        "user": "U2T7Z63NY",
        "text": "We are passing following payload while calling \"invoke\" method with REST call....\n\n\t\t{\n\t\t  \"jsonrpc\": \"2.0\",\n\t\t  \"method\": \"invoke\",\n\t\t  \"params\": {\n\t\t      \"type\": 1,\n\t\t      \"chaincodeID\":{\n\t\t          \"name\":\"au\"\n\t\t      },\n\t\t      \"ctorMsg\": {\n\t\t         \"function\":\"increment\",\n\t\t         \"args\":[]\n\t\t      },\n\t\t      \"secureContext\": \"diego\"\n\t\t  },\n\t\t  \"id\": 4\n\t\t}\n\nPlease let us know if its correct?\n\nThanks",
        "attachments": [
            {
                "fallback": "[December 6th, 2016 9:45 PM] adc: you should use the client-sdk for that",
                "ts": "1481040930.000016",
                "author_subname": "adc",
                "channel_id": "C2GE7GXM1",
                "channel_name": "fabric-crypto",
                "is_msg_unfurl": true,
                "text": "you should use the client-sdk for that",
                "author_name": "Angelo De Caro",
                "author_link": "https:\/\/hyperledgerproject.slack.com\/team\/adc",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2016-07-21\/61823221170_e0795e87fc9eb0abb221_48.jpg",
                "mrkdwn_in": [
                    "text"
                ],
                "color": "D0D0D0",
                "from_url": "https:\/\/hyperledgerproject.slack.com\/archives\/fabric-crypto\/p1481040930000016",
                "is_share": true,
                "footer": "Posted in #fabric-crypto"
            }
        ],
        "ts": "1481097850.000019"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "looks good to me -- I'm comparing against \"Invoke Request with security enabled:\" under <https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/docs\/protocol-spec.md#6213-chaincode-api>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/docs\/protocol-spec.md#6213-chaincode-api",
                "text": "Read-only mirror of <https:\/\/gerrit.hyperledger.org\/r\/#\/admin\/projects\/fabric>",
                "fallback": "GitHub: hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/docs\/protocol-spec.md#6213-chaincode-api",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1481099654.000020"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "I never got around to using the REST API with security enabled though, so I have no direct experience",
        "ts": "1481099675.000022"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "<@U2T7Z63NY> What sort of application are you driving chaincode from?",
        "ts": "1481099712.000023"
    },
    {
        "type": "message",
        "user": "U2T7Z63NY",
        "text": "Thanks for your reply. \nWe are using postman as REST client.",
        "attachments": [
            {
                "fallback": "[December 7th, 2016 2:04 PM] vdods: I never got around to using the REST API with security enabled though, so I have no direct experience",
                "ts": "1481099675.000022",
                "author_subname": "vdods",
                "channel_id": "C2GE7GXM1",
                "channel_name": "fabric-crypto",
                "is_msg_unfurl": true,
                "text": "I never got around to using the REST API with security enabled though, so I have no direct experience",
                "author_name": "Victor Dods",
                "author_link": "https:\/\/hyperledgerproject.slack.com\/team\/vdods",
                "author_icon": "https:\/\/secure.gravatar.com\/avatar\/f01b1034401a358d6f6cb2bc2fca26db.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2F66f9%2Fimg%2Favatars%2Fava_0008-48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "color": "D0D0D0",
                "from_url": "https:\/\/hyperledgerproject.slack.com\/archives\/fabric-crypto\/p1481099675000022",
                "is_share": true,
                "footer": "Posted in #fabric-crypto"
            }
        ],
        "edited": {
            "user": "U2T7Z63NY",
            "ts": "1481100861.000000"
        },
        "ts": "1481100801.000024"
    },
    {
        "type": "message",
        "user": "U2T7Z63NY",
        "text": "<@U2X9KDDL7>, We have already set enabled = true attribute inside membersrvc.yaml under security ACA section.",
        "ts": "1481101493.000026"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "Make sure to try setting MEMBERSRVC_CA_ACA_ENABLED=true as well -- I remember it not working unless I had the env var set",
        "ts": "1481102269.000027"
    },
    {
        "type": "message",
        "user": "U2T7Z63NY",
        "text": "Thanks, i will try this now.",
        "ts": "1481102701.000028"
    },
    {
        "type": "message",
        "user": "U2T7Z63NY",
        "text": "We tried this also with during setting up validating peer as below ...\nMEMBERSRVC_CA_ACA_ENABLED=true peer node start --peer-chaincodedev\n\nUnfortunately, it didn't work again.\nThanks.",
        "ts": "1481103318.000029"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "Ah, no that has to be done on membersrvc",
        "ts": "1481103339.000030"
    },
    {
        "type": "message",
        "user": "U2T7Z63NY",
        "text": "Earlier we tried that in membersrvc.yaml file under the aca: section...\n\n          # Enabling\/disabling Attribute Certificate Authority, if ACA is enabled attributes will be added into the TCert.\n          enabled: true",
        "ts": "1481103421.000031"
    },
    {
        "type": "message",
        "user": "U2T7Z63NY",
        "text": "By getting the same result, it seems, both do the same thing.",
        "ts": "1481103473.000032"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "Hmm.. sorry, I did encounter that problem but perhaps I'm misremembering what caused it",
        "ts": "1481103565.000033"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "Can you verify that in your membersrvc logs (where, you have MEMBERSRVC_CA_LOGGING_ACA=info), you see \"[aca] Start -&gt; INFO 002 Staring ACA services...\" .. I just want to be sure",
        "ts": "1481103644.000034"
    },
    {
        "type": "message",
        "user": "U2T7Z63NY",
        "text": "Please let us know the location of MEMBERSRVC_CA_LOGGING_ACA=info",
        "ts": "1481104359.000035"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "all env vars that start with MEMBERSRVC_CA are for membersrvc",
        "ts": "1481104520.000036"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "similarly, all CORE_PEER env vars are for the peer",
        "ts": "1481104529.000037"
    },
    {
        "type": "message",
        "user": "U2T7Z63NY",
        "text": "We are using membersrvc.yaml that is bundeled with Hyperledger v 0.6, in which there is no such variable MEMBERSRVC_CA_LOGGING_ACA abailable. \n\nWhereas while we googled, we could found the same variable in the \"<https:\/\/raw.githubusercontent.com\/IBM-Blockchain\/fabric-images\/master\/docker-compose\/base\/membersrvc.yaml>\"\n\nCan we include all the desired variables from this yaml into ours. ?",
        "edited": {
            "user": "U2T7Z63NY",
            "ts": "1481104720.000000"
        },
        "ts": "1481104700.000038"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "There are two ways to specify configuration values -- they're both via this library \"viper\".  One is via the command line, e.g. MEMBERSRVC_CA_ACA_ENABLED.  This turns into the viper key \"membersrvc.ca.aca.enabled\", so for example, you could search for aca.enabled and find ```\tsrv := grpc.NewServer(opts...)\n\n\tif viper.GetBool(\"aca.enabled\") {\n\t\tlogger.Debug(\"ACA was enabled [aca.enabled == true]\")\n\t\taca.Start(srv)\n\t}\n```",
        "ts": "1481104888.000040"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "that's in server.go",
        "ts": "1481104896.000041"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "The yaml files specify configuration values via the viper names, i.e. lower-case, where the periods delimit elements of the hierarchy of config vars",
        "ts": "1481104948.000042"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "so it's really just two ways to specify config values.. you might use env vars in a docker-compose.yml file",
        "ts": "1481104974.000043"
    },
    {
        "type": "message",
        "user": "U2T7Z63NY",
        "text": "Yes, its found in the \"<http:\/\/github.com|github.com>\\hyperledger\\fabric\\membersrvc\\server.go\" file. which is set as true...\n\n\tsrv := grpc.NewServer(opts...)\n\n\tif viper.GetBool(\"aca.enabled\") {\n\t\tlogger.Debug(\"ACA was enabled [aca.enabled == true]\")\n\t\taca.Start(srv)\n\t}\n\teca.Start(srv)\n\ttca.Start(srv)\n\ttlsca.Start(srv)",
        "ts": "1481105745.000044"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "I mean -- do you see `[aca] Start -&gt; INFO 003 Staring ACA services...` in your membersrvc log?",
        "ts": "1481106173.000045"
    },
    {
        "type": "message",
        "user": "U2T7Z63NY",
        "text": "Is this message in the validation peer terminal's log? if so, we are unable to see that message.\n\nHowever, we could find this log \"10:35:12.516 [logging] LoggingInit -&gt; DEBU 001 Setting default logging level to DEBUG for command 'aca'\" while we execute membersrvc command in the fabric folder",
        "edited": {
            "user": "U2T7Z63NY",
            "ts": "1481107047.000000"
        },
        "ts": "1481106805.000046"
    },
    {
        "user": "U3BL88B18",
        "text": "<@U3BL88B18|thomas_g> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1481107033.000049"
    },
    {
        "type": "message",
        "user": "U2T7Z63NY",
        "text": "in the validating terminal's logs, we could notice following logs :\n\n10:39:40.479 [nodeCmd] serve -&gt; INFO 002 Running in chaincode development mode\n10:39:40.479 [nodeCmd] serve -&gt; INFO 003 Set consensus to NOOPS and user starts chaincode\n10:39:40.479 [nodeCmd] serve -&gt; INFO 004 Disable loading validity system chaincode\n\nAny clue?",
        "ts": "1481107390.000051"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "@symblockchainteam No, the log message I'm referring to should be from membersrvc",
        "ts": "1481136677.000052"
    },
    {
        "user": "U0UGH3X7X",
        "text": "<@U0UGH3X7X|tuand> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1481140481.000053"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "I'm trying to enable TLS between an orderer and a Kafka broker ...  This requires me to populate a tls.Config struct with the orderer's certificate and CA certificate ( as golang Certificates <https:\/\/godoc.org\/crypto\/tls#Certificate> )",
        "attachments": [
            {
                "title": "Package tls",
                "title_link": "https:\/\/godoc.org\/crypto\/tls#Certificate",
                "text": "Package tls partially implements TLS 1.2, as specified in RFC 5246.",
                "fallback": "Package tls",
                "from_url": "https:\/\/godoc.org\/crypto\/tls#Certificate",
                "service_icon": "https:\/\/godoc.org\/favicon.ico",
                "service_name": "godoc.org",
                "id": 1
            }
        ],
        "ts": "1481140793.000054"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "i think I should be able to get the certs from the orderer's FabricMSP ?  is there an API I can use ?",
        "ts": "1481140854.000056"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "Hi Tuan, right now, we don't have in place already TLS certificates to use. <@U0PB67X4K> <@U0S5KF44D>, how are we proceeding here?",
        "ts": "1481181960.000057"
    }
]
[
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "You're welcome",
        "ts": "1475673044.000158"
    },
    {
        "type": "message",
        "user": "U10Q62R8X",
        "text": "Question.. TCert derivation algorithm. And HSMs.. does anyone have experience with Safenet? or Thalos? and their custom apis?",
        "ts": "1475690517.000159"
    },
    {
        "type": "message",
        "user": "U10Q62R8X",
        "text": "I've been trying to see how to support HSMs in the fabric.. thats one piece that is not PKCS11-pluggable.. ideas how you would implement it with your favorite HSMs?",
        "ts": "1475690579.000160"
    },
    {
        "type": "message",
        "user": "U10Q62R8X",
        "text": "<@U0MRY2LKY> ^^^ FYI",
        "ts": "1475690600.000161"
    },
    {
        "user": "U0MRY2LKY",
        "inviter": "U10Q62R8X",
        "text": "<@U0MRY2LKY|troyronda> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1475690608.000162"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U1BC5A0F9> Have you given any thought to the other transaction format discussed yesterday?",
        "ts": "1475694380.000163"
    },
    {
        "user": "U0KM61BCP",
        "text": "<@U0KM61BCP|cbf> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1475694854.000164"
    },
    {
        "type": "message",
        "user": "U0MRY2LKY",
        "text": "<@U10Q62R8X> yes - have the functionality that is outside of the normal PKCS11 to be pluggable for each HSM vendor\u2026 and have as much as possible go to the HSM vendor\u2019s normal PKSCS11 library (e.g., ECerts).",
        "ts": "1475704914.000165"
    },
    {
        "type": "message",
        "user": "U1GN670VD",
        "text": "just to clarify it could be root and other intermediate certs as well right?",
        "attachments": [
            {
                "fallback": "[October 4th, 2016 2:59 PM] elli: What is publicly available and inserted in some form in the blockchain, is the root ca that signs peers\/clients' certificates.",
                "ts": "1475589572.000134",
                "author_subname": "elli",
                "channel_id": "C2GE7GXM1",
                "channel_name": "fabric-crypto",
                "is_msg_unfurl": true,
                "text": "What is publicly available and inserted in some form in the blockchain, is the root ca that signs peers\/clients' certificates.",
                "author_name": "Elli",
                "author_link": "https:\/\/hyperledgerproject.slack.com\/team\/elli",
                "author_icon": "https:\/\/secure.gravatar.com\/avatar\/8a94917afbdbd7e1bd944f484dc05cfe.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2F66f9%2Fimg%2Favatars%2Fava_0022-48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "color": "D0D0D0",
                "from_url": "https:\/\/hyperledgerproject.slack.com\/archives\/fabric-crypto\/p1475589572000134",
                "is_share": true,
                "footer": "Posted in #fabric-crypto"
            }
        ],
        "ts": "1475711313.000166"
    },
    {
        "type": "message",
        "user": "U1GN670VD",
        "text": "<@U1BC5A0F9> additionally, can we also publish the CRL certs in the blockchain?",
        "ts": "1475711663.000169"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "<@U0XPR4NP4>, regarding your question on why `ProposalResponse.Response` is not included in the signature, the answer is that at the message level we care to put signatures on what will end up in the ledger and ProposalResponse.Response will not go to the ledger. The hidden assumption is that TLS is running and that protests ProposalResponse.Response. But I will give to is a second thought :slightly_smiling_face:",
        "ts": "1475735182.000170"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "<@U0XPR4NP4>, regarding the other transaction format, I guess you refer to the assertion type. In this case, would ProposalResponsePayload.extension contain the assertion itself? Does the assertion need an endorsement? If a group of endorsers (from a subledger) wants to assert something on the main ledger, probably they don't want to reveal that the assertion is coming from a certain subledger but at the same time there must be a way for the committing peer to validate this assertion, no?",
        "ts": "1475735456.000171"
    },
    {
        "type": "message",
        "user": "U1BC5A0F9",
        "text": "<https:\/\/hyperledgerproject.slack.com\/archives\/fabric-crypto\/p1475735182000170>",
        "attachments": [
            {
                "from_url": "https:\/\/hyperledgerproject.slack.com\/archives\/fabric-crypto\/p1475735182000170",
                "fallback": "[October 5th, 2016 11:26 PM] adc: <@U0XPR4NP4>, regarding your question on why `ProposalResponse.Response` is not included in the signature, the answer is that at the message level we care to put signatures on what will end up in the ledger and ProposalResponse.Response will not go to the ledger. The hidden assumption is that TLS is running and that protests ProposalResponse.Response. But I will give to is a second thought :slightly_smiling_face:",
                "ts": "1475735182.000170",
                "author_subname": "adc",
                "channel_id": "C2GE7GXM1",
                "channel_name": "fabric-crypto",
                "is_msg_unfurl": true,
                "text": "<@U0XPR4NP4>, regarding your question on why `ProposalResponse.Response` is not included in the signature, the answer is that at the message level we care to put signatures on what will end up in the ledger and ProposalResponse.Response will not go to the ledger. The hidden assumption is that TLS is running and that protests ProposalResponse.Response. But I will give to is a second thought :slightly_smiling_face:",
                "author_name": "Angelo De Caro",
                "author_link": "https:\/\/hyperledgerproject.slack.com\/team\/adc",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2016-07-21\/61823221170_e0795e87fc9eb0abb221_48.jpg",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "footer": "Posted in #fabric-crypto"
            }
        ],
        "ts": "1475736980.000172"
    },
    {
        "type": "message",
        "user": "U1BC5A0F9",
        "text": "<@U0ZR63HLK>, <@U0XPR4NP4>: we may want to change name on this field, cause indeed ProposalResponse.Response would make people think this piece as the core part of the response :slightly_smiling_face:",
        "ts": "1475737059.000174"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "make sense",
        "ts": "1475737084.000175"
    }
]
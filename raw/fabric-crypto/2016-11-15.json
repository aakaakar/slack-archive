[
    {
        "type": "message",
        "user": "U1BC5A0F9",
        "text": "<@U0ZJZBJLF>, so for the former i think a form of truststore is needed indeed. <@U26T99AQ4> already allured to that in the endorser changeset that he submitted.  For the latter, can u give us more details? We were thinking of adding a function to certify a signature coming from the \"authorities\" governing  that msp (that is the privileged entities within that msp ) that is defined in some pf the policies the msp has been configured with. If this is the case, i think your verify could be implemented using that..",
        "ts": "1479208669.002338"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "<@U1BC5A0F9> , The former what? Method? `IsInMyOrg`?",
        "edited": {
            "user": "U0ZJZBJLF",
            "ts": "1479209000.000000"
        },
        "ts": "1479208870.002339"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "About `Verify(JoinChannelMessage) error` - this is the to verify the message that the application sends to the peers of a channel in order to make them join a channel, or to update them about a channel's membership",
        "ts": "1479209073.002342"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "The message is signed by the app, so I obviously need a way to verify that message",
        "ts": "1479209092.002343"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "Not sure if the MSP needs to know what is a join channel message. Some other component can extract the relevant information to verify the signature and ask the MSP to perform the actual verification. The same think is happening in other places",
        "ts": "1479209511.002344"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "No?",
        "ts": "1479209520.002345"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "but see that the `JoinChannelMessage ` is an `interface{}` Meaning- if you guys know the concrete type of the message that is passed from the app, you can simply write code that takes that `interface{}`, cast it to a concrete type that you know and then make the check.",
        "ts": "1479209860.002346"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "I'm not saying you need to write special code at this moment, all I'm saying- you need to be able to provide the knowledge we (gossip guys) need, and the code details is something we can work on.",
        "ts": "1479209916.002347"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "Got it",
        "ts": "1479209994.002348"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "I myself have no idea what the type of the object passed to me from the app, but I need to write the code that handles it as fast as possible for next week, that's why I layered it this way",
        "ts": "1479210021.002349"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "Makes sense to me. From my side i expect a module that unpack the join channel message and then asks the MSP about the validity of the signature under a specific policy and give back to you a yes or no",
        "ts": "1479210412.002350"
    },
    {
        "type": "message",
        "user": "U2Y2V95D2",
        "text": "Question: We would like to do encryption for the data in the chaincode. But we cannot load the private key \/ public key that we generate. Is there any way to do this? Thank you.",
        "ts": "1479225211.002351"
    },
    {
        "type": "message",
        "user": "U2Y2V95D2",
        "text": "We try to read the local file (Private key) but it seems the local file private key cannot be accessed in the chaincode...",
        "ts": "1479225270.002352"
    },
    {
        "type": "message",
        "user": "U2Y2V95D2",
        "text": "For example, I want to save a variable X=\"This is a boy\" into the blockchain. And I want to encrypt it with my public key. But I cannot access my public key in the local file.",
        "ts": "1479225628.002353"
    }
]
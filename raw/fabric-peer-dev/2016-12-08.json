[
    {
        "type": "message",
        "user": "U0NK7T8SH",
        "text": "Hi all, I have a question on peer\u2019s certificates store in version 0.6, I cleaned both \/var\/hyperledger\/production\/.membersrvc of membersrvc and \/var\/hyperledger\/production\/crypto of peer, after restart membersrv and peer.",
        "ts": "1481188566.000016"
    },
    {
        "type": "message",
        "user": "U0NK7T8SH",
        "text": "after restart them, why the peer still asking for old enrollment certificate?",
        "ts": "1481188652.000017"
    },
    {
        "type": "message",
        "user": "U0NK7T8SH",
        "text": "I didn\u2019t clean the \/var\/hyperledger\/production\/db directory, since I want to keep the chain, thanks in advance.",
        "ts": "1481188828.000018"
    },
    {
        "type": "message",
        "user": "U26T99AQ4",
        "text": "heads up: <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/3025\/> changes the way identities (that is, certs) have to be serialized to bytes",
        "ts": "1481190252.000019"
    },
    {
        "type": "message",
        "user": "U26T99AQ4",
        "text": "the new way takes the previous byte array and sets it to be `SerializedIdentity.IdBytes` in this struct\n```\ntype SerializedIdentity struct {\n\tMspid string\n\tIdBytes []byte\n}\n```\n`SerializedIdentity.Mspid` contains the name of the MSP that issued the identity. This struct is then marshalled using ASN.1 and the resulting byte array is what goes in the proto messages",
        "ts": "1481190389.000020",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U1BC5A0F9"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "poke around in the docs for the setup for linux... you are missing a setup prerequisite to install maven and java",
        "ts": "1481206915.000021"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "<@U2Y3JHRP1>: ^^",
        "ts": "1481206953.000022"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "I would provide the link but don't have my laptop with me now",
        "ts": "1481207001.000023"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "<@U0KN2SSKE> i have a question on how to assemble the \u201cCONFIG transaction\u201d as part of creating a chain, specifically on obtaining \u201cendorsement\u201d: <https:\/\/docs.google.com\/document\/d\/1eRNxxQ0P8yp4Wh__Vi6ddaN_vhN2RQHP-IruHNUwyhc\/edit?disco=AAAAAwRbL0Y>",
        "ts": "1481223657.000024"
    },
    {
        "user": "U3BQF48RE",
        "text": "<@U3BQF48RE|oliverledger> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1481231759.000028"
    },
    {
        "type": "message",
        "user": "U0KN2SSKE",
        "text": "<@U13TWBRBL>  i am looking at <@U0XQ35CDD>\u2019 CR <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/2483\/>  to extract out the function that create a config block to create a chain for writing unit tests",
        "edited": {
            "user": "U0KN2SSKE",
            "ts": "1481239510.000000"
        },
        "ts": "1481239489.000029"
    },
    {
        "type": "message",
        "user": "U0KN2SSKE",
        "text": "endorsement is on offline process (we\u2019ll need a cli to help)",
        "ts": "1481239587.000031"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U13TWBRBL|jzhang> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/jzhang\/F3CNH8Y3X\/pasted_image_at_2016_12_08_11_49_pm.png|Pasted image at 2016-12-08, 11:49 PM>",
        "file": {
            "id": "F3CNH8Y3X",
            "created": 1481258959,
            "timestamp": 1481258959,
            "name": "Pasted image at 2016_12_08 11_49 PM.png",
            "title": "Pasted image at 2016-12-08, 11:49 PM",
            "mimetype": "image\/png",
            "filetype": "png",
            "pretty_type": "PNG",
            "user": "U13TWBRBL",
            "editable": false,
            "size": 39531,
            "mode": "hosted",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F3CNH8Y3X\/pasted_image_at_2016_12_08_11_49_pm.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F3CNH8Y3X\/download\/pasted_image_at_2016_12_08_11_49_pm.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_64": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F3CNH8Y3X-bff6064f79\/pasted_image_at_2016_12_08_11_49_pm_64.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_80": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F3CNH8Y3X-bff6064f79\/pasted_image_at_2016_12_08_11_49_pm_80.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_360": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F3CNH8Y3X-bff6064f79\/pasted_image_at_2016_12_08_11_49_pm_360.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_360_w": 360,
            "thumb_360_h": 95,
            "thumb_480": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F3CNH8Y3X-bff6064f79\/pasted_image_at_2016_12_08_11_49_pm_480.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_480_w": 480,
            "thumb_480_h": 126,
            "thumb_160": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F3CNH8Y3X-bff6064f79\/pasted_image_at_2016_12_08_11_49_pm_160.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "image_exif_rotation": 1,
            "original_w": 585,
            "original_h": 154,
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/jzhang\/F3CNH8Y3X\/pasted_image_at_2016_12_08_11_49_pm.png",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F3CNH8Y3X-5d99be7748",
            "channels": [
                "C27E2LGJY"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 0
        },
        "user": "U13TWBRBL",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U13TWBRBL|jzhang>",
        "bot_id": null,
        "ts": "1481258961.000036"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "<@U26T99AQ4> the dreaded byte[] appears in the config file :scream:",
        "ts": "1481258995.000037"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "i understand this is because that field gets overloaded for the specific MSP implementation (same as why byte[] are used in protos for extensible fields)",
        "ts": "1481259322.000038"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "but there\u2019s got to be a better way...",
        "ts": "1481259361.000039"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "one way, albeit clunky, is to make the \u201cconfig\u201d field a file path, so it gets passed to the MSP impl to read in the file and unmarshal as it sees fit, that way the target file is fully expanded json",
        "edited": {
            "user": "U13TWBRBL",
            "ts": "1481259608.000000"
        },
        "ts": "1481259569.000040"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "i don\u2019t know about others but to me it\u2019s very important that config files are immediately ready for human inspection",
        "ts": "1481259657.000042"
    }
]
[
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U24M29R4G> I had a look, it is interesting but it seems to be a commercial product for me and it is not open source - or not?",
        "ts": "1473326369.000096"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "I would need some comments for this: <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/941\/>",
        "ts": "1473326377.000097"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "what are we even trying to solve?",
        "ts": "1473327537.000098"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "why are there hierarchies of errors?",
        "ts": "1473327546.000099"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "as I said it is not necessary to have hierarchies of errors, it is only an option. the hierarchy tries to give a more precise report about an error as Binh said",
        "ts": "1473328063.000100"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i don't understand",
        "ts": "1473328097.000101"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "who is the consumer of this hierarchy",
        "ts": "1473328105.000102"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "the user?",
        "ts": "1473328109.000103"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "or the developers",
        "ts": "1473328119.000104"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "the developer",
        "ts": "1473328283.000105"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "but if the developer decides in a higher layer that (s)he is unable to handle the error then he can use the hierarchy to give a more detailed info about what happened",
        "ts": "1473328331.000106"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "isn't that part of the error message?",
        "ts": "1473328374.000107"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i really don't understand",
        "ts": "1473328385.000108"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "is this hypothetical, or do we have a concrete example",
        "ts": "1473328425.000109"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "what is part of the error message?",
        "ts": "1473328584.000110"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "here are some examples: <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/941\/>\nhere are some more: <https:\/\/play.golang.org\/p\/qflxyIFjxn>",
        "ts": "1473328822.000111"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "or we need concrete examples from the fabric code? I can search for some. but generally, they are just concatenated or one of them is suppressed and another new one (in most cases the same error message for different branches) is propagated",
        "ts": "1473328913.000112"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "well then maybe we shouldn't concatenate anything",
        "ts": "1473328940.000113"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and pass on the original error",
        "ts": "1473328946.000114"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "that may also work. but now we use 'error's that only have an Error method to print them as a string. we could use something better, some struct with error codes because somewhere you may be able to check for that and try another method ('retry' and handle the error)",
        "ts": "1473329088.000115"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "a stack trace is also useful",
        "ts": "1473329106.000116",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0KN2SSKE"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes, but i'd really like to see the kind of code paths we're talking about",
        "ts": "1473329123.000117"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "in general, we are talking about the whole code base. do you need examples for suppressing erros and passing another, or for the usefulness of the hierarchy or?",
        "ts": "1473329343.000118"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "well, we're talking about hypotheticals",
        "ts": "1473329515.000119"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i'd like to see actual code flow to understand what it is at all about",
        "ts": "1473329551.000120"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "I am trying to find you some examples",
        "ts": "1473329742.000121"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<https:\/\/hyperledgerproject.slack.com\/archives\/fabric-peer-dev\/p1473249285000049>",
        "attachments": [
            {
                "from_url": "https:\/\/hyperledgerproject.slack.com\/archives\/fabric-peer-dev\/p1473249285000049",
                "fallback": "[September 7th, 2016 4:54 AM] muralisr: in the end the goal should be (1) for users to have enough information to pinpoint the probem accurately and (2) for developers to have a error framework so adding errors is not too difficult",
                "ts": "1473249285.000049",
                "author_subname": "muralisr",
                "channel_id": "C27E2LGJY",
                "channel_name": "fabric-peer-dev",
                "is_msg_unfurl": true,
                "text": "in the end the goal should be (1) for users to have enough information to pinpoint the probem accurately and (2) for developers to have a error framework so adding errors is not too difficult",
                "author_name": "Srinivasan Muralidharan",
                "author_link": "https:\/\/hyperledgerproject.slack.com\/team\/muralisr",
                "author_icon": "https:\/\/secure.gravatar.com\/avatar\/f2f14ee3d0f083c9afce9767faf6322d.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2F66f9%2Fimg%2Favatars%2Fava_0000-48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "footer": "Posted in #fabric-peer-dev"
            }
        ],
        "ts": "1473329832.000122"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "ah so it is for the users",
        "ts": "1473329982.000124"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "and the developers",
        "ts": "1473329997.000125"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but the error messages are for users",
        "ts": "1473330256.000126"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "not for developers",
        "ts": "1473330259.000127"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "there are really two different types of errors:",
        "ts": "1473330275.000128"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "1. user error, or something that the user needs to know about",
        "ts": "1473330288.000129"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "2. developer error which triggers some code path that shouldn't happen, or possibly looks like (1)",
        "ts": "1473330316.000130"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "by 2 do you mean something like programming error?",
        "ts": "1473330605.000131"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1473330616.000132"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "for 1) we need to give something that the user is able to understand",
        "ts": "1473330731.000133"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes, but for that we need to identify all these errors",
        "ts": "1473330778.000134"
    },
    {
        "user": "U1VG8LNP3",
        "text": "<@U1VG8LNP3|yaoguo> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1473330797.000135"
    },
    {
        "user": "U0PB67X4K",
        "text": "<@U0PB67X4K|garisingh> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1473330833.000136"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "is that possible before writing the code that will cause it?",
        "ts": "1473331082.000137"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "*may",
        "ts": "1473331091.000138"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i hope so",
        "ts": "1473331702.000139"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "we already have a lot of code and errors, so we should be able to see what errors muralisr was talking about",
        "ts": "1473331725.000140"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "that's true",
        "ts": "1473331793.000141"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "but isn't error coding good for that?",
        "ts": "1473331808.000142"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "here is a bunch of possible error codes, if you have to throw an error you should choose from them",
        "ts": "1473331829.000143"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so that is one option",
        "ts": "1473331845.000144"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "another is to define a specific error code, and somewhere have a description what it means",
        "ts": "1473331865.000145"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but still this all sounds hypothetical",
        "ts": "1473331888.000146"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i'd like to see a list of existing errors that need work on",
        "ts": "1473331907.000147"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "you mean from the new arch right?",
        "ts": "1473332017.000148"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "well we can look at existing code",
        "ts": "1473332068.000149"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "then I can collect some errors and make an experimental list from the existing new arch code, if it helps",
        "ts": "1473332126.000150"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "well one or two would be enough",
        "ts": "1473332189.000151"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "because i really don't know what all of you are talking about",
        "ts": "1473332199.000152"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": ":smile:",
        "ts": "1473332365.000153"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "in the last 30 minutes, it seemed to me that you knew :slightly_smiling_face:",
        "ts": "1473332387.000154"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "how can I help you?",
        "ts": "1473332393.000155"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "which concrete error are we talking about?",
        "ts": "1473332431.000156"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "I guess we are talking about all the errors in the new architecture and the way they should be handled and presented to the user and logged. and the way new ones should be used\/defined.",
        "ts": "1473332530.000157"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yea, that's too vague for me",
        "ts": "1473332572.000158"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "yes it is vague that is true. but you said you saw something like \"Ledger error\" which does not mean anything. I think we would like to prevent these",
        "ts": "1473332629.000159"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yea because they are no user error",
        "ts": "1473332695.000160"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "and some errors are logged (e.g. I said some days ago to someone that it is normal to have some errors in the logs because it was what <@U0R7Q5C30> and me experienced when we tested the system) some are not.",
        "ts": "1473332709.000161"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "but you can get a \"Ledger error\" in some situations as a user, or not?",
        "ts": "1473332734.000162"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "how?",
        "ts": "1473332742.000163"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "shouldn't we go through all existing errors and triage them",
        "ts": "1473332813.000164"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and understand what is going on",
        "ts": "1473332818.000165"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "we can do that",
        "ts": "1473332828.000166"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "but what are the existing errors? I think it can only be found out from code, reading a huge part of the codebase",
        "ts": "1473332868.000167"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1473332886.000168"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "I think that is also a problem because 1) errors are not uniform 2) they are hard to be enumerated",
        "ts": "1473332917.000169"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "well yes",
        "ts": "1473332925.000170"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i guess we can start with fmt.Errorf()",
        "ts": "1473332945.000171"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "I grepped for that and found 1320 occurrences",
        "ts": "1473333081.000172"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "oops vendor included, wait",
        "ts": "1473333099.000173"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "without that just 812",
        "ts": "1473333151.000174"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "in orderer, we only have 3:\nreturn fmt.Errorf(\"DeliverResponse.Type has unexpected type %T\", x)\nreturn fmt.Errorf(\"DeliverUpdate.Type has unexpected type %T\", x)\nreturn msg, fmt.Errorf(\"Channel closed\")",
        "ts": "1473333719.000175"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "none of them are user errors",
        "ts": "1473333799.000176"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "but it would be good to see uniform errors instead of those string, hm?",
        "ts": "1473335359.000177"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "okay I will hunt down some user errors for you",
        "ts": "1473335370.000178"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "but too few code is merged from the new arch",
        "ts": "1473335432.000179"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "you might want to take a look at <https:\/\/blog.golang.org\/errors-are-values>",
        "ts": "1473335564.000180"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U1AU8DRQR> - one approach could be to come up with an API with the same signature \u201chgabor.Errorf(\u2026.)\u201d which would do your stack magic undercover. then its a simple question of replacing \u201cfmt\u201d with \u201chgabor\"",
        "ts": "1473335565.000181"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "this would at least take care of existing errors",
        "ts": "1473335592.000182"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "adding <@U0KM61BCP>  <@U0KPFAZNF>",
        "ts": "1473335968.000183"
    },
    {
        "user": "U0KM61BCP",
        "inviter": "U0ULK2JPP",
        "text": "<@U0KM61BCP|cbf> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1473335978.000184"
    },
    {
        "user": "U0KPFAZNF",
        "inviter": "U0ULK2JPP",
        "text": "<@U0KPFAZNF|ghaskins> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1473335978.000185"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i still would like to see actual examples of errors that we want to handle in one way or another",
        "ts": "1473335999.000186"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U0ULK2JPP> the idea is interesting - just one thing: with Errorf one just formats a string into another and then creates an error using it as a message. so hgabor.Errorf  1) would not have the same signature but Errorf(HyperLedgerError) OR 2) would not stack the original error that is in the ...Errorf(\"Error: \", err_original) but create a new one from its string form",
        "ts": "1473336226.000187"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "could we provide some examples for <@U0XR6J961> ?",
        "ts": "1473336253.000188"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U1AU8DRQR> right.. I was just suggesting inventing another interface to make existing migration easy. New errors could use the \u201cright\u201d interface",
        "ts": "1473337081.000189"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "It was just a thought\u2026 I will play with it to make sure it could work",
        "ts": "1473337114.000190"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "yeah that's why I said it is a good idea, and I will try to find out some way to make it work :slightly_smiling_face:",
        "ts": "1473337139.000191"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "ah ok\u2026",
        "ts": "1473337164.000192"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i still think all is hypothetical",
        "ts": "1473337335.000193"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and if anything, we should look at the existing code",
        "ts": "1473337350.000194"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "agreed. however, it might be easier to convert to an error framework first and then weed",
        "edited": {
            "user": "U0ULK2JPP",
            "ts": "1473337679.000000"
        },
        "ts": "1473337665.000195"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i'd say first look at what kind of errors we have",
        "ts": "1473337737.000197"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "before creating a framework",
        "ts": "1473337741.000198"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "we have two kinds basically. Ignore error from callee and return new one or append error from callee and return new one",
        "ts": "1473337861.000199"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "it would make it easier to parse the error if it was structured in a stack form instead of a long string",
        "ts": "1473337901.000200"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "once we have an initial  conversion we would have working examples for the next steps of how best to use the stack so we can address the goals such as (1) troubleshootina and problem determination (2) debuggin easier",
        "ts": "1473338080.000201"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "can we please talk about specific instances?",
        "ts": "1473338233.000202"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "let me see if I can get one example",
        "ts": "1473338348.000203"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "a first one",
        "ts": "1473338437.000204"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U0ULK2JPP|muralisr> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/muralisr\/F29FX28F2\/pasted_image_at_2016_09_08_08_40_am.png|Pasted image at 2016-09-08, 8:40 AM>",
        "file": {
            "id": "F29FX28F2",
            "created": 1473338442,
            "timestamp": 1473338442,
            "name": "Pasted image at 2016_09_08 08_40 AM.png",
            "title": "Pasted image at 2016-09-08, 8:40 AM",
            "mimetype": "image\/png",
            "filetype": "png",
            "pretty_type": "PNG",
            "user": "U0ULK2JPP",
            "editable": false,
            "size": 22916,
            "mode": "hosted",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F29FX28F2\/pasted_image_at_2016_09_08_08_40_am.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F29FX28F2\/download\/pasted_image_at_2016_09_08_08_40_am.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_64": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F29FX28F2-bf135e4d2c\/pasted_image_at_2016_09_08_08_40_am_64.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_80": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F29FX28F2-bf135e4d2c\/pasted_image_at_2016_09_08_08_40_am_80.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_360": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F29FX28F2-bf135e4d2c\/pasted_image_at_2016_09_08_08_40_am_360.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_360_w": 360,
            "thumb_360_h": 37,
            "thumb_480": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F29FX28F2-bf135e4d2c\/pasted_image_at_2016_09_08_08_40_am_480.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_480_w": 480,
            "thumb_480_h": 50,
            "thumb_160": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F29FX28F2-bf135e4d2c\/pasted_image_at_2016_09_08_08_40_am_160.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_720": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F29FX28F2-bf135e4d2c\/pasted_image_at_2016_09_08_08_40_am_720.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_720_w": 720,
            "thumb_720_h": 75,
            "thumb_960": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F29FX28F2-bf135e4d2c\/pasted_image_at_2016_09_08_08_40_am_960.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_960_w": 960,
            "thumb_960_h": 100,
            "thumb_1024": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F29FX28F2-bf135e4d2c\/pasted_image_at_2016_09_08_08_40_am_1024.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_1024_w": 1024,
            "thumb_1024_h": 107,
            "image_exif_rotation": 1,
            "original_w": 1364,
            "original_h": 142,
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/muralisr\/F29FX28F2\/pasted_image_at_2016_09_08_08_40_am.png",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F29FX28F2-bbff56b6ec",
            "channels": [
                "C27E2LGJY"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 0
        },
        "user": "U0ULK2JPP",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U0ULK2JPP|muralisr>",
        "bot_id": null,
        "ts": "1473338444.000205"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "there\u2019s really a \u201cstack there",
        "ts": "1473338466.000206"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "even better",
        "ts": "1473338506.000207"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U0ULK2JPP|muralisr> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/muralisr\/F29G7RXRP\/pasted_image_at_2016_09_08_08_41_am.png|Pasted image at 2016-09-08, 8:41 AM>",
        "file": {
            "id": "F29G7RXRP",
            "created": 1473338509,
            "timestamp": 1473338509,
            "name": "Pasted image at 2016_09_08 08_41 AM.png",
            "title": "Pasted image at 2016-09-08, 8:41 AM",
            "mimetype": "image\/png",
            "filetype": "png",
            "pretty_type": "PNG",
            "user": "U0ULK2JPP",
            "editable": false,
            "size": 50826,
            "mode": "hosted",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F29G7RXRP\/pasted_image_at_2016_09_08_08_41_am.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F29G7RXRP\/download\/pasted_image_at_2016_09_08_08_41_am.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_64": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F29G7RXRP-487a8aa98b\/pasted_image_at_2016_09_08_08_41_am_64.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_80": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F29G7RXRP-487a8aa98b\/pasted_image_at_2016_09_08_08_41_am_80.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_360": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F29G7RXRP-487a8aa98b\/pasted_image_at_2016_09_08_08_41_am_360.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_360_w": 360,
            "thumb_360_h": 53,
            "thumb_480": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F29G7RXRP-487a8aa98b\/pasted_image_at_2016_09_08_08_41_am_480.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_480_w": 480,
            "thumb_480_h": 70,
            "thumb_160": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F29G7RXRP-487a8aa98b\/pasted_image_at_2016_09_08_08_41_am_160.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_720": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F29G7RXRP-487a8aa98b\/pasted_image_at_2016_09_08_08_41_am_720.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_720_w": 720,
            "thumb_720_h": 106,
            "thumb_960": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F29G7RXRP-487a8aa98b\/pasted_image_at_2016_09_08_08_41_am_960.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_960_w": 960,
            "thumb_960_h": 141,
            "thumb_1024": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F29G7RXRP-487a8aa98b\/pasted_image_at_2016_09_08_08_41_am_1024.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_1024_w": 1024,
            "thumb_1024_h": 150,
            "image_exif_rotation": 1,
            "original_w": 1460,
            "original_h": 214,
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/muralisr\/F29G7RXRP\/pasted_image_at_2016_09_08_08_41_am.png",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F29G7RXRP-d3d687ce33",
            "channels": [
                "C27E2LGJY"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 0
        },
        "user": "U0ULK2JPP",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U0ULK2JPP|muralisr>",
        "bot_id": null,
        "ts": "1473338514.000208"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "that is for stacking. do we have an example for a code where it is needed to check what the error was (with parsing e.g.)?",
        "ts": "1473338612.000209"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "the Response message has a stacked string converted to bytes.. this could be likely sent to a user (going by pb.Response).. a bit of structure could help",
        "ts": "1473338615.000210"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U1AU8DRQR> I have come across the need to do that but desisted because I\u2019ll be relying on string comparison and such which is precisely the point",
        "edited": {
            "user": "U0ULK2JPP",
            "ts": "1473338675.000000"
        },
        "ts": "1473338662.000211"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "if we had structure (and codes) we can do that easily",
        "ts": "1473338704.000213"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so first, the ledger error is silly",
        "ts": "1473338707.000214"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "why can GetLedger return an error",
        "ts": "1473338718.000215"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "silly or not, it is an example of the kind of things we are dealing with",
        "ts": "1473338743.000216"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "no",
        "ts": "1473338758.000217"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "it is an example what is wrong in the code",
        "ts": "1473338764.000218"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and needs to be fixed",
        "ts": "1473338769.000219"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "it falls into the category of stacking errors which the code is rife with...",
        "ts": "1473338816.000220"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I\u2019m sure there are lots of \u201csilly\u201d errors",
        "ts": "1473338827.000221"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "the second error should not happen during normal operation, but only under data corruption conditions",
        "ts": "1473338827.000222"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and there is no stacking happening, it is just converting an `error` to a string for json consumption",
        "ts": "1473338857.000223"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "well, then we should remove these errors",
        "ts": "1473338873.000224"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "instead of creating a framework for them",
        "ts": "1473338880.000225"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "GetLedger() needs to panic, instead of returning errors",
        "ts": "1473338947.000226"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U0XR6J961> I just pulled two examples to show the kinds of errors we are dealing with\u2026. there are two ways to deal with this. Go clean up code first and then  plug in the framework or create the framework and clean up as we go. If we can plug in the framework quickly the later woukd be the better option",
        "ts": "1473338957.000227"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I was not trying to find the perfect \u201cvalid\u201d example",
        "ts": "1473338983.000228"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I was just trying to help categorize errors",
        "ts": "1473338992.000229"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i disagree",
        "ts": "1473339036.000230",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0PB67X4K"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "we first should have an idea how errors are used",
        "ts": "1473339043.000231"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "before we build a framework",
        "ts": "1473339044.000232"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i disagree",
        "ts": "1473339059.000233"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "we first should have an idea how errors are used",
        "ts": "1473339059.000234"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "before we build a framework",
        "ts": "1473339059.000235"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "simon is 100% correct",
        "ts": "1473339063.000236"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so the first category is \"errors that shouldn't be errors\"",
        "ts": "1473339065.000237"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "oups double send",
        "ts": "1473339084.000238"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "I highly recommend people read the link I sent.  I know it is high level, but the concepts that the designers of Go had around errors is actually pretty interesting.   And I don't think that we can separate out error handling and logging either.  They are related concepts.",
        "ts": "1473339181.000239"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "the other thing - how much of the existing code are we really going to drag along with us on the way to v1?",
        "ts": "1473339213.000240"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "and like I said, I don\u2019t disagree with that either. I\u2019m saying we have a better way to handle this if get rid of the long stacked string so we can precisely answer which errors are silly",
        "ts": "1473339227.000241"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "why not take a fresh approach, write down some design goals and go from there",
        "ts": "1473339231.000242"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "garisingh: i suggested a full rewrite\/selective copy",
        "ts": "1473339243.000243"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "100% agree",
        "ts": "1473339249.000244"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "garisingh: but it seems we use all the existing code, and modify it",
        "ts": "1473339257.000245"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U0PB67X4K> first I did not get it but now I am beginning to get",
        "ts": "1473339263.000246"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "there are about 1000 errors",
        "ts": "1473339265.000247"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "error class with attached stack trace is great",
        "ts": "1473339306.000248",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U12452RAP"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "in the new architecture, we have only a few, isn't it enough to start that in a clean way?",
        "ts": "1473339306.000249"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "actually, that is true. if the errors are less, we don\u2019t have to \u201cconvert\"",
        "ts": "1473339528.000250"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "and if the error class implements the error interface, then you could handle all errors more or less the same way as well",
        "ts": "1473339530.000251"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U0PB67X4K> can you post the link again pl. ? I don\u2019t see it",
        "ts": "1473339595.000252"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I see it",
        "ts": "1473339621.000253"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U0ULK2JPP|muralisr> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/muralisr\/F29EPK1PV\/pasted_image_at_2016_09_08_09_01_am.png|Pasted image at 2016-09-08, 9:01 AM>",
        "file": {
            "id": "F29EPK1PV",
            "created": 1473339668,
            "timestamp": 1473339668,
            "name": "Pasted image at 2016_09_08 09_01 AM.png",
            "title": "Pasted image at 2016-09-08, 9:01 AM",
            "mimetype": "image\/png",
            "filetype": "png",
            "pretty_type": "PNG",
            "user": "U0ULK2JPP",
            "editable": false,
            "size": 58863,
            "mode": "hosted",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F29EPK1PV\/pasted_image_at_2016_09_08_09_01_am.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F29EPK1PV\/download\/pasted_image_at_2016_09_08_09_01_am.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_64": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F29EPK1PV-775c00d180\/pasted_image_at_2016_09_08_09_01_am_64.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_80": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F29EPK1PV-775c00d180\/pasted_image_at_2016_09_08_09_01_am_80.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_360": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F29EPK1PV-775c00d180\/pasted_image_at_2016_09_08_09_01_am_360.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_360_w": 360,
            "thumb_360_h": 35,
            "thumb_480": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F29EPK1PV-775c00d180\/pasted_image_at_2016_09_08_09_01_am_480.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_480_w": 480,
            "thumb_480_h": 47,
            "thumb_160": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F29EPK1PV-775c00d180\/pasted_image_at_2016_09_08_09_01_am_160.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_720": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F29EPK1PV-775c00d180\/pasted_image_at_2016_09_08_09_01_am_720.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_720_w": 720,
            "thumb_720_h": 70,
            "thumb_960": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F29EPK1PV-775c00d180\/pasted_image_at_2016_09_08_09_01_am_960.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_960_w": 960,
            "thumb_960_h": 93,
            "thumb_1024": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F29EPK1PV-775c00d180\/pasted_image_at_2016_09_08_09_01_am_1024.png?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_1024_w": 1024,
            "thumb_1024_h": 99,
            "image_exif_rotation": 1,
            "original_w": 1750,
            "original_h": 170,
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/muralisr\/F29EPK1PV\/pasted_image_at_2016_09_08_09_01_am.png",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F29EPK1PV-236aedd31f",
            "channels": [
                "C27E2LGJY"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 0
        },
        "user": "U0ULK2JPP",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U0ULK2JPP|muralisr>",
        "bot_id": null,
        "ts": "1473339670.000254"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "as long as we take care of that",
        "ts": "1473339680.000255"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "it's nothing fancy - but I like the thoughts around how the Go designers thought about errors.  Now we also need to think about \"errors\"  \/ \"return\" codes back to invokers of the various APIs as well",
        "ts": "1473339712.000256"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "a stack trace can be added but its not the same as a pointed error from the stack exactly pinpointing a low level error",
        "ts": "1473339738.000257"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "sure",
        "ts": "1473339765.000258"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "here\u2019s another \u201creal\u201d error that helped us troubleshoot quicjly",
        "ts": "1473339921.000259"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "Error:Failed to launch chaincode spec(Could not get deployment transaction for ee1f1673c1f9d24e4b94b55f8e482e4da026367977bfe046a9a860e7b7427a6a - IO error: \/srv\/data\/hyperledger\/db\/011308.sst: Input\/output error)",
        "ts": "1473339922.000260"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I could trouble shoot it because I peeled the stack",
        "ts": "1473339949.000261"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "what was the cause for that error?",
        "ts": "1473339970.000262"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "getting to office\u2026 it was low level file system issue",
        "ts": "1473340001.000263"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "then that code should have paniced",
        "ts": "1473340038.000264"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "okay so the idea is to change such type of code to a panicking code, right?",
        "ts": "1473340065.000265"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "that's what i would suggest",
        "ts": "1473340074.000266"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and the error you show, for error solving, nobody needed to even prepend their own message",
        "ts": "1473340152.000267"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "the IO error would have been sufficient",
        "ts": "1473340163.000268"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "okay, lets suppose that it panics. but this chaincode getting error is not a fatal issue. what to do to achieve the same behaviour like before? recover?",
        "ts": "1473340204.000269"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "IO error is fatal",
        "ts": "1473340245.000270"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "meaning some fundamental assumption has been validated",
        "ts": "1473340254.000271"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "your drive is not working right",
        "ts": "1473340263.000272"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "why would we \"panic\" there?    are we saying that the only way we will alert the owner of the peer\/ node that there is something wrong is panic and crash the peer?",
        "ts": "1473340278.000273"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes, if the file system is damaged, we should stop immediatelly",
        "ts": "1473340297.000274"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "what are we supposed to do?",
        "ts": "1473340304.000275"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "we can't trust any data we have",
        "ts": "1473340316.000276"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "can we have some kind of rule where to panic \/ in which situation to panic? and how to handle errors \/ when to propagate them?",
        "ts": "1473340405.000277"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i'd say:",
        "ts": "1473340495.000278"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "if you are inclined to add a comment like",
        "ts": "1473340504.000279"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "`\/\/ this should never happen`",
        "ts": "1473340510.000280"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "then you panic",
        "ts": "1473340513.000281"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "if it is some sort of best effort thing you're doing, you log the error and ignore it",
        "ts": "1473340567.000282"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "if you are servicing a user request, you log the error and you return it",
        "ts": "1473340594.000283"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "is it good to have errors in the log?",
        "edited": {
            "user": "U1AU8DRQR",
            "ts": "1473340935.000000"
        },
        "ts": "1473340929.000284"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "well we should really move to a more \"mature\"  logging framework where we can have error logs, trace logs, etc.    :wink:",
        "ts": "1473341345.000286"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "trying to think about the best way to \"define\" a set of requirements \/ use cases in this area - specifically from an operators perspective.   I can definitely tell you that what we have now makes it extremely hard to manage and run nodes",
        "ts": "1473341433.000287"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "staying at errors: what do you suggest, how should I modify my proposal?",
        "ts": "1473341487.000288"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "first assess what we have",
        "ts": "1473341977.000289"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "to understand what we need",
        "ts": "1473341984.000290"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "including what we have in the \"old\" code?",
        "ts": "1473342120.000291"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "ok. rejoining the fray :slightly_smiling_face:",
        "ts": "1473342216.000292"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes, because the old code will be a large part of the codebase",
        "ts": "1473342447.000293"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "my point was simple\u2026my last example showed the value of errors allong the call path (the same call to the ledger might have returned a different error at different time \u2026 and it has done that btw). I contend, no matter what you do you are going to keep errors from low level around. We do that today by merely apppending errors but as my last example shows that had value.  We can go and ask what errors are needed and not needed and so on but to me that has little bearing on the question \u201cwhat do we need from an error ?\u201d We don\u2019t need a zillion examplars to show F = ma",
        "ts": "1473342525.000294"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I\u2019m not disagreeing that we need to clean out errors \u2026.",
        "ts": "1473342547.000295"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "It seemed to me we can do the clean up as we went along if we agree on the basic priciple of needing to keep errors stack around in some fashion",
        "ts": "1473342893.000296"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "we should come to an agreement in this so what if I did the following:\n1) created commits where I reviewed the parts (core, orderer) of feature\/convergence and corrected errors according to Simon's thoughts about errors (if we can agree that those are correct)\n2) changed my proposal on error handling frameworks to look like the following:\n- one general error class and interface with Error + GetStackTrace functions\n- some basic examples",
        "ts": "1473343302.000297"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "can we modify 2) _one general error class and interface with Error + GetStackTrace + Errors on the stack functions_ ?",
        "ts": "1473343513.000298"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "in my previous example the stack trace would have showed \u201cwhere\"",
        "ts": "1473343537.000299"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "but not \u201cwhy\"",
        "ts": "1473343541.000300"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "Errors on the stack would",
        "ts": "1473343548.000301"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U0XR6J961> <@U0PB67X4K>",
        "ts": "1473343574.000302"
    },
    {
        "type": "message",
        "user": "U12452RAP",
        "text": "<@U0ULK2JPP>: if you mean the chaincode error it seems suggested using panic",
        "ts": "1473344001.000303"
    },
    {
        "type": "message",
        "user": "U12452RAP",
        "text": "assume your previous example root cause is IO error",
        "ts": "1473344164.000304"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U12452RAP> seems in this case that might be the action. The example was just to show use of  errors along call path",
        "edited": {
            "user": "U0ULK2JPP",
            "ts": "1473344369.000000"
        },
        "ts": "1473344351.000305"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "it's a bad example then",
        "ts": "1473344458.000307"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "would it be OK if we left out errors on stack first? and if it turns out that we can't do it without that then I can put it back",
        "ts": "1473344765.000308"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "by \u201cmight be\u201d I meant that\u2019s one possible course of action. In this case though it would have crashed and we we never have know what happened. It chugged along and we were able to figure out the problem - thanks to the error",
        "ts": "1473344854.000309"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U1AU8DRQR> we can remove it if we agree its unnecessary\u2026 if we think its a good thing I\u2019d say leave it in. you know my vote :slightly_smiling_face:",
        "ts": "1473344948.000310"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U0XR6J961> <@U12452RAP> ?",
        "ts": "1473345117.000311"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "but lets do this\u2026",
        "ts": "1473345134.000312"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "rather than take time on this let\u2019s go with your proposal as it is <@U1AU8DRQR>",
        "ts": "1473345161.000313"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "but just keep it in the back of your mind",
        "ts": "1473345172.000314"
    },
    {
        "type": "message",
        "user": "U12452RAP",
        "text": "yes",
        "ts": "1473345188.000315"
    },
    {
        "type": "message",
        "user": "U12452RAP",
        "text": "i am not strong preference",
        "ts": "1473345204.000316"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "all I request is this...",
        "ts": "1473345208.000317"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "as you go through the code, you\u2019ll find we are \u201cstacking\"",
        "ts": "1473345217.000318"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "if you can come up with a nice way of converting it to proper stack structure please do think about it",
        "ts": "1473345245.000319"
    },
    {
        "type": "message",
        "user": "U12452RAP",
        "text": "just afraid if add errors maybe cause developer to do more unnecessary error wrapper",
        "ts": "1473345349.000320"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "how about not stacking, but passing the original error?",
        "ts": "1473345835.000321"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "we could do that at the top level\u2026 but for that we need to know what the lower most level is",
        "ts": "1473345971.000322"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U12452RAP> we append to the error as we pass it along currently\u2026 shouldnt be too different",
        "ts": "1473346033.000323"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "shouldn't we just capture a stack trace when the error is created?",
        "ts": "1473346122.000324"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "then we don't need any stacking",
        "ts": "1473346140.000325"
    },
    {
        "type": "message",
        "user": "U12452RAP",
        "text": "i also think just pass origin error",
        "ts": "1473346156.000326"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "but if the function that gave the error is not a thing that can 'be left out' (e.g. without it the whole operation is a total failure) then we call panic. right?",
        "ts": "1473346160.000327"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "if it is because of a fatal system error, yes",
        "ts": "1473346209.000328"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "I will try to go through all the errors of the system and check their validity. it will be a pain, and I would like to ask you to review it as soon as I am finished.",
        "ts": "1473346304.000329"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "well you can just make a list and we can give feedback on what the error means?",
        "ts": "1473346336.000330"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "or",
        "ts": "1473346343.000331"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "subsystem people look at their error messages themselves",
        "ts": "1473346355.000332"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and decide",
        "ts": "1473346359.000333"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "divide + conquer",
        "ts": "1473346364.000334"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "of course I prefer divide&amp;conquer but somehow we should give some examples how to do it",
        "ts": "1473346412.000335"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes, that's a good idea",
        "ts": "1473346422.000336"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "maybe just look at a few files for now",
        "ts": "1473346431.000337"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "<@U1AU8DRQR>  - I think examples would be good for sure",
        "ts": "1473346435.000338"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "or pick 10% of the errors",
        "ts": "1473346443.000339"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "randomly",
        "ts": "1473346445.000340"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and analyze them",
        "ts": "1473346448.000341"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i got to run out for a bit",
        "ts": "1473346476.000342"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "laters",
        "ts": "1473346477.000343"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "<@U0ULK2JPP> -  I also question passing around stacks of errors and\/or including low level stack traces in errors that are passed around.   I think this exercise should result in how we handle and pass errors (I still think that we should follow the way Golang does things with the error interface as best we can) and how\/when we \"log\" the details (e.g. stack trace, etc) for errors.   But I think that <@U1AU8DRQR> 's idea to do some examples is a good start",
        "ts": "1473346594.000344"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<https:\/\/wiki.hyperledger.org\/error-handling> I have created this",
        "ts": "1473346697.000345"
    },
    {
        "type": "message",
        "user": "U24M29R4G",
        "text": "&gt;well we should really move to a more \"mature\"  logging framework where we can have error logs, trace logs, etc.  \ntrying to think about the best way to \"define\" a set of requirements \/ use cases in this area - specifically from an operators perspective.   I can definitely tell you that what we have now makes it extremely hard to manage and run node&lt; I agree with Gari singh on this\n\nIt reminds me of the google dapper paper and how they designed a distributed tracing system.",
        "ts": "1473346699.000346"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "please help me filling it with content",
        "ts": "1473346716.000347"
    },
    {
        "type": "message",
        "user": "U24M29R4G",
        "text": "<http:\/\/static.googleusercontent.com\/media\/research.google.com\/en\/\/pubs\/archive\/36356.pdf>",
        "ts": "1473346735.000348"
    },
    {
        "type": "message",
        "user": "U24M29R4G",
        "text": "<@U1AU8DRQR> sorry. couldn't get back to you earlier on this.",
        "ts": "1473346841.000349"
    },
    {
        "type": "message",
        "user": "U24M29R4G",
        "text": "I think a larger goal is to build an efficient shared tracing system for the whole hyperledger infrastructure which can be either invasive(like instrumenting the code with error handling mechanisms and logs where appropriate) or non-invasive( where we observer the generated logs to identify potential problems)",
        "ts": "1473347034.000350"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U24M29R4G> <@U0XR6J961> <@U0ULK2JPP> <@U0PB67X4K> <@U0KM61BCP> <@U12452RAP> could you help me in filling this out? <https:\/\/wiki.hyperledger.org\/error-handling>",
        "ts": "1473347437.000351",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U12452RAP"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "<@U1AU8DRQR>  - will do - will likely get to it a bit later today.  got a few other fish to fry right now as they say",
        "ts": "1473347472.000352"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "thx - I will have a look at it later but now have to go",
        "ts": "1473347505.000353"
    },
    {
        "type": "message",
        "user": "U24M29R4G",
        "text": "<@U1AU8DRQR>. sure!",
        "ts": "1473347506.000354"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U1AU8DRQR> like someone said _ will do - will likely get to it a bit later today.  got a few other fish to fry right now as they say_ :wink:",
        "edited": {
            "user": "U0ULK2JPP",
            "ts": "1473347565.000000"
        },
        "ts": "1473347555.000355",
        "reactions": [
            {
                "name": "stuck_out_tongue_winking_eye",
                "users": [
                    "U0PB67X4K"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "the fate of the world is in Your hands, guys :smile:",
        "ts": "1473347737.000357"
    },
    {
        "type": "message",
        "user": "U0KN2SSKE",
        "text": "just scanned this good discussion\u2026  i think we should classify errors into 3\n1) fatal so I should panic now because I can\u2019t go on;  ex  io and network errors after  retries\n2) not fatal for me, but my caller should handle it (&amp; might consider fatal), so pass it up + stacktrace; ex  chaincode  not found\n3) caller\u2019s problems, so tell him (no need for stacktrace); ex  invalid args",
        "ts": "1473350146.000358"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "not sure about network... these are usually transient, and errors can be because of byzantine behavior",
        "ts": "1473353171.000359"
    },
    {
        "type": "message",
        "user": "U0KN2SSKE",
        "text": "yeah, network is more transient \u2014 how much retries before giving up",
        "ts": "1473354855.000360"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "panicing has to be thought throu\u2026 (1) panic could corrupt \u2026 so attemp a shutdown routine first ? (2) dump enough info first for troubleshooting",
        "ts": "1473355888.000361"
    },
    {
        "type": "message",
        "user": "U24M29R4G",
        "text": "<https:\/\/github.com\/kazegusuri\/grpc-panic-handler>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "kazegusuri\/grpc-panic-handler",
                "title_link": "https:\/\/github.com\/kazegusuri\/grpc-panic-handler",
                "text": "Contribute to grpc-panic-handler development by creating an account on GitHub.",
                "fallback": "GitHub: kazegusuri\/grpc-panic-handler",
                "thumb_url": "https:\/\/avatars1.githubusercontent.com\/u\/2457753?v=3&s=400",
                "from_url": "https:\/\/github.com\/kazegusuri\/grpc-panic-handler",
                "thumb_width": 157,
                "thumb_height": 157,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1473357355.000362"
    },
    {
        "type": "message",
        "user": "U24M29R4G",
        "text": "`grpc-panic-handler is an interceptor to protect a process from aborting by panic and return Internal error as status code.`",
        "ts": "1473357456.000364"
    },
    {
        "type": "message",
        "user": "U24M29R4G",
        "text": "may be we can implement something like this for panic?",
        "ts": "1473357492.000365"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "muralisr: why can panic corrupt?",
        "ts": "1473357504.000366"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "you could be writing while some part panics",
        "ts": "1473357530.000367"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "writing what",
        "ts": "1473357537.000368"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "you could be writing and you crash",
        "edited": {
            "user": "U0XR6J961",
            "ts": "1473357578.000000"
        },
        "ts": "1473357546.000369"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "the code needs to be able to recover from this, when you restart",
        "ts": "1473357599.000371"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "seems  good to go through one \u201cpanic\u201d handler to give a chance to do things before actually panicing than have panics all over the place",
        "ts": "1473357801.000372"
    },
    {
        "user": "U0Z6VMEER",
        "text": "<@U0Z6VMEER|beauson45> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1473364649.000373"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "so how to continue with this? :slightly_smiling_face:",
        "ts": "1473369501.000374"
    },
    {
        "type": "message",
        "user": "U12452RAP",
        "text": "<@U0KN2SSKE>: i think the whether retry and how much times retry, when to retry should determine by invoker\/caller, the transport layer no need to automatically retry, as it usually no effect",
        "ts": "1473384277.000375"
    },
    {
        "user": "U1CPB11D0",
        "text": "<@U1CPB11D0|dianfu> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1473384438.000376"
    }
]
[
    {
        "type": "message",
        "user": "U1ES70KQS",
        "text": "Greetings all, I have made a module to contribute to the Hyperledger project and was told to consult this channel for help in figuring out the best place to integrate it",
        "ts": "1480341172.000920"
    },
    {
        "type": "message",
        "user": "U1ES70KQS",
        "text": "In short, the module automatically parses\/unmarshals arguments passed in to Golang chaincode Init, Invoke, or Query methods and calls a well-typed, programmer-defined function with the parsed arguments",
        "ts": "1480341298.000921"
    },
    {
        "type": "message",
        "user": "U1ES70KQS",
        "text": "I understand you're moving towards a 1.0 release at the moment and so might not have time for this now",
        "edited": {
            "user": "U1ES70KQS",
            "ts": "1480341374.000000"
        },
        "ts": "1480341308.000922"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U1ES70KQS> perhaps push it to Gerrit with WIP in the subject ? What do you think ?",
        "ts": "1480345242.000924"
    },
    {
        "type": "message",
        "user": "U1ES70KQS",
        "text": "Well, the module is complete, it has unit tests, and I copied and modified the chaincode_example02 to use it",
        "ts": "1480345557.000925"
    },
    {
        "type": "message",
        "user": "U1ES70KQS",
        "text": "I haven't done any documentation for it (yet) since I wanted to coordinate with the folks here",
        "ts": "1480345611.000926"
    },
    {
        "type": "message",
        "user": "U1ES70KQS",
        "text": "(I wasn't sure where to put it in the documentation hierarchy)",
        "ts": "1480345631.000927"
    },
    {
        "type": "message",
        "user": "U1ES70KQS",
        "text": "I had submitted it before (before adding tests and example code) -- <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/1043\/1>",
        "ts": "1480345680.000928"
    },
    {
        "type": "message",
        "user": "U1ES70KQS",
        "text": "I suppose I should submit the latest?",
        "ts": "1480345755.000929"
    },
    {
        "type": "message",
        "user": "U1ES70KQS",
        "text": "I put my module in fabric\/core\/chaincode\/shim\/ since it's to be used in chaincode",
        "ts": "1480346099.000930"
    },
    {
        "type": "message",
        "user": "U1ES70KQS",
        "text": "would there be a more appropriate place for it?",
        "ts": "1480346867.000931"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "<@U1AU8DRQR> <@U0ULK2JPP> I know this is an old topic and likely a foregone conclusion at this point, but when I\u2019m asked why the changes on chaincode interface in v1.0 that removed the \u201cfunction\u201d and \u201cargs\u201d arguments, I couldn\u2019t find a reference for the rationale behind this change. could you guys provide some explanation here for the community\u2019s benefit? (also for me to look smarter next time :wink: )",
        "ts": "1480355628.000932"
    },
    {
        "type": "message",
        "user": "U1ES70KQS",
        "text": "what's the alternative to the \"function\" and \"args\" arguments? That affects my example code...",
        "ts": "1480361207.000933"
    },
    {
        "type": "message",
        "user": "U1ES70KQS",
        "text": "(sorry I'm not up to date, this project isn't my \"day job\")",
        "edited": {
            "user": "U1ES70KQS",
            "ts": "1480361253.000000"
        },
        "ts": "1480361240.000934"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "<@U1ES70KQS>  in v1.0 you only have one parameter \u201cChaincodeStubInterface\u201d, you call that param to get the function and args: `function, args := stub.GetFunctionAndParameters()`",
        "ts": "1480364379.000936"
    },
    {
        "type": "message",
        "user": "U1ES70KQS",
        "text": "ah, thank you much!",
        "ts": "1480364431.000937"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U13TWBRBL> the basic rationale was (1) move from `string` to `[]byte` types which is useful for arbitrary input (example zip or jpeg\u2026) and (2) don\u2019t force \u201cfunction\u201d on chaincode APIs \u2026 chaincode can look at first arg to figure it out (harking back to `int main(int argc, char* argv[])` )",
        "ts": "1480369646.000938"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "to make changes easy on existing chaincodes added `stub.GetFunctionAndParameters()` \u2026 <@U1AU8DRQR> to add\/correct please",
        "ts": "1480369726.000939"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U0ULK2JPP> it works exactly the way you said. I wouldn't add anything :slightly_smiling_face:",
        "ts": "1480405499.000940",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0ULK2JPP"
                ],
                "count": 1
            }
        ]
    }
]
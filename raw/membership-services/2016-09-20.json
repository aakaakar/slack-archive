[
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "<@U12452RAP>: yoU maY waNt to chAnge the deFault loGging leVel in the coNfiguration? :wink:\np.s. finally, we are in the same time-zone! for a change\u2026!",
        "edited": {
            "user": "U11MANG9G",
            "ts": "1474355224.000000"
        },
        "ts": "1474354861.000138"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "<@U1HBFGDPV>, if you don\u2019t mind me asking, what\u2019s the reason for it?",
        "ts": "1474354887.000139"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "(performance, scale, simplicity, etc.?)",
        "ts": "1474354915.000140"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "Just for context, the ECerts are based on a standard (X.509 v3)",
        "ts": "1474354940.000141"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "But there is some logic that is part of the generation\/creation\/issuance...",
        "ts": "1474354969.000142"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "It is not impossible to allow an extension, however, it will help (me) understand what exactly you are asking, so that I give you the right answer.\n\nAs a side note, there is some other related \u2018logic\u2019 involved, such as storing some of these certs + later on, associating a TCA with the related ECA, etc\u2026 so there is some cryptographic link between the ECerts and the (subsequent) TCerts generation procedure.\n\nHowever (again), never say never. THere is some ongoing work\/discussions and thinking around supporting multitple {E,T}CAs\u2026 so maybe that can be of interest too.",
        "ts": "1474355156.000143"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "Please let me\/us know.",
        "ts": "1474355164.000144"
    },
    {
        "type": "message",
        "user": "U12452RAP",
        "text": "<@U11MANG9G> ok, the default log level changed?",
        "ts": "1474355636.000146"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "Yes, it\u2019s also more granular. If you change the YAML, you can get the same log\/info\/etc. output back.",
        "ts": "1474355672.000147"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "Try it and let me know. I\u2019m now using the VPN, which explains so many things (pulling the code, etc. is much slower, locally)",
        "ts": "1474355710.000148"
    },
    {
        "type": "message",
        "user": "U1HBFGDPV",
        "text": "<@U11MANG9G> The reason is for security and trust. Suppose there're multiple transaction participators and each one has own system as peer. It's more fair to leverage a trusted 3rd party CA center to issue ECert,  rather than a participator hosting the ECA.  Since ECert are based on X.509 v3, so my understanding is a public CA center can issue ECert technically?  TCert should be issued by hyperledger node since the logic is unique. Thx for your comments!",
        "ts": "1474361280.000149"
    }
]
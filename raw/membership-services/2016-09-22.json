[
    {
        "type": "message",
        "user": "U1WUAQJVC",
        "text": "Is there any  difference between these two api's \n\n\taccount, err := attr.GetValueFrom(\"account\", ownerCert)\n\tattrValue,error:=stub.ReadCertAttribute(\"position\")\n\nlooks like they do samething except in first one we need to pass the certificate in 2nd one the current logged in user's certificate is used,...",
        "ts": "1474544687.000150"
    },
    {
        "type": "message",
        "user": "U1WUAQJVC",
        "text": "One more thing, can i create user groups using the membersrvc.yaml configuration?\n\nUsing the different level of affiliation to represent the user group levels?",
        "ts": "1474545001.000151"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "Oh guys, it is so weird working from such a timezone",
        "ts": "1474546349.000152"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "Just received the notifications\u2026",
        "ts": "1474546361.000153"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "Let\u2019s start from the bottom up :wink:",
        "ts": "1474546370.000154"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "3. Yes, you can use affiliations to represent group levels",
        "ts": "1474546399.000155"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "Which can give you a better way of grouping, rather than just by using roles.",
        "ts": "1474546430.000156"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "2. I\u2019d use `attr.GetValueFrom()`",
        "ts": "1474546495.000157"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "Just for context, at some point the Attributes work was \u2018pulled up\u2019 to a shared location in fabric so that it can be more easily reused. This is why it is under `core\/crypto\/attributes`",
        "ts": "1474546550.000158"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "It\u2019s a straight forward API with a good test coverage (at least as a unit), so sure, please go ahead.",
        "ts": "1474546589.000159"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "Regarding the certificate that is provided, there is a lot of logic (code) that is allows attribute encryption, etc\u2026 so that API allows it.",
        "ts": "1474546756.000160"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "While I don\u2019t know (at this point) exactly what you are trying to do\u2026 you can also look at:",
        "ts": "1474546784.000161"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "`ReadTCertAttribute()`",
        "ts": "1474546788.000162"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "You are probably not encrypting attributes, so I would not worry about the rv.",
        "ts": "1474546822.000163"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "<@U1WUAQJVC>: HTH ^^^",
        "ts": "1474546836.000164"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "---",
        "ts": "1474546848.000165"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "<@U1HBFGDPV> Hi Vincent",
        "ts": "1474546858.000166"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "Yes, thanks for clarifying. Didn\u2019t want to answer yes\/no above before understanding.",
        "ts": "1474546879.000167"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "Something that is good to bear in mind is that in most (use-) cases, an enrollment (obtaining an ECert) is an action that is needed less frequently than transacting\u2026 (for which one needs\/requires a TCert)",
        "ts": "1474546949.000168"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "In general (and again, depends on the case), ECerts are viewed as a much long(er) lasting certificates\/proof\/evidence.",
        "ts": "1474547019.000169"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "It might be easier to think about an ECert a (gym ?!?) membership subscription.",
        "ts": "1474547068.000170"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "Or a driving license (which can serve as an identity) or any other \u2018membership card'",
        "ts": "1474547097.000171"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "\u2026 afterwhich, an entity can transact (many times).",
        "ts": "1474547136.000172"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "TCerts are shorter term certs, especially in comparison to ECerts\u2026 so for optimizing (again, depending on the use-case) it might be better to focus on the TCert generation.",
        "ts": "1474547194.000173"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "---",
        "ts": "1474547199.000174"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "Another point on this, is that you can request a batch of TCerts, just like the ClientSDK (NodeJS) supports.",
        "ts": "1474547246.000175"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "This way you can obtain\/generate several TCerts at a time, and use them later (while they haven\u2019t expired, etc.)",
        "ts": "1474547277.000176"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "---",
        "ts": "1474547307.000177"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "Another (final) comment from me, this time round, is that even though ECerts are based on X.509 v3 there is still some internal state that fabric maintains\/manages..",
        "ts": "1474547353.000178"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "One\u2019s registration (EnrollmentID) is later on used in several places\u2026 you can take a look at the `membersrvc.yaml` file to see some of these (e.g., `lukas` from `bank_a`)",
        "ts": "1474547494.000179"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "So at the moment it might be more than just issuing a\/some x.509 v3 cert.",
        "ts": "1474547537.000180"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "We were\/are thinking of abstracting this a bit more, providing entry points - there are some documents in Jira about it, but it\u2019d still require some work.",
        "ts": "1474547679.000183"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "----",
        "ts": "1474547714.000184"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "OK, OK, last one, I promise!",
        "ts": "1474547720.000185"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "If you already have a trusted 3rd party, then the better\/easier way would be to delegate the responsibility to other CAs. Meaning, the trusted 3rd party does not need to issue ALL the certs.",
        "edited": {
            "user": "U11MANG9G",
            "ts": "1474577286.000000"
        },
        "ts": "1474547776.000186"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "It is more scalable to have a few \u2018delegated\u2019 ECAs\/TCAs\u2026 and might be the recommended way, rather than you writing up your own ECert-generation logic.",
        "ts": "1474547829.000187"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "I\u2019ll stop here (as promised ;-)), but we can discuss\/develop this more. Give us a shout.",
        "ts": "1474547880.000188"
    },
    {
        "user": "U1V5VNSAD",
        "text": "<@U1V5VNSAD|subax> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1474549962.000189"
    },
    {
        "user": "U221LL03Z",
        "text": "<@U221LL03Z|ashutoshkumar> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1474551657.000190"
    },
    {
        "user": "U1CTBUNEN",
        "text": "<@U1CTBUNEN|mart0nix> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1474580830.000192"
    }
]
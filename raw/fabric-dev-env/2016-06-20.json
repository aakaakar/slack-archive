[
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "<@U0KPFAZNF>: <@U11HH3P7Y> quick q.  If we add a new package to pip install on <https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/scripts\/provision\/host.sh#L23>, will CI automatically incorporate this?",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/scripts\/provision\/host.sh#L23",
                "text": "fabric - Fabric is a blockchain project in Incubation proposed to the community and documented at <https:\/\/goo.gl\/RYQZ5N>. Information on what Incubation entails can be found in the Hyperledger Proj...",
                "fallback": "GitHub: hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/scripts\/provision\/host.sh#L23",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1466443850.000082"
    },
    {
        "type": "message",
        "user": "U11HH3P7Y",
        "text": "yes.",
        "ts": "1466444047.000084"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "awesome1!",
        "ts": "1466444157.000085"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i concur with ramesh",
        "ts": "1466444259.000086"
    },
    {
        "type": "message",
        "user": "U11HH3P7Y",
        "text": "Jenkins builds are failing with DB IO Error after PR#1877 merge..",
        "ts": "1466445651.000087"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U11HH3P7Y> hopefully <https:\/\/github.com\/hyperledger\/fabric\/pull\/1926> should help some",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "use a different db for system chaincode UT than chaincode UTs by muralisrini \u00b7 Pull Request #1926 \u00b7 hyperledger\/fabric \u00b7 GitHub",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/pull\/1926",
                "text": "Make unit test for system chaincode use a different ledger DB than those used for chaincode UTs. Description We have seen errors with following signature recently Error opening DB IO error: lock...",
                "fallback": "GitHub: use a different db for system chaincode UT than chaincode UTs by muralisrini \u00b7 Pull Request #1926 \u00b7 hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars1.githubusercontent.com\/u\/14361488?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/pull\/1926",
                "thumb_width": 420,
                "thumb_height": 420,
                "service_icon": "https:\/\/a.slack-edge.com\/e8ef6\/img\/unfurl_icons\/github.png",
                "id": 1
            }
        ],
        "ts": "1466445976.000088"
    },
    {
        "type": "message",
        "user": "U11HH3P7Y",
        "text": "Yes murali.. Re-testing in jenkins..",
        "ts": "1466446008.000090"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "(assuming same error of course)",
        "ts": "1466446011.000091"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0ULK2JPP>: Do you know why this was somehow triggered by 1877? I have poured through my changeset multiple times and just cannot find what might be the cause",
        "ts": "1466446016.000092"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I dont know either <@U0XPR4NP4> \u2026.  let me check one thing \u2026 <@U11HH3P7Y>, which test fails after the PR#1877 merge please ?",
        "ts": "1466446085.000093"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "My best guess is that my changes affected the length of time that tests were running, and therefore pushed two tests into running concurrently that didn't used to, but I even tried with `go test -parallel 1` and I still see the failure (though not when running the package tests independently)",
        "ts": "1466446163.000094"
    },
    {
        "type": "message",
        "user": "U11HH3P7Y",
        "text": "Unit tests are failing.  FAIL: TestExecuteDeploySysChaincode",
        "ts": "1466446281.000095"
    },
    {
        "type": "message",
        "user": "U11HH3P7Y",
        "text": "<https:\/\/jenkins.hyperledger.org\/job\/fabric-github-verify-x86_64\/245\/console>",
        "ts": "1466446282.000096"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "ok <@U11HH3P7Y>. So #1926 should at least alleviate...",
        "ts": "1466446434.000097"
    },
    {
        "type": "message",
        "user": "U11HH3P7Y",
        "text": "yes.. All unit tests passed in 1926",
        "ts": "1466446626.000098"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "right",
        "ts": "1466446658.000099"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U0XPR4NP4>: I was thinking \u201cparallel\u201d too but couldn\u2019t go beyond that :slightly_smiling_face:",
        "ts": "1466446712.000100"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I wondered if something else beside \u201cparallel\u201d is at work here",
        "ts": "1466446738.000101"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0ULK2JPP>: Well, at least you seem as unsure as I am.  I like to know how I break things so that I can avoid them in the future... but I guess I may have to let this one go.",
        "ts": "1466446855.000102"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0ULK2JPP>: is your suspicion that there is concurrency within the UT framework itself that is breaking things? or is it that subsequent runs are persisting state?",
        "ts": "1466447172.000103"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "er, previous runs persisting state affecting subsequent runs, I should say, heh",
        "ts": "1466447199.000104"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "the reason I ask is I had a patch that run the UTs in a docker instance that would offer some degree of environmental isolation that could be of interest",
        "ts": "1466447238.000105"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "but it wouldnt have any impact if the problem is intra-test inteference",
        "ts": "1466447261.000106"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U0KPFAZNF>: the former is the obvious first choice for an explanation ? It doesn\u2019t quite explain the \u201cwhy now\u201d. If nothing has changed, it presumes we were always running concurrent but didn\u2019t know it and now we are breaking due to timing",
        "ts": "1466447393.000107"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "yeah, could just be the type\/nr of tests affect how go-tests schedules concurrency or something",
        "ts": "1466447438.000108"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i didnt think we had any parallel stuff enabled in go-test however IIUC so I am confused how that is even the case",
        "ts": "1466447462.000109"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "same here",
        "ts": "1466447482.000110"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "perhaps the problem isnt concurrent execution but resource cleanup",
        "ts": "1466447492.000111"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "That would be surprising\u2026. all the chaincode tests use \/tmpdb and reuse that freely without explicitly tmpdb cleanup.",
        "ts": "1466447773.000112"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "only \u201ctheory\u201d that fits is chaincode UT  and \u201csystem_chaincode\u201d UT are running into each other",
        "ts": "1466447818.000113"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "now that I moved system_chaincode to a different DB, they no longer do",
        "ts": "1466447832.000114"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "fits the facts but Sherlock won\u2019t like it :slightly_smiling_face:",
        "ts": "1466447845.000115"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0KPFAZNF>: By default, go runs unit tests in parallel with the number of available CPUs:\n\n```\n\t-parallel n\n\t    Allow parallel execution of test functions that call t.Parallel.\n\t    The value of this flag is the maximum number of tests to run\n\t    simultaneously; by default, it is set to the value of GOMAXPROCS.\n\t    Note that -parallel only applies within a single test binary.\n\t    The 'go test' command may run tests for different packages\n\t    in parallel as well, according to the setting of the -p flag\n\t    (see 'go help build').\n\n...\n\n\t-p n\n\t\tthe number of programs, such as build commands or\n\t\ttest binaries, that can be run in parallel.\n\t\tThe default is the number of CPUs available, except\n\t\ton darwin\/arm which defaults to 1.\n\n```",
        "ts": "1466447881.000116"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "right that also fits the observations in <https:\/\/github.com\/hyperledger\/fabric\/issues\/1921>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "One unit test fails with 4 CPUs, fine with 2 CPUs \u00b7 Issue #1921 \u00b7 hyperledger\/fabric \u00b7 GitHub",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/issues\/1921",
                "text": "Description On a zLinux guest (debian 8) with 4 CPUs, \"make unit-test\" fails for <http:\/\/github.com\/hyperledger\/fabric\/core\/system_chaincode|github.com\/hyperledger\/fabric\/core\/system_chaincode>: 2016\/06\/20 03:35:24 Load docker HostConfig: %+v &amp;{[] [] [] [...",
                "fallback": "GitHub: One unit test fails with 4 CPUs, fine with 2 CPUs \u00b7 Issue #1921 \u00b7 hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/15215715?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/issues\/1921",
                "thumb_width": 420,
                "thumb_height": 420,
                "service_icon": "https:\/\/a.slack-edge.com\/e8ef6\/img\/unfurl_icons\/github.png",
                "id": 1
            }
        ],
        "ts": "1466447948.000117"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "2 CPUs works, 4 CPUs show errors",
        "ts": "1466447962.000119"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0XPR4NP4>: understood, but the language is a bit confusing as there are places where it implies that tests have to explicitly opt-in with t.Parallel(), which I dont think we have any that do",
        "ts": "1466448135.000120"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "it could be that we do in fact have some that opt-in, or it could be that I misinterpreted the doc",
        "ts": "1466448164.000121"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "but I was under the distinct impression that today, we dont parallelize the tests",
        "ts": "1466448184.000122"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i guess further study is needed",
        "ts": "1466448198.000123"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0KPFAZNF>: Within a single package, I think you must opt into parallelism, but when executing tests across multiple packages, I believe they are parallelized via `-p`",
        "ts": "1466448536.000124"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0XPR4NP4>: thats possible",
        "ts": "1466448590.000125"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "certainly 1921 is evidence to the contrary of my understanding",
        "ts": "1466448630.000126"
    },
    {
        "type": "message",
        "user": "U0TFEHX8E",
        "text": "I can confirm that when I modify `goUnitTests.sh` changing `go test -cover -timeout=20m $PKGS` to `go test -cover -p 1 -timeout=20m $PKGS` that the tests pass on my laptop",
        "ts": "1466452521.000127"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "ah, well, that cinches it",
        "ts": "1466452635.000128"
    },
    {
        "type": "message",
        "user": "U0TFEHX8E",
        "text": "also it feels like the tests take longer, but I didn\u2019t actually measure",
        "ts": "1466452656.000129"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "this makes sense in a way: i wrote a patch which tried to run go-test per package and parallelize them with the gnu parallel tool",
        "ts": "1466452687.000130"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "but it ran slower, probably because the tests were already parallel so all I did was add overhead",
        "ts": "1466452703.000131"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "(the thought at the time is I would run each instance in its own container so they wouldnt interfere with one another",
        "ts": "1466452748.000132"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "it all worked, but was appreciably slower, so I abandoned it",
        "ts": "1466452761.000133"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "speaking of parallelization, i wonder if theres a way we can have vagrant scale up the nr of vcpus based on system its on",
        "edited": {
            "user": "U0KPFAZNF",
            "ts": "1466452885.000000"
        },
        "ts": "1466452819.000134"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "I have a 4c\/8t Xeon MacPro that could probably handle more than 2c vcpus",
        "edited": {
            "user": "U0KPFAZNF",
            "ts": "1466452864.000000"
        },
        "ts": "1466452854.000135"
    }
]
[
    {
        "user": "U2W7U5UA3",
        "text": "<@U2W7U5UA3|pd93> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1478690065.002032"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0KPFAZNF> It looks like the move to localize the go tools into the fabric dir creates files such as `gotools\/build\/gopath\/src\/github.com\/golang\/protobuf\/protoc-gen-go\/testdata\/extension_base.proto` so when I run a `make protos` I am getting a compile error.  Am I good to submit a patch which excludes this path?",
        "ts": "1478706119.002033"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0XPR4NP4> yes, please do",
        "ts": "1478706600.002034"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i addressed that in several places such as the linter, but missed that one",
        "ts": "1478706613.002035"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "generally speaking \"build\" is probably safe to assume in general as something that should be skipped, regardless of its location in the tree",
        "ts": "1478706648.002036"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Will do",
        "ts": "1478707122.002037"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0XPR4NP4> on a related note: FYI that I have CR 2319 pending <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/2319\/6\/Makefile>",
        "ts": "1478707226.002038"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "I dont think this changes anything for you, just wanted you to be aware",
        "ts": "1478707238.002039"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "I have some build issues to sort out before it even becomes eligible for consideration though",
        "ts": "1478707261.002040"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I was actually going to do a follow up changeset with something similar...",
        "ts": "1478707293.002041"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Had just pulled master, and realized there are now a lot of proto compilation errors",
        "ts": "1478707310.002042"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Seems like we should definitely run `make protos` in CI",
        "ts": "1478707331.002043"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "yeah, i hope to be a place soon where things like the go and protoc compiler are normalized into a docker flow",
        "ts": "1478707345.002044"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "yeah, just as a linter I am thinking",
        "ts": "1478707363.002045"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "fails if there are outstanding updates",
        "ts": "1478707369.002046"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Right, and to make sure nobody checks in protos compiled at the wrong proto level or manually edits them etc.",
        "ts": "1478707396.002047"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "will need to refactor the compile_protos script so it can work with the tree without changing it",
        "ts": "1478707415.002048"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "exactly",
        "ts": "1478707423.002049"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "if the script could work with an arbitrary path, one thing we could do is extract all .proto files twice (say .\/build\/proto-lint\/orig and .\/build\/proto-lint\/test and then run the script against .\/test and check the difference",
        "ts": "1478707524.002050"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "any diff == fail the linter",
        "ts": "1478707535.002051"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "something like that",
        "ts": "1478707548.002052"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "<https:\/\/hyperledgerproject.slack.com\/archives\/fabric-dev-env\/p1478206686001932> :face_with_rolling_eyes:",
        "attachments": [
            {
                "from_url": "https:\/\/hyperledgerproject.slack.com\/archives\/fabric-dev-env\/p1478206686001932",
                "fallback": "[November 3rd, 2016 1:58 PM] jyellick: +1 on generating the protos in the CI build and making sure there is no diff",
                "ts": "1478206686.001932",
                "author_subname": "jyellick",
                "channel_id": "C0YQ1NHGD",
                "channel_name": "fabric-dev-env",
                "is_msg_unfurl": true,
                "text": "+1 on generating the protos in the CI build and making sure there is no diff",
                "author_name": "Jason Yellick",
                "author_link": "https:\/\/hyperledgerproject.slack.com\/team\/jyellick",
                "author_icon": "https:\/\/secure.gravatar.com\/avatar\/80fccad690b283483c3b5418b8b82b5b.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2F272a%2Fimg%2Favatars%2Fava_0026-48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "footer": "Posted in #fabric-dev-env"
            }
        ],
        "ts": "1478708186.002053"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "I think the best thing is to only do that in CI, and leave the vagrant script as it is",
        "ts": "1478708350.002055"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "I was thinking it would be integrated into \"make linter\", that way its accessible everywhere",
        "ts": "1478708385.002056"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "dev flow, ci, whatever",
        "ts": "1478708393.002057"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "the dev flow you mean the docker-only based flow?",
        "ts": "1478708437.002058"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "well, i meant anywhere a dev happens to be working",
        "ts": "1478708466.002059"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "but yes, it would work there too",
        "ts": "1478708469.002060"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "by \"dev flow\" i just mean as part of the a developer workflow so they can lint as much of the tree as possible before firing the CR in",
        "ts": "1478708506.002061"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i think the docker part of it will dovetail nicely in that it will normalize and abstract the tools in order to make this consistent for people",
        "ts": "1478708549.002062"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "but the basic concept is independent",
        "ts": "1478708559.002063"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "but you can't generate your own protos files and then check the diff",
        "ts": "1478708951.002064"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "how does that work?",
        "ts": "1478708955.002065"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "it can only work when you know the environment of the protoc is configured well, and that can only be in the CI",
        "ts": "1478708979.002066"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "?",
        "ts": "1478709048.002067"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "not following at all",
        "ts": "1478709051.002068"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "if I run \"make linter\" under a docker container, it wont matter if it runs in ci or dev",
        "ts": "1478709096.002069"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "I meant checking the diff of the pb.go file generated",
        "ts": "1478709113.002070"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "right, me too",
        "ts": "1478709120.002071"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "oh, that'd also run in docker?",
        "ts": "1478709126.002072"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "yes",
        "ts": "1478709129.002073"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "and then *you* (I mean literally you) have control over the image",
        "ts": "1478709142.002074"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "so you control the version of the protobuff compiler, etc",
        "edited": {
            "user": "U0ZJZBJLF",
            "ts": "1478709159.000000"
        },
        "ts": "1478709147.002075"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "heh, not really, but ok",
        "ts": "1478709170.002077"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "right now, protoc comes from baseimage (which is more \"me\" than normal, yes), and protoc-gen-go comes from fabric.git\/vendor (which has little to do with me in general)",
        "ts": "1478709205.002078"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "but either way, the environment would be controlled by commits in git, which is a good thing",
        "ts": "1478709236.002079"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "of course, anyone can submit CRs to baseimage as well",
        "ts": "1478709261.002080"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "just not many do",
        "ts": "1478709268.002081"
    }
]
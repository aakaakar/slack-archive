[
    {
        "type": "message",
        "user": "U1M3199JP",
        "text": "<@U2LH2TFTP> <@U1ZUSJHAA> : perhaps rather than offering individual commands or instructions, it would help for me to explain what is going on.  Initial connectivity is used, among other things, for ledger transfer.  The current behaviour is that a validator will gate on establishing initial connectivity before fully assuming the role of a validator that can provide ledger transfers to other nodes.  The initial validator already has the ledger, including the prefabricated genesis block.  We can't afford to have  it to gate on finding other validators in order to obtain something that it already has (and that no other validator would have at this point during bootstrap), so we set its initial connectivity to zero so that it may begin to provide it's ledger\/journal to other validators immediately.",
        "edited": {
            "user": "U1M3199JP",
            "ts": "1478622357.000000"
        },
        "ts": "1478622296.000357"
    },
    {
        "type": "message",
        "user": "U1M3199JP",
        "text": "So, this setting has the feeling of being a substitute for the \"GenesisLedger\" argument of yore.  This fact is both is artificial, and hopefully temporary.  Now that the genesis block is created ahead of time, before starting any validator, it is possible for us to begin to develop side channels through which the genesis block might be distributed to a network before starting even a single validator.",
        "edited": {
            "user": "U1M3199JP",
            "ts": "1478622741.000000"
        },
        "ts": "1478622603.000359"
    },
    {
        "type": "message",
        "user": "U1M3199JP",
        "text": "However, for the present time, it is the case that the initial validator, who has the genesis block ready to hand, must have the setting \"InitialConnectivity: 0 in their configuration file, and all other validators should set this to a number greater than zero, or omit it entirely from the configuration (in which case it will become 1 in the current code base).",
        "edited": {
            "user": "U1M3199JP",
            "ts": "1478622823.000000"
        },
        "ts": "1478622709.000360"
    },
    {
        "type": "message",
        "user": "U1H7ZPXEW",
        "text": "The UI for the marketplace transaction family is now open source.  You\u2019ll find in: <https:\/\/github.com\/hyperledger\/sawtooth-core\/tree\/master\/extensions\/mktplace\/navigator>.  \n\nTo give some context:\n\nMarketPlace Navigator is a hosted UI for the MarketPlace Transaction\nFamily. It consists of three major pieces: a single page app, a server\nbackend, and a syncing tool for synchronizing block state with the\nnavigator's database.\n\nThe Single Page App\n\nThe single page app is a ClojureScript app (with some plain JavaScript\ndependencies), which provides client-side transaction signing capabilities.\nA user of the system generates a WIF key in the browser, which they can save\nlocally. A user can create most MarketPlace objects via the UI, including\nparticipants, assets, holdings and sell offers.\n\nThe Server Backend\n\nThe server is a Node.js application, which uses RethinkDB for its\nstorage needs. It provides API's to create richer representation of the\nmarketplace objects, in order to improve the user experience. It also\nacts as a pass-through for transactions being submitted to a validator.\nAny transaction successfully submitted will be recorded, giving history\nof any failures that may occur during block construction.\n\nThe Synchronization Tool\n\nThe synchronization tool is a python script that bridges the gap between\nblock store contents and a RethinkDB database instance. It reads block\ndeltas from a validator, and creates block store snapshots, essentially\nproviding an immutable history of the block state.",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/sawtooth-core",
                "title_link": "https:\/\/github.com\/hyperledger\/sawtooth-core\/tree\/master\/extensions\/mktplace\/navigator",
                "text": "sawtooth-core - Core repository for Sawtooth Lake Distributed ledger",
                "fallback": "GitHub: hyperledger\/sawtooth-core",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/sawtooth-core\/tree\/master\/extensions\/mktplace\/navigator",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1478632065.000363"
    },
    {
        "user": "U1VF60BNV",
        "text": "<@U1VF60BNV|madhvesh> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1478647644.000365"
    }
]
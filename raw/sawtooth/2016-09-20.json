[
    {
        "type": "message",
        "user": "U1ZUSJHAA",
        "text": "After I updated the sawtooth, I ran a vlidator, but got an \"ImportError: No module named poet0_enclave_simulator\" when LedgerType configured  as poet0. I looked into the codes, and couldn't find the poet0_enclave_simulator module,  what's wrong with this?",
        "ts": "1474359238.000116"
    },
    {
        "type": "message",
        "user": "U26PBUZRT",
        "text": "kiko3333 [6:25 PM]  \n.\/bin\/txnvalidator -v -F ledger.transaction.integer_key-----------------------------&gt;  File \"\/usr\/lib\/python2.7\/importlib\/__init__.py\", line 37, in import_module\n   __import__(name)\nImportError: No module named poet_enclave_simulator   --------------------------&gt; Some one know what happening with the last sawtooth-core update?????--------------------------------resolve:    amundson 11:06 PM NOTE: a change just went into master which requires 'python setup.py build' in validator\/ in addition to core\/.  Also, there is a change to local-env.sh which adds to the python path. (edited)",
        "attachments": [
            {
                "fallback": "[September 20th, 2016 10:13 AM] flyingtiger.feihu: After I updated the sawtooth, I ran a vlidator, but got an \"ImportError: No module named poet0_enclave_simulator\" when LedgerType configured  as poet0. I looked into the codes, and couldn't find the poet0_enclave_simulator module,  what's wrong with this?",
                "ts": "1474359238.000116",
                "author_subname": "flyingtiger.feihu",
                "channel_id": "C16GB844D",
                "channel_name": "sawtooth",
                "is_msg_unfurl": true,
                "text": "After I updated the sawtooth, I ran a vlidator, but got an \"ImportError: No module named poet0_enclave_simulator\" when LedgerType configured  as poet0. I looked into the codes, and couldn't find the poet0_enclave_simulator module,  what's wrong with this?",
                "author_name": "feihu jiang",
                "author_link": "https:\/\/hyperledgerproject.slack.com\/team\/flyingtiger.feihu",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2016-08-17\/70138836529_b8ef809e66cdf88bb3b0_48.jpg",
                "mrkdwn_in": [
                    "text"
                ],
                "color": "D0D0D0",
                "from_url": "https:\/\/hyperledgerproject.slack.com\/archives\/sawtooth\/p1474359238000116",
                "is_share": true,
                "footer": "Posted in #sawtooth"
            }
        ],
        "ts": "1474366139.000117"
    },
    {
        "type": "message",
        "user": "U0YQQRNU8",
        "text": "<@U1ZUSJHAA>: did you get it sorted out?",
        "ts": "1474378434.000118"
    },
    {
        "type": "message",
        "user": "U1H7ZPXEW",
        "text": "<@U21HV589Z> The only way to do this is to store the transactions locally, in a structure you can query.  Either when you send them to the validator, or periodically querying for the list of transactions (though that will grow).  Doing the former, you can keep track of what transactions fail, since once they\u2019ve failed, they will no longer be in the list of transactions returned by the web api (only completed transactions are in the list, and pending transactions can be queried with the individual `transaction\/{transaction_id}` endpoint",
        "ts": "1474383175.000119"
    },
    {
        "user": "U2DU7F90B",
        "text": "<@U2DU7F90B|mlesswing> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1474420254.000120"
    }
]
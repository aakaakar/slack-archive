[
    {
        "user": "U3S1PENVA",
        "text": "<@U3S1PENVA|vadim> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1484562779.000938"
    },
    {
        "user": "U0P1VU0QG",
        "text": "<@U0P1VU0QG|ikruiper> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1484571785.000939"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "<@U0S5KF44D> so, from what I can tell cleaning the db would already help",
        "ts": "1484576897.000940"
    },
    {
        "type": "message",
        "user": "U0S5KF44D",
        "text": "yes, we have test cases for number of times a password can be reused which depend on starting with a clean DB",
        "ts": "1484576937.000941"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "although now I'm facing a worrisome error I need to investigate further: 2017\/01\/16 14:13:07 [DEBUG] Received response\nstatusCode=500 (500 Internal Server Error)\n--- FAIL: TestRegister (0.01s)\n\tclient_test.go:88: Failed to register, err:  Error response from server was 'User 'test_user' is already registered' for request:\n\t\tPOST <https:\/\/localhost:8888\/api\/v1\/cfssl\/register>",
        "ts": "1484576967.000942"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "yes, exactly",
        "ts": "1484576975.000943"
    },
    {
        "type": "message",
        "user": "U0S5KF44D",
        "text": "How do you reproduce that?  Obviously one issue I can repro is trying to reregister a user and fix the 500",
        "ts": "1484577096.000944"
    },
    {
        "type": "message",
        "user": "U0S5KF44D",
        "text": "but wondering why this happened in the 1st place",
        "ts": "1484577110.000945"
    },
    {
        "type": "message",
        "user": "U0S5KF44D",
        "text": "So 2 issues:",
        "ts": "1484577124.000946"
    },
    {
        "type": "message",
        "user": "U0S5KF44D",
        "text": "1) Fix error handling ... I can look into that",
        "ts": "1484577136.000947"
    },
    {
        "type": "message",
        "user": "U0S5KF44D",
        "text": "2) Why error occurred in 1st place ... not sure how to reproduce",
        "ts": "1484577159.000948"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "well, let me look a bit deeper and see if I can tell you",
        "ts": "1484577345.000949"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "but I just do make unit-tests",
        "ts": "1484577419.000950"
    },
    {
        "type": "message",
        "user": "U0S5KF44D",
        "text": "ok, will look into it",
        "ts": "1484578248.000951"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "<@U0S5KF44D> cleaning up the db in client_test.go makes that problem disappear",
        "ts": "1484578476.000952"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "so, I'm guessing that investing the internal server error may require you to not clean the db",
        "ts": "1484578540.000953"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "I've got the cli\/client tests passing now",
        "ts": "1484578560.000954"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "yeah, I added cleanup code to the lib tests and those pass too now",
        "edited": {
            "user": "U0P2GSA8Z",
            "ts": "1484579574.000000"
        },
        "ts": "1484579562.000955"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "actually for the first time make unit-tests on vagrant has completed successfully!",
        "ts": "1484579620.000957"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "yay :slightly_smiling_face:",
        "ts": "1484579623.000958"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "I'm going to try on Windows again now",
        "ts": "1484579642.000959"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "interestingly running tests natively on Windows is much slower than in vagrant on the same machine!?",
        "ts": "1484579826.000960"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "so, unfortunately it's not quite working on Windows yet",
        "ts": "1484590124.000961"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "it's something stupid, which has to with the copying of the test config file to \/tmp",
        "ts": "1484590154.000962"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "but it will take a bit more time",
        "edited": {
            "user": "U0P2GSA8Z",
            "ts": "1484590902.000000"
        },
        "ts": "1484590181.000963"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "stay tuned",
        "ts": "1484590196.000964"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "yay! make unit-tests passes on Windows :slightly_smiling_face:",
        "ts": "1484594297.000966"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "so I now have a patch that will make make unit-tests pass on both Windows and vagrant",
        "ts": "1484594659.000967"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "<@U0S5KF44D> <@U1KJY9BJQ> I see that you both have submitted changes that are related and will be impacted",
        "ts": "1484598983.000968"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "how do you guys sync' up?",
        "ts": "1484599011.000969"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "I can wait or submit mine and rebase later",
        "ts": "1484599034.000970"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "or whichever way you think is best",
        "ts": "1484599046.000971"
    },
    {
        "type": "message",
        "user": "U0S5KF44D",
        "text": "<@U0P2GSA8Z> I added <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/4009\/> just hoping it would move more quickly ... not sure which of Saad's you're referring to",
        "ts": "1484599221.000972"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "<https:\/\/gerrit.hyperledger.org\/r\/#\/c\/3907\/>",
        "ts": "1484599250.000973"
    },
    {
        "type": "message",
        "user": "U0S5KF44D",
        "text": "Yes, I think multiple change sets have included the 1-liner change that I put in 4009",
        "ts": "1484599254.000974"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "it actually may resolve a problem I had",
        "ts": "1484599269.000975"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "os.Link to \"copy\" the config file in \/tmp doesn't work",
        "ts": "1484599294.000976"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "neither on Windows nor vagrant",
        "ts": "1484599303.000977"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "yeah, I see your change",
        "ts": "1484599335.000978"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "that wasn't quite enough for me though",
        "ts": "1484599343.000979"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "I also needed the same in lib\/client_test.go",
        "ts": "1484599366.000980"
    },
    {
        "type": "message",
        "user": "U0S5KF44D",
        "text": "i thought the same change was already there ... checking again",
        "ts": "1484599397.000981"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "oh I think you're right",
        "ts": "1484599556.000982"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "it was the os.Link stuff that's there too",
        "ts": "1484599569.000983"
    },
    {
        "type": "message",
        "user": "U0S5KF44D",
        "text": "yeh, just trying to be incremental as maintainers want",
        "ts": "1484599626.000984",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U11MANG9G"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "I understand",
        "ts": "1484599640.000985"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "the maintainers seem to be having a hard time keeping up though :wink:",
        "ts": "1484599668.000986"
    },
    {
        "type": "message",
        "user": "U0S5KF44D",
        "text": "yes",
        "ts": "1484599688.000987"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "Yes, please: highly documented, small, self-contained, heavily tested incremental changes are the way to go.",
        "ts": "1484604842.000990"
    },
    {
        "type": "message",
        "user": "U3CBDC0JG",
        "text": "I just got the latest cop code and trying to run the cop server, but I am getting the following errors:\n\n2017\/01\/16 20:10:46 [INFO] Initializing signer\n2017\/01\/16 20:10:46 [WARNING] couldn't initialize signer: {\"code\":2000,\"message\":\"Unknown private key error\"}\n2017\/01\/16 20:10:46 [WARNING] couldn't initialize ocsp signer: open : no such file or directory",
        "ts": "1484618390.000991"
    },
    {
        "type": "message",
        "user": "U3CBDC0JG",
        "text": "anyone know that the problem is? I am using the default testdata\/cop.json configuration file",
        "ts": "1484618426.000992"
    },
    {
        "type": "message",
        "user": "U3CBDC0JG",
        "text": "thanks.",
        "ts": "1484618431.000993"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "<@U0S5KF44D> i\u2019m trying to run fabric-cop container and find it non-trivial to disable TLS, which I\u2019m sure all app developers would need to do in dev mode: you\u2019d have to 1) make a copy of the config json and add the \u201ctls_disable:true\u201d, 2) map a volume in docker instance to point to the local file. I think it would be a good enhancement if cop allows for the yaml+environment variable scheme that fabric employs, making every config property directly override-able by a corresponding environment variable (I think this came from viper?)",
        "edited": {
            "user": "U13TWBRBL",
            "ts": "1484625004.000000"
        },
        "ts": "1484624978.000994"
    },
    {
        "type": "message",
        "user": "U11CP8FF1",
        "text": "<@U13TWBRBL> Is this related to this error message ? \n``` http: TLS handshake error from 127.0.0.1:47286: tls: oversized record received with length 21536 ```\nI got this error on Docker container fabric-cop with default \u201ccop.json\u201d (mounted as volume to this file). Still, Node SDK does not work well, though.",
        "ts": "1484634845.000996"
    },
    {
        "type": "message",
        "user": "U11CP8FF1",
        "text": "With \u201ctls_disable: true\u201d option, I got \n```[INFO] Received request\nPOST \/api\/v1\/cfssl\/enroll\nAuthorization: Basic YWRtaW46YWRtaW5wdw==\n{\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\r\\nMIHMMHICAQAwEDEOMAwGA1UEAwwFYWRtaW4wWTATBgcqhkjOPQIBBggqhkjOPQMB\\r\\nBwNCAAQKvdv1UUwSIPls2Efw1b8yctkch5jqXHCPcw8oa3DLWR5TghB\/6lqcflkh\\r\\nR9vD1SUY5x1rR3ybf\/OwjP9aY1LRoAAwDAYIKoZIzj0EAwIFAANIADBFAiEArbCV\\r\\nnXyxSNmYhHKyU2OLfIcA46OLhlgzvLhrLymNRd4CIHhIA7XaHTaTtnTnp0mRP3JC\\r\\n5I7SBRkHGrl+iUgO+gSg\\r\\n-----END CERTIFICATE REQUEST-----\\r\\n\"}\n2017\/01\/17 15:38:07 http: panic serving 127.0.0.1:47316: runtime error: invalid memory address or nil pointer dereference```",
        "ts": "1484635144.000997"
    },
    {
        "type": "message",
        "user": "U0S5KF44D",
        "text": "<@U3CBDC0JG> You can ignore those warnings pertaining to OCSP.  They come from cfssl and are \"normal\" but agree are confusing.  Pls open a Jira item and assign to me for clean up.",
        "ts": "1484639340.000998"
    },
    {
        "type": "message",
        "user": "U0S5KF44D",
        "text": "<@U13TWBRBL> Pertaining to the CLI, this comes from cfssl but we have a work item for what you mention <https:\/\/jira.hyperledger.org\/browse\/FAB-1170>",
        "ts": "1484639435.000999",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U13TWBRBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U0S5KF44D",
        "text": "<@U11CP8FF1> There is a change set to fix the \"invalid memory address or nil pointer dereference\" error but it means (I believe) that your signing key for enroll requests was not properly initialized, which probably means it couldn't find your key and cert file.  I'd need to see your COP server log and config file to know for sure.",
        "ts": "1484639676.001000"
    }
]
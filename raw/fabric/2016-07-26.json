[
    {
        "type": "message",
        "user": "U1JBVRNQ3",
        "text": "Hi",
        "ts": "1469528309.000407"
    },
    {
        "type": "message",
        "user": "U1JBVRNQ3",
        "text": "I had asked this question earlier and was told to refer to the Consensus architecture proposal. I couldn't find anything relevant to it. I was hoping someone could have a look at our requirements and shed light on the following query:\n\n\nWe have several institutions that want to interact with each other and maintain a common ledger. Each transaction that is initiated by a party contains information of that party and another party involved in the chain. We do not want the transaction to reach a third institution that has no connection with the transaction. The intention is to avoid notifying a party that a transaction happened when the transaction is not relevant to the party. The transaction should be seen by only the 2 parties that are involved in it. Confidentiality of the transaction is not the objective of doing this. We want to avoid other parties spending computational resources on the transaction.\nIf the result of the computation reaches all peers, we don\u2019t mind. But the cause of the change should not make it to peers other than the ones involved in the transaction.\n\nAt the transaction level, is it possible to specify the peers that will be made aware of the transaction. It is acceptable that the result of the transaction will be made available to all peers.\n\n\nHow can we achieve this ?",
        "ts": "1469528527.000408"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "virajkamat: how are they then maintaining a common ledger?",
        "ts": "1469533226.000409"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "if we have party A, B, C, and a transaction between A and B happens, and C shouldn't get it, doesn't that mean that there is no common ledger between A B and C, but only between A and B?",
        "ts": "1469533281.000410"
    },
    {
        "user": "U0ULQ2G5V",
        "text": "<@U0ULQ2G5V|oleg> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1469539464.000412"
    },
    {
        "user": "U1V6SJ1FF",
        "text": "<@U1V6SJ1FF|dgorman> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1469542861.000413"
    },
    {
        "user": "U1PTA31D2",
        "text": "<@U1PTA31D2|naruhito.t> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1469543522.000414"
    },
    {
        "user": "U1UMZ3ZSN",
        "text": "<@U1UMZ3ZSN|sebastian> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1469544065.000415"
    },
    {
        "user": "U117F4B6D",
        "text": "<@U117F4B6D|jean.safar> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1469567488.000416"
    },
    {
        "type": "message",
        "user": "U117F4B6D",
        "text": "example for the certificate usage in clients <http:\/\/hyperledger-fabric.readthedocs.io\/en\/latest\/Setup\/NodeSDK-setup\/#learn-by-example>",
        "ts": "1469567566.000417"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "We've talked about this previously. Now is the time to transition to Gerrit and Jira for the Fabric project. Many are at the Hackfest here in SF, but for those who are not, we'll have to be adapting our workflow to using Gerrit.\n\nThe rationale for transitioning to Gerrit is to a) provide much more governance over the IP hygiene by enforcing the DCO sign-off on every commit merged (no exceptions). We did not have this level of rigor on GitHub. b) to enforce that no maintainer can merge their own commits. c) to enforce a rule that requires multiple reviewers to agree to a merge.\n\nThis may slow things down initially until we all get the swing of the new flow, but it will give us higher quality code and much better IP assurances.\n\nThe Gerrit repo will be here: <https:\/\/gerrit.hyperledger.org\/r\/#\/admin\/projects\/fabric>\nCurrently, the code is in the process of being migrated over. There's an active review here <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/255\/> for the initial commit of code to Gerrit. Once that is merged by the maintainers, everyone will need to clone that repo for their development going forward, and do git pushes to Gerrit. Basically, I have copied the GH code into a pristine git repository at the behest of LF so that we can benefit from the IP hygiene hooks in Gerrit that assure that every commit carries a DCO sign-off.\n\nTo submit code for review, you will need a Linux Foundation ID here: <https:\/\/identity.linuxfoundation.org\/> . Simple enough,if you have an ID, you are set. If not, please create one. This will grant you SSO across the LF tools portfolio.\nAdd your SSH key to Gerrit\n1. click on your profile (upper right hand corner) and select 'Settings' and then 'SSH Public Keys'\n2. from a terminal window: pbcopy &lt; ~\/.ssh\/id_rsa.pub \n3. paste into the Gerrit window for your SSH key\n4. press 'Add' button\n\nSo, the new workflow would be as follows:\n\n1. Clone the Gerrit repository. \n1.a from the Projects menu in Gerrit, click 'list' in the LF corner.\n1.b from the list of projects, select 'fabric'\n(note, you will want to PRESERVE your previous Fabric repository clone because you may want to be able to push any outstanding PRs to Gerrit by copying the source from your GH clone to the Gerrit clone).\n1.c from the project window, select 'Clone with commit hook' and then copy the command and paste to a terminal window to clone the repository into your $GOPATH\/src\/github.com\/hyperledger folder. \n2. make your changes\n3. commit your code\n4. git push origin HEAD:refs\/for\/master \n\nThe GH fabric repo will remain in read-only mode until we establish the mirror from Gerrit. We will preserve the current state of the hyperledger\/fabric repo (and all subsequent transitioned repositories) for posterity at a location TBD (likely something like 'hyperledger-archive' org on GH).",
        "ts": "1469567848.000418"
    },
    {
        "type": "message",
        "subtype": "pinned_item",
        "user": "U0KM61BCP",
        "item_type": "C",
        "attachments": [
            {
                "fallback": "[July 26th, 2016 2:17 PM] cbf: We've talked about this previously. Now is the time to transition to Gerrit and Jira for the Fabric project. Many are at the Hackfest here in SF, but for those who are not, we'll have to be adapting our workflow to using Gerrit.\n\nThe rationale for transitioning to Gerrit is to a) provide much more governance over the IP hygiene by enforcing the DCO sign-off on every commit merged (no exceptions). We did not have this level of rigor on GitHub. b) to enforce that no maintainer can merge their own commits. c) to enforce a rule that requires multiple reviewers to agree to a merge.\n\nThis may slow things down initially until we all get the swing of the new flow, but it will give us higher quality code and much better IP assurances.\n\nThe Gerrit repo will be here: <https:\/\/gerrit.hyperledger.org\/r\/#\/admin\/projects\/fabric>\nCurrently, the code is in the process of being migrated over. There's an active review here <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/255\/> for the initial commit of code to Gerrit. Once that is merged by the maintainers, everyone will need to clone that repo for their development going forward, and do git pushes to Gerrit. Basically, I have copied the GH code into a pristine git repository at the behest of LF so that we can benefit from the IP hygiene hooks in Gerrit that assure that every commit carries a DCO sign-off.\n\nTo submit code for review, you will need a Linux Foundation ID here: <https:\/\/identity.linuxfoundation.org\/> . Simple enough,if you have an ID, you are set. If not, please create one. This will grant you SSO across the LF tools portfolio.\nAdd your SSH key to Gerrit\n1. click on your profile (upper right hand corner) and select 'Settings' and then 'SSH Public Keys'\n2. from a terminal window: pbcopy &lt; ~\/.ssh\/id_rsa.pub \n3. paste into the Gerrit window for your SSH key\n4. press 'Add' button\n\nSo, the new workflow would be as follows:\n\n1. Clone the Gerrit repository. \n1.a from the Projects menu in Gerrit, click 'list' in the LF corner.\n1.b from the list of projects, select 'fabric'\n(note, you will want to PRESERVE your previous Fabric repository clone because you may want to be able to push any outstanding PRs to Gerrit by copying the source from your GH clone to the Gerrit clone).\n1.c from the project window, select 'Clone with commit hook' and then copy the command and paste to a terminal window to clone the repository into your $GOPATH\/src\/github.com\/hyperledger folder. \n2. make your changes\n3. commit your code\n4. git push origin HEAD:refs\/for\/master \n\nThe GH fabric repo will remain in read-only mode until we establish the mirror from Gerrit. We will preserve the current state of the hyperledger\/fabric repo (and all subsequent transitioned repositories) for posterity at a location TBD (likely something like 'hyperledger-archive' org on GH).",
                "ts": "1469567848.000418",
                "author_subname": "cbf",
                "channel_id": "C0Y4PEU22",
                "channel_name": "fabric",
                "is_msg_unfurl": true,
                "text": "We've talked about this previously. Now is the time to transition to Gerrit and Jira for the Fabric project. Many are at the Hackfest here in SF, but for those who are not, we'll have to be adapting our workflow to using Gerrit.\n\nThe rationale for transitioning to Gerrit is to a) provide much more governance over the IP hygiene by enforcing the DCO sign-off on every commit merged (no exceptions). We did not have this level of rigor on GitHub. b) to enforce that no maintainer can merge their own commits. c) to enforce a rule that requires multiple reviewers to agree to a merge.\n\nThis may slow things down initially until we all get the swing of the new flow, but it will give us higher quality code and much better IP assurances.\n\nThe Gerrit repo will be here: <https:\/\/gerrit.hyperledger.org\/r\/#\/admin\/projects\/fabric>\nCurrently, the code is in the process of being migrated over. There's an active review here <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/255\/> for the initial commit of code to Gerrit. Once that is merged by the maintainers, everyone will need to clone that repo for their development going forward, and do git pushes to Gerrit. Basically, I have copied the GH code into a pristine git repository at the behest of LF so that we can benefit from the IP hygiene hooks in Gerrit that assure that every commit carries a DCO sign-off.\n\nTo submit code for review, you will need a Linux Foundation ID here: <https:\/\/identity.linuxfoundation.org\/> . Simple enough,if you have an ID, you are set. If not, please create one. This will grant you SSO across the LF tools portfolio.\nAdd your SSH key to Gerrit\n1. click on your profile (upper right hand corner) and select 'Settings' and then 'SSH Public Keys'\n2. from a terminal window: pbcopy &lt; ~\/.ssh\/id_rsa.pub \n3. paste into the Gerrit window for your SSH key\n4. press 'Add' button\n\nSo, the new workflow would be as follows:\n\n1. Clone the Gerrit repository. \n1.a from the Projects menu in Gerrit, click 'list' in the LF corner.\n1.b from the list of projects, select 'fabric'\n(note, you will want to PRESERVE your previous Fabric repository clone because you may want to be able to push any outstanding PRs to Gerrit by copying the source from your GH clone to the Gerrit clone).\n1.c from the project window, select 'Clone with commit hook' and then copy the command and paste to a terminal window to clone the repository into your $GOPATH\/src\/github.com\/hyperledger folder. \n2. make your changes\n3. commit your code\n4. git push origin HEAD:refs\/for\/master \n\nThe GH fabric repo will remain in read-only mode until we establish the mirror from Gerrit. We will preserve the current state of the hyperledger\/fabric repo (and all subsequent transitioned repositories) for posterity at a location TBD (likely something like 'hyperledger-archive' org on GH).",
                "author_name": "Chrisfer",
                "author_link": "https:\/\/hyperledgerproject.slack.com\/team\/cbf",
                "author_icon": "https:\/\/secure.gravatar.com\/avatar\/eb4a014964885f16a760546340b5daa0.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2F66f9%2Fimg%2Favatars%2Fava_0017-48.png",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "text": "<@U0KM61BCP|cbf> pinned a message to this channel.",
        "ts": "1469567861.000419"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "<!channel>: ^^",
        "ts": "1469567890.000420"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "we have merged the initial commit into Gerrit as above. The workflow I outlined is in play",
        "ts": "1469570780.000421"
    },
    {
        "type": "message",
        "user": "U1M7K67EV",
        "text": "<@U0KM61BCP>: I have created a Linux Foundation ID but can't seem to sign-in to Gerrit to add my SSH key. Is there something else I need to do to link them up?",
        "ts": "1469580780.000423"
    },
    {
        "type": "message",
        "user": "U1M7K67EV",
        "text": "<@U0KM61BCP>: All good I figured it out, I was using my email address instead of my username haha",
        "ts": "1469584099.000424"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0KM61BCP>: can you clarify one thing: when you go to the identity site above, it lets you do SSO through providers like github\u2026but when you go to gerrit, it only seems to present username\/password",
        "ts": "1469584689.000425"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "do you know if the SSO logins work or do we need an explicit LF account",
        "ts": "1469584706.000426"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "I think that we maintainers need an account <@U0UHG4VP1> would know",
        "ts": "1469587611.000427"
    },
    {
        "type": "message",
        "user": "U0UHG4VP1",
        "text": "<@U0KPFAZNF>: you will need an LFID. If you create it with the same email as you use for github, then you can use social logins",
        "ts": "1469588477.000428"
    },
    {
        "type": "message",
        "user": "U1LES78TT",
        "text": "with this move to Gerrit, what is happening with issue tracking? Is it remaining on Github?",
        "ts": "1469590249.000429"
    },
    {
        "type": "message",
        "user": "U1LES78TT",
        "text": "or does Gerrit do issue tracking and I just can't see it",
        "ts": "1469590268.000430"
    },
    {
        "type": "message",
        "user": "U0UHG4VP1",
        "text": "<http:\/\/jira.hyperledger.org|jira.hyperledger.org>",
        "ts": "1469590449.000431"
    },
    {
        "type": "message",
        "user": "U1LES78TT",
        "text": "ah, thanks :smiley:",
        "ts": "1469591055.000432"
    },
    {
        "type": "message",
        "user": "U1LES78TT",
        "text": "are the github issues going to be ported across?",
        "ts": "1469591269.000433"
    },
    {
        "type": "message",
        "user": "U0UHG4VP1",
        "text": "that is a question for cbf, he found a tool to do the porting but it seemed to pull in everything (pull requests as issues, for example) and I\u2019ve been too busy to mess with it this week",
        "ts": "1469591310.000434"
    },
    {
        "type": "message",
        "user": "U0UHG4VP1",
        "text": "I suspect the answer is \u201cyes\u201d but I can\u2019t say when",
        "ts": "1469591330.000435"
    },
    {
        "type": "message",
        "user": "U1LES78TT",
        "text": "ok, thanks again",
        "ts": "1469591730.000436"
    },
    {
        "type": "message",
        "user": "U12452RAP",
        "text": "<@U0KM61BCP>: Is it already available to use Gerrit or still need some time?",
        "ts": "1469601716.000438"
    }
]
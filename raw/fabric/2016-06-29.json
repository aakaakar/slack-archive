[
    {
        "type": "message",
        "user": "U1FDTCEUR",
        "text": "fmt.Printf within chaincode question. When I deploy and invoke chaincode to several peers the fmt statements do not generate any output to the terminal screens. As a test I was deploying example02 which contans fmt statements. Is there a way of getting the output of the fmt methods?",
        "ts": "1467205643.000903"
    },
    {
        "type": "message",
        "user": "U18D82GJH",
        "text": "<@U1FDTCEUR>: I was facing the same issue yesterday.. Here is how you can see the print statements\u2026",
        "ts": "1467206448.000904"
    },
    {
        "type": "message",
        "user": "U18D82GJH",
        "text": "(1) build your code by myCCdir]$ go build .\/",
        "ts": "1467206475.000905"
    },
    {
        "type": "message",
        "user": "U18D82GJH",
        "text": "(2) CORE_CHAINCODE_ID_NAME=&lt;any handle&gt; CORE_PEER_ADDRESS=127.0.0.1:30303 .\/myCCdir",
        "ts": "1467206495.000906"
    },
    {
        "type": "message",
        "user": "U18D82GJH",
        "text": "you can now see all your printf statemets on this soncole..",
        "ts": "1467206523.000907"
    },
    {
        "type": "message",
        "user": "U18D82GJH",
        "text": "*console",
        "ts": "1467206525.000908"
    },
    {
        "type": "message",
        "user": "U1FDTCEUR",
        "text": "thanks - will let you know",
        "ts": "1467206559.000909"
    },
    {
        "type": "message",
        "user": "U1FDTCEUR",
        "text": "<@U18D82GJH>: First problem encountered is that the build does not pull in <http:\/\/github.com\/op\/go-logging|github.com\/op\/go-logging> - so I get build errors. Sorry I am a newbie with golang",
        "ts": "1467206811.000910"
    },
    {
        "type": "message",
        "user": "U18D82GJH",
        "text": "<@U1FDTCEUR>: you can use a very simple example in the begining and build from that. Here is a very simple example:",
        "ts": "1467208130.000911"
    },
    {
        "type": "message",
        "user": "U18D82GJH",
        "text": "<https:\/\/github.com\/IBM-Blockchain\/learn-chaincode>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "IBM-Blockchain\/learn-chaincode",
                "title_link": "https:\/\/github.com\/IBM-Blockchain\/learn-chaincode",
                "text": "learn-chaincode - Learn how to write chaincode.",
                "fallback": "GitHub: IBM-Blockchain\/learn-chaincode",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/17178768?v=3&s=400",
                "from_url": "https:\/\/github.com\/IBM-Blockchain\/learn-chaincode",
                "thumb_width": 200,
                "thumb_height": 200,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1467208130.000912"
    },
    {
        "type": "message",
        "user": "U18D82GJH",
        "text": "start\/chaincode_start.go \u2014 I would suggest (I did it this way myself) compile this CC and add print statements to see o\/p on console.. then move to finished\/chaincode_finished.go\u2026.",
        "ts": "1467208226.000914"
    },
    {
        "type": "message",
        "user": "U1FDTCEUR",
        "text": "<@U18D82GJH>: Thanks. I was able to get stdout printf to the console when I started a single peer using the sandboxsetup.md instructions. However",
        "ts": "1467219261.000915"
    },
    {
        "type": "message",
        "user": "U1FDTCEUR",
        "text": "when I use the peer startup from the devnet-setup.md I do not get the stdout.",
        "ts": "1467219361.000916"
    },
    {
        "type": "message",
        "user": "U1FDTCEUR",
        "text": "The difference is that using devnet-setup.md lets you start multiple connected peers whereas the sandbox-setup.md peer startup only allows a single peer node. At least I have not been able to connect a second one.",
        "ts": "1467219452.000917"
    },
    {
        "type": "message",
        "user": "U113EGLBE",
        "text": "I have a question involving chaincode functions. I know the standard Init, Invoke, and Query can be called by doing something like peer chaincode invoke -p ...... or peer chaincode query -p....",
        "ts": "1467234419.000918"
    },
    {
        "type": "message",
        "user": "U113EGLBE",
        "text": "What about other functions you defined. Like say I had a function approve.",
        "ts": "1467234433.000919"
    },
    {
        "user": "U1MG95G3W",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1MG95G3W|yanglei> has joined the channel",
        "ts": "1467234439.000920"
    },
    {
        "type": "message",
        "user": "U113EGLBE",
        "text": "Would I have a chaincode approve -p...",
        "ts": "1467234446.000921"
    },
    {
        "type": "message",
        "user": "U113EGLBE",
        "text": "or would it just stay as invoke, and just the Function parameter I pass to -c be approve?",
        "ts": "1467234480.000922"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U113EGLBE> the later",
        "ts": "1467234578.000923"
    },
    {
        "type": "message",
        "user": "U113EGLBE",
        "text": "Okay that's what I thought, thank you",
        "ts": "1467234607.000924"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "sure thing",
        "ts": "1467234611.000925"
    },
    {
        "type": "message",
        "user": "U113EGLBE",
        "text": "Having an issue, and wondering if it's a bug in fabric, or something I'm doing wrong on my end.\n\nIn my chaincode, apart from the standard Init, Invoke, and Query functions I have a few extra ones I have put in, for example one called Approve.\n\nI can invoke my Init\/Invoke\/Query using peer chaincode deploy\/invoke\/query -p $CPATH -n $NAME -c '{\"Function\":\"Init\/Invoke\/Query\", \"Args\": [\"egg\"]}'",
        "ts": "1467238622.000926"
    },
    {
        "type": "message",
        "user": "U113EGLBE",
        "text": "Now if I want to trigger my approve function I do:\npeer chaincode invoke -p $CPATH -n $NAME -c '{\"Function\":\"Approve\", \"Args\": [\"egg\"]}'\n\nHowever that doesn't work. It doesn't call my Approve function, it calls my Invoke function.",
        "ts": "1467238680.000927"
    },
    {
        "type": "message",
        "user": "U1FDTCEUR",
        "text": "<@U113EGLBE>: Look at the AssetManagement chaincode in the examples. It shows how to manage the addition function invocations from the Invoke function",
        "ts": "1467246436.000928"
    },
    {
        "type": "message",
        "user": "U113EGLBE",
        "text": "Oh wow, okay so the invoke just becomes a handler for all function calls that arent init or query?",
        "ts": "1467246703.000929"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U113EGLBE>: FWIW, the chaintool project provides what you are looking for to a degree by managing the dispatch table for you",
        "ts": "1467247631.000930",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U10Q62R8X"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "For instance, you declare your interfaces like this: <https:\/\/github.com\/hyperledger\/fabric-chaintool\/blob\/master\/examples\/example02\/app\/src\/interfaces\/org.hyperledger.chaincode.example02.cci>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric-chaintool",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric-chaintool\/blob\/master\/examples\/example02\/app\/src\/interfaces\/org.hyperledger.chaincode.example02.cci",
                "text": "fabric-chaintool - Chaintool - Chaincode Tooling for <https:\/\/github.com\/hyperledger\/fabric>",
                "fallback": "GitHub: hyperledger\/fabric-chaintool",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric-chaintool\/blob\/master\/examples\/example02\/app\/src\/interfaces\/org.hyperledger.chaincode.example02.cci",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1467247701.000931"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "and then implement them like this: <https:\/\/github.com\/hyperledger\/fabric-chaintool\/blob\/master\/examples\/example02\/app\/src\/chaincode\/chaincode_example02.go>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric-chaintool",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric-chaintool\/blob\/master\/examples\/example02\/app\/src\/chaincode\/chaincode_example02.go",
                "text": "fabric-chaintool - Chaintool - Chaincode Tooling for <https:\/\/github.com\/hyperledger\/fabric>",
                "fallback": "GitHub: hyperledger\/fabric-chaintool",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric-chaintool\/blob\/master\/examples\/example02\/app\/src\/chaincode\/chaincode_example02.go",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1467247724.000933"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "feel free to ask me any questions about it, I would love the feedback",
        "ts": "1467247789.000935"
    }
]
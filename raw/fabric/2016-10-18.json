[
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "<@U0Y55KNG2>    - not sure what you mean about BMX?  I have not looked at the tool but something like this is certainly doable against BMX.  I have actually been working on a Spark job which does something similar",
        "attachments": [
            {
                "fallback": "[October 17th, 2016 4:54 PM] kletkeman: <@U0ULK2JPP> Not sure what you mean by recursively. It polls all configured peer urls for the \/chain and verifies first that the height is the same (might be in between catch ups) ... then is so, it proceeds to verify the hashes. If they are the same, then it does nothing else. If they differ, then it performs a binary search to find the first block with hash divergence.  I would call it iterative rather than recursive.",
                "ts": "1476737689.003026",
                "author_subname": "kletkeman",
                "channel_id": "C0Y4PEU22",
                "channel_name": "fabric",
                "is_msg_unfurl": true,
                "text": "<@U0ULK2JPP> Not sure what you mean by recursively. It polls all configured peer urls for the \/chain and verifies first that the height is the same (might be in between catch ups) ... then is so, it proceeds to verify the hashes. If they are the same, then it does nothing else. If they differ, then it performs a binary search to find the first block with hash divergence.  I would call it iterative rather than recursive.",
                "author_name": "Kim Letkeman",
                "author_link": "https:\/\/hyperledgerproject.slack.com\/team\/kletkeman",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2016-09-29\/85637973444_4d3bc58d09da780ced3b_48.jpg",
                "mrkdwn_in": [
                    "text"
                ],
                "color": "D0D0D0",
                "from_url": "https:\/\/hyperledgerproject.slack.com\/archives\/fabric\/p1476737689003026",
                "is_share": true,
                "footer": "Posted in #fabric"
            }
        ],
        "ts": "1476777472.003037"
    },
    {
        "user": "U2QN8RG84",
        "text": "<@U2QN8RG84|henriquecd> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1476790803.003040"
    },
    {
        "user": "U1W210996",
        "text": "<@U1W210996|zemtsov> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1476793721.003041"
    },
    {
        "type": "message",
        "user": "U0Y55KNG2",
        "text": "<@U0ULK2JPP> I've been reducing the timeouts by looping in node-red at 2s intervals. I find that the tool can get the headings and read 8 blocks (the maximum it takes to find the culprit block with 118 chain height) in something like 20s. Basically, I launch the 4 GETs in parallel, and each of those is funneled to a node that stores the result at flow level. A second path loops through a delay 2s node and checks the result until it sees the correct array length. I'm having a bit of trouble with the terminating condition when you never receive the last result, but I will work on that. For now, that is a pretty rare event.",
        "edited": {
            "user": "U0Y55KNG2",
            "ts": "1476796550.000000"
        },
        "ts": "1476796313.003042"
    },
    {
        "type": "message",
        "user": "U0Y55KNG2",
        "text": "<@U0PB67X4K> If you are referring to my comment on Mluemix 0.5 having issues, we have been unable to use Bluemix for weeks because of instability and chain corruption. We determined that the corruption was coming from timeouts in the network and early attempts to use the chaincode that was taking between 10m and 20m to deploy successfully. I've forwarded that evidence to Mihir weeks ago. I'll paste an example of the output of this tool (just logs for now), which shows a perfect example of the corruption that starts at the 28th block ...",
        "ts": "1476796723.003045"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "oh - I thought you were saying that the tool would not work on BMX",
        "ts": "1476797087.003046"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "due to lack of function in BMX as opposed to stability",
        "ts": "1476797101.003047"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U0Y55KNG2|kletkeman> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/kletkeman\/F2QQ5BZTL\/divergentblocksolutionbmx.txt|divergentBlockSolutionBMX.txt> and commented: This is the output of the tool for the following fabric: <https:\/\/new-console.ng.bluemix.net\/services\/632bf9b3-8a69-4022-81b4-dcea34a11bf3?ace_config=%7B%22orgGuid%22%3A%226f5fa8a7-4207-4f63-b5c6-1c28c1765f67%22%2C%22spaceGuid%22%3A%2294f3d724-41ee-468d-9c1b-18cff83540cc%22%2C%22redirect%22%3A%22https%3A%2F%2Fnew-console.ng.bluemix.net%2F%23all-items%22%2C%22bluemixUIVersion%22%3A%22Atlas%22%7D>\n\nIt shows the error clearly in the transaction results output. State is written for a failed transaction, which of course corrupts the chain by diverging the peers.",
        "file": {
            "id": "F2QQ5BZTL",
            "created": 1476797129,
            "timestamp": 1476797129,
            "name": "divergentBlockSolutionBMX.txt",
            "title": "divergentBlockSolutionBMX.txt",
            "mimetype": "text\/plain",
            "filetype": "text",
            "pretty_type": "Plain Text",
            "user": "U0Y55KNG2",
            "editable": true,
            "size": 8060,
            "mode": "snippet",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F2QQ5BZTL\/divergentblocksolutionbmx.txt?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F2QQ5BZTL\/download\/divergentblocksolutionbmx.txt?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/kletkeman\/F2QQ5BZTL\/divergentblocksolutionbmx.txt",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F2QQ5BZTL-46867a8eaa",
            "edit_link": "https:\/\/hyperledgerproject.slack.com\/files\/kletkeman\/F2QQ5BZTL\/divergentblocksolutionbmx.txt\/edit",
            "preview": "GET CHAIN HEIGHTS\nCHAIN HEIGHTS, HAVE 4\/4\nCOMPARE HEIGHTS\nHEIGHT: 118\nENTER BINARY SEARCH",
            "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text\/plain',window.getSelection().toString().replace(\/\\u200b\/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>GET CHAIN HEIGHTS<\/pre><\/div>\n<div><pre>CHAIN HEIGHTS, HAVE 4\/4<\/pre><\/div>\n<div><pre>COMPARE HEIGHTS<\/pre><\/div>\n<div><pre>HEIGHT: 118<\/pre><\/div>\n<div><pre>ENTER BINARY SEARCH<\/pre><\/div>\n<\/div>\n<\/div>\n",
            "lines": 132,
            "lines_more": 127,
            "preview_is_truncated": true,
            "channels": [
                "C0Y4PEU22"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 1,
            "initial_comment": {
                "id": "Fc2QPJK42Y",
                "created": 1476797129,
                "timestamp": 1476797129,
                "user": "U0Y55KNG2",
                "is_intro": true,
                "comment": "This is the output of the tool for the following fabric: <https:\/\/new-console.ng.bluemix.net\/services\/632bf9b3-8a69-4022-81b4-dcea34a11bf3?ace_config=%7B%22orgGuid%22%3A%226f5fa8a7-4207-4f63-b5c6-1c28c1765f67%22%2C%22spaceGuid%22%3A%2294f3d724-41ee-468d-9c1b-18cff83540cc%22%2C%22redirect%22%3A%22https%3A%2F%2Fnew-console.ng.bluemix.net%2F%23all-items%22%2C%22bluemixUIVersion%22%3A%22Atlas%22%7D>\n\nIt shows the error clearly in the transaction results output. State is written for a failed transaction, which of course corrupts the chain by diverging the peers.",
                "channel": ""
            }
        },
        "user": "U0Y55KNG2",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U0Y55KNG2|kletkeman>",
        "bot_id": null,
        "ts": "1476797130.003048"
    },
    {
        "type": "message",
        "user": "U0Y55KNG2",
        "text": "<@U0PB67X4K> Ah ... sorry, I was probably not quite clear. BMX works great normally, but there have been stability issues for a while now, which of course might be solved with the new fabrics that get created as of Monday. I have one of those now and will be working with it for the next several weeks.",
        "ts": "1476797258.003049"
    },
    {
        "type": "message",
        "user": "U2CBG8V9U",
        "text": "Hi, everyone. I just found out that after every invokation, there is a relatively large disk-volume being taken up (about 32M every 10,000 invokes) . Mostly log files. I was wondering are there some ways of reducing the log volume after every invoke? Thanks in advance!",
        "ts": "1476840949.003055"
    },
    {
        "user": "U2R5N5S2E",
        "text": "<@U2R5N5S2E|brunops> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1476843853.003056"
    }
]
[
    {
        "user": "U1MNES6NR",
        "text": "<@U1MNES6NR|lbonniot> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468482097.001189"
    },
    {
        "user": "U1RL2273L",
        "text": "<@U1RL2273L|yusen> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468482333.001190"
    },
    {
        "type": "message",
        "user": "U1RL2273L",
        "text": "I am getting stuck in the vagrant up process. The terminal just hang over on the fabric-baseimage downloading process. It almost costed one day. Could this be some issue in the installation configuration or just a network reason so I can only wait?",
        "ts": "1468482541.001191"
    },
    {
        "type": "message",
        "user": "U11CP8FF1",
        "text": "The size of the image is around. 1 Gbyte.  Maybe you can try debug official registry download speed.",
        "ts": "1468487624.001192"
    },
    {
        "type": "message",
        "user": "U11CP8FF1",
        "text": "```<https:\/\/github.com\/docker\/docker-registry\/blob\/master\/DEBUGGING.md#testing-the-speed-of-the-official-registry>```",
        "ts": "1468487635.001193"
    },
    {
        "type": "message",
        "user": "U11CP8FF1",
        "text": "In my environment, the last command was like this:\n```$ time curl -svnoo --trace-time <http:\/\/mirrors.sonic.net\/centos\/7\/isos\/x86_64\/CentOS-7.0-1406-x86_64-NetInstall.iso>\nreal    0m0.850s\nuser    0m0.004s\nsys     0m0.000s```",
        "ts": "1468487665.001194"
    },
    {
        "user": "U1RJQSRR9",
        "text": "<@U1RJQSRR9|gensai> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468488630.001195"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "`12:52:39.836 [crypto] main -&gt; INFO 002 Log level recognized 'info', set to INFO`\nI am trying to set loglevel to warning, but it is ignored it seems, or it is not the config\/core.yaml where this is set?",
        "ts": "1468500863.001196"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "also, I too get the same error as you in zamrokk's comment: <https:\/\/hub.docker.com\/r\/hyperledger\/fabric-baseimage\/>",
        "ts": "1468502017.001197"
    },
    {
        "type": "message",
        "user": "U12452RAP",
        "text": "<@U1JB7QCBD>: <https:\/\/github.com\/hyperledger\/fabric\/pull\/2175\/files>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "Fix #769 - Remove crypto package log level handling by juliancarrivick-ibm \u00b7 Pull Request #2175 \u00b7 hyperledger\/fabric \u00b7 GitHub",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/pull\/2175\/files",
                "text": "Description Remove log level retreval from crypto_settings.go and the configuration value from core.yaml Add tests to prevent regressions Motivation and Context Fixes #769. Prevents confus...",
                "fallback": "GitHub: Fix #769 - Remove crypto package log level handling by juliancarrivick-ibm \u00b7 Pull Request #2175 \u00b7 hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/20233917?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/pull\/2175\/files",
                "thumb_width": 420,
                "thumb_height": 420,
                "service_icon": "https:\/\/a.slack-edge.com\/e8ef6\/img\/unfurl_icons\/github.png",
                "id": 1
            }
        ],
        "ts": "1468502070.001198"
    },
    {
        "type": "message",
        "user": "U12452RAP",
        "text": "this PR should fix crypto log issue",
        "ts": "1468502157.001200"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "<@U12452RAP>:  this is not yet in the v0.5 dev preview I think",
        "ts": "1468502240.001201"
    },
    {
        "type": "message",
        "user": "U12452RAP",
        "text": ":ok_hand::skin-tone-2:",
        "ts": "1468502264.001202"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "and thanks for the link :slightly_smiling_face:",
        "ts": "1468502287.001203"
    },
    {
        "type": "message",
        "user": "U12452RAP",
        "text": "yr:grinning:",
        "ts": "1468502312.001204"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "but now I feel bad because i was told i should use that",
        "ts": "1468502494.001205"
    },
    {
        "user": "U1RMXJ5TN",
        "text": "<@U1RMXJ5TN|dthom> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468504512.001206"
    },
    {
        "user": "U1RM3H4KG",
        "text": "<@U1RM3H4KG|johanherman> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468505426.001207"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "anyone using these? <https:\/\/hub.docker.com\/r\/yeasy\/hyperledger\/>",
        "ts": "1468508236.001208"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "i am having constant errors and issues",
        "ts": "1468508254.001209"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "<@U0KM61BCP>:  I know you opened a git issue about fabric components and naming.  Given the consensus V2 concept as well as modularizing membership services \/ PKI \/ CA (whatever we decide to call it) is now the right time to create top level projects under hyperledger org for both of these?",
        "ts": "1468508945.001210"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "<@U0PB67X4K>: yes, but before we do, i think we need to sort out maintainers question\u2026 eg do we want to have\/keep same maintainers for the new repos? I ask because the new work is actually new work and we need to maintain the old code for a while as deprecated but maintained.",
        "ts": "1468512715.001211"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "As such, I think that we should make formal proposal as we have been discussing (e.g. via a PR that the current maintainers agree to)",
        "ts": "1468512793.001212"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": " Agreed.  I would propose that we have a more focused set on maintainers added to the new projects ( of course we can kept the current maintainers on those lists as well if they want to be on)",
        "ts": "1468512815.001213"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "Sure",
        "ts": "1468512827.001214"
    },
    {
        "user": "U1RQE1T36",
        "text": "<@U1RQE1T36|rgidron> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468514667.001215"
    },
    {
        "user": "U0YK3KKCY",
        "text": "<@U0YK3KKCY|harrijk> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468518287.001216"
    },
    {
        "type": "message",
        "user": "U0Y55KNG2",
        "text": "<@U1CK6522F>: Regarding timestamps, you can get the transaction timestamp from the stub and store it as the time against which the lease can be compared. But you raise a good point in that a query may not have access to the equivalent of a transaction timestamp. So I wrote a snippet of code:\n\n    \/\/ just testing this trick\n    txnunixtime, err := stub.GetTxTimestamp()\n\tif err != nil {\n\t\terr = fmt.Errorf(\"Error getting transaction timestamp: %s\", err)\n        log.Error(err)\n        return nil, err\n\t}\n    txntimestamp := time.Unix(txnunixtime.Seconds, int64(txnunixtime.Nanos))\n    fmt.Println(\"***** QUERY reads txntimestamp: \", txntimestamp.Format(time.RFC3339Nano))\n\n\treturn assetBytes, nil\n\n\nAnd got a result that shows that the chaincode always has access to the time of invocation of the function. \n\n***** QUERY reads txntimestamp:  2016-07-14T18:05:43.248880214Z\n18:05:43.257 [shim] DEBU : [ff94348e]Query completed. Sending QUERY_COMPLETED\n\nSo all you need to do is use that snippet of code to capture the transaction time in your invoke and store it into world state. Then perhaps set a timer in your app and start polling perhaps 5 seconds before the expiry and act on it when the time difference in the query exceeds the lease time.",
        "edited": {
            "user": "U0Y55KNG2",
            "ts": "1468519815.000000"
        },
        "ts": "1468519703.001217"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "<!here|@here> <@U11HH3P7Y> just called my attention to the fact that the dockerhub images are named hyperledger\/fabric-arch-peer eg hyperledger\/fabric-x86_64-peer or hyperledger\/fabric-s390x-membersrvc",
        "ts": "1468536234.001219"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "blech",
        "ts": "1468536238.001220"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "why is the arch embedded in the name?",
        "ts": "1468536250.001221"
    },
    {
        "type": "message",
        "user": "U0UHG4VP1",
        "text": "cbf: this is what <@U11HH3P7Y> requested",
        "ts": "1468536264.001222"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "I had suggested in an issue that we needed consistent names",
        "ts": "1468536270.001223"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "well, this seems weird to me to have the arch embedded in what I thought we were converging on as the name for the various components.",
        "ts": "1468536307.001224"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "I could see hyperledger\/fabric-peer-arch",
        "ts": "1468536322.001225"
    },
    {
        "type": "message",
        "user": "U0UHG4VP1",
        "text": "I will set this up however you would like it.",
        "ts": "1468536338.001226"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "because then you can easily script",
        "ts": "1468536339.001227"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "<https:\/\/github.com\/hyperledger\/fabric\/issues\/2154>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "shouldn&#39;t we be consistent in naming components? \u00b7 Issue #2154 \u00b7 hyperledger\/fabric \u00b7 GitHub",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/issues\/2154",
                "text": "Description Our component naming is all over the map. peer, membersrvc, whoknowswhatconsensuswillbecalled, etc. I would propose that we adopt a consistent naming scheme for all components of the ...",
                "fallback": "GitHub: shouldn't we be consistent in naming components? \u00b7 Issue #2154 \u00b7 hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars1.githubusercontent.com\/u\/3630697?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/issues\/2154",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/a.slack-edge.com\/e8ef6\/img\/unfurl_icons\/github.png",
                "id": 1
            }
        ],
        "ts": "1468536448.001228"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "so, talked with a friend in Docker land\u2026 IBM is actually putting the finishing touches on multi-architecture support for Docker registry",
        "ts": "1468537943.001230"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "should land in the next month or so and manifest itself in a release in the fall I would expect",
        "ts": "1468537969.001231"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "I will propose a naming scheme in ci-pipeline",
        "ts": "1468537996.001232"
    },
    {
        "user": "U1PT9H68Z",
        "text": "<@U1PT9H68Z|lin> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1468559810.001233"
    },
    {
        "type": "message",
        "user": "U1CK6522F",
        "text": "<@U0Y55KNG2>: Thank you so much! That's exactly what I want. I might not need the timer and polling work since users are forced to extend when his lease is expired.:smiley:",
        "ts": "1468565737.001234"
    }
]
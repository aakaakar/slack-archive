[
    {
        "user": "U3SB11YDD",
        "text": "<@U3SB11YDD|ingcr3at1on> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1484503903.001698"
    },
    {
        "type": "message",
        "user": "U3DKG7M54",
        "text": "<@U0ULK2JPP>  <@U0PB67X4K> as <https:\/\/jira.hyperledger.org\/secure\/attachment\/10378\/peerchaincodedev_in_1.0.txt> for chaincode running DEV mode,  do we have steps to try to launch chaincode in non-dev or production mode? If I see the orderer logs of connect-a-thon setup done on our intranet (chaincode running in non-dev mode), for  &gt;20 blocks it hasn't thrown gRPC error.",
        "ts": "1484523040.001701"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U3DKG7M54> I\u2019m not near laptop but these attachments are in you look in JIRA item 37 (fab-37)",
        "ts": "1484523219.001702"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "there should be one for non-dev mode too\u2026 something like \u201cskeleton end to end flow\u201d",
        "ts": "1484523268.001703"
    },
    {
        "type": "message",
        "user": "U3DKG7M54",
        "text": "Let me check",
        "ts": "1484523517.001704"
    },
    {
        "type": "message",
        "user": "U3DKG7M54",
        "text": "Q: Peer CLI use of -p and installing using 'go get' isn't deprecated for v1.0?\nQ: if -p option is supported - can I pass a local path to the chaincode source code?",
        "edited": {
            "user": "U3DKG7M54",
            "ts": "1484523805.000000"
        },
        "ts": "1484523692.001705"
    },
    {
        "type": "message",
        "user": "U3DKG7M54",
        "text": "I tried the non-dev mode with connect-a-thon image of PEER and it dies down during ` go get `\n\n```\n23:52:19.396 [golang\/hash] getCodeFromHTTP -&gt; DEBU 010 getCodeFromHTTP <http:\/\/github.com\/rahulhegde\/learn-chaincode\/start|github.com\/rahulhegde\/learn-chaincode\/start>\n23:52:19.396 [golang\/hash] getCodeFromHTTP -&gt; DEBU 011 go get <http:\/\/github.com\/rahulhegde\/learn-chaincode\/start|github.com\/rahulhegde\/learn-chaincode\/start>\n23:52:28.835 [golang\/hash] hashFilesInDir -&gt; DEBU 012 hashFiles \/opt\/gopath\/_usercode_\/848482885\/src\/github.com\/rahulhegde\/learn-chaincode\/start\n23:52:30.629 [container] WriteGopathSrc -&gt; INFO 013 rootDirectory = \/opt\/gopath\/src\n23:52:30.629 [container] WriteFolderToTarPackage -&gt; INFO 014 rootDirectory = \/opt\/gopath\/src\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x30 pc=0x89f694]\n\ngoroutine 1 [running]:\npanic(0xa83500, 0xc420016070)\n        \/opt\/go\/src\/runtime\/panic.go:500 +0x1a1\n<http:\/\/github.com\/hyperledger\/fabric\/core\/container\/util.WriteFolderToTarPackage.func1|github.com\/hyperledger\/fabric\/core\/container\/util.WriteFolderToTarPackage.func1>(0xc4201a23b0, 0xf, 0x0, 0x0, 0x109ec20, 0xc420149320, 0xc420149201, 0xc4201492f0)\n        \/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/core\/container\/util\/writer.go:65 +0xa4\npath\/filepath.Walk(0xc4201a23b0, 0xf, 0xc4201492f0, 0xb41d07, 0x1)\n        \/opt\/go\/src\/path\/filepath\/path.go:396 +0x8b\n<http:\/\/github.com\/hyperledger\/fabric\/core\/container\/util.WriteFolderToTarPackage(0xc4201d7200|github.com\/hyperledger\/fabric\/core\/container\/util.WriteFolderToTarPackage(0xc4201d7200>, 0xc4201a23b0, 0xf, 0xc4201492c0, 0x2c, 0xc42014fbf0, 0x0, 0x0)\n        \/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/core\/container\/util\/writer.go:96 +0x1b2\n<http:\/\/github.com\/hyperledger\/fabric\/core\/container\/util.WriteGopathSrc(0xc4201d7200|github.com\/hyperledger\/fabric\/core\/container\/util.WriteGopathSrc(0xc4201d7200>, 0x7ffce0903cdb, 0x2b, 0x120, 0x108)\n        \/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/core\/container\/util\/writer.go:112 +0x1de\n<http:\/\/github.com\/hyperledger\/fabric\/core\/chaincode\/platforms\/golang.writeChaincodePackage(0xc4201dbce0|github.com\/hyperledger\/fabric\/core\/chaincode\/platforms\/golang.writeChaincodePackage(0xc4201dbce0>, 0xc4201d7200, 0xc420096300, 0x80)\n        \/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/core\/chaincode\/platforms\/golang\/package.go:79 +0x7ab\n<http:\/\/github.com\/hyperledger\/fabric\/core\/chaincode\/platforms\/golang.(*Platform).WritePackage(0x10df9d8|github.com\/hyperledger\/fabric\/core\/chaincode\/platforms\/golang.(*Platform).WritePackage(0x10df9d8>, 0xc4201dbce0, 0xc4201d7200, 0x0, 0x0)\n        \/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/core\/chaincode\/platforms\/golang\/platform.go:84 +0x60\n<http:\/\/github.com\/hyperledger\/fabric\/core\/container.GetChaincodePackageBytes(0xc4201dbce0|github.com\/hyperledger\/fabric\/core\/container.GetChaincodePackageBytes(0xc4201dbce0>, 0x0, 0x0, 0xc420286830, 0x1, 0x1)\n        \/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/core\/container\/vm.go:97 +0x1be\n<http:\/\/github.com\/hyperledger\/fabric\/core.GetChaincodeBytes(0x7f12ced2e800|github.com\/hyperledger\/fabric\/core.GetChaincodeBytes(0x7f12ced2e800>, 0xc420016228, 0xc4201dbce0, 0x7f12ced2e800, 0xc420016228, 0x539d9a)\n        \/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/core\/devops.go:132 +0x10b\n<http:\/\/github.com\/hyperledger\/fabric\/peer\/chaincode.deploy(0x1094400|github.com\/hyperledger\/fabric\/peer\/chaincode.deploy(0x1094400>, 0xb47300, 0xc420157b20, 0x4b1616)\n        \/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/peer\/chaincode\/deploy.go:55 +0xba\n<http:\/\/github.com\/hyperledger\/fabric\/peer\/chaincode.chaincodeDeploy(0x1094400|github.com\/hyperledger\/fabric\/peer\/chaincode.chaincodeDeploy(0x1094400>, 0xc4201d8ae0, 0x0, 0x6, 0x0, 0x9)\n        \/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/peer\/chaincode\/deploy.go:105 +0x2b\n<http:\/\/github.com\/hyperledger\/fabric\/peer\/chaincode.glob..func1(0x1094400|github.com\/hyperledger\/fabric\/peer\/chaincode.glob..func1(0x1094400>, 0xc4201d8ae0, 0x0, 0x6, 0x0, 0x0)\n        \/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/peer\/chaincode\/deploy.go:42 +0x49\n<http:\/\/github.com\/hyperledger\/fabric\/vendor\/github.com\/spf13\/cobra.(*Command).execute(0x1094400|github.com\/hyperledger\/fabric\/vendor\/github.com\/spf13\/cobra.(*Command).execute(0x1094400>, 0xc4201d8a20, 0x6, 0x6, 0x1094400, 0xc4201d8a20)\n        \/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/vendor\/github.com\/spf13\/cobra\/command.go:599 +0x234\n<http:\/\/github.com\/hyperledger\/fabric\/vendor\/github.com\/spf13\/cobra.(*Command).ExecuteC(0x10961c0|github.com\/hyperledger\/fabric\/vendor\/github.com\/spf13\/cobra.(*Command).ExecuteC(0x10961c0>, 0x7, 0xc4201d3470, 0x2c)\n        \/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/vendor\/github.com\/spf13\/cobra\/command.go:689 +0x367\n<http:\/\/github.com\/hyperledger\/fabric\/vendor\/github.com\/spf13\/cobra.(*Command).Execute(0x10961c0|github.com\/hyperledger\/fabric\/vendor\/github.com\/spf13\/cobra.(*Command).Execute(0x10961c0>, 0xc4201d3470, 0x2c)\n        \/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/vendor\/github.com\/spf13\/cobra\/command.go:648 +0x2b\nmain.main()\n        \/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/peer\/main.go:139 +0x692\n\n```",
        "ts": "1484524434.001708"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U3DKG7M54> I guess you were trying remote ?",
        "ts": "1484528914.001710"
    },
    {
        "type": "message",
        "user": "U3DKG7M54",
        "text": "<@U0ULK2JPP> didn't get the remote note. I am trying to exec to the peer docker container and then executing the deploy using -path to github.",
        "ts": "1484529919.001711"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U3DKG7M54> I\u2019m trying to get hold of the connectathon source",
        "ts": "1484529990.001712"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "did you get a chance to try with master ?",
        "ts": "1484530073.001713"
    },
    {
        "type": "message",
        "user": "U3DKG7M54",
        "text": "not yet from master.",
        "ts": "1484530132.001714"
    },
    {
        "type": "message",
        "user": "U3DKG7M54",
        "text": "my recent run on marble application shows that peer running chaincode in non-dev mode; the orderer of the connect-a-thon never threw a gRPC error",
        "ts": "1484530173.001715"
    },
    {
        "type": "message",
        "user": "U3DKG7M54",
        "text": "if I can complete the launching of my 'custom' chaincode via non-dev mode, I think at least I should proceed with chaincode development.",
        "ts": "1484530237.001716"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "for non-dev mode just have to remove the \u2014peer-chaincodedev flag in the peer",
        "ts": "1484530279.001717"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "and not use the CORE_CHAINCODE_MODE=dev flag in the deploy \/ invoke commands",
        "ts": "1484530322.001718"
    },
    {
        "type": "message",
        "user": "U3DKG7M54",
        "text": "how will the peer get the path of the chaincode when run via Peer CLI?",
        "ts": "1484530348.001719"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "it should be in the gopath in the CLI",
        "ts": "1484530377.001720"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "however I have not run in docker env recently",
        "ts": "1484530421.001721"
    },
    {
        "type": "message",
        "user": "U3DKG7M54",
        "text": "-p $GOPATH\/src\/custom-chaincode ?",
        "ts": "1484530429.001722"
    },
    {
        "type": "message",
        "user": "U3DKG7M54",
        "text": "this path will hold the actual chaincode source file",
        "ts": "1484530449.001723"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "-p <http:\/\/github.com\/hyperledger\/fabric\/mychaincode|github.com\/hyperledger\/fabric\/mychaincode> for example",
        "ts": "1484530455.001724"
    },
    {
        "type": "message",
        "user": "U3DKG7M54",
        "text": "But I am stuck with the segmentation fault as put above.",
        "ts": "1484530479.001725"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "what is your CLI command ?",
        "ts": "1484530489.001726"
    },
    {
        "type": "message",
        "user": "U3DKG7M54",
        "text": "peer chaincode deploy -n mycc -p <https:\/\/github.com\/rahulhegde\/learn-chaincode\/start> -c '{\"Args\":[\"init\",\"100\"]}'",
        "ts": "1484530525.001727"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "do you have the source locally ?",
        "ts": "1484530542.001728"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "in your gopath",
        "ts": "1484530549.001729"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "ie under $GOPATH\/rahulhegde\/learn-chaincode\/start ?",
        "ts": "1484530575.001730"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "if you do",
        "ts": "1484530578.001731"
    },
    {
        "type": "message",
        "user": "U3DKG7M54",
        "text": "Let me check now - I think I didn't expose from the container.",
        "ts": "1484530591.001732"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "try `peer chaincode deploy -n mycc -p <http:\/\/github.com\/rahulhegde\/learn-chaincode\/start|github.com\/rahulhegde\/learn-chaincode\/start> -c '{\"Args\":[\"init\",\"100\"]}\u2019`",
        "ts": "1484530593.001733"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "yes",
        "ts": "1484530600.001734"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "export the volume and try it",
        "ts": "1484530616.001735"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "again, I have not tried in peer running in docker",
        "ts": "1484530632.001736"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "if you can try in master it\u2019ll be be easier to debug these issues",
        "ts": "1484530676.001737"
    },
    {
        "type": "message",
        "user": "U3DKG7M54",
        "text": "yes - I will try now exposing the volume. \nAlso, I have compiled Peer and Orderer from master branch - I can give try on this too as per u r steps but not using Vagrant due to VM issue.",
        "ts": "1484530836.001738"
    },
    {
        "type": "message",
        "user": "U3DKG7M54",
        "text": "BTW - why do u need to expose chaincode source if Peer CLI is trying to do ` go get ` from network?",
        "edited": {
            "user": "U3DKG7M54",
            "ts": "1484530924.000000"
        },
        "ts": "1484530893.001739"
    },
    {
        "type": "message",
        "user": "U3DKG7M54",
        "text": "<@U0ULK2JPP>  - good part i didn't get segmentation fault after volume mapping however the below error\n``` \n01:50:07.421 [golang\/hash] getCodeFromFS -&gt; DEBU 010 getCodeFromFS <http:\/\/github.com\/rahulhegde\/learn-chaincode\/start|github.com\/rahulhegde\/learn-chaincode\/start>\n01:50:07.421 [golang\/hash] hashFilesInDir -&gt; DEBU 011 hashFiles \/opt\/gopath\/src\/github.com\/rahulhegde\/learn-chaincode\/start\n01:50:09.106 [container] WriteGopathSrc -&gt; INFO 012 rootDirectory = \/opt\/gopath\/src\n01:50:09.106 [container] WriteFolderToTarPackage -&gt; INFO 013 rootDirectory = \/opt\/gopath\/src\n01:50:14.680 [msp] GetManager -&gt; INFO 014 Returning MSP manager %!p(msp.peerMspManagerImpl={map[DEFAULT:0xc4201dfa70] PeerMSPManager true})\n01:50:14.680 [msp] GetSigningIdentity -&gt; INFO 015 Looking up MSP with ID {DEFAULT}\n01:50:14.680 [msp] GetSigningIdentity -&gt; INFO 016 Obtaining signing identity for &amp;{{DEFAULT} PEER}\n01:50:14.766 [msp] Sign -&gt; INFO 017 Signing message\nError: Error endorsing chaincode: rpc error: code = 2 desc = Failed to init chaincode(handler not found for chaincode mycc)\n\n```",
        "ts": "1484531711.001741"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U3DKG7M54> .. what do you see in peer.log (I assume you are running in docker )",
        "ts": "1484531805.001742"
    },
    {
        "type": "message",
        "user": "U3DKG7M54",
        "text": "Just pasting the last logs where it shows error. Yes Murali inside the docker.\n\n```\n01:58:59.269 [chaincode] beforeCompletedEvent -&gt; DEBU 156 [1f122cf2]beforeCompleted - not in ready state will notify when in readystate\n01:58:59.269 [chaincode] enterReadyState -&gt; DEBU 157 [1f122cf2]Entered state ready\n01:58:59.269 [chaincode] notify -&gt; DEBU 158 notifying Txid:1f122cf2-1f16-4546-9a49-e8c1961c3c54\n01:58:59.295 [chaincode] Deploy -&gt; DEBU 159 user runs chaincode, not deploying chaincode\n01:58:59.311 [chaincode] sendInitOrReady -&gt; DEBU 15a handler not found for chaincode mycc\n01:58:59.311 [chaincode] Launch -&gt; ERRO 15b sending init failed(handler not found for chaincode mycc)\n01:58:59.311 [container] lockContainer -&gt; DEBU 15c waiting for container(dev-peer-01-mycc) lock\n01:58:59.311 [container] lockContainer -&gt; DEBU 15d got container (dev-peer-01-mycc) lock\n01:58:59.312 [dockercontroller] stopInternal -&gt; DEBU 15e Stop container dev-peer-01-mycc(No such container: dev-peer-01-mycc)\n01:58:59.313 [dockercontroller] stopInternal -&gt; DEBU 15f Kill container dev-peer-01-mycc (No such container: dev-peer-01-mycc)\n01:58:59.314 [dockercontroller] stopInternal -&gt; DEBU 160 Remove container dev-peer-01-mycc (No such container: dev-peer-01-mycc)\n01:58:59.314 [container] unlockContainer -&gt; DEBU 161 container lock deleted(dev-peer-01-mycc)\n01:58:59.314 [chaincode] Launch -&gt; DEBU 162 sending init completed\n01:58:59.314 [chaincode] Launch -&gt; DEBU 163 LaunchChaincode complete\n```",
        "ts": "1484532086.001743"
    },
    {
        "type": "message",
        "user": "U3DKG7M54",
        "text": "My understanding - successful deployment will spin a new docker container running the chaincode.",
        "ts": "1484532182.001744"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "`user runs chaincode, not deploying chaincode`",
        "ts": "1484532211.001745"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "sounds like `\u2014peer-chaincodedev` is still there ?",
        "ts": "1484532225.001746"
    },
    {
        "type": "message",
        "user": "U3DKG7M54",
        "text": "yes - :disappointed: let me fix that.",
        "ts": "1484532287.001747"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "ok",
        "ts": "1484532291.001748"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "also make sure not to use CORE_CHAINCODE_MODE in the CLI commands",
        "ts": "1484532305.001749"
    },
    {
        "type": "message",
        "user": "U3DKG7M54",
        "text": "yes - none of the 3 ENV will be used.",
        "ts": "1484532387.001750"
    },
    {
        "type": "message",
        "user": "U3DKG7M54",
        "text": "From Peer Logs \n\n```\n02:08:08.244 [container] lockContainer -&gt; DEBU 16b got container (dev-peer-01-mycc) lock\n02:08:10.884 [dockercontroller] deployImage -&gt; ERRO 16c Error building images: Tag x86_64-0.7.0-snapshot-b0e902e not found in repository <http:\/\/docker.io\/hyperledger\/fabric-ccenv|docker.io\/hyperledger\/fabric-ccenv>\n02:08:10.884 [dockercontroller] deployImage -&gt; ERRO 16d Image Output:\n********************\nStep 1 : FROM hyperledger\/fabric-ccenv:x86_64-0.7.0-snapshot-b0e902e\nPulling repository <http:\/\/docker.io\/hyperledger\/fabric-ccenv|docker.io\/hyperledger\/fabric-ccenv>\n\n********************\n\n```\n\nI received ccenv as part of connect-a-thon image set, should I tag that image with the above required tag OR is the way I can say use ` hyperledger\/fabric-ccenv:latest `?\n\nDoes the above behavior get influenced by core.yml configuration \n\n```    \ngolang:\n\n        # This is the basis for the Golang Dockerfile.  Additional commands will\n        # be appended depedendent upon the chaincode specification.\n        Dockerfile:  |\n          FROM hyperledger\/fabric-ccenv:$(ARCH)-$(PROJECT_VERSION)\n          COPY src $GOPATH\/src\n          WORKDIR $GOPATH\n```",
        "edited": {
            "user": "U3DKG7M54",
            "ts": "1484533158.000000"
        },
        "ts": "1484532714.001751"
    },
    {
        "type": "message",
        "user": "U3DKG7M54",
        "text": "My master compiled branch also contains ccenv but I don't think I should use it (by retagging the below)\n\n```\nhyperledger\/fabric-ccenv                   latest                          96b2854a1654        2 weeks ago         1.264 GB\nhyperledger\/fabric-ccenv                   x86_64-0.7.0-snapshot-defb65b   96b2854a1654        2 weeks ago         1.264 GB\n\n```",
        "edited": {
            "user": "U3DKG7M54",
            "ts": "1484532891.000000"
        },
        "ts": "1484532870.001752"
    },
    {
        "type": "message",
        "user": "U3DKG7M54",
        "text": "<@U0ULK2JPP> I see below - close to what is mentioned in the ` test with skeletal ` document\n\n```\n 02:29:51.479 [container] lockContainer -&gt; DEBU 30a got container (dev-peer-01-mycc) lock\n02:29:51.481 [chaincode] processStream -&gt; ERRO 30b Error handling chaincode support stream: stream error: code = 1 desc = \"context canceled\"\n02:29:51.481 [chaincode] deregisterHandler -&gt; DEBU 30c Deregister handler: mycc\n02:29:51.481 [chaincode] deregisterHandler -&gt; DEBU 30d Deregistered handler with key: mycc\n02:29:51.604 [dockercontroller] stopInternal -&gt; DEBU 30e Stopped container dev-peer-01-mycc\n02:29:51.605 [dockercontroller] stopInternal -&gt; DEBU 30f Kill container dev-peer-01-mycc (API error (500): {\"message\":\"Cannot kill container dev-peer-01-mycc: Container 7141538196d22443d7611daeab0fa17b4ced5c06b25937729845c1124fb19201 is not running\"}\n)\n```\n\nMy cc-env ~ 1.4G and the peer log scroll has stopped with above message but my Peer CLI logs are scrolling - not sure what is happening",
        "ts": "1484534187.001756"
    },
    {
        "type": "message",
        "user": "U3DKG7M54",
        "text": "Thanks <@U0ULK2JPP>.  I am able to see the chaincode spin in a different docker container now and have run almost 20 invoke w\/o any gRPC error. From this activity, it looks there is some defect on PEER when run in peerchaincode dev mode  for connect-a-thon image.\n\nI need to try the same on my intranet and have few questions on this, which I will ask you!!! Thank You.",
        "edited": {
            "user": "U3DKG7M54",
            "ts": "1484539557.000000"
        },
        "ts": "1484536785.001757"
    }
]
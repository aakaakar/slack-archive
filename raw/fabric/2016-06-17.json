[
    {
        "type": "message",
        "user": "U0MM86C84",
        "text": "<@U0PB67X4K>: is there an issue open for that?",
        "ts": "1466149749.000208"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "<@U0MM86C84>:   issue for the oracle stuff?  (forgot what I commented on : ) )",
        "ts": "1466151199.000209"
    },
    {
        "user": "U1HR7GUBB",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1HR7GUBB|ylh> has joined the channel",
        "ts": "1466152423.000210"
    },
    {
        "type": "message",
        "user": "U0MM86C84",
        "text": "<@U0PB67X4K>: sorry, i mean -&gt;  chaincode to chaincode interaction is not possible when privacy is enabled?",
        "ts": "1466154232.000211"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "ah - that one - sorry - was digging thru issues  -  <https:\/\/github.com\/hyperledger\/fabric\/issues\/1530>  - mentions this but was closed because part of it was fixed (cc -&gt; cc with security enabled but privacy false now works)",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "shim.GetRow() fails in chaincode query chaincode context, but succeeds in normal query context \u00b7 Issue #1530 \u00b7 hyperledger\/fabric \u00b7 GitHub",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/issues\/1530",
                "text": "Description shim.GetRow() returns the row successfully when querying a chaincode directly. But, when the same chaincode is queried from another chaincode, shim throws an error. Describe How to Re...",
                "fallback": "GitHub: shim.GetRow() fails in chaincode query chaincode context, but succeeds in normal query context \u00b7 Issue #1530 \u00b7 hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars0.githubusercontent.com\/u\/14806740?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/issues\/1530",
                "thumb_width": 420,
                "thumb_height": 420,
                "service_icon": "https:\/\/a.slack-edge.com\/e8ef6\/img\/unfurl_icons\/github.png",
                "id": 1
            }
        ],
        "ts": "1466155764.000212"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "someone should open another issue  on cc to cc with privacy on",
        "ts": "1466155793.000214"
    },
    {
        "user": "U0KRCUVNZ",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0KRCUVNZ|daichiiwata> has joined the channel",
        "ts": "1466162217.000216"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U0PB67X4K>: I\u2019ll open an issue for that\u2026 <@U0MM86C84> the Description in PR for #1530 mentions the limitation that  cc-cc privacy on is not enabled",
        "ts": "1466164581.000217"
    },
    {
        "user": "U1HSEPL9M",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1HSEPL9M|santhoshr> has joined the channel",
        "ts": "1466164816.000218"
    },
    {
        "type": "message",
        "user": "U0MM86C84",
        "text": "<@U0ULK2JPP>: thanks!",
        "ts": "1466165060.000219"
    },
    {
        "type": "message",
        "user": "U0MM86C84",
        "text": "<@U0ULK2JPP>: but cc -cc with security enabled &amp;&amp; privacy disabled works?",
        "ts": "1466165101.000220"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U0MM86C84>: yes, that should work",
        "ts": "1466165227.000221"
    },
    {
        "type": "message",
        "user": "U0MM86C84",
        "text": "<@U0ULK2JPP>: thanks!",
        "ts": "1466165501.000222"
    },
    {
        "type": "message",
        "user": "U196R0LA2",
        "text": "hi all, i\u2019ve expanded my deployment work to create clusters of VPs on different, geographically separated data centers, all of which report to one root node VP. i\u2019ve found that the asset management example consistently fails on these distributed setups. containers for the chaincode are NOT deployed on the VP hosts. here\u2019s a log of the app failing: <https:\/\/gist.github.com\/mikezaccardo\/cb7112315dcedb0d242a37ea853f3ce6>",
        "edited": {
            "user": "U196R0LA2",
            "ts": "1466176452.000000"
        },
        "ts": "1466176282.000223"
    },
    {
        "type": "message",
        "user": "U196R0LA2",
        "text": "since these setups work when the VPs are all co-located, i\u2019m thinking it may be some kind of timeout issue \u2014 is there a low timeout for chaincode deployment that may be failing here? i don\u2019t see logs that confirm this, though.",
        "ts": "1466176359.000224"
    },
    {
        "type": "message",
        "user": "U196R0LA2",
        "text": "any help on this would be greatly appreciated. it\u2019s fairly time sensitive since i have a talk at DockerCon on tuesday during which i\u2019d like to demo this. thanks a lot.",
        "ts": "1466176412.000225"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "I\u2019ve been working on two enhancements on the side that I think will be useful at some point down the road beyond a basic robust fabric: 1) persistent events support by utilizing an external message queue, 2) asynchronous transaction API parallel to the \/chaincode REST API. details are here including instructions to try out the prototype in the fork: <https:\/\/github.com\/jimthematrix\/blockchain-features>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "jimthematrix\/blockchain-features",
                "title_link": "https:\/\/github.com\/jimthematrix\/blockchain-features",
                "text": "blockchain-features - Sandbox for developing features contributed to Hyperledger",
                "fallback": "GitHub: jimthematrix\/blockchain-features",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/5289853?v=3&s=400",
                "from_url": "https:\/\/github.com\/jimthematrix\/blockchain-features",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1466178660.000227"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "would love to get feedback on 1) whether these features should continue to be worked on, so that they may one day be merged into the fabric, 2) volunteers to help making them more robust",
        "ts": "1466178782.000229"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "<@U13TWBRBL>: #2 in particular looks :ok_hand:",
        "ts": "1466180284.000230"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "you may also want to post on the fabric mailing list about this",
        "ts": "1466180295.000231"
    },
    {
        "type": "message",
        "user": "U1HG09QB1",
        "text": "Hi there, I have a maybe naive question, I am just trying to understand the fabric spec right :\nDo non-validating peers need to be certified by the CA to handle the API requests and event stream ?\nThe CA is used to allow the peers into the network, then who decides wether it's a peer (nvp) or a validator (vp) ?\nthanks!",
        "ts": "1466181153.000232"
    },
    {
        "type": "message",
        "user": "U13TWBRBL",
        "text": "<@U0XQ35CDD>: thanks for the comment. I posted to the fabric mailing list",
        "ts": "1466183657.000233"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U13TWBRBL>: resounding yes to both !",
        "ts": "1466185849.000234",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U13TWBRBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U0MS3TK2A",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0MS3TK2A|nao> has joined the channel",
        "ts": "1466186463.000235"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "<@U1HG09QB1> - good question - 2 part answer for now.  First, we currently have a static whitelist for validating peers which you need to be added to (that list is in core.yaml and needs to be the same across all VPs) (I forget if we also set the total number somewhere as well).   Second, in order to connect to the network as a validating peer, you need to have a role of validator which is assigned to you when you are registered with membership services (the ECA to be exact).  If you have the role of validator, when you enroll (which happens under the covers when starting a peer), the certificate you are issued with have the role embedded in it as an attribute",
        "ts": "1466191882.000236"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "Short answer:  you need to be added to membership services with the role of validator and need to be added to the whitelist of validating peers in the config today",
        "ts": "1466191924.000237",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U1HG09QB1"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "we'll be adding dynamic whitelist in the future as well",
        "ts": "1466191946.000238"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "<@U0XQ35CDD> <@U0XR6J961> <@U0XV1HDL3> correct me if I said anything wrong ^^^^^",
        "ts": "1466191996.000239"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "right on the \"you need to be added to memserv as a validator\", right on the \"we'll be adding dynamic whitelisting\", wrong on the \"static whitelisting\". (we were about to add it, but we rightly ditched it in favor of a better, less hacky implementation that will make use of the event mechanism that was just added). as things stand right now, `vp2` can be taken offline, replaced with a different `vp2` and the system will admit them just fine. this is obviously not acceptable. (by the way, you set the number of expected VP nodes in `consenus\/obcpbft\/config.yaml`)",
        "ts": "1466194670.000240"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U0XQ35CDD>: can you expand on the _ less hacky implementation that will make use of the event mechanism that was just added_ please ?",
        "ts": "1466194910.000241"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "<@U0ULK2JPP>: modify the stack so as to give us `PeerConnected\/PeerDisconnected` events and we can process these via the events goroutine in `obcpbft`",
        "edited": {
            "user": "U0XQ35CDD",
            "ts": "1466196075.000000"
        },
        "ts": "1466196061.000242"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U0XQ35CDD>: thanks",
        "ts": "1466196315.000245"
    },
    {
        "type": "message",
        "user": "U113EGLBE",
        "text": "Hi, for the fabric chaincode examples, most of the init\/invoke functions seem to have the arguments as an array of strings. Is this a requirement? Or can I change it to an array of bytes instead? I'm trying to pass JSON.",
        "ts": "1466205334.000246"
    },
    {
        "type": "message",
        "user": "U113EGLBE",
        "text": "Or keep it as an array of strings, but then I'm confused on how to have a JSON string inside a JSON string literal",
        "ts": "1466208034.000247"
    },
    {
        "type": "message",
        "user": "U113EGLBE",
        "text": "never mind, got it",
        "ts": "1466209067.000248"
    }
]
[
    {
        "type": "message",
        "user": "U0MM86C84",
        "text": "<@U11G06X52>: Thank u",
        "ts": "1461052481.000057"
    },
    {
        "type": "message",
        "user": "U0MM86C84",
        "text": "I have a question regarding the membership service, is this the right channel or shall i create a new channel for that?",
        "ts": "1461074864.000058"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "this channel is probably good place to start \u2026.",
        "ts": "1461075078.000059"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I don\u2019t know what level the channels shoukd be at\u2026 hence my suggestion to get started here",
        "ts": "1461075513.000060"
    },
    {
        "type": "message",
        "user": "U0MM86C84",
        "text": "In the protocol specification you are saying (chapter <https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/docs\/protocol-spec.md#4321-confidentiality-against-users>) \"Finally users are given the contract's public key PKc, for them to be able to encrypt information related to that contract for the validators (or any in possession of SKc) to be able to read it. Transaction certificate of each contract user is appended to the transaction and follows that user's message.....\"",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/docs\/protocol-spec.md#4321-confidentiality-against-users",
                "text": "fabric - Fabric is a blockchain project in Incubation proposed to the community and documented at <https:\/\/goo.gl\/RYQZ5N>. Information on what Incubation entails can be found in the Hyperledger Proj...",
                "fallback": "GitHub: hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/docs\/protocol-spec.md#4321-confidentiality-against-users",
                "thumb_width": 142,
                "thumb_height": 142,
                "id": 1
            }
        ],
        "ts": "1461075647.000061"
    },
    {
        "type": "message",
        "user": "U0MM86C84",
        "text": "how do you distribute the public key of the contract (PKc) to the involved users?",
        "edited": {
            "user": "U0MM86C84",
            "ts": "1461075717.000000"
        },
        "ts": "1461075674.000063"
    },
    {
        "user": "U0ZR63HLK",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0ZR63HLK|adc> has joined the channel",
        "ts": "1461076397.000065"
    },
    {
        "type": "message",
        "user": "U0Z3BE0F5",
        "text": "I read about the CertificateHandler interface in the section 4.4.1 Invocation access control which supposedly allows you to sign and verify messages",
        "ts": "1461076482.000066"
    },
    {
        "type": "message",
        "user": "U0Z3BE0F5",
        "text": "but as <@U0MM86C84> I had the same question on who manages the user's certificates and how the application (for example Marbles) could access it to sign and verify signatures",
        "ts": "1461076553.000067"
    },
    {
        "type": "message",
        "user": "U0MM86C84",
        "text": "<@U0Z3BE0F5>: the section 4.4.1 explains how to implement an own access control at the application layer...",
        "ts": "1461076715.000068"
    },
    {
        "type": "message",
        "user": "U0Z3BE0F5",
        "text": "<@U0MM86C84>: but it says:",
        "ts": "1461076741.000069"
    },
    {
        "type": "message",
        "user": "U0Z3BE0F5",
        "text": "The client-application can request the fabric to sign and verify any message with specific transaction certificates or enrollment certificate the client owns; this is expressed via the Certificate Handler interface",
        "ts": "1461076742.000070"
    },
    {
        "type": "message",
        "user": "U0MM86C84",
        "text": "<@U0Z3BE0F5>: my question is after i created a chaincode and i specified an ACL, how does the fabric distribute the public key of the chaincode to the users specified in the ACL",
        "edited": {
            "user": "U0MM86C84",
            "ts": "1461076830.000000"
        },
        "ts": "1461076810.000071"
    },
    {
        "type": "message",
        "user": "U0MM86C84",
        "text": "without customizing the invocation access control",
        "ts": "1461076983.000073"
    },
    {
        "type": "message",
        "user": "U0Z3BE0F5",
        "text": "ok, didn't understand!",
        "ts": "1461077550.000074"
    },
    {
        "type": "message",
        "user": "U0MM86C84",
        "text": "<@U0Z3BE0F5>: didnt understand my question? ",
        "ts": "1461078223.000075"
    },
    {
        "type": "message",
        "user": "U0Z3BE0F5",
        "text": "you are asking about confidentiality and I was asking about invocation access control I thought you were asking about the latter that's why I metioned the CertificateHandler (a question I still need to clarify)",
        "edited": {
            "user": "U0Z3BE0F5",
            "ts": "1461078456.000000"
        },
        "ts": "1461078415.000076"
    },
    {
        "type": "message",
        "user": "U0MM86C84",
        "text": "<@U0Z3BE0F5>: i see",
        "ts": "1461078588.000080"
    },
    {
        "user": "U11TAFPUP",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U11TAFPUP|joseph> has joined the channel",
        "ts": "1461078686.000081"
    },
    {
        "user": "U11TGHRCJ",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U11TGHRCJ|wrv> has joined the channel",
        "ts": "1461079009.000082"
    },
    {
        "user": "U0TRKJYP9",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0TRKJYP9|josh> has joined the channel",
        "ts": "1461080004.000083"
    },
    {
        "user": "U11U4CPFX",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U11U4CPFX|mjsikorsky> has joined the channel",
        "ts": "1461080177.000084"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "Hi <@U0MM86C84>, sorry if the paragraph is not clear enough. Actually, the deployer can specify in the deploy transaction who is able to invoke the chaincode he is deploying. If you look at the picture in that same paragraph, there is a section called \"contract users\".",
        "ts": "1461083093.000085"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "In that section the deployer has to name of who can invoke the chaincode, the recipient, by specifying one of the TCert of the recipient. The deployer will also encrypt pkC under the public key of the recipient.",
        "ts": "1461083178.000086"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "Once the recipient gets the deploy transaction in some way, he can figure out that he has been named there and retrieve pkC that can used to encrypt the invoke\/execute transaction payload",
        "ts": "1461083244.000087"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "Access control is a different story. I can give more details on that too if needed.",
        "ts": "1461083267.000088"
    },
    {
        "type": "message",
        "user": "U0MM86C84",
        "text": "<@U0ZR63HLK>: first of all thank u for the information! You mentoined that the users can figure out that they have been named, how does the fabric handle this? ",
        "ts": "1461083876.000089"
    },
    {
        "type": "message",
        "user": "U0MM86C84",
        "text": "If you have more information then please share with us :grin: ",
        "ts": "1461083922.000090"
    },
    {
        "user": "U10NX3RQQ",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U10NX3RQQ|hyperspace> has joined the channel",
        "ts": "1461084368.000091"
    },
    {
        "user": "U0Q6BA1EU",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0Q6BA1EU|bobbiejc> has joined the channel",
        "ts": "1461084770.000092"
    },
    {
        "user": "U0N2WR3KK",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0N2WR3KK|benedikt.herudek> has joined the channel",
        "ts": "1461093328.000093"
    },
    {
        "user": "U0J3M8K96",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0J3M8K96|dan> has joined the channel",
        "ts": "1461097317.000094"
    },
    {
        "user": "U11JBBK0X",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U11JBBK0X|eskoviak> has joined the channel",
        "ts": "1461097627.000095"
    },
    {
        "type": "message",
        "user": "U11CP8FF1",
        "text": "Hi, I got the following error when I try to deploy sample chaincode.\n```10:30:14.801 [container] start -&gt; DEBU 048 Start container dev-jdoe-f94be74d5e8eaa1771642831198cf460486457ce96d765b552613040d4c095514c3dbb73c9d2c3fb743de570af8d463dcafb56683d3f32c4a49d597cea2676ad\n10:30:14.801 [container] createContainer -&gt; DEBU 049 Create container: dev-jdoe-f94be74d5e8eaa1771642831198cf460486457ce96d765b552613040d4c095514c3dbb73c9d2c3fb743de570af8d463dcafb56683d3f32c4a49d597cea2676ad\n10:30:14.821 [container] start -&gt; ERRO 04a start-could not recreate container no such image```",
        "ts": "1461116645.000096"
    },
    {
        "type": "message",
        "user": "U11CP8FF1",
        "text": "I wonder about *no such image*.",
        "edited": {
            "user": "U11CP8FF1",
            "ts": "1461116694.000000"
        },
        "ts": "1461116683.000097"
    },
    {
        "type": "message",
        "user": "U11CP8FF1",
        "text": "I noticed the image is not found (described in core.yaml).\n```$ docker pull openblockchain\/baseimage:latest\nPulling repository <http:\/\/docker.io\/openblockchain\/baseimage|docker.io\/openblockchain\/baseimage>\nTag latest not found in repository <http:\/\/docker.io\/openblockchain\/baseimage|docker.io\/openblockchain\/baseimage>```\nHow should I fix this ?",
        "ts": "1461117328.000099"
    },
    {
        "user": "U0KPTLRGU",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0KPTLRGU|tsariounov> has joined the channel",
        "ts": "1461117541.000100"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U11CP8FF1>: are you using vagrant?",
        "edited": {
            "user": "U0KPFAZNF",
            "ts": "1461118598.000000"
        },
        "ts": "1461118589.000101"
    },
    {
        "type": "message",
        "user": "U11CP8FF1",
        "text": "No, I'm building the environment from scratch. Somehow I was able to build the baseimage. I needed to pull release 0.0.9.",
        "ts": "1461118669.000103"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "if you are running your own, you should emulate the vagrant environment by running .\/scripts\/provision\/[docker|common].sh",
        "ts": "1461118710.000104"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "that image gets created locally during provisioning",
        "ts": "1461118732.000105"
    },
    {
        "type": "message",
        "user": "U11CP8FF1",
        "text": "Yes, that what I did now. :simple_smile:\n```cd \/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/scripts\/provision\ndocker.sh 0.0.9```",
        "ts": "1461118752.000106"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "this is tripping a lot of people up, we need to get better documentation",
        "ts": "1461118764.000107"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "yep, thats exactly right",
        "ts": "1461118774.000108"
    },
    {
        "type": "message",
        "user": "U11CP8FF1",
        "text": "Vagrant (actually setup.sh) hide most of important things. So I've decided to emulate vagrant setup in my local devenv.",
        "ts": "1461118859.000109"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "smart",
        "ts": "1461118866.000110"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "theres comments in that file in case you are curious why :latest isnt upstream",
        "ts": "1461118960.000111"
    },
    {
        "user": "U11A41HST",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U11A41HST|rudis> has joined the channel",
        "ts": "1461119134.000112"
    },
    {
        "type": "message",
        "user": "U11CP8FF1",
        "text": "After I got error, I read through the document. And understood fully about \":latest\" is not used in Hyperledger project.  By the way, docker image is now runnning after \/chaincode\/deploy restapi call.  I now understand chaincode.name is included in docker container image ( previously I raised a question how to find chaincodeID.name). Now, I can invoke restapis even if I forget the respose.",
        "edited": {
            "user": "U11CP8FF1",
            "ts": "1461120217.000000"
        },
        "ts": "1461119533.000113"
    },
    {
        "user": "U10PFCC4R",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U10PFCC4R|buhrmi> has joined the channel",
        "ts": "1461126389.000115"
    },
    {
        "type": "message",
        "user": "U10PFCC4R",
        "text": "Hey guys can I use javascript to write chaincode?",
        "ts": "1461126400.000116"
    },
    {
        "type": "message",
        "user": "U11CP8FF1",
        "text": "As of 2016\/April\/20th, Golang is supported by Hyperledger fabric project. According to FAQ, JavaScript and Java support is planned within 2016.\n\n<https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/docs\/FAQ\/chaincode_FAQ.md>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/docs\/FAQ\/chaincode_FAQ.md",
                "text": "fabric - Fabric is a blockchain project in Incubation proposed to the community and documented at <https:\/\/goo.gl\/RYQZ5N>. Information on what Incubation entails can be found in the Hyperledger Proj...",
                "fallback": "GitHub: hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/docs\/FAQ\/chaincode_FAQ.md",
                "thumb_width": 142,
                "thumb_height": 142,
                "id": 1
            }
        ],
        "ts": "1461128115.000117"
    },
    {
        "type": "message",
        "user": "U10PFCC4R",
        "text": "cool is there funding up for grabs to get that implemented? i already know some cases where people would love to present their smart contracts to judges and jury but can't cause they're not in javascript",
        "ts": "1461131022.000119"
    },
    {
        "type": "message",
        "user": "U10PFCC4R",
        "text": "so i wanna work on that part",
        "ts": "1461131029.000120"
    },
    {
        "user": "U11RE3ZUG",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U11RE3ZUG|shiva> has joined the channel",
        "ts": "1461131645.000121"
    },
    {
        "type": "message",
        "user": "U0ZR63HLK",
        "text": "<@U0MM86C84>, there are multiple ways to get the deploy transaction. One is through an off-band channel (i.e. on a certain web site there is the chaincode id of the deploy transaction). Another one could be through a trusted third party that monitor the blockchain on you behalf and collects the deploy transactions where you are named. We are also looking into other alternatives to make this process as simple and intuitive as possible :simple_smile:",
        "ts": "1461135437.000122"
    }
]
[
    {
        "type": "message",
        "user": "U2T7Z63NY",
        "text": "Decrypting payload - Please let us know how to decrypt payload data using certificate (Ecert\/TCert). Can anyone answer this?",
        "ts": "1484558456.001761"
    },
    {
        "user": "U3S1PENVA",
        "text": "<@U3S1PENVA|vadim> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1484562636.001762"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "<@U0PB67X4K> the good news is that I was indeed able to build cop on Windows, natively",
        "ts": "1484566501.001763"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "the bad news is that the unit-tests don't pass, is that expected? that seems true in Vagrant just the same so I don't think this is Windows specific",
        "ts": "1484566539.001764"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "it seems that the problem comes from trying to rerun the same test",
        "ts": "1484567654.001765"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "or tests",
        "ts": "1484567669.001766"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "yup",
        "ts": "1484567883.001767"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "if I rm testdata\/cop.db and rerun the test it passes",
        "ts": "1484567909.001768"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "hmm - ironically I am getting a lint error now",
        "ts": "1484568397.001769"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "so here is the deal, tests pass if I delete the db between each package",
        "ts": "1484568397.001770"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "so \"gocov test $PKGS\" fails, but \"for i in $PKGS;do rm -f testdata\/cop.db; gocov test $i;done\" works",
        "ts": "1484568500.001771"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "apparently it has to do with trying to enroll the same user multiple times",
        "edited": {
            "user": "U0P2GSA8Z",
            "ts": "1484568551.000000"
        },
        "ts": "1484568538.001772"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "make lint works for me",
        "ts": "1484568563.001774"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "did you run `make unit-tests`",
        "ts": "1484569275.001775"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "yes",
        "ts": "1484569411.001776"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "past the lint error - now running `make unit-tests` twice in a row",
        "ts": "1484569526.001777"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "I can't even pass it once",
        "ts": "1484569548.001778"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "I passed once",
        "ts": "1484569569.001779"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "(I'm on OSX as that's what I have been using so just want to stay consistent)",
        "ts": "1484569600.001780"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "for me it fails on TestAllClient",
        "ts": "1484569606.001781"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "I'm running natively on Windows",
        "ts": "1484569628.001782"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "which is part of the lib test",
        "edited": {
            "user": "U0P2GSA8Z",
            "ts": "1484569708.000000"
        },
        "ts": "1484569699.001783"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "right - I just want to make sure that nothing that was working is broken  :wink:    although the lint error is odd - I've seen it before but than it went away",
        "ts": "1484569707.001784"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "I'll try again on Vagrant to see what I get",
        "ts": "1484569746.001786"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "I'm going to check in a fix anyway - the lint error actually showed a poor line of code  :wink:",
        "ts": "1484569748.001787"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "in any case we're not far of having it functioning on Windows",
        "ts": "1484569785.001788",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0PB67X4K"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "I ran the tests twice in a row with no issues.   my best guess is that we have a Unix specific file command in the code",
        "ts": "1484569826.001789"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "yeah...",
        "ts": "1484569843.001790"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "there is also a test that fails: --- FAIL: TestMakeFileAbs (0.00s)\n        util_test.go:235: Absolute of file=\/a\/b\/c with dir= expected \/a\/b\/c but was C:\\a\\b\\c\n        util_test.go:235: Absolute of file=c with dir=\/a\/b expected \/a\/b\/c but was C:\\a\\b\\c\n        util_test.go:235: Absolute of file=..\/c with dir=\/a\/b expected \/a\/c but was C:\\a\\c\nFAIL\nFAIL    <http:\/\/github.com\/hyperledger\/fabric-cop\/util|github.com\/hyperledger\/fabric-cop\/util>  0.972s",
        "ts": "1484569877.001791"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "typical unix specific code :slightly_smiling_face:",
        "ts": "1484569895.001792"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "I'll see what needs to be done for that one",
        "ts": "1484569925.001793"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "there should be a Go function that allows to deal with that difference",
        "ts": "1484569947.001794"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "you can probably use `filepath.Clean()` around the expected result in the test",
        "edited": {
            "user": "U0PB67X4K",
            "ts": "1484571162.000000"
        },
        "ts": "1484571148.001795"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "that doesn't do, but filepath.Abs() on the expected value does the trick",
        "ts": "1484573921.001797"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "yeah - I found that too",
        "ts": "1484574192.001798"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "unfortunately, I was trying to avoid having to deal with the error return  :wink:",
        "ts": "1484574208.001799"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "you can ignore the error :slightly_smiling_face:",
        "ts": "1484575936.001802"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "which makes it work even for the special case of \"\"",
        "ts": "1484575954.001803"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "a bit hacky but where is the fun otherwise? :wink:",
        "ts": "1484575989.001804"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "one has to leave room for more bugs to crawl",
        "ts": "1484576024.001805"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "the unit tests don't pass on vagrant either",
        "ts": "1484576049.001806"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "but for different reasons",
        "ts": "1484576055.001807"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "I fixed one - in the tests",
        "ts": "1484576062.001808"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "<@U0PB67X4K> is it intentional that the server_test.go cleans up cop.db but not client_test.go?",
        "edited": {
            "user": "U0P2GSA8Z",
            "ts": "1484576597.000000"
        },
        "ts": "1484576586.001809"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "I don't know how that works on Mac",
        "ts": "1484576644.001811"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "in my case, whether on Windows or vagrant the tests trip over reusing the db",
        "ts": "1484576673.001812"
    },
    {
        "type": "message",
        "user": "U0S5KF44D",
        "text": "<@U0P2GSA8Z> It is not intentional.  It should be cleaned up.  I've added cleanup code in client_test.go in multiple change sets but somehow keeps getting removed.  (I just saw this conversation on fabric)",
        "ts": "1484576764.001813"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "hi keith, I actually thought I was on <#C2Y3CPP16|fabric-cop>, my bad",
        "ts": "1484576824.001814"
    },
    {
        "type": "message",
        "user": "U0P2GSA8Z",
        "text": "I'll switch channel",
        "ts": "1484576848.001815"
    },
    {
        "type": "message",
        "user": "U195M30MD",
        "text": "is anyone familiar with java chaincode and tables?",
        "ts": "1484577836.001816"
    },
    {
        "type": "message",
        "user": "U195M30MD",
        "text": "(may be similar to go chaincode though)",
        "ts": "1484577846.001817"
    },
    {
        "type": "message",
        "user": "U195M30MD",
        "text": "is there a way to select more than one rows using some criteria rather than only getting one single row by key?",
        "ts": "1484577877.001818"
    },
    {
        "type": "message",
        "user": "U195M30MD",
        "text": "actually I see the go chaincode stub has a getRows method, whereas the java one doesn't",
        "ts": "1484578103.001819"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "question: when i deploy chaincode in non-dev mode then this deploy returns a cryptic hash which i have to use for invokes",
        "ts": "1484579195.001820"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "is there a more elegant version to invoke or query the chaincode without using this superlong hash for addressing the chaincode ?",
        "ts": "1484579230.001821"
    },
    {
        "type": "message",
        "user": "U3S1PENVA",
        "text": "try using the \u2014name flag",
        "ts": "1484579288.001822"
    },
    {
        "type": "message",
        "user": "U3S1PENVA",
        "text": "peer chaincode deploy -n \u201csomething\"",
        "ts": "1484579300.001823"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "i though when using  non dev mode you cannot use -n ?",
        "ts": "1484579317.001824"
    },
    {
        "type": "message",
        "user": "U3S1PENVA",
        "text": "I\u2019m not aware of such limitation",
        "ts": "1484579337.001825"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "i ll try it thanks",
        "ts": "1484579345.001826"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "hmm i think -n  only works for node with `--peer-chaincodedev`",
        "ts": "1484579520.001827"
    },
    {
        "type": "message",
        "user": "U3S1PENVA",
        "text": "it\u2019s probably on 0.6.1",
        "ts": "1484579582.001828"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "yepp im using v0.6",
        "ts": "1484579591.001829"
    },
    {
        "type": "message",
        "user": "U3S1PENVA",
        "text": "seems that the last fabric does allow using \u2014name in prod mode",
        "ts": "1484579623.001830"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "at least this cryptic hash stays the same in every deployment :slightly_smiling_face:  im fine with that",
        "ts": "1484579655.001831"
    },
    {
        "type": "message",
        "user": "U3S1PENVA",
        "text": "as long as you dont change your chaincode",
        "ts": "1484579667.001832"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "ok, nice to know",
        "ts": "1484579683.001833"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "is there anywhere an example for how the communication between a nodejs app and the chaincode works using hfc sdk",
        "ts": "1484583066.001834"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "?",
        "ts": "1484583068.001835"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "specifically, how do i call a function of the chaincode in the nodejs app",
        "ts": "1484583098.001836"
    },
    {
        "type": "message",
        "user": "U3S1PENVA",
        "text": "I could suggest to read the end-to-end test found in the fabric-sdk-node repo: <https:\/\/github.com\/hyperledger\/fabric-sdk-node\/blob\/master\/test\/unit\/end-to-end.js>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric-sdk-node",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric-sdk-node\/blob\/master\/test\/unit\/end-to-end.js",
                "text": "Read-only mirror of <https:\/\/gerrit.hyperledger.org\/r\/#\/admin\/projects\/fabric-sdk-node>",
                "fallback": "GitHub: hyperledger\/fabric-sdk-node",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric-sdk-node\/blob\/master\/test\/unit\/end-to-end.js",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1484583385.001837"
    },
    {
        "type": "message",
        "user": "U3S1PENVA",
        "text": "However, I\u2019m not sure whether it would work with 0.6",
        "ts": "1484583423.001839"
    },
    {
        "type": "message",
        "user": "U3S1PENVA",
        "text": "Maybe this would work: <http:\/\/fabric-sdk-node.readthedocs.io\/en\/latest\/sample-web-app\/>",
        "ts": "1484583562.001840"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "i think that this here is quite useful <https:\/\/github.com\/IBM-Blockchain\/SDK-Demo\/blob\/master\/helloblockchain.js>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "IBM-Blockchain\/SDK-Demo",
                "title_link": "https:\/\/github.com\/IBM-Blockchain\/SDK-Demo\/blob\/master\/helloblockchain.js",
                "text": "SDK-Demo - Sample Node.js program to demonstrate the HFC SDK APIs interacting with Starter and High Security Bluemix networks",
                "fallback": "GitHub: IBM-Blockchain\/SDK-Demo",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/17178768?v=3&s=400",
                "from_url": "https:\/\/github.com\/IBM-Blockchain\/SDK-Demo\/blob\/master\/helloblockchain.js",
                "thumb_width": 200,
                "thumb_height": 200,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1484584853.001841"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "<@U3S1PENVA> but thx anyway",
        "ts": "1484584868.001843"
    },
    {
        "user": "U3L6DBEP3",
        "text": "<@U3L6DBEP3|hinoue> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1484585774.001844"
    },
    {
        "user": "U3S8HRGLV",
        "text": "<@U3S8HRGLV|marcusvcs> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1484593758.001847"
    },
    {
        "type": "message",
        "user": "U1P56CWF5",
        "text": "*Who ensures endorsement results match in Fabric 1.0?*  If the client requests endorsements from 3 Endorsing Peers, and they all run the chaincode and provide the response, does the client have to check whether all the responses match, before sending the endorsements to the Ordering Service? Or does the client only have to check whether or not enough endorsements have arrived? \nDoes the SDK perform these checks or does the client have execute custom code to perform these checks?",
        "ts": "1484599127.001848"
    },
    {
        "type": "message",
        "user": "U0W7D64LC",
        "text": "<@U1P56CWF5> \u2026. <@U0ULK2JPP> can confirm, the SDK would check to verify you have the proper number of signed endorsements based on the policy you set. I don\u2019t know what you mean by \u201cwhether all the responses match\u201d.",
        "ts": "1484602249.001849"
    },
    {
        "type": "message",
        "user": "U0YJUECE8",
        "text": "<@U0W7D64LC> I don't know the answer to this myself, but I suspect that what <@U1P56CWF5> means is this-  Do I, the client, have to check if the values in the ReadSets and\/or ReadWriteSets that are returned from each endorsing peer in the Transaction proposal response are identical, or will the SDK do this for me \"under the covers\" ?",
        "ts": "1484604733.001850"
    },
    {
        "type": "message",
        "user": "U16J2985V",
        "text": "Hi. To anyone who knows, is (or will) there be a beta release for v1?",
        "ts": "1484613950.001851"
    },
    {
        "type": "message",
        "user": "U1P56CWF5",
        "text": "<@U0W7D64LC>, <@U0YJUECE8> has described my question accurately.",
        "ts": "1484614869.001852"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U1P56CWF5> the final \u201cvalidation\u201d of endorsement happens on the peer itself at commit time using the endorsement policy for the chaincode for each TX when the block with the TX reaches the peer",
        "edited": {
            "user": "U0ULK2JPP",
            "ts": "1484615211.000000"
        },
        "ts": "1484615043.001853"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "the application using the SDK can perform validations too (but they are not expected and cannot in general do Read\/Write set validation as these are not at the \u201capplication\u201d level)",
        "ts": "1484615151.001854"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "as <@U0W7D64LC> pointed out the SDK can do endorsement checks too (and probably a good thing if it does to save work on the aforementioned commit-time validation)",
        "ts": "1484615354.001856"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0ULK2JPP> I took the above question not so much as it imply the SDK can or should perform validation on the output set itself, as much as a question of whether it (the client or the SDK) is comparing the consistency of the outputs",
        "ts": "1484620529.001857"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "thats something I would be curious about as well",
        "ts": "1484620539.001858"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "e.g. can\/should the client\/SDK ensure that either all or \"enough\" endorsers derived the same RWS",
        "ts": "1484620595.001859"
    },
    {
        "user": "U2BUWHU5C",
        "text": "<@U2BUWHU5C|warong> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1484639588.001860"
    }
]
[
    {
        "user": "U3DEHEA4R",
        "text": "<@U3DEHEA4R|phoolet> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1481705501.000365"
    },
    {
        "type": "message",
        "user": "U1JAPLQSY",
        "text": "<@U15LJGQPN> Thanks mate for confirming my understanding",
        "ts": "1481708516.000366"
    },
    {
        "user": "U3CMVMBRS",
        "text": "<@U3CMVMBRS|sarkoi> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1481718816.000369"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U15LJGQPN> yep, thats another difference: it was \"make images\" in previous releases, now \"make docker\" in mainline",
        "ts": "1481724261.000370"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "(the rationale was that \"images\" was too vague, so now there is \"make native\" for native binaries and \"make docker\" for docker images",
        "ts": "1481724287.000371"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "note that there are rules to target a specific image too: e.g. \"make peer-image\" or \"make peer-image-clean\"",
        "ts": "1481724336.000372"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "(which s\/image\/docker in mainline)",
        "ts": "1481724344.000373"
    },
    {
        "type": "message",
        "user": "U3BSMKS21",
        "text": "short question: after git cloning v0.6 fabric, what is the difference between `sudo make` and `sudo make peer`",
        "ts": "1481725317.000374"
    },
    {
        "user": "U3EQRSAJ1",
        "text": "<@U3EQRSAJ1|yvescandel> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1481729811.000375"
    },
    {
        "type": "message",
        "user": "U3D45J2FK",
        "text": "Does Fabric have a built-in method like Get() that can pull\/fetch data from the network?",
        "ts": "1481743058.000378"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "<@U3D45J2FK> Can you give a little more context?  The shim.ChaincodeStubInterface interface provides a way for golang-based chaincode to get\/set the ledger state.  If you're thinking about e.g. a web app retrieving data from the ledger, then one could use the HFC module (fabric-sdk-node) to submit a query request to a peer for the relevant data",
        "ts": "1481749906.000381"
    },
    {
        "type": "message",
        "user": "U3D45J2FK",
        "text": "<@U2X9KDDL7> sorry for the vague question, typed it out quick... yes I was referring to a web app retrieving data from the ledger",
        "ts": "1481750639.000382"
    },
    {
        "type": "message",
        "user": "U3D45J2FK",
        "text": "so I'll take a look at the HFC module",
        "ts": "1481750652.000383"
    },
    {
        "type": "message",
        "user": "U3D45J2FK",
        "text": "how would I go about querying data? is there a specific method in HFC?",
        "ts": "1481750702.000384"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "<@U3D45J2FK> There's no generic built-in way, but you can easily define your own query method in chaincode.  Which version of fabric are you working with?",
        "ts": "1481750779.000385"
    },
    {
        "type": "message",
        "user": "U3D45J2FK",
        "text": "<@U2X9KDDL7> gotcha - v0.6, so I'd define the query in a chaincode event?",
        "ts": "1481750893.000386"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "<@U3D45J2FK> Not an event, but chaincode yes.  Take a look at chaincode_example02.go for a really simple example, and take a look at fabric\/sdk\/node\/test\/unit\/chain-tests.js for how to use HFC to invoke\/query\/etc",
        "ts": "1481751029.000387"
    },
    {
        "type": "message",
        "user": "U2X9KDDL7",
        "text": "Running the HFC unit tests as is is a little tricky, but if you want a simpler way to do it, I've made a fork of fabric v0.6 which dockerizes the HFC unit tests.  <https:\/\/github.com\/vdods\/fabric\/blob\/dockerize-unit-tests\/sdk\/node\/dockerized-unit-tests-readme.md>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "vdods\/fabric",
                "title_link": "https:\/\/github.com\/vdods\/fabric\/blob\/dockerize-unit-tests\/sdk\/node\/dockerized-unit-tests-readme.md",
                "text": "Read-only mirror of <https:\/\/gerrit.hyperledger.org\/r\/#\/admin\/projects\/fabric>",
                "fallback": "GitHub: vdods\/fabric",
                "thumb_url": "https:\/\/avatars0.githubusercontent.com\/u\/8673448?v=3&s=400",
                "from_url": "https:\/\/github.com\/vdods\/fabric\/blob\/dockerize-unit-tests\/sdk\/node\/dockerized-unit-tests-readme.md",
                "thumb_width": 420,
                "thumb_height": 420,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1481751125.000388"
    },
    {
        "user": "U3F2LRWTW",
        "text": "<@U3F2LRWTW|slender> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1481758987.000390"
    },
    {
        "user": "U3DUX05NZ",
        "text": "<@U3DUX05NZ|david_rintoul> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1481771392.000393"
    },
    {
        "user": "U2WJPAAJV",
        "text": "<@U2WJPAAJV|tzukru> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1481786396.000396"
    }
]
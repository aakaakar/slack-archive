[
    {
        "type": "message",
        "user": "U3SCKQB4P",
        "text": "I seriously need help and if any body can help.\n \nI downloaded the Docker images supported by IBM 0.6 one as you mentioned.\n \nThis does not work when pbft enabled on 4 nodes and all these nodes are on different cloud (AWS,RACKSPACE,BLUEBOX and SOFTLAYER) where i am making Softlayer as root node.\n \nChaincode gets deployed but then not able to query it says -:\n \n{\n  \"jsonrpc\": \"2.0\",\n  \"error\": {\n    \"code\": -32003,\n    \"message\": \"Query failure\",\n    \"data\": \"Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for de67a47261ab91c0e012d770f59ac23b82a247e5b9a44a1632034fc974df925afc2c588682ac693d9365576c6be516fb44362f05cc815949a8a0e3d8b61d91ac - LedgerError - ResourceNotFound: ledger: resource not found)\"\n  },\n  \"id\": 5\n}\n \nHas any one tried on realy 4 Nodes on different machine ?",
        "ts": "1485417827.002816"
    },
    {
        "type": "message",
        "user": "U3SCKQB4P",
        "text": "and when I implement this on NOOPS it works",
        "ts": "1485417860.002817"
    },
    {
        "type": "message",
        "user": "U3D5886CB",
        "text": "unfortunately, peer TLS  doesn\u2019t work",
        "ts": "1485419008.002819"
    },
    {
        "type": "message",
        "user": "U3D5886CB",
        "text": "when I try to execute deploy command (cli) I got message: Error: Error getting endorser client chaincode: Error trying to connect to local peer: grpc: timed out when dialing",
        "ts": "1485419052.002820"
    },
    {
        "type": "message",
        "user": "U3D5886CB",
        "text": "- CORE_PEER_TLS_ENABLED=true\n- CORE_PEER_TLS_CERT_FILE=\/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/core\/chaincode\/testdata\/server1.pem\n- CORE_PEER_TLS_KEY_FILE=\/opt\/gopath\/src\/github.com\/hyperledger\/fabric\/core\/chaincode\/testdata\/server1.key",
        "ts": "1485419085.002821"
    },
    {
        "type": "message",
        "user": "U326N8YF7",
        "text": "<@U0KPFAZNF> thanks for the insight. working with <@U3BSMKS21>  on this. Not sure I understand. Are there any limitations on the images on dockerhub?",
        "ts": "1485422750.002824"
    },
    {
        "type": "message",
        "user": "U326N8YF7",
        "text": "or do you just mean with reusing images?",
        "ts": "1485422874.002825"
    },
    {
        "user": "U3WM9K85R",
        "text": "<@U3WM9K85R|mbaizan> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485428762.002826"
    },
    {
        "user": "U3WQGBA2E",
        "text": "<@U3WQGBA2E|srm> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485434567.002827"
    },
    {
        "type": "message",
        "user": "U2UNR91RB",
        "text": "Is it possible to override the peer configuration `chaincode.car` using environment variables (for fabric v0.6.1)? I would have guessed `CORE_CHAINCODE_CAR= FROM ...` would do the trick but it doesn't appear to be working.",
        "ts": "1485436282.002828"
    },
    {
        "type": "message",
        "user": "U2UNR91RB",
        "text": "omg.. probably because it would be `CORE_CHAINCODE_CAR_DOCKERFILE=FROM ...`. Of course I don't realize that until seconds after I sent that last message.",
        "edited": {
            "user": "U2UNR91RB",
            "ts": "1485436371.000000"
        },
        "ts": "1485436352.002829"
    },
    {
        "type": "message",
        "user": "U2UNR91RB",
        "text": "Looks like that did it.. Sorry for the noise.",
        "ts": "1485436572.002831"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "cool",
        "ts": "1485436598.002832"
    },
    {
        "user": "U33EA2K8Q",
        "text": "<@U33EA2K8Q|mcenatie> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485437773.002833"
    },
    {
        "user": "U3WV4NV6G",
        "text": "<@U3WV4NV6G|forest14> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485444997.002834"
    },
    {
        "type": "message",
        "user": "U39DK9LJH",
        "text": "hm, quick question. is it possible to run multiple chaincodes in v0.6?",
        "ts": "1485445419.002835"
    },
    {
        "user": "U3XHR4TEJ",
        "text": "<@U3XHR4TEJ|jack.parkinson> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485445886.002836"
    },
    {
        "type": "message",
        "user": "U0YJUECE8",
        "text": "<@U39DK9LJH> yes you may.   Most of the demo assets available focus on just their single chaincode, so that may have given you an impression you can only do one,  but you can most certainly run multiple chaincodes on a single peer network in Fabric v0.6",
        "ts": "1485447253.002837"
    },
    {
        "type": "message",
        "user": "U39DK9LJH",
        "text": "fantastic, thank you <@U0YJUECE8>",
        "ts": "1485447270.002838",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0YJUECE8"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U3S8HRGLV",
        "text": "Hi, I'm trying to understand the fabric-boilerplate example and I am not understanding what is the need of keyvalstore. I'm deploying locally. As far as I understood, after I enroll an user all I need is the enrollmentId to call the chaincode, is that correct?",
        "ts": "1485458793.002841"
    },
    {
        "type": "message",
        "user": "U3S8HRGLV",
        "text": "So what's the need of storing the user certificate?",
        "ts": "1485458835.002842"
    },
    {
        "type": "message",
        "user": "U3S8HRGLV",
        "text": "Changing my question: enrolling in a node using REST API is not the same as enrolling using HFC nodejs API?",
        "ts": "1485462201.002843"
    },
    {
        "user": "U3P7ELDTN",
        "text": "<@U3P7ELDTN|jtrayfield> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485463796.002844"
    },
    {
        "user": "U3CPFTLJ1",
        "text": "<@U3CPFTLJ1|baarif> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485466882.002845"
    },
    {
        "user": "U3XQP0CEB",
        "text": "<@U3XQP0CEB|cyrax> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485468247.002846"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "all: baseimage release is cut <https:\/\/github.com\/hyperledger\/fabric-baseimage\/releases\/tag\/v0.3.0>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric-baseimage",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric-baseimage\/releases\/tag\/v0.3.0",
                "text": "Read-only mirror of <https:\/\/gerrit.hyperledger.org\/r\/#\/admin\/projects\/fabric-baseimage>",
                "fallback": "GitHub: hyperledger\/fabric-baseimage",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric-baseimage\/releases\/tag\/v0.3.0",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1485469046.002847"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "image publication to dockerhub\/atlas still pending",
        "ts": "1485469056.002849"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "atlas publication complete: <https:\/\/atlas.hashicorp.com\/hyperledger\/boxes\/fabric-baseimage>",
        "ts": "1485472774.002852"
    },
    {
        "type": "message",
        "user": "U0YJUECE8",
        "text": "@marcusvs  Here are some notes I took from a few months back from a Slack chat...I didn't save the author's name but I suspect it was Gari Singh:\n\nYou can enroll a user once as the enrollSecret is a one time password.\n\n- The Node SDK (hfc) and the REST API actually take different paths in how they work\n\n- The NodeSDK will enroll you and download the credentials locally (default is `\/tmp\/keyValueStore`).  At this point, you are enrolled (so you can't enroll again) but your credentials are local to the SDK and now you can only use the SDK to invoke\/query as the enrollID you used to enroll\n\n- The REST API works differently.  We you call the `\/registrar` endpoint via REST, what happens is the the peer actually acts as a \"wallet\" and enrolls you behind the scenes.  So in this case, the credentials end up being stored on the peer itself (by default in the `\/var\/hyperledge\/production\/client` directory and in your case this would be inside the Docker container)\n\nso the bottom line is that if you enroll via HFC you can't use the ID via the REST API and vice versa - if you enroll via the REST API you can't use that ID via HFC",
        "ts": "1485477054.002853"
    },
    {
        "type": "message",
        "user": "U0YJUECE8",
        "text": "<@U3S8HRGLV>  ^^",
        "ts": "1485477067.002854"
    },
    {
        "type": "message",
        "user": "U0YJUECE8",
        "text": "<@U3S8HRGLV> and from the same conversation I saved:\n\nQ: is there any difference how certificates are used via HFC and REST?\n\nA:  interesting question - the answer is yes and no.  With HFC, the certificates are directly used within the hfc code - meaning you'll actually be submitting signed transactions via GRPC to a fabric peer (and technically you could control usages of trasnacaction certificates, etc).  When using the REST API, the crypto functions are delegated to the peer to act on your behalf (so you submit a REST call with SecureContext in it and then the peer takes that, converts it into a fabric transaction, signs it with the credentials it is storing on your behalf and then submits it)\n\nSo in the end, the system will see the same certificates either way, just that HFC is a more direct and controlled path for a client",
        "ts": "1485477147.002855"
    },
    {
        "user": "U3B52L21K",
        "text": "<@U3B52L21K|ty531> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485479814.002856"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0KM61BCP> <@U0PB67X4K> 64MB compressed.  Not too terrible: <https:\/\/hub.docker.com\/r\/hyperledger\/fabric-baseos\/tags\/>",
        "ts": "1485483179.002857"
    },
    {
        "user": "U3X6RA34J",
        "inviter": "U0UHG4VP1",
        "text": "<@U3X6RA34J|archivebot> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485489851.002858"
    },
    {
        "user": "U2UGBCT89",
        "text": "<@U2UGBCT89|thiru> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485492778.002859"
    },
    {
        "type": "message",
        "user": "U2UGBCT89",
        "text": "<@U0YJUECE8> : Hi,  Using HFC we can register new users and later we can enroll them but using REST API we can enroll already registered users. Is this correct?",
        "edited": {
            "user": "U2UGBCT89",
            "ts": "1485492943.000000"
        },
        "ts": "1485492905.002860"
    },
    {
        "user": "U3M5K237X",
        "text": "<@U3M5K237X|conroydave> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1485494490.002862"
    },
    {
        "type": "message",
        "user": "U3M5K237X",
        "text": "hello everyone",
        "ts": "1485494495.002863"
    },
    {
        "type": "message",
        "user": "U3M5K237X",
        "text": "learning fabric and am having some success getting the beginner tutorials running, how ever i am looking for advice on the best way to structure a proof of concept i am trying to build",
        "ts": "1485494553.002864"
    },
    {
        "type": "message",
        "user": "U3M5K237X",
        "text": "tracking education for individuals",
        "ts": "1485494584.002865"
    },
    {
        "type": "message",
        "user": "U3M5K237X",
        "text": "id like to be able to log completion of courses to a studentid",
        "ts": "1485494609.002866"
    },
    {
        "type": "message",
        "user": "U3M5K237X",
        "text": "private chain, schools would be able to read\/write\/verify",
        "ts": "1485494676.002867"
    },
    {
        "type": "message",
        "user": "U3M5K237X",
        "text": "student also able to view their own history",
        "ts": "1485494693.002868"
    },
    {
        "type": "message",
        "user": "U3M5K237X",
        "text": "i am looking at the Car Lease example but that seems like a big of a jump from the getting started doc",
        "ts": "1485494731.002869"
    },
    {
        "type": "message",
        "user": "U0YJUECE8",
        "text": "<@U2UGBCT89> The first part of your statement is correct, not sure if the second part is.  When you use the REST API, the \/registrar endpoint will both register and enroll you.   With HFC, I think that you can register a user as a separate call and then later enroll that user.  (Of course you can do both at once with the SDK with a call to registerAndEnroll).  So, i think what you're asking is,  could I take a user that is only registered but not enrolled and use the REST API to finish the enrollment?  Not sure-  and, furthermore, since the REST API from v0.6 is deprecated and not available in v1.0, you're probably better off focusing on the SDK functionality anyway IMHO.",
        "ts": "1485503739.002870"
    }
]
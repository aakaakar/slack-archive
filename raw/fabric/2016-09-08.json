[
    {
        "user": "U296PJDD1",
        "text": "<@U296PJDD1|vzhou> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1473347512.000173"
    },
    {
        "user": "U29L2B3N0",
        "text": "<@U29L2B3N0|mhagelstrom> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1473357560.000175"
    },
    {
        "type": "message",
        "user": "U0N4P17ND",
        "text": "Have asked it yesterday will try once more :slightly_smiling_face: : Is there any option to get historical 'versioned' values from KVS? So for example is there any easy way to retrieve all values, which some key had? Or do I get versioning terminology a bit wrong and it doesn't support this?",
        "ts": "1473364839.000176"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "It is not possible to get the past values from KVS, this is being looked at for a next major release.",
        "ts": "1473366905.000177"
    },
    {
        "type": "message",
        "user": "U0N4P17ND",
        "text": "thanks a lot! means v0.6, right?",
        "ts": "1473367446.000178"
    },
    {
        "type": "message",
        "user": "U0N4P17ND",
        "text": "or 0.6 is a minor one?",
        "ts": "1473367463.000179"
    },
    {
        "type": "message",
        "user": "U1KFCPFQA",
        "text": "the major design changes around endorsement model and new ledger are targeted for v1, but may get previewed in one of the minor releases leading up to v1",
        "ts": "1473367622.000180"
    },
    {
        "type": "message",
        "user": "U0N4P17ND",
        "text": "thanks, got it, by the way any road map with the dates exist? - I saw one but not sure accurate it can be",
        "edited": {
            "user": "U0N4P17ND",
            "ts": "1473368227.000000"
        },
        "ts": "1473367788.000181"
    },
    {
        "type": "message",
        "user": "U1K5R1CP9",
        "text": "just wondering: Does the consensus happen at block level or at txn level? If it is at transaction level, what happens if some txns in a blcock fail to get consensus? (posted in general, but thought more relevant here)",
        "ts": "1473368420.000183"
    },
    {
        "type": "message",
        "user": "U1K5R1CP9",
        "text": "one more q: can we use an SQL store for the chain state and use SQL statements to quey data? The statehash could be a problem, may be?",
        "edited": {
            "user": "U1K5R1CP9",
            "ts": "1473372814.000000"
        },
        "ts": "1473372792.000184"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "<@U1K5R1CP9> it depends on the pbft batch size . If batchsize=1 then consensus is done on each incoming transaction, if batchsize=x where x&gt;1 then consensus is done on the batch of x transactions",
        "ts": "1473379268.000187"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "I'll ask <@U1KFCPFQA>  or <@U0Z541B3P>  to chime in on the data store question",
        "ts": "1473379331.000188"
    },
    {
        "type": "message",
        "user": "U0N4P17ND",
        "text": "but just to double check: when consensus is done on the batch, if there is transaction(s) which is(are) not accepted by consensus, what happens? They are simply excluded from batch or the whole batch is rejected?",
        "ts": "1473379457.000189"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "The whole batch is treated as one",
        "ts": "1473381200.000190"
    },
    {
        "type": "message",
        "user": "U0Z541B3P",
        "text": "<@U1K5R1CP9> in 0.6 branch which is based on current architecture, it is easy to use an SQL store for using a richer data model from chaincode perspective - So a chaincode could maintain it\u2019s state in relational form. \nHowever, you pointed out the exact point of difficulty which is computing the statehash. Also, other related difficulty would be to maintain the stateDeltas which are used during state transfer if a peer is a few blocks behind.",
        "ts": "1473395433.000191"
    },
    {
        "user": "U29QVFW22",
        "text": "<@U29QVFW22|shiseki> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1473397337.000193"
    },
    {
        "type": "message",
        "user": "U1K5R1CP9",
        "text": "thanks <@U0Z541B3P>, <@U0UGH3X7X>",
        "edited": {
            "user": "U1K5R1CP9",
            "ts": "1473398880.000000"
        },
        "ts": "1473398157.000194"
    },
    {
        "type": "message",
        "user": "U1K5R1CP9",
        "text": "Do we have something similar to oracles for interacting with external services?",
        "ts": "1473398956.000196"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "<@U1K5R1CP9>: nope, not at this point. You can build it though...",
        "ts": "1473403101.000197"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "(having to manage \"your\" set of TTPs, keys, etc.)",
        "ts": "1473403140.000198"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "Not impossible (at a given level of \u2018scale\u2019), I would say.",
        "ts": "1473403199.000199"
    }
]
[
    {
        "type": "message",
        "user": "U22TU39U1",
        "text": "any body help me how to register a new user",
        "ts": "1473492550.000214"
    },
    {
        "user": "U2A78JPA7",
        "text": "<@U2A78JPA7|adeelqureshi> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1473499143.000215"
    },
    {
        "type": "message",
        "user": "U2A78JPA7",
        "text": "Hi fellows, wondering if some one can help with following \nI've cloned the \"learn chain code\" repo (<https:\/\/github.com\/IBM-Blockchain\/learn-chaincode.git>)and trying to build the very first program with Go\n\nwhen I run \" go build .\/ \" it spits out following error \n\n\\chaincode_start.go:34: cannot use new(SimpleChaincode) (type *SimpleChaincode) as type shim.Chaincode in argument to shim.Start:\n have Init(*shim.ChaincodeStub, string, []string) ([]byte, error)\n want Init(shim.ChaincodeStubInterface, string, []string) ([]byte, error)\n\nAny ideas ?",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "IBM-Blockchain\/learn-chaincode",
                "title_link": "https:\/\/github.com\/IBM-Blockchain\/learn-chaincode.git",
                "text": "learn-chaincode - Learn how to write chaincode.",
                "fallback": "GitHub: IBM-Blockchain\/learn-chaincode",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/17178768?v=3&s=400",
                "from_url": "https:\/\/github.com\/IBM-Blockchain\/learn-chaincode.git",
                "thumb_width": 200,
                "thumb_height": 200,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "edited": {
            "user": "U2A78JPA7",
            "ts": "1473517870.000000"
        },
        "ts": "1473517761.000217"
    },
    {
        "type": "message",
        "user": "U2A78JPA7",
        "text": "I have go 1.7 installed",
        "ts": "1473517992.000220"
    },
    {
        "type": "message",
        "user": "U269P9D8W",
        "text": "<@U2A78JPA7> replace *shim.ChaincodeStub with shim.ChaincodeStubInterface in all your functions and then build it.",
        "ts": "1473518061.000221"
    },
    {
        "type": "message",
        "user": "U2A78JPA7",
        "text": "Thanks let me try",
        "ts": "1473518086.000222"
    },
    {
        "type": "message",
        "user": "U2A78JPA7",
        "text": "<@U269P9D8W> : That worked ... Thanks !",
        "ts": "1473518372.000223"
    },
    {
        "type": "message",
        "user": "U268EB76W",
        "text": "Here is some good info on the maximum number of Dockers you can run in a Host, in addition to excellent undocumented information provided by  <@U0PB67X4K> on Sept 5th.",
        "ts": "1473525322.000225"
    },
    {
        "type": "message",
        "user": "U268EB76W",
        "text": "The figures below are from the boot2docker 1.11.1 vm image which is based on Tiny Core Linux 7. The kernel is 4.4.8\n\nDocker\n\nDocker creates or uses a number of resources to run a container, on top of what you run inside the container.\n\nAttaches a virtual ethernet adaptor to the docker0 bridge (1023 max per bridge)\nMounts an AUFS and shm file system (1048576 mounts max per fs type)\nCreate's an AUFS layer on top of the image (127 layers max)\nForks 1 extra docker-containerd-shim management process (~3MB per container on avg and sysctl kernel.pid_max)\nDocker API\/daemon internal data to manage container. (~400k per container)\nCreates kernel cgroups and name spaces\nOpens file descriptors (~15 + 1 per running container at startup. ulimit -n and sysctl fs.file-max )\nDocker options\n\nPort mapping -p will run a extra process per port number on the host (~4.5MB per port on avg and sysctl kernel.pid_max)\n--net=none and --net=host would remove the networking overheads.\nContainer services\n\nThe overall limits will normally be decided by what you run inside the containers rather than dockers overhead (unless you are doing something esoteric, like testing how many containers you can run :slightly_smiling_face:\n\nIf you are running apps in a virtual machine (node,ruby,python,java) memory usage is likely to become your main issue.\n\nIO across a 1000 processes would cause a lot of contention.\n\n1000 processes trying to run at the same time would cause a lot of context switching (see vm apps above for garbage collection)\n\nIf you create network connections from a 1000 containers the hosts network layer will get a workout.\n\nIt's not much different to tuning a linux host to run a 1000 processes, just some additional Docker overheads to include.\n\nExample\n\n1023 busybox images running nc -l -p 80 -e echo host uses up about 1GB of kernel memory and 3.5GB of system memory.\n\n1023 nc -l -p 80 -e echo host processes uses about 75MB of kernel memory and 125MB of system memory\n\nStarting 1023 containers serially took ~8 minutes.\n\nKilling 1023 containers serially took ~6 minutes",
        "ts": "1473525336.000226"
    },
    {
        "type": "message",
        "user": "U1P1ZV6RF",
        "text": "<@U268EB76W>: did you try spinning up Fabric peers by using Docker engine on top of Tiny Core?",
        "edited": {
            "user": "U1P1ZV6RF",
            "ts": "1473528830.000000"
        },
        "ts": "1473528781.000227"
    },
    {
        "type": "message",
        "user": "U268EB76W",
        "text": "<@U1P1ZV6RF>: No, why do you ask? Is there a known or anticipated technical issue?",
        "ts": "1473546699.000229"
    },
    {
        "user": "U2ABYPVGC",
        "text": "<@U2ABYPVGC|vikas.singh> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1473573439.000232"
    },
    {
        "type": "message",
        "user": "U1P1ZV6RF",
        "text": "<@U268EB76W> : No, I was just curious. I've been playing around with Tinycore for different purposes and I find it a really compact purpose-OS. However, I never considered using it as Docker engine.",
        "ts": "1473575317.000233"
    }
]
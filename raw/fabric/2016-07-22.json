[
    {
        "type": "message",
        "user": "U11TAFPUP",
        "text": "Hello",
        "ts": "1469171286.000240"
    },
    {
        "type": "message",
        "user": "U11TAFPUP",
        "text": "When I deploy chaincode",
        "ts": "1469171293.000241"
    },
    {
        "type": "message",
        "user": "U11TAFPUP",
        "text": "I got this message",
        "ts": "1469171302.000242"
    },
    {
        "type": "message",
        "user": "U11TAFPUP",
        "text": "Failed to deploy chaincode: request={\"fcn\":\"init\",\"args\":[\"hello\"],\"chaincodePath\":\"<http:\/\/github.com\/chaincode-app-go|github.com\/chaincode-app-go>\"}, error={\"error\":{\"code\":2,\"metadata\":{\"_internal_repr\":{}}},\"msg\":\"Error: sql: no rows in result set\"}",
        "ts": "1469171304.000243"
    },
    {
        "type": "message",
        "user": "U11TAFPUP",
        "text": "Could you please give me an idea about it?",
        "edited": {
            "user": "U11TAFPUP",
            "ts": "1469171341.000000"
        },
        "ts": "1469171322.000244"
    },
    {
        "type": "message",
        "user": "U11CP8FF1",
        "text": "Not sure if this helps and assumes this is test environment and can be recreated.  I see this error when I run new membersrvc, and keyvalue store of Node.JS client (e.g. \/tmp\/keyValueStore) was not deleted with the new membersrvc instance. Try to delete keyvalue store if you have new membersrvc.",
        "ts": "1469175588.000249"
    },
    {
        "type": "message",
        "user": "U1JBVRNQ3",
        "text": "I have a question for the fabric team",
        "ts": "1469185893.000252"
    },
    {
        "type": "message",
        "user": "U1JBVRNQ3",
        "text": "We have several institution that want to interact with each other and maintain a common ledger. Each transaction that is initiated by a party contains information of that party and another party involved in the chain. We do not want the transaction to reach a third institution as it has no connection with the transaction. The intention is to avoid executing the chain code at a part that is not connected with the transaction.",
        "ts": "1469185980.000253"
    },
    {
        "type": "message",
        "user": "U1JBVRNQ3",
        "text": "How could we achieve this, what sort of features do you have under development or are proposed for development that can achieve this functionality.",
        "ts": "1469186001.000254"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U1JBVRNQ3>: this type of requirement maybe better addressed in the next consensus architecture proposal<https:\/\/github.com\/hyperledger\/fabric\/wiki\/Next-Consensus-Architecture-Proposal>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/wiki\/Next-Consensus-Architecture-Proposal",
                "text": "fabric - Fabric is a blockchain project in Incubation proposed to the community and documented at <https:\/\/goo.gl\/RYQZ5N>. Information on what Incubation entails can be found in the Hyperledger Proj...",
                "fallback": "GitHub: hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/wiki\/Next-Consensus-Architecture-Proposal",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1469187438.000256"
    },
    {
        "type": "message",
        "user": "U1JBVRNQ3",
        "text": "Im guessing there is no feature present as of now. Is this issue addressed in the next Consensus architecture protocol",
        "ts": "1469187803.000258"
    },
    {
        "type": "message",
        "user": "U1JBVRNQ3",
        "text": "What if a confidentiality policy is applied. In that case will the data be hidden from the endorsing peer not allowed to view the data",
        "ts": "1469189523.000259"
    },
    {
        "user": "U1U7BR1KP",
        "text": "<@U1U7BR1KP|ray> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1469202091.000264"
    }
]
[
    {
        "type": "message",
        "user": "U2C55KE65",
        "text": "how can i change a block store more than one transactions?",
        "ts": "1476170816.002582"
    },
    {
        "type": "message",
        "user": "U2L125QGL",
        "text": "while deploying chaincode , i am getting sending init failed",
        "ts": "1476185353.002585"
    },
    {
        "type": "message",
        "user": "U2L125QGL",
        "text": "[chaincode] Launch -&gt; ERRO 01a sending init failed(handler not found for chaincode cctest)",
        "ts": "1476185361.002586"
    },
    {
        "type": "message",
        "user": "U2L125QGL",
        "text": "How to resolve it?",
        "ts": "1476185366.002587"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "<@U2L125QGL>  - are you running in chaincode dev mode?",
        "ts": "1476187479.002589"
    },
    {
        "type": "message",
        "user": "U2L125QGL",
        "text": "yes",
        "ts": "1476187487.002590"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "then you'll need to compile and run your chaincode locally before running the deploy transaction",
        "ts": "1476187517.002591"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "from the docs:\n\n```\nStarting and registering the chaincode\n\nRun the following chaincode command to start and register the chaincode with the validating peer:\n\nCORE_CHAINCODE_ID_NAME=mycc CORE_PEER_ADDRESS=0.0.0.0:7051 .\/chaincode_example02\nThe chaincode console will display the message \u201cReceived REGISTERED, ready for invocations\u201d, which indicates that the chaincode is ready to receive requests. Follow the steps below to send a chaincode deploy, invoke or query transaction. If the \u201cReceived REGISTERED\u201d message is not displayed, then an error has occurred during the deployment; revisit the previous steps to resolve the issue.\n```",
        "ts": "1476187585.002592"
    },
    {
        "type": "message",
        "user": "U2L125QGL",
        "text": "yes i did that",
        "ts": "1476187596.002593"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "(as an example)",
        "ts": "1476187598.002594"
    },
    {
        "type": "message",
        "user": "U2L125QGL",
        "text": "i started two peers  and i deployed by using one peer and in the other peer it is giving error  as sending init failed",
        "ts": "1476187641.002595"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "ah -  so you'll need to start another instance of the chaincode and point it at the other peer as well",
        "ts": "1476187669.002596"
    },
    {
        "type": "message",
        "user": "U2L125QGL",
        "text": "start another instance is enough or need to deploy with that peer also?",
        "ts": "1476187732.002597"
    },
    {
        "type": "message",
        "user": "U2KL18VPU",
        "text": "starting should be enough. deploy will propagate to other peers, I suppose.",
        "ts": "1476187781.002598"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "you just need to start it.  deploy transaction will go to both peers",
        "ts": "1476187881.002599"
    },
    {
        "type": "message",
        "user": "U2L125QGL",
        "text": "ya its working thanq:)",
        "ts": "1476187953.002600"
    },
    {
        "type": "message",
        "user": "U2L125QGL",
        "text": "if  it is in public mode then also we have to create multi instances of chaincode? or how it will work?",
        "ts": "1476188075.002601"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U2L125QGL> its only in `\u2014peer-chaincodedev` mode the user is responsible for starting and attaching chaincodes to peer. Otherwise the peer manages that for the user\u2026 also `i started two peers..` - are you running the two peers in docker container ?",
        "ts": "1476188472.002604"
    },
    {
        "type": "message",
        "user": "U2L125QGL",
        "text": "yes",
        "ts": "1476188498.002605"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "ok",
        "ts": "1476188532.002606"
    },
    {
        "type": "message",
        "user": "U2L125QGL",
        "text": "<@U0ULK2JPP>  if we remove --peer-chaincodedev then it run as a public mode right?",
        "ts": "1476188605.002607"
    },
    {
        "type": "message",
        "user": "U2KL18VPU",
        "text": "<@U2L125QGL> we can say \"production mode\"",
        "ts": "1476188651.002608"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U2KL18VPU> its perfectly ok to run without that flag and let the peer manage chaincodes even when \u201cdeveloping\"",
        "ts": "1476188721.002610"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "its main use is to be able to debug chaincode problems with quick turnaround",
        "ts": "1476188749.002611"
    },
    {
        "type": "message",
        "user": "U2KL18VPU",
        "text": "<@U0ULK2JPP> Got the point.",
        "ts": "1476188809.002612",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0ULK2JPP"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U2L125QGL",
        "text": "<@U2KL18VPU>  ya in dev mode i start two peers and i start two instances of chaincodes for each peer its working",
        "ts": "1476188833.002613",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0ULK2JPP"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U2L125QGL",
        "text": "in production mode, we need to create multi instances for chaincode? or exact it works? how multi peers can access the same chaincode which is deployed by one peer?",
        "ts": "1476188902.002614"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U2L125QGL> it might be a good idea to do a write up of that process (people typically run only one  peer `\u2014peer-chaincodedev` mode)",
        "ts": "1476188945.002615"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "the deploy transaction is sent to all peers who deploy the same chaincode",
        "ts": "1476188999.002616"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "so even in your current dev mode, if you send an invoke to a peer, you should see it run on both",
        "ts": "1476189061.002617"
    },
    {
        "type": "message",
        "user": "U2L125QGL",
        "text": "ok",
        "ts": "1476189086.002618"
    },
    {
        "type": "message",
        "user": "U2KL18VPU",
        "text": "<@U2L125QGL> Regarding production mode, the following is my understanding,\nWhen you submit a deploy transaction by specifying the path of a chaincode through REST APIs, the peer reads the chaincode, compiles and creates a docker image containing the executable plus the necessary libraries, and starts the container. The same process is done by all the peers.",
        "ts": "1476189344.002619"
    },
    {
        "type": "message",
        "user": "U2KL18VPU",
        "text": "This is the case with CLI method too.",
        "ts": "1476189366.002620"
    },
    {
        "type": "message",
        "user": "U2KL18VPU",
        "text": "So, the point here is that the peer should have access to the chaincode (In case, you're trying with your custom chaincode, it should be inside the docker image where the peer started).",
        "ts": "1476189422.002621"
    },
    {
        "type": "message",
        "user": "U2KL18VPU",
        "text": "If you are using gRPC method (eg., app.go in asset_management example), the chaincode is read in the client side and sent to peer as payload, and the receiving peer sends to other peers and the same process of compilation, docker creation follows.",
        "ts": "1476189512.002622"
    },
    {
        "type": "message",
        "user": "U2KL18VPU",
        "text": "(Please feel free to correct, if I am wrong)",
        "ts": "1476189529.002623"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U2KL18VPU> you are close",
        "ts": "1476189577.002624"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "the only nuance here is that the peer that receives the deploy (from the REST\/CLI) packages the chaincode up as a payload before dissemination, same process as the GRPC\/SDK",
        "ts": "1476189642.002625",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U2KL18VPU"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U2L125QGL",
        "text": "<@U2KL18VPU>  k thanq i will try it",
        "ts": "1476189656.002626"
    },
    {
        "type": "message",
        "user": "U2KL18VPU",
        "text": "<@U0KPFAZNF> Thank you for the clarification...",
        "ts": "1476189688.002627"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "IOW, the normal peer fabric always receives a payload",
        "ts": "1476189691.002628"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "as an aside, note that when used in this manner, the receiving peer should be considered part of your client stack, not the general peer network",
        "ts": "1476189756.002629"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "that is why it would be expected to have access to your code to do the packaging, similar to how the SDK would",
        "ts": "1476189770.002630"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "typically this would be a locally deployed NVP",
        "ts": "1476189789.002631"
    },
    {
        "type": "message",
        "user": "U2KL18VPU",
        "text": "Ok",
        "ts": "1476189898.002632"
    },
    {
        "user": "U2G4G5LTY",
        "text": "<@U2G4G5LTY|sandeep.kanaparthi> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1476210198.002642"
    },
    {
        "user": "U26FCDCTG",
        "text": "<@U26FCDCTG|gnsortino> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1476218246.002643"
    },
    {
        "type": "message",
        "user": "U1B5DPRLG",
        "text": "A quick reminder: the ports have changed when moving from fabric v0.5 to v0.6. Be sure to take the correct actions when communicating with your fabric peers. The port mapping is: ``` v0.5  | v0.6\n-------------\n 5000  | 7050\n 30303 | 7051\n 50051 | 7054\n 31315 | 7053\n```",
        "ts": "1476218603.002644"
    },
    {
        "user": "U1MG5M6J2",
        "text": "<@U1MG5M6J2|andrew_tharp> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1476228194.002647"
    }
]
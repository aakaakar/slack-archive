[
    {
        "user": "U0P0H8NL8",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0P0H8NL8|andrea.milazzo> has joined the channel",
        "ts": "1459926812.000061"
    },
    {
        "user": "U0P75RFT4",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0P75RFT4|tim.blankers> has joined the channel",
        "ts": "1459927446.000062"
    },
    {
        "type": "message",
        "user": "U0L7U7MK3",
        "text": "Posting email to Slack: On the TSC call last week, Richard made a comment that resonated with me and we didn't give it enough follow up.  He mentioned that different architectures\/solutions would be required.  I completely agree.  Then we got on talking about the one PoC we have in hand from the hackathon.  \n\nFor this group, we started on use case and:  Use cases drive -&gt; Requirements -&gt; Architectures  as a funnel model.  A use case should be interesting only if it drives new requirements, and new requirements are interesting only if results in changes in the architecture and underlying assumptions.\n\nDo we have a template on how we want to report out architectures in the end?  Can we create some reference architectures?  Ultimately, we need to tie this back to the various codebases LF HLP develops.  So far, we have one to get people to work together, which is great, but does it offer any new capabilities?  There isn't an architecture --yet-- that describes the IBM\/DAH\/Blockstream version of code even that we already have.  We have yet to articulate why this \"better together\" mashup is better than the individual solutions.  We need to spell this out.\n\nThe architecture template should be useful for our own understanding but also describe the relevance of the code and PoC we are developing.  Ideally, we can develop reference baseline architectures, develop the corresponding code, and push use case through to test.  It can provide context on how others claim differentiation later on.  At the very least, this helps our white paper and architecture efforts.  I just want to think a few steps ahead to plan our next tasks.  \n\nThanks,\nJudy",
        "ts": "1459927748.000063"
    },
    {
        "type": "message",
        "user": "U0Q7KRNSJ",
        "text": "I think you raise a good point <@U0L7U7MK3> but i need to ask a few questions to make sure I got this right. Are you saying that each use case should that each use case should propose a reference architecture or check if an existing reference architecture can be modified to fit it?",
        "ts": "1459935298.000064"
    },
    {
        "type": "message",
        "user": "U0RSTB2DB",
        "text": "<@U0UFDAS91>: You\u2019re right, it was not posted on the mailing lists. It was posted here and was sent to a distribution I have of (nearly) everyone who has indicated interest in working on requirements WG. I\u2019ll post the next one on the TSC mailing list. I\u2019m glad you found it.",
        "ts": "1459951516.000065"
    },
    {
        "type": "message",
        "user": "U0RSTB2DB",
        "text": "<@U0L7U7MK3>: let\u2019s discuss in the meeting today. Can you please go over this verbally, elaborate and answer any questions?   If I had to guess where the Requirements -&gt; Architecture work is taking place now, I would say it\u2019s in the white paper, but I think there was discussion of an Architecture WG.",
        "ts": "1459951751.000066"
    },
    {
        "user": "U0P1VU0QG",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0P1VU0QG|ikruiper> has joined the channel",
        "ts": "1459952767.000067"
    },
    {
        "type": "message",
        "user": "U0RSTB2DB",
        "text": "The blog post announcing the R3 Corda system has some interesting insights related to use cases and requirements: <http:\/\/gendal.me\/2016\/04\/05\/introducing-r3-corda-a-distributed-ledger-designed-for-financial-services\/>",
        "attachments": [
            {
                "service_name": "Richard Gendal Brown",
                "service_url": "http:\/\/gendal.me",
                "title": "Introducing R3 Corda\u2122: A Distributed Ledger Designed for Financial\u00a0Services",
                "title_link": "http:\/\/gendal.me\/2016\/04\/05\/introducing-r3-corda-a-distributed-ledger-designed-for-financial-services\/",
                "author_name": "gendal",
                "author_link": "https:\/\/gendal.me\/author\/gendal\/",
                "text": "As reported in Bloomberg this morning, I\u2019m delighted to confirm that R3 and our member banks are working on a distributed ledger platform for financial services: Corda\u2122. I explain it on our official R3 blog and reproduce it here.\nFor the last six months, my team and contributors from our membership have been building a distributed ledger platform prototype from the ground up, specifically designed to manage financial agreements between regulated financial institutions. I am massively excited by the progress our team, led by James Carlyle, our Chief Engineer, and Mike Hearn, our Lead Platform Engineer, are making and I think the time is right to share some details.\nCorda: A Distributed Ledger for Recording and Managing Financial Agreements\nCorda is a distributed ledger platform designed from the ground up to record, manage and synchronise financial agreements between regulated financial institutions. It is heavily inspired by and captures the benefits of blockchain systems, without the design choices that make blockchains inappropriate for many banking scenarios.\nCorda\u2019s key features include:\n\nCorda has no unnecessary global sharing of data: only those parties with a legitimate need to know can see the data within an agreement\nCorda choreographs workflow between firms without a central controller\nCorda achieves consensus between firms at the level of individual deals, not the level of the system\nCorda\u2019s design directly enables regulatory and supervisory observer nodes\nCorda transactions are validated by parties to the transaction rather than a broader pool of unrelated validators\nCorda supports a variety of consensus mechanisms\nCorda records an explicit link between human-language legal prose documents and smart contract code\nCorda is built on industry-standard tools\nCorda has no native cryptocurrency\n\nCorda\u2019s design is the result of detailed analysis and prototyping with our members and will be open sourced when the code has matured further.\nIn the remainder of this post, I want to share some insight into our thinking.\u00a0 Why are we building Corda?\u00a0 Why have we made some of the design decisions we have?\u00a0 When will the code be ready for others to examine and build upon? How does this relate to other platforms and projects?\nA thought experiment\nWhen I joined R3 from IBM in September 2015, I forced myself to stop and think.\u00a0 The blockchain bandwagon was running at full speed, I\u2019d just been appointed CTO of a project intended to bring blockchains to finance but there was a nagging worry at the back of my mind\u2026\u00a0 how could I avoid falling into the trap of believing all the hype?!\nI imagined myself sitting in front of the CIO of one of our member banks some time in the future.\u00a0 I imagined we had naively selected a \u201cblockchain for finance\u201d based on what was popular at the time and widely deployed a range of products and services on top of it. And I imagined we had believed the hype, had suspended our critical faculties and had omitted any engineering. \u00a0In this imagined scenario, I now found myself facing an angry CIO, who wanted to know why the system I had built had just failed calamitously. Why on earth did I build it the way I did?!\nI concluded that an entirely inappropriate answer to that question would be: \u201cbecause blockchains were cool in 2015\u201d!\u00a0 No. That simply won\u2019t do.\nThe reality is that solutions based on selecting the design first and then trying to apply it to arbitrary problems never work out well.\u00a0 Every successful project I\u2019ve worked on started with the requirements, not some cool piece of technology, and I was determined to bring that discipline into our work at R3.\nRemind me again why a system designed to replace banks is also supposedly their saviour?\nAnd there is a second reason for this caution: the technology and finance industries collectively \u201cdecided\u201d some time in early 2015 that \u201cblockchain technology\u201d was somehow the future of financial services.\nIndeed, I am one of the most active proponents of precisely that claim. But the reason for blockchain technology\u2019s importance is extremely subtle \u2013 and this subtlety is something that most people seem to have missed.\nTo understand this, we need to look at Bitcoin.\nBitcoin\u2019s architecture, as I have often written, is a marvel.\u00a0 Its interlocking components are one of those rare examples of something so elegant that they seem obvious in hindsight, yet which required a rare genius to create.\nBut what is often missed is that the cleverest part of Bitcoin isn\u2019t actually its architecture; I think the cleverest part was to articulate the business problem.\u00a0 We don\u2019t tend to think of Bitcoin as being the solution to a \u201cbusiness problem\u201d but it can perhaps be thought of as a wonderfully neat solution to the problem of: \u201chow do I create a system where nobody can stop me spending my own money?\u201d\u00a0\u00a0 Now, I can\u2019t claim to know the mind of Satoshi and he certainly didn\u2019t write the whitepaper in this way but it triggers a very useful thought-experiment.\nIn fact, once you write this \u2018business problem\u2019 down, the design drops out almost trivially!\u00a0 (Almost\u2026) You want always to be able to spend your own money? Then you can\u2019t have a central point of control.\u00a0 It could be shut down by the authorities.\u00a0 You can\u2019t even have a collection of validators with known identities as they could also be shut down with concerted effort.\u00a0 Very quickly you realise you need a massively replicated consensus system and, if you don\u2019t want to tie actions to real-world identities, you need something like Proof of Work to make the voting work.\u00a0 You work the logic through and pretty much the whole design (the blockchain, the need for mining, block rewards, maybe even the UTXO transaction model, etc., etc.) drops out.\u00a0 Of course, it does push a lot of work onto the users: confiscation of somebody\u2019s bitcoins is easy if you know their private key\u2026 but let\u2019s leave that to one side for now.\nAnd this way of looking at it is important because it highlights how Bitcoin\u2019s blockchain can be thought of as the solution to a business problem.\u00a0\u00a0\u00a0 Satoshi Nakamoto didn\u2019t wake up one morning wanting to \u201capply Blockchain to finance\u201d.\u00a0 Blockchain was the tool that was invented to solve a real problem.\nSo we have a conundrum, right?\u00a0 If that\u2019s the case, then what on earth is the argument that says blockchain has any relevance at all to banking?!\nIndeed, last time I checked, banks have the inverse of my Bitcoin problem statement!\nWhat is the defining characteristic of blockchain systems?\nSo I spent most of October sitting in a dark room (really! This was our first London office\u2026 a tiny four-person room in a shared working space in the City of London) questioning some of the most fundamental assumptions about blockchains.\u00a0 What is it exactly that makes them interesting to banks?\nMost people had already made the mental leap that the \u201cbitcoin package\u201d was unacceptable as a take-it-or-leave-it deal: proof of work is unnecessary for private deployments, for example. \u00a0But, as I looked around, all I could see was firms who had accepted everything else\u2026\u00a0 It seemed strange to me that, as an industry, we could tease apart one part of the \u201cblockchain bundle\u201d but then stop there.\nI spent several of my earlier, formative years at IBM in a role called \u201ctechnical sales\u201d.\u00a0 If you\u2019ve ever bought technology from a large IT vendor, you\u2019ll have met somebody like me.\u00a0 We\u2019re the people who visit clients with the sales rep and act as the technical expert: we explain how the product works, make sure we\u2019re proposing the right solution to the client and ensure there is no technical barrier to closing the deal.\nA lesson I learned very early in that role was: it doesn\u2019t matter how hard you wish or how many client meetings you schedule or how aggressive the sales rep gets, if you can\u2019t show how your solution is going to solve the client\u2019s business problem then the deal almost certainly won\u2019t close.\u00a0 And those that do are the ones you\u2019ll live to regret\u2026\nFast forward a decade, and as I surveyed the blockchain landscape in October 2015, all I could see was excitable (and vocal!) firms touting solutions that made very little sense to me for the kinds of problems I was trying to solve.\u00a0 I will confess to many moments of self-doubt:\u00a0 maybe they were all sane and I was the mad one..?!\nBut I ploughed on: even if they are right that a \u201ctake it or leave it\u201d blockchain design is the saviour of the financial industry, I\u2019ll be doing our members a favour if I could explain why.\nSo we started picking away at what can perhaps be called the \u201cblockchain bundle\u201d:\u00a0 the collection of services that blockchains provide to those who use them.\nWe concluded that a blockchain such as the ones underlying Bitcoin or Ethereum or any of the private variations actually provide at least five interlocking, but distinct, services.\u00a0 And the right approach is to treat them as a menu from which to select and customise\u2026 different combinations, in different flavours, for different business problems.\nCONSENSUS\nThe first, and most important, feature of blockchains \u2013 and the thing that is probably genuinely new in terms of scale and scope \u2013 is that they create a world where parties to a shared fact know that the fact they see is the same as the fact that other stakeholders see:\n\u201cI see what you see\u2026 and I know that what I see is what you see\u201d\nAnd, critically:\n\u201cI know that you know that I know\u201d!\u00a0\nAnd:\n\u201cI know that you know that I know that you know\u2026\u201d\nAnd so on\u2026\nAnd it makes this promise across the Internet between mutually untrusting parties.\u00a0 Sure: consensus systems and replicated state machines have existed for years but consensus systems at Internet scale, between untrusting actors, that work in the face of powerful adversaries? That\u2019s a step forward.\nIn Bitcoin, the shared facts are things like: \u201cWhat are all the bitcoin (outputs) that have not yet been spent and what needs to happen for them to be validly spent?\u201d.\u00a0 And the facts are shared between all full node users.\nIn Ethereum, the shared fact is the state of an abstract virtual computer.\nBut notice something interesting: there isn\u2019t some law of nature that says the set of people who have to be in consensus is the whole world.\u00a0 Bitcoin just happens to work that way because of its unique business problem. \u00a0\u00a0If you don\u2019t have Bitcoin\u2019s business problem then be very wary of those trying to sell you something that looks like a Bitcoin solution.\nVALIDITY\nThe second feature in the \u201cblockchain bundle\u201d is validity. Tightly linked to consensus, this feature is the one that allows us to know whether a given proposed update to the system is valid. It is how we define the rules of the game.\u00a0 What does a valid \u201cfact\u201d look like in the system?\u00a0 What does a valid update to that fact look like?\nUNIQUENESS\nThe third feature in the blockchain bundle is its \u201cuniqueness service\u201d.\u00a0\u00a0 I can quite easily create two perfectly valid updates to a shared fact but if they conflict with each other then we need everybody who cares about that fact to know which, if either, of those updates we should select as the one we all agree on.\u00a0 The \u201canti-double-spend\u201d feature of blockchains gives us precisely this service and it\u2019s hugely important.\nIMMUTABILITY\nThe fourth feature in the \u201cBlockchain Bundle\u201d is often, if misleadingly, termed \u201cimmutability\u201d: data, once committed, cannot be changed.\nThis isn\u2019t quite true: if I have a piece of data then of course I can change it.\u00a0 What we actually mean is that: once committed, nobody else will accept a transaction from me if it tries to build on a modified version of some data that has already been accepted by other stakeholders.\nBlockchains achieve this by having transactions commit to the outputs of previous transactions and have blocks commit to the content of previous blocks.\u00a0 Each new step can only be valid if it really does build upon an unchangeable body of previous activity.\nAUTHENTICATION\nThe final critical feature in the \u201cBlockchain Bundle\u201d is authentication: every action in the system is almost always associated with a private key; there is no concept of a \u201cmaster key\u201d or \u201cadministrator password\u201d that gives God-like powers.\u00a0\u00a0 This is quite different to traditional enterprise systems where these super-user accounts are prevalent and petrifying from a security perspective.\nSo what is the financial services business problem?\nSo why did I take us through this analysis?\u00a0 Because it gets us to the heart of the distributed ledger domain: the thing that is genuinely new is the emergence of platforms, shared across the Internet between mutually distrusting actors, that allow them to reach consensus about the existence and evolution of facts shared between them.\nSo if that\u2019s what this is all about, then what are the \u201cshared facts\u201d that matter in finance? What business problem would we need to have for any of this work to be of any use at all?\nAnd this is the light bulb moment and the fundamental insight driving the entire Corda project:\nThe important \u201cshared facts\u201d between financial institutions are financial agreements:\n\nBank A and Bank B agree that Bank A owes 1M USD to Bank B, repayable via RTGS on demand.\nThis is a cash demand deposit\nBank A and Bank B agree that they are parties to a Credit Default Swap with the following characteristics\nThis is a derivative contract\nBank A and Bank B agree that Bank A is obliged to deliver 1000 units of BigCo Common Stock to Bank B in three days\u2019 time in exchange for a cash payment of 150k USD\nThis is a delivery-versus-payment agreement\n\u00a0\u2026 and so on\u2026\n\nThe financial industry is pretty much defined by the agreements that exist between its firms and these firms share a common problem:\u00a0 the agreement is typically recorded by both parties, in different systems and very large amounts of cost are caused by the need to fix things when these different systems end up believing different things. Multiple research firms have postulated that tens of billions of dollars are spent each year on this problem.\nIn particular, these systems typically communicate by exchanging messages: I send an update to you and just hope you reach the same conclusion about the new state of the agreement that I did.\u00a0 It\u2019s why we have to spend so much money on reconciliation to check that we did indeed reach the same conclusions and more money again to deal with all the problems we uncover.\nNow imagine we had a system for recording and managing financial agreements that was shared across firms, that recorded the agreement consistently and identically, that was visible to the appropriate regulators and which was built on industry-standard tools, with a focus on interoperability and incremental deployment and which didn\u2019t leak confidential information to third parties.\u00a0 A system where one firm could look at its set of agreements with a counterpart and know for sure that:\n\u201cWhat I see is what you see and we both know that we see the same thing and we both know that this is what has been reported to the regulator\u201d\nThat\u2019s Corda.\nHow does Corda choose from the \u201cBlockchain Bundle\u201d Menu?\nSo now we understand the financial services requirement, we can look again at the \u201cBlockchain Bundle\u201d menu from above and outline the choices we\u2019ve made.\nCONSENSUS\nA critical piece of the Corda philosophy is that our problem is to ensure that \u201cI know that you see the same details about a shared fact that I see\u201d.\nBut this does not mean that a third party down the road also needs to see it: our consensus occurs between parties to deals, not between all participants.\nVALIDITY\nFurthermore, in Corda, the only people who need to be in agreement about a fact are the stakeholders to that fact:\u00a0 if you and I agree about something that pertains only to us then why should we care what some completely unrelated third party thinks?\u00a0 And why would we even think of sending them a copy so they could opine on it? So, in Corda, we let users write their validation logic in time-tested industry-standard tools and we define who needs to be in agreement o",
                "fallback": "Richard Gendal Brown Link: Introducing R3 Corda\u2122: A Distributed Ledger Designed for Financial&nbsp;Services",
                "from_url": "http:\/\/gendal.me\/2016\/04\/05\/introducing-r3-corda-a-distributed-ledger-designed-for-financial-services\/",
                "id": 1
            }
        ],
        "ts": "1459953542.000068"
    },
    {
        "type": "message",
        "user": "U0RSTB2DB",
        "text": "My agenda for the Requirements WG meeting is here: <https:\/\/docs.google.com\/document\/d\/13FjPRZT1vzIMzUJfkjCA3lIIL_wjSOhwhUIf-jvKhL0\/edit?usp=sharing>",
        "ts": "1459953945.000070"
    },
    {
        "type": "message",
        "user": "U0N1ST4MN",
        "text": "<@U0RSTB2DB>: from R3 Corda \"Secondly, our focus is on agreements: the need to link to legal prose is considered from the start.\u201d Existing contracts are a world wide web of business relationships. A good chunk of them can be automated through chaincode, but there is a need for a clear link between contracts and smart contracts. From a technical prospective this means turning existing contracts into objects and relationships in such a way that they can be read both by humans and machines.",
        "edited": {
            "user": "U0N1ST4MN",
            "ts": "1459954624.000000"
        },
        "ts": "1459954542.000071"
    },
    {
        "user": "U0MJ8DFB3",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0MJ8DFB3|andreas.fletcher> has joined the channel",
        "ts": "1459955944.000073"
    },
    {
        "user": "U0NF7DF2A",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0NF7DF2A|todd_mcd_r3> has joined the channel",
        "ts": "1459955968.000074"
    },
    {
        "user": "U0N20TJUA",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0N20TJUA|guruprasath> has joined the channel",
        "ts": "1459971710.000075"
    },
    {
        "user": "U0V5BRYUT",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0V5BRYUT|yu-kang> has joined the channel",
        "ts": "1459978064.000076"
    },
    {
        "type": "message",
        "user": "U0RSTB2DB",
        "text": "Looking over the use case template, I think we have some \u201crequirements\u201d which may be architecture decisions.  For example -\"Consensus protocol: Proof of Work, Proof of Stake, Open Federation...\u201d. It\u2019s not obvious to me that the requirements WG should specify the implementation. I think we should specify the required behavior - e.g. 1000 nodes, finality of 10 seconds, how uniqueness is handled (borrowing term from <@U0KMHDKK3> Corda blog post), etc. These requirements should drive the architecture decisions. What do you think <@U0UFDAS91> <@U0L7U7MK3> <@U0Q7KRNSJ> <@U0UK8RF6Y> and anyone else?",
        "edited": {
            "user": "U0RSTB2DB",
            "ts": "1460003507.000000"
        },
        "ts": "1460003449.000077"
    }
]
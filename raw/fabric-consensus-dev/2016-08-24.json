[
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i just had an epiphany",
        "ts": "1472038698.000883"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "with only one outstanding batch, i don't think we need more than an \"implicit watermark\" of 1",
        "ts": "1472038742.000884"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I don't know that I agree",
        "ts": "1472042215.000885"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Because although you have ordering within a single stream, you don't have it across streams, it's perfectly possible that you could receive prepares for 10 seqNos from a backup before ever receiving the first pre-prepare from the primary",
        "ts": "1472042272.000886"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "hmm",
        "ts": "1472043051.000887"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so you're telling me that you can only do any sort of BFT with watermarks?",
        "ts": "1472043078.000888"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i agree that we should buffer messages that refer to the future",
        "ts": "1472043107.000889"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but that's at each replica's discretion",
        "ts": "1472043121.000890"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "If you are going to buffer things in a bounded way, it seems like you have no choice but to implement a sort of watermarks",
        "ts": "1472043414.000891"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "And, for garbage collection purposes, unless you want to change the view change substantially (or set K=1) then they also seem useful",
        "ts": "1472043453.000892"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i want that a new request will only be pre-prepared when the previous request committed",
        "ts": "1472043458.000893"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "did you have a chance to look at my new code?",
        "ts": "1472043473.000894"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I have not",
        "ts": "1472043482.000895"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i'm trying to make it easier to read",
        "ts": "1472043482.000896"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "<https:\/\/github.com\/corecode\/fabric\/tree\/master\/consensus\/simplebft>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "corecode\/fabric",
                "title_link": "https:\/\/github.com\/corecode\/fabric\/tree\/master\/consensus\/simplebft",
                "text": "Blockchain fabric code",
                "fallback": "GitHub: corecode\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/177979?v=3&s=400",
                "from_url": "https:\/\/github.com\/corecode\/fabric\/tree\/master\/consensus\/simplebft",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1472043512.000897"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i'd appreciate feedback",
        "ts": "1472043521.000899"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Okay, not positive if I'll get a chance to review today, but will try to tomorrow",
        "ts": "1472043561.000900"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and one property is that there is just one request in flight at a time",
        "ts": "1472043562.000901"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "okay",
        "ts": "1472043568.000902"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i'll be out from tomorrow including tuesday",
        "ts": "1472043577.000903"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Oh okay, enjoy your vacation",
        "ts": "1472043635.000904"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "moving stuff from berlin :confused:",
        "ts": "1472043643.000905"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "no vacation",
        "ts": "1472043645.000906"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Oh, that is noticeably less fun",
        "ts": "1472043656.000907"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "dealing with a guy who used my bed and wants rent from me for taking up space...",
        "ts": "1472043695.000908"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Oh, that's unfortunate, good luck",
        "ts": "1472043779.000909"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "thanks",
        "ts": "1472043783.000910"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so, if the primary is only allowed to pre-prepare after a request commits",
        "ts": "1472043814.000911"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "that means that a quorum of correct replicas must have committed the previous request",
        "ts": "1472043867.000912"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and they won't send a prepare for the next unless the previous request committed",
        "ts": "1472043893.000913"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "now if i'm correct but lagged asymmetrically, i might receive some sequence numbers before the commits of the previous request",
        "ts": "1472043944.000914"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Right",
        "ts": "1472043968.000915"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i'm trying to figure out, is it sufficient to just talk about a maximum of 2 requests in a new-view message?",
        "ts": "1472043984.000916"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "the most recently committed request, and the most recently prepared one?",
        "ts": "1472044008.000917"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "the terminology always confuses me",
        "ts": "1472044087.000918"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "the most recent one that a quorum received prepare messages and sent commit messages",
        "ts": "1472044132.000919"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and the most recent one that a quorum received pre-prepare messages and send prepare messages",
        "ts": "1472044152.000920"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i wish there was a simple bft protocol without this complicated watermark business",
        "ts": "1472044202.000921"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "You could set K=1",
        "ts": "1472044371.000922"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Then you would never have to talk about prepared and committed stuff",
        "ts": "1472044405.000923"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Just pick the initial checkpoint, and work from there",
        "ts": "1472044424.000924"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yea, that's what i thought",
        "ts": "1472044466.000925"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Maybe you would have to deal with one prepared",
        "ts": "1472044467.000926"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but it isn't sufficient",
        "ts": "1472044475.000927"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i think",
        "ts": "1472044490.000928"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "because in pbft, there can be multiple outstanding checkpoints",
        "ts": "1472044514.000929"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so L=1 too?",
        "ts": "1472044519.000930"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I think you could potentially come up with a 'correct' protocol that way, but I think it's only going to exacerbate the problem of only 2f+1 correct nodes ever being in sync",
        "ts": "1472044589.000931"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "the question is: do i implement all the watermark stuff etc",
        "ts": "1472044607.000932"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "or is there a simpler way",
        "ts": "1472044613.000933"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "if we require synchrony for every request",
        "ts": "1472044634.000934"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I think the complicated piece is view change, otherwise the watermarks are pretty simple?",
        "ts": "1472044636.000935"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1472044641.000936"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "So, I'd be inclined to say \"Keep watermarks, but set K=1\"",
        "ts": "1472044658.000937"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i looked at viewchange.go",
        "ts": "1472044662.000938"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and boy it is complicated and confusing",
        "ts": "1472044672.000939"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "So your view change should be very simple, and the watermarks for checkpoint garbage collection aren't that bad",
        "ts": "1472044676.000940"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Yes, viewchange.go is a dense piece of code",
        "ts": "1472044694.000941"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i wanted to hardcode K=1, but marko wants to be able to checkpoint less often",
        "ts": "1472044751.000942"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but i think independent of that, in pbft, there can be multiple in flight checkpoints",
        "ts": "1472044768.000943"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "even with K=1",
        "ts": "1472044770.000944"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Definitely there can be",
        "ts": "1472044775.000945"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "But, the view change gets very simple, because you only operate on sequence numbers in the impending checkpoint window, which means you only have 1 seqNo to operate on",
        "ts": "1472044810.000946"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so the new-view becomes complicated, because suddenly there are multiple requests being \"pre-prepared\" at once",
        "ts": "1472044817.000947"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "no, i don't think so",
        "ts": "1472044836.000948"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i think you're talking about L=1?",
        "ts": "1472044844.000949"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "No",
        "ts": "1472044853.000950"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "The only way a checkpoint stable cert happens is if 2f+1 have committed for that sequence number",
        "ts": "1472044884.000951"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1472044890.000952"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "And the only way you prepare, is if you've committed the previous seqNo",
        "ts": "1472044910.000953"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "that makes it L=1?",
        "ts": "1472044925.000954"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Oh, I was just following the rule you'd suggested earlier",
        "ts": "1472044962.000955"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "ok",
        "ts": "1472044966.000956"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "go on",
        "ts": "1472044968.000957"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "So, assume that a request has prepared",
        "ts": "1472044982.000958"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Then there are 2f+1 checkpoints for the previous sequence number",
        "ts": "1472045005.000959"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "ok, so i will only send a prepare if the previous seq did not only commit, but also reach a stable checkpoint?",
        "ts": "1472045033.000960"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I'd have to work through the corner cases, but I don't think that's necessary.  On view change, everyone sends their own checkpoint store, and if there are f+1 checkpoints for a given sequence number, that's (mostly) sufficient to pick it",
        "ts": "1472045104.000961"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "So my proposition is, that on view change, we would always end up picking the highest valid checkpoint which existed, which would ensure that there was only ever 1 prepared request with higher sequence number",
        "ts": "1472045157.000962"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "ah, and the reason is that because i send a checkpoint after a request commits",
        "ts": "1472045204.000963"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and i also send a prepare only after a request commits",
        "ts": "1472045224.000964"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "it implies that (short of message loss?) a checkpoint message must have been sent (and received) before the prepare?",
        "ts": "1472045299.000965"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "unless we do something asynchronous that might send the checkpoint message any time later",
        "ts": "1472045339.000966"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Sent yes, received I don't think is necessary",
        "ts": "1472045344.000967"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Because on view change, the checkpoint store is sent",
        "ts": "1472045364.000968"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i'm wondering whether it is possible that there are multiple checkpoints outstanding",
        "ts": "1472045379.000969"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "So, if 2f+1 have sent the checkpoint, it's in their store, and so in order to achieve 2f+1 view change messages, at least f+1 of them must include that checkpoint",
        "ts": "1472045406.000970"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "2f+1 correct?",
        "ts": "1472045430.000971"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "or any 2f+1",
        "ts": "1472045434.000972"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "hmmm",
        "ts": "1472045489.000973"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "no, i don't get it",
        "ts": "1472045503.000974"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "or do i?",
        "ts": "1472045547.000975"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "ah, i include the latest checkpoint (for my latest executed request) in the view-change message",
        "ts": "1472045629.000976"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and short of stragglers, 2f+1 must have either committed seq N or seq N+1",
        "ts": "1472045666.000977"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Now I'm second guessing the original view change protocol.  In a network of 3f+1 with K=1, say f non-byzantine nodes are slow because that happens, and have their last seqNo=4 and no prepare\/preprepare, the rest of the network of 2f+1, including f byzantine just wrote a checkpoint for seqNo=5.  Suddenly a view change starts, but those f who are at seqNo=4 send their checkpoint store and no p-set or q-set, and the f byzantine see this, so pile on and copy them, and only 1 non-behind non-byzantine node sends in a view change message with seqNo=5 and that checkpoint.",
        "ts": "1472046239.000978"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "So the view change contains 2f matching attestations that the last checkpoint was at seqNo=4, and one claiming it was at seqNo=5.  I guess it's fine, the network can settle on the wrong checkpoint, because nothing will preprepare\/prepare because f+1 guys are at seqNo=5",
        "ts": "1472046418.000979"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "And eventually it will view change again, and hopefully eventually get a set of f+1 correct checkpoints? Really need to go reread the view change section of the paper I suppose",
        "ts": "1472046458.000980"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i think that's where L comes in",
        "ts": "1472046468.000981"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "seqno=5 does not have a stable checkpoint in the view-change messages",
        "ts": "1472046491.000982"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so seqno=4 it is",
        "ts": "1472046496.000983"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so new primary then assigns seqno=5 to that request, and everybody does the prepare\/commit cycle for 5",
        "ts": "1472046545.000984"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "no?",
        "ts": "1472046547.000985"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "But f+1 non-byzantine guys have already committed a request at seqNo=5",
        "ts": "1472046592.000986"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1472046597.000987"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "So I would say the new primary assigns seqNo=5, and it cannot possibly prepare\/commit",
        "ts": "1472046605.000988"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "the same request will be prepared",
        "ts": "1472046605.000989"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Those f+1 won't send a prepare",
        "ts": "1472046624.000990"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "they will",
        "ts": "1472046631.000991"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "independent of whether they already executed it or not",
        "ts": "1472046645.000992"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "How do they know it's the same request they already prepared?",
        "ts": "1472046648.000993"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "They've already garbage collected that, because they hit a stable checkpoint",
        "ts": "1472046661.000994"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "hum",
        "ts": "1472046677.000995"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "seqNo=5 is under their watermark",
        "ts": "1472046694.000996"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes i see",
        "ts": "1472046700.000997"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "that view change protocol always was sketchy to me",
        "ts": "1472046714.000998"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "or i just don't get it",
        "ts": "1472046720.000999"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I strongly suspect this is handled, but it's so complicated I have to reread and re convince myself every so often, and I guess it's that time",
        "ts": "1472046782.001000"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1472046814.001001"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and that makes it essentially impossible to implement without errors",
        "ts": "1472046834.001002"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "We also implemented the unbounded memory growth version, which always troubled me",
        "ts": "1472046859.001003"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yea",
        "ts": "1472046867.001004"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so let's talk about simplified",
        "ts": "1472046877.001005"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "conceptually, the view change should be the same as all nodes crash and come back up",
        "ts": "1472046955.001006"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "right?",
        "ts": "1472046956.001007"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Sure",
        "ts": "1472047014.001008"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so if everything is sequential, we have (a) the last request we executed",
        "ts": "1472047055.001009"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and possibly (b) a subsequent request that we sent a commit for (because we received a quorum of prepares)",
        "ts": "1472047099.001010"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and then there is (c) we sent a prepare for because we received a pre-prepare",
        "ts": "1472047134.001011"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "either there are 2f+1 for (a) and seqno=X",
        "ts": "1472047206.001012"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "or there are 2f+1 for (a) and seqno=X and seqno=X+1",
        "edited": {
            "user": "U0XR6J961",
            "ts": "1472047241.000000"
        },
        "ts": "1472047221.001013"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "right?",
        "ts": "1472047228.001014"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "So (a) is equivalent to \"we have a quorum of commits\"",
        "ts": "1472047275.001016"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1472047293.001017"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "well no",
        "ts": "1472047305.001018"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "even more",
        "ts": "1472047308.001019"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "a quorum of checkpoints",
        "ts": "1472047315.001020"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "it implies a quorum of commits, and a quorum of prepares",
        "ts": "1472047340.001021"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Ah, okay.  Moving on then:\n\n&gt; either there are 2f+1 for (a) and seqno=X\nThere are 2f+1 what's? What is  X? \n\n&gt; or there are 2f+1 for (a) and seqno=X and seqno=X+1\nAgain, 2f+1 whats? and how can seqNo=X and X+1",
        "ts": "1472047378.001022"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "2f+1 nodes claim that they have executed seqno=X",
        "ts": "1472047404.001023"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "some might claim they executed seqno=X+1",
        "ts": "1472047427.001024"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Well, you have to subtract f, no? Because f of your 2f+1 may be byzantine",
        "ts": "1472047442.001025"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1472047452.001026"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "hm",
        "ts": "1472047458.001027"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but that's fine",
        "ts": "1472047525.001028"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "because that still leaves at least f+1 correct replicas to have executed seqno=X",
        "ts": "1472047542.001029"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Yes",
        "ts": "1472047584.001030"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so some of these 2f+1 may talk about having executed X+1",
        "ts": "1472047611.001031"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and that can include correct replicas",
        "ts": "1472047636.001032"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but for that to be true, 2f+1 must talk about having sent a commit for X+1",
        "ts": "1472047665.001033"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "right?",
        "ts": "1472047672.001034"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so, that's (b)",
        "ts": "1472047685.001035"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "But the part that seems really tricky to me",
        "ts": "1472047761.001036"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Is that traditionally you can only wait for 2f+1 replies",
        "ts": "1472047778.001037"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "not during new-view",
        "ts": "1472047788.001038"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "So, if f are byzantine, and f are behind",
        "ts": "1472047790.001039"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "the paper says that you may have to wait for more than n-f view-change messages",
        "ts": "1472047802.001040"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "hm i see",
        "ts": "1472047820.001041"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes, so it is f+1 that are actually sufficient?",
        "ts": "1472047831.001042"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and that dense fig. 4 in the pbft paper doesn't help either",
        "ts": "1472047953.001043"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I don't know that f+1 is actually sufficient, for risk of getting to a valid but old point",
        "ts": "1472048544.001044"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "This is why you need 2f+1 agreement on some things, low watermarks maybe?",
        "ts": "1472048568.001045"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so i think first, f+1 correct replicas have to be at state X or state X+1",
        "ts": "1472048573.001046"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "right?",
        "ts": "1472048577.001047"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I think 2f+1 need to agree that the lowest state is X, which should be able to happen",
        "ts": "1472048605.001048"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so we send current state and previous state in the view-change message?",
        "ts": "1472048768.001049"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "that seems reasonable",
        "ts": "1472048777.001050"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and aligns well with the block chain thing",
        "ts": "1472048788.001051"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "So, f+1 attesting to a state at or above what the highest state 2f+1 are aware of",
        "ts": "1472048922.001052"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I think works",
        "ts": "1472048923.001053"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i don't understand that sentence",
        "ts": "1472049058.001054"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "if there are more than f at a state X, then X is the new starting point",
        "ts": "1472049103.001055"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I don't think that's valid",
        "ts": "1472049229.001056"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "If there are more than f at state X, then X is a valid state, but may be old",
        "ts": "1472049243.001057"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I think first, you need 2f+1 to agree that state X is not an outdated state",
        "ts": "1472049264.001058"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "by being in that state or in the state after it?",
        "ts": "1472049281.001059"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "By being in that state or in a state before it",
        "ts": "1472049290.001060"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "ok, same thing",
        "ts": "1472049295.001061"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": ":slightly_smiling_face:",
        "ts": "1472049296.001062"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "a state?",
        "ts": "1472049301.001063"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "or the state before it?",
        "ts": "1472049304.001064"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "So if f+1 assert that seqNo=10, with checkpoint of foo, then we need 2f+1 (including those f+1, so f additional) to assert that they are not past seqNo=10",
        "ts": "1472049365.001065"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "f+1 gives you correctness, and 2f+1 gives you that there are not f+1 with a newer correct state",
        "ts": "1472049394.001066"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so what if some assert seqno=11",
        "ts": "1472049461.001067"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "correct replicas",
        "ts": "1472049466.001068"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Well, if there are f+1 correct replicas asserting seqno=11, then we will not get 2f+1 asserting that 10 is a current state, so, we will not produce a valid view starting from 10",
        "ts": "1472049549.001069"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Instead, the view change messages will continue to collect until those f+1 correct replicas vouch for seqNo=11, and that will be chosen as the starting point",
        "ts": "1472049571.001070"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "what if &lt;f+1 replicas are qt seqno=11?",
        "ts": "1472049609.001071"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "correct ones",
        "ts": "1472049622.001072"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "That's not possible?",
        "ts": "1472049653.001073"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "why?",
        "ts": "1472049678.001074"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "couldn't it that seqno=11 prepared, but then some network outage prevented commits from reaching everybody?",
        "ts": "1472049738.001075"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Oh, so yes, that is possible",
        "ts": "1472049738.001076"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Right",
        "ts": "1472049741.001077"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "wow, the brain gymnastics",
        "ts": "1472049749.001078"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Which is why you still have to contend with the that single prepared possibility for that sequence number",
        "ts": "1472049761.001079"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1472049783.001080"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "However, in that case, since it did not commit everywhere, you would have f+1 asserting seqNo=10, and only f asserting that 11 was the current state, so you could successfully view change to seqNo=10, but, in order for anyone to have committed, it must have prepared at at least f+1 correct replicas, so it should be included in the view change.  This gets back to my original question though, of if f are byzantine and lie about that prepare, and f are not included in the view change message, that only leaves one person attesting to the prepare, which I didn't think was enough to include it",
        "ts": "1472049936.001081"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "But, I suppose since f+1 valid replicas did prepare it, that nothing else should prepare for that sequence number",
        "ts": "1472049983.001082"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "why f+1 valid?",
        "ts": "1472050025.001083"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "ah yes",
        "ts": "1472050032.001084"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but if f assert that 11 was current state, that doesn't say anything",
        "ts": "1472050052.001085"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but &gt;=f+1 assert that 11 prepared (i.e. they sent commit messages)",
        "ts": "1472050090.001086"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "actually 2f+1",
        "ts": "1472050106.001087"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "well, f+1 is sufficient",
        "ts": "1472050126.001088"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "to pre-prepare 11 again",
        "ts": "1472050142.001089"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "my feeling is that a replica that restarts should do the same",
        "ts": "1472050410.001090"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and send a view-change",
        "ts": "1472050413.001091"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "or very similar",
        "ts": "1472050423.001092"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "to do state transfer",
        "ts": "1472050438.001093"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Yes, I think restarting should basically initiate a view change",
        "ts": "1472050496.001094"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "or a state transfer",
        "ts": "1472050689.001095"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Well, by view-change I mean to have the network sync with the new replica on a starting point",
        "ts": "1472050815.001096"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "In an ideal world, the view change would not even need to change leaders",
        "ts": "1472050839.001097"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Just have everyone on the network compute and send a view change message to the new replica, and it should be able to compute a starting point",
        "ts": "1472050868.001098"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1472050880.001099"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "More of a 'current-view' than a 'view-change'",
        "ts": "1472050883.001100"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "although they might refer to different commits",
        "ts": "1472050892.001101"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but then there would be a commit certificate for that replica to pick up on",
        "ts": "1472050913.001102"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Yes, I suppose the reason why view-change works, is because the network halts during it",
        "ts": "1472050920.001103"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "okay, i'll have to let that sink in",
        "ts": "1472051225.001104"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "would be great if you could give some comments on the code i wrote",
        "ts": "1472051238.001105"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Yes, I'll try to get to that tomorrow, or at the very least before Tuesday",
        "ts": "1472051267.001106"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "(Since I assume you'll not be doing work until your return then?)",
        "ts": "1472051287.001107"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yep",
        "ts": "1472051440.001108"
    },
    {
        "user": "U24M29R4G",
        "text": "<@U24M29R4G|nikileshsa> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1472075739.001109"
    },
    {
        "user": "U1WUAQJVC",
        "text": "<@U1WUAQJVC|pushpalatha> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1472108389.001110"
    }
]
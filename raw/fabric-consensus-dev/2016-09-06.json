[
    {
        "user": "U23JFU108",
        "text": "<@U23JFU108|csehd> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1473151011.000017"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U23JFU108> has some interesting errors when bombing fabric with transactions",
        "ts": "1473151389.000018"
    },
    {
        "type": "message",
        "user": "U23JFU108",
        "text": "Moment pls. I'm trying to reproduce the phenomenon",
        "ts": "1473151444.000019"
    },
    {
        "type": "message",
        "user": "U23JFU108",
        "text": "Hy everyone. I have a bug, maybe related with pbft consensus.",
        "ts": "1473154124.000020"
    },
    {
        "type": "message",
        "user": "U23JFU108",
        "text": "I have 4 validating peer with pbft consensus",
        "ts": "1473154144.000021"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "which code version?",
        "ts": "1473154151.000022"
    },
    {
        "type": "message",
        "user": "U23JFU108",
        "text": "aug 19",
        "ts": "1473154159.000023"
    },
    {
        "type": "message",
        "user": "U23JFU108",
        "text": "<https:\/\/gerrit.hyperledger.org\/r\/gitweb?p=fabric.git;a=commit;h=ef8351d345e36a17c5ca10df386fb2a708823153>",
        "ts": "1473154167.000024"
    },
    {
        "type": "message",
        "user": "U23JFU108",
        "text": "I will try it with the latest master version as well",
        "ts": "1473154205.000025"
    },
    {
        "type": "message",
        "user": "U23JFU108",
        "text": "I have a workload generator, which stress all peer at the same time at a constant 50 invokes\/sec\/peer via REST API chaincode endpoint",
        "edited": {
            "user": "U23JFU108",
            "ts": "1473154361.000000"
        },
        "ts": "1473154295.000026"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "with or without security?",
        "ts": "1473154356.000027"
    },
    {
        "type": "message",
        "user": "U23JFU108",
        "text": "without security",
        "ts": "1473154366.000029"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "what's your batch size set to?",
        "ts": "1473154375.000030"
    },
    {
        "type": "message",
        "user": "U23JFU108",
        "text": "500",
        "ts": "1473154381.000031"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "okay",
        "ts": "1473154383.000032"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so what happens?",
        "ts": "1473154387.000033"
    },
    {
        "type": "message",
        "user": "U23JFU108",
        "text": "oh. I'm using the example02 chaincode",
        "ts": "1473154414.000034"
    },
    {
        "type": "message",
        "user": "U23JFU108",
        "text": "At the end of the measurement, The ledger has duplicate transactions",
        "ts": "1473154446.000035"
    },
    {
        "type": "message",
        "user": "U23JFU108",
        "text": "so the ledger state shows the future",
        "ts": "1473154454.000036"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yea, the example02 chaincode does not protect against replays",
        "ts": "1473154478.000037"
    },
    {
        "type": "message",
        "user": "U23JFU108",
        "text": "is it the chancode's role to protect from the duplicates?",
        "ts": "1473154508.000038"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "that's debatable",
        "ts": "1473154613.000039"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "something needs to protect against replays",
        "ts": "1473154640.000040"
    },
    {
        "user": "U17HK4VQR",
        "text": "<@U17HK4VQR|ikocsis> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1473154661.000041"
    },
    {
        "type": "message",
        "user": "U17HK4VQR",
        "text": "hi all",
        "ts": "1473154668.000042"
    },
    {
        "type": "message",
        "user": "U17HK4VQR",
        "text": "Simon, that means then that the fabric is \"allowed\" to retry requests and it is the express duty of the chaincode to recognize whether a duplicated attempt is being made?",
        "ts": "1473154740.000043"
    },
    {
        "type": "message",
        "user": "U17HK4VQR",
        "text": "Or am I misunderstanding what you are saying?",
        "ts": "1473154750.000044"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i don't think this is defined anywhere",
        "ts": "1473154764.000045"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so it is wild west",
        "ts": "1473154771.000046"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "if you use utxo, there are no successful replay attacks",
        "ts": "1473154793.000047"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "if you don't - you better think about which replay attacks you want to prevent",
        "ts": "1473154816.000048"
    },
    {
        "type": "message",
        "user": "U17HK4VQR",
        "text": "The weird thing is - I think we don't do replays; bunch of requests go in (each getting an ID and we record these), but no duplication and still we see duplicated instances of these txIDs in the ledgers",
        "ts": "1473154944.000049"
    },
    {
        "type": "message",
        "user": "U17HK4VQR",
        "text": "So the \"replay attack\", if you like, is a courtesy of the consensus",
        "ts": "1473154964.000050"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1473154970.000051"
    },
    {
        "type": "message",
        "user": "U17HK4VQR",
        "text": "Nice",
        "ts": "1473154974.000052"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but you will have to protect against it anyways",
        "ts": "1473154989.000053"
    },
    {
        "type": "message",
        "user": "U17HK4VQR",
        "text": "Well, that is true, now that I think about it",
        "ts": "1473155014.000054"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "let's say consensus was completely correct",
        "ts": "1473155020.000055"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but one of the peers was byzantine",
        "ts": "1473155024.000056"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "it could just duplicate your request",
        "ts": "1473155031.000057"
    },
    {
        "type": "message",
        "user": "U17HK4VQR",
        "text": "yep, right",
        "ts": "1473155040.000058"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "in this case these where non-byzantine peers, and <@U23JFU108> sent in every tx just once. isn't it a bug this way?",
        "ts": "1473155097.000059"
    },
    {
        "type": "message",
        "user": "U17HK4VQR",
        "text": "hgabor, yes, it would be still nice to know that what the heck happens in this specific case consensus-wise",
        "ts": "1473155178.000060"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes, there are bugs",
        "ts": "1473155187.000061"
    },
    {
        "user": "U1GLPP8QN",
        "text": "<@U1GLPP8QN|deeflorian> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1473155201.000062"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "the problem is that in the original pbft, the client waits until its request is processed",
        "ts": "1473155229.000063"
    },
    {
        "type": "message",
        "user": "U17HK4VQR",
        "text": "but this means that right now we are not working against the assumptions that fabric makes wrt the chaincode",
        "ts": "1473155230.000064"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and then sends another one, sequentially",
        "ts": "1473155236.000065"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and if it takes too long, it probably re-sends its request, under the assumption that the network lost it",
        "ts": "1473155261.000066"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "the protocol prevents this replay from being accepted by means of a sequence number per client",
        "ts": "1473155297.000067"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "in fabric, the peers act as \"client\"",
        "ts": "1473155309.000068"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so then you have the choice between sending one request per peer, sequentially",
        "ts": "1473155329.000069"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "effectively ruining performance",
        "ts": "1473155336.000070"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "or hoping that requests will be processed sequentially (optimistically sending in multiple)",
        "ts": "1473155372.000071"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "which leads to requests being skipped because of message reordering",
        "ts": "1473155387.000072"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "or accepting that some requests duplicate by mistake",
        "ts": "1473155416.000073"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "we have an idea of how to address this, by introducing virtual clients for every peer",
        "ts": "1473155435.000074"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but that has not been implemented, and likely won't be implemented in the current code",
        "ts": "1473155449.000075"
    },
    {
        "type": "message",
        "user": "U17HK4VQR",
        "text": "Simon, thanks - personally I have to process this it a bit; the takeaway is that chaincode02 has to be fixed for protection against replay.",
        "ts": "1473155652.000076"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "as I remember none of the examples is replay protected",
        "ts": "1473155696.000077"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "they are just toys",
        "ts": "1473155702.000078"
    },
    {
        "type": "message",
        "user": "U17HK4VQR",
        "text": "Is there any documentation that summarizes such requirements on the chaincode? (And maybe patterns for fulfilling them.)",
        "ts": "1473155729.000079"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "no",
        "ts": "1473155783.000080"
    },
    {
        "type": "message",
        "user": "U17HK4VQR",
        "text": "It's no problem that they are toys, but a big warning sign that \"weird things will happen if you use this\" would be nice :slightly_smiling_face:",
        "edited": {
            "user": "U17HK4VQR",
            "ts": "1473155808.000000"
        },
        "ts": "1473155793.000081"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "we should add one",
        "ts": "1473155851.000083"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "haha",
        "ts": "1473155874.000084"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "btw one can use GetTxByTxID or something to check if the txid is already used",
        "edited": {
            "user": "U1AU8DRQR",
            "ts": "1473155908.000000"
        },
        "ts": "1473155880.000085"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "this whole project doesn't have defined behaviour or design",
        "ts": "1473155997.000087"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "still i think we can agree that it'd be weird if a request dropped in through the rest api got duplicatied",
        "ts": "1473156089.000088"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "but somehow one got duplicated :slightly_smiling_face:",
        "ts": "1473156139.000089"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "and mitigating the responsibility of TxID checks to the chaincodes themselves seems a bit hackish",
        "ts": "1473156192.000090"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "...i'm not that up to date on the current status on the TxID generation, but there was a few mails on the list that the TxID should be generated from the hash of the payload",
        "ts": "1473156264.000091"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "yes and it can be generated from it",
        "ts": "1473156283.000092"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "I mean from the payload",
        "ts": "1473156292.000093"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "that'd contain the TS too?",
        "ts": "1473156293.000094"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "TS?",
        "ts": "1473156311.000095"
    },
    {
        "type": "message",
        "user": "U23JFU108",
        "text": "timestamp",
        "ts": "1473156317.000096"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "(timestamp on the api receiver end)",
        "ts": "1473156320.000097"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "currently not",
        "ts": "1473156331.000098"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "currently it does not contain that",
        "ts": "1473156339.000099"
    },
    {
        "type": "message",
        "user": "U17HK4VQR",
        "text": "<@U0XR6J961>, we see that (<@U1GLPP8QN> spent quite a bit of quality time with the code base and our as of now in-house model is still far from complete)",
        "edited": {
            "user": "U17HK4VQR",
            "ts": "1473156385.000000"
        },
        "ts": "1473156351.000100"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "yepp, but if it's a feature in a work-in-progress or a to-be-done state, then the \"bug\" will resolve itself",
        "edited": {
            "user": "U1GLPP8QN",
            "ts": "1473156456.000000"
        },
        "ts": "1473156416.000102"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "there was a debate on the list about what we should include in that hash. and some people said we should include a timestamp and\/or a nounce. so yes, if we make that happen then it will be ok",
        "ts": "1473156551.000104"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "though if i'm wrong, the _big warning sign_ is a nice temporary fix but further discussion might be needed",
        "ts": "1473156554.000105"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "but as I remember we agreed that hashing will only be modified in fabric new architecture",
        "ts": "1473156586.000106"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i'm happy to discuss possible solutions",
        "ts": "1473156691.000107"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "that'd still mean that this is just a temporary feature in a pre-1.0 release... kind of a relief :slightly_smiling_face:",
        "ts": "1473156696.000108"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U1GLPP8QN> what do you thing about including a nounce?",
        "ts": "1473156728.000109"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and this needs to be part of the architecture discussion",
        "ts": "1473156746.000110"
    },
    {
        "type": "message",
        "user": "U23JFU108",
        "text": "calculate with the clock-drift between peers",
        "edited": {
            "user": "U23JFU108",
            "ts": "1473156828.000000"
        },
        "ts": "1473156782.000111"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "what are we talking about?",
        "ts": "1473156845.000113"
    },
    {
        "type": "message",
        "user": "U23JFU108",
        "text": "I'm talking about including the nounce in the txid generation.",
        "ts": "1473156891.000114"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "well but how does that help",
        "ts": "1473156933.000115"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "you'd need a O(1) database to check for existing transactions",
        "ts": "1473156961.000116"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "which needs quite some space",
        "ts": "1473156981.000117"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U0XR6J961> how do we define if two transactions are the same?",
        "ts": "1473157010.000118"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes :slightly_smiling_face:, that's how it starts",
        "ts": "1473157043.000119"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "which replays do you want to prevent",
        "ts": "1473157055.000120"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "would give it a thumbs up on my part, but i think this is something that should be discussed on an architectural meeting? (and checking the generated nounces for possible duplicate messages should then be implemented on the consensus level?)",
        "ts": "1473157066.000121"
    },
    {
        "type": "message",
        "user": "U17HK4VQR",
        "text": "guys, I have to bail (something urgent came up) - <@U23JFU108>, <@U1GLPP8QN>: I am happy with any true solution, however hackish it may be",
        "ts": "1473157087.000122"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "...based on the last comments, this might even involve the requirements wg :smile:",
        "ts": "1473157171.000123"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U1GLPP8QN> I just realized some minutes ago that the duplication happens on consensus level so the issue may be harder, or am I wrong?",
        "ts": "1473157197.000124"
    },
    {
        "type": "message",
        "user": "U23JFU108",
        "text": "<@U1AU8DRQR> You are right. In my case, it is on Consensus level",
        "edited": {
            "user": "U23JFU108",
            "ts": "1473157299.000000"
        },
        "ts": "1473157269.000125"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U0XR6J961> case1: I only want to filter duplicated that arise from the multiple invocation of chaincodes with the same parameters (or... is that a duplicate?) case2: I also want to filter consensus level duplicates. what can I do?",
        "ts": "1473157306.000128"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "well, case1 includes case2",
        "ts": "1473157379.000129"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "i'd guess so (duplication in the execution queue or further down that pipe would affect other peers a lot more difficultly)",
        "ts": "1473157412.000130"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U0XR6J961> it includes, because if it comes from the consensus, that will generate a call to the chancode, right?",
        "ts": "1473157431.000131"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "<@U1AU8DRQR> on case1, I'd say that unless the CC also requires a unique id \/ ts from the client (which would be weird), the same parameters are quite probable",
        "ts": "1473157516.000132"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "(tx from A to B in a bank, same amount, same comment)",
        "ts": "1473157550.000133"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U1GLPP8QN> yes they are, and others say the some. however I\/we think that in a production system it is much more likely that the bitcoin technique will be used: inputs. those will easily stop having duplicates",
        "ts": "1473157707.000134"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "inputs and outputs, some kind of chain, you know what I mean",
        "ts": "1473157724.000135"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "well, but if you do utxo, you already have replay protection",
        "ts": "1473157799.000136"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "yes that is what I say :smile:",
        "ts": "1473157816.000137"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "and you keep it lightweight",
        "ts": "1473157828.000138"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "no need for general protection, you have a domain specific one",
        "ts": "1473157841.000139"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "also with the new architecture, the chaincode is executed first",
        "ts": "1473157858.000140"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and then the result goes through consensus",
        "ts": "1473157866.000141"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "and the changeset is obtained",
        "edited": {
            "user": "U1AU8DRQR",
            "ts": "1473157878.000000"
        },
        "ts": "1473157870.000142"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and that one will have replay protection just by using MVCC",
        "ts": "1473157894.000144"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "is it an option not to use the mvcc?",
        "ts": "1473157941.000145"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "no",
        "ts": "1473157962.000146"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U1GLPP8QN> <@U23JFU108>  I don't want to hijack the topic :slightly_smiling_face:",
        "ts": "1473157969.000147"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so that reduces the problem to \"proposal\" replays before going to the endorser",
        "ts": "1473157996.000148"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "not a problem :slightly_smiling_face: what matters is that consensus level duplicates should not affect the ledger state, and this is just a temporary bug which will be then fixed as a side effect of the new architecture",
        "ts": "1473158155.000149"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "by that you mean that a tx is proposed multiple times (and endorsed)?",
        "ts": "1473158177.000150"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "nope, that part of the sentence was related to the current state",
        "ts": "1473158217.000151"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "if it's proposed _and_ endorsed multiple times...",
        "ts": "1473158289.000152"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "I mean simon's question :slightly_smiling_face:",
        "ts": "1473158332.000153"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "the reduction to proposal replay? i think that was a statement :smile:",
        "ts": "1473158522.000154"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "how can such a proposal replay be prevented?",
        "ts": "1473158604.000155"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "not sure yet, i'll jump to the sidelines on the topic and dig a bit deeper into the new arch",
        "ts": "1473158649.000156"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "hgabor: yes",
        "ts": "1473159164.000157"
    },
    {
        "user": "U0NK7T8SH",
        "text": "<@U0NK7T8SH|bryan-huang> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1473159175.000158"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "hgabor: well, i don't know.  the crypto people have been asking about this",
        "ts": "1473159187.000159"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "you can easily protect against it using utxo in the chaincode, or something similar",
        "ts": "1473159201.000160"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": ":slightly_smiling_face:",
        "ts": "1473159203.000161"
    },
    {
        "type": "message",
        "user": "U1GLPP8QN",
        "text": "just as a sidenote -- we've discussed the possible solutions for functionally correct measurements and will go with a custom CC that filters the duplicates, for the time being (much like the marbles example)",
        "ts": "1473160911.000162"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "okay",
        "ts": "1473164201.000163"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "oh our scrum now is an hour early",
        "ts": "1473172474.000164"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "cancelled today",
        "ts": "1473172508.000165"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "oh",
        "ts": "1473172535.000166"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "okay",
        "ts": "1473172538.000167"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "jyellick: around?",
        "ts": "1473177559.000168"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "or <@U0XQ35CDD>",
        "ts": "1473177569.000169"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I am",
        "ts": "1473177575.000170"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Kostas should be available later, but is busy at the moment (<@U0XR6J961>)",
        "ts": "1473177593.000171"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "hi",
        "ts": "1473177601.000172"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so i got view change working sufficiently well",
        "ts": "1473177617.000173"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and i'd like to move on to retaining state and state transfer",
        "ts": "1473177637.000174"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "also, i really like the tendermint bft",
        "ts": "1473177649.000175"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "With regards to retaining state, I'm currently working on a 'rawledger' interface",
        "ts": "1473177718.000176"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "As a first step, I've factored out the simple ram based ledger I did for Solo, and am wrapping it in more sane interfaces, the thought being once it is there, I can quickly hack something with actual data persistence (though ultimately, we should come up with a non-hacky solution)",
        "ts": "1473177780.000177"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Then, I figured I could take the new rawledger stuff and hook it into your simplebft work",
        "ts": "1473177849.000178"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Last week when I'd looked, it seemed like it wasn't quite ready for it, so I figured hacking off something that already existed and I was familiar with (solo) made sense",
        "edited": {
            "user": "U0XPR4NP4",
            "ts": "1473177877.000000"
        },
        "ts": "1473177870.000179"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1473178481.000181"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "man that stupid raw ledger",
        "ts": "1473178488.000182"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i still feel it is the wrong interface",
        "ts": "1473178497.000183"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but oh well",
        "ts": "1473178501.000184"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i'd validate transactions during consensus, and reject invalid ones",
        "ts": "1473178523.000185"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "It all really comes down to semantics.  We say there's an unvalidated ledger, and a validated one, but in reality, we just have two blockchains, with different validity constructs.  We've chosen to create one chain, and use it to build another, but, you could do this an arbitrary number of times.  It's really just arbitrary transformations of one chain into another.  It so happens the first chain is very stupid\/simple and contains arbitrary bytes, while the second chain deals with MVCC stuff and other validity hooks.",
        "ts": "1473179133.000186"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes exactly",
        "ts": "1473179144.000187"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "<@U0XR6J961>: are you clear on the need for Q sets now?",
        "edited": {
            "user": "U0XQ35CDD",
            "ts": "1473180377.000000"
        },
        "ts": "1473180289.000188"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "(Going back to last week's convo with Marko.)",
        "ts": "1473180304.000189"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1473180472.000191"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "right now i can explain the need for them",
        "ts": "1473180483.000192"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but i think it is no longer a set, but a single item",
        "ts": "1473180492.000193"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "Do you want take a crack at an example that shows the need for them?",
        "ts": "1473180538.000194"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes, there is a unit test for it",
        "ts": "1473180719.000195"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "brb to tell you how it works",
        "ts": "1473180737.000196"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "ok",
        "ts": "1473181099.000197"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "<https:\/\/github.com\/corecode\/fabric\/blob\/master\/consensus\/simplebft\/newview_test.go#L24>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "corecode\/fabric",
                "title_link": "https:\/\/github.com\/corecode\/fabric\/blob\/master\/consensus\/simplebft\/newview_test.go#L24",
                "text": "Blockchain fabric code",
                "fallback": "GitHub: corecode\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/177979?v=3&s=400",
                "from_url": "https:\/\/github.com\/corecode\/fabric\/blob\/master\/consensus\/simplebft\/newview_test.go#L24",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1473181127.000198"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "kostas so there are are 3 scenarios, where R1 is prepared for seqno 1, then a view change occurs, and then another primary who didn't hear about this pre-prepare (or did), will act differently",
        "ts": "1473181209.000200"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "Alright, so I'm looking at all of the tests in that file then?",
        "edited": {
            "user": "U0XQ35CDD",
            "ts": "1473181290.000000"
        },
        "ts": "1473181264.000201"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1473181816.000203"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and you can see that the p-sets are the same, but the q-sets are different",
        "ts": "1473182206.000204"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "Roger, will review.",
        "ts": "1473182308.000205"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "ok",
        "ts": "1473182699.000206"
    }
]
[
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "<https:\/\/github.com\/hyperledger\/fabric\/pull\/1663>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "Periodic viewchange by corecode \u00b7 Pull Request #1663 \u00b7 hyperledger\/fabric \u00b7 GitHub",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/pull\/1663",
                "text": "Description Implement periodic view changes to actively try to incorporate \"lost\" replicas back into the network. Motivation and Context Related to #1454 How Has This Been Tested? N...",
                "fallback": "GitHub: Periodic viewchange by corecode \u00b7 Pull Request #1663 \u00b7 hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/177979?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/pull\/1663",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/a.slack-edge.com\/e8ef6\/img\/unfurl_icons\/github.png",
                "id": 1
            }
        ],
        "ts": "1464699270.002707"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "would appreciate review.  for now I implemented a dumb version of just cycling after a fixed number of requests from a primary, but we could \"optimize\" it by cycling after stable checkpoints.  The advantage of cycling after stable checkpoints is that the new primary does not have to repeat any request; the disadvantage is that it may stop the network for considerable time (wait for execution to finish at 2f+1 replicas).",
        "ts": "1464699394.002709"
    }
]
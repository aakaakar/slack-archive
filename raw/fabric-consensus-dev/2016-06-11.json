[
    {
        "type": "message",
        "user": "U142E5N0P",
        "text": "I am using the code after PR 1774 has been merged for stress testing, and I've setup a 4 nodes' environment, with a configuration of `plugin:pbft` and `mode:classic`\nThe jmeter clients show a relative high TPS:\n```\nWaiting for possible shutdown message on port 4445\nsummary +  25811 in     9s = 2876.5\/s Avg:   488 Min:     3 Max:   738 Err:     0 (0.00%) Active: 2000 Started: 2000 Finished: 0\n```\n\nHowever, after I stopped jmeter, the system still run for a long time(I've let jmeter run only a few seconds, but the system will last around 5 minutes to stop), it seems the requests have been buffered a lot, and then send to consensus, as a result, the practical upper bound of TPS is far low than the number shown as above.   Actually, if I changed the config from `mode:classic` to `mode:batch`, the TPS results shown from jmeter is even higher, say 7000 TPS, but I need to wait much more time for the system to stop after I stopped jmeter program. \n\nSo, what's the practical TPS for fabric to achieve?  It's actually a kind of asynchronous processing, so fabric will not tell clients whether it has been out of processing limit, in this case, the client will never know whether his request will be success in practical(even if the requests are discarded due to the full of buffer internal, the client will never know)",
        "ts": "1465695658.000002"
    }
]
[
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "<@U0ZJZBJLF> could gossip help solve <https:\/\/jira.hyperledger.org\/browse\/FAB-1096> - in the way described under item 3",
        "ts": "1479128973.003700"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "?",
        "ts": "1479128975.003701"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "Hi Marko. \nAre you asking whether we fill up holes of raw block dissemination in peers?",
        "ts": "1479129144.003702"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "<@U0Y14MWA2> we agreed in the following:\n&gt; by the way - what we should have also is some refactoring so the System and Receiver APIs of SBFT are put as such so we can have other consensus implementations\n<@U0XR6J961> we should discuss this here",
        "ts": "1479129310.003703"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1479129358.003704"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "<@U0ZJZBJLF> I am asking whether you could",
        "ts": "1479129476.003705"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "it seems to me that you could",
        "ts": "1479129481.003706"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "so what \"we\" would be doing seems redundant",
        "ts": "1479129489.003707"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "what do you mean whether we could? we already do :slightly_smiling_face:",
        "ts": "1479129492.003708"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "that's my point",
        "ts": "1479129499.003709"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "we presented this at a demo in front of everyone at RTP last week",
        "ts": "1479129514.003710"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "so you think (agree) that gossip splves <https:\/\/jira.hyperledger.org\/browse\/FAB-1096>",
        "ts": "1479129528.003711"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "?",
        "ts": "1479129530.003712"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "(sorry haven't seen that demo)",
        "ts": "1479129537.003713"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "(np)\nWait, I don't understand- are you implying that the PBFT memory buffers depend on what its clients know?",
        "ts": "1479129577.003714"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "ok  - let me repeat",
        "ts": "1479129598.003715"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "I'm on a call now, so maybe the people talking (in accented english) are interfering with my reading",
        "edited": {
            "user": "U0ZJZBJLF",
            "ts": "1479129618.000000"
        },
        "ts": "1479129605.003716"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "now not all sbft orderers have the entire raw ledger",
        "ts": "1479129634.003718"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "this is an implementation simplification",
        "ts": "1479129640.003719"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "a big one",
        "ts": "1479129641.003720"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "ok I dropped from the call just for you",
        "ts": "1479129668.003721"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "now this is not a huge issue as orderes\/consenters need not have the entire raw ledger",
        "ts": "1479129671.003722"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "finally can think",
        "ts": "1479129676.003723"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "wait wait",
        "ts": "1479129687.003724"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "I was told that all PBFT orderers in the future would have the raw ledger",
        "ts": "1479129699.003725"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "they would",
        "ts": "1479129769.003726"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "what the gossip gives you is full state syncrhonization of the ledger among all peers",
        "ts": "1479129775.003727"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "but they would have holes",
        "ts": "1479129778.003728"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "wait",
        "ts": "1479129783.003729"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "why would they have holes?",
        "ts": "1479129786.003730"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "how is it even possible?",
        "ts": "1479129790.003731"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "because it makes our life MUCH easier",
        "ts": "1479129795.003732"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "oh, wait actually it's possible",
        "ts": "1479129808.003733"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "if a PBFT node was dead",
        "ts": "1479129812.003734"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "yes :slightly_smiling_face:",
        "ts": "1479129813.003735"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "and is now alive",
        "ts": "1479129815.003736"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "for example",
        "ts": "1479129820.003737"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "now",
        "ts": "1479129825.003738"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "then you don't replicate the state among them, you just need it for ordering",
        "ts": "1479129828.003739"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "peers need holes filled",
        "ts": "1479129831.003740"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "we do that",
        "ts": "1479129836.003741"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "exactly",
        "ts": "1479129838.003742"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "we have 2 layers of state transfer actually",
        "ts": "1479129846.003743"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "and <https:\/\/jira.hyperledger.org\/browse\/FAB-1096> describes 3 ways for peers to have hole-less raw ledger",
        "ts": "1479129862.003744"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "the first layer gives you dissemination from peers that connect to ordering service and then forwards blocks to peers",
        "ts": "1479129863.003745"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "I am asking can we assume gossip solves this - per item 3?",
        "ts": "1479129877.003746"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "to make things scale",
        "ts": "1479129878.003747"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "the 2nd layer of state transfer gives you an ability to fill up blocks that the ordering service isn't sending anymore",
        "ts": "1479129895.003748"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "for example- all nodes of PBFT service now reached block 100 and you need block 80, then you (the peer) go to another peer that you (somehow :slightly_smiling_face: ) know it has block 80 and ask it for the block",
        "ts": "1479129940.003749"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "fo rinstance - if your implementation is pull based",
        "ts": "1479129961.003750"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "the state transfer is indeed pull based of course because only you care about the blocks you don't have, no one cares about you in a byzantine environment",
        "ts": "1479129993.003751"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "right ok",
        "ts": "1479130015.003752"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "so my point",
        "ts": "1479130017.003753"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "us filling in raw ledger holes @orderers\/consenters",
        "ts": "1479130032.003754"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "would be redoing a subset of your job",
        "ts": "1479130042.003755"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "which obviously I want to avoid",
        "ts": "1479130048.003756"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "there is a small problem here",
        "ts": "1479130071.003757"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "you need to make sure that enough peers got a block you sent",
        "ts": "1479130079.003758"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "we do that",
        "ts": "1479130086.003759"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "oh cool",
        "ts": "1479130089.003760"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "then we're OK",
        "ts": "1479130092.003761"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "replace peers with orderers\/consenters",
        "ts": "1479130101.003762"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "and we do that",
        "ts": "1479130104.003763"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "no",
        "ts": "1479130113.003764"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "wait",
        "ts": "1479130114.003765"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "I can't replace it",
        "ts": "1479130116.003766"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "that depends",
        "ts": "1479130123.003767"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "what if you sent block 100 and no one asked it?",
        "ts": "1479130128.003768"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "ok well you can't \"send\" a block",
        "ts": "1479130141.003769"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "you implement the deliver",
        "ts": "1479130144.003770"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "(gRPC call)",
        "ts": "1479130147.003771"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "yes",
        "ts": "1479130155.003772"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "so what consensus can offer to gossip",
        "ts": "1479130165.003773"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "is the following guarantee",
        "ts": "1479130179.003774"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "so- if for instance, as an extreme case, no peer called Deliver and you have 10000 blocks- then you need to keep them all in-memory",
        "ts": "1479130179.003775"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "or on disk",
        "ts": "1479130189.003776"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "who is you?",
        "ts": "1479130193.003777"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "PBFT of course",
        "ts": "1479130199.003778"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "every raw ledger batch is replicated  across a subset of correct orderers\/consenters",
        "ts": "1479130206.003779"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "then gossip  takes over",
        "ts": "1479130215.003780"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "and replicates this to all peers as well as possibly to consenters\/orderers that do not have this batch",
        "ts": "1479130237.003781"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "nope",
        "ts": "1479130247.003782"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "ok - why not?",
        "ts": "1479130253.003783"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "that's not how it's done",
        "ts": "1479130254.003784"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "gossip doesn't live inside the ordering service",
        "ts": "1479130263.003785"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "some peers call Deliver on the PBFT instances",
        "ts": "1479130271.003786"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "it does not have to",
        "ts": "1479130272.003787"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "they get blocks and they send them to other peers via gossip",
        "ts": "1479130284.003788"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "I still do not see the issue?",
        "ts": "1479130304.003789"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "I don't think there is an issue if you save batches on disk",
        "ts": "1479130319.003790"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "we do",
        "ts": "1479130326.003791"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "what's the issue then?",
        "ts": "1479130330.003792"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": ":slightly_smiling_face:",
        "ts": "1479130334.003793"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "ok let's repeat",
        "ts": "1479130346.003794"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "you want maybe a hangout?",
        "ts": "1479130362.003795"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "normally in a textbook pbft implementations - all pbft nodes - consenters\/orderers in our case have the ENTIRE history",
        "ts": "1479130380.003796"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "history = raw ledger (in HL speak)",
        "ts": "1479130389.003797"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "now",
        "ts": "1479130394.003798"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "and you said you won't have it, so you won't have to sync slow nodes or nodes that came alive",
        "ts": "1479130409.003799"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "exactly - because we do not need that for ordering (modulo consenter reconfiguration - but let's put that aside now)",
        "ts": "1479130436.003800"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "it is peers who need hole-less RL",
        "ts": "1479130454.003801"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "not conenters\/orderers",
        "ts": "1479130458.003802"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "hence I want to not implement state transfer at all @consensus",
        "ts": "1479130477.003803"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "yeah, and like I said- if a peer `p` knows of a peer `q` who has a block that `p` needs it'll get it from `q`",
        "ts": "1479130480.003804"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "but to reuse gossip for that",
        "ts": "1479130482.003805"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "is \"peer\"=\"gossip peer\" or \"peer\"=\"HL peer\"",
        "ts": "1479130565.003808"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "oh, every HL peer is a gossip peer of course",
        "ts": "1479130578.003809"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "yes but",
        "ts": "1479130583.003810"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "I am alluding to the case",
        "ts": "1479130589.003811"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "there are either peers, nodes (orderer, CAs etc) and apps",
        "edited": {
            "user": "U0ZJZBJLF",
            "ts": "1479130605.000000"
        },
        "ts": "1479130593.003812"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "where consenters are also gossip peers",
        "ts": "1479130602.003813"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "no they are not",
        "ts": "1479130610.003815"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "ok - why not?",
        "ts": "1479130616.003816"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "ordering service nodes, have no gossip code in them",
        "ts": "1479130625.003817"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "well",
        "ts": "1479130632.003818"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "this is related to hookiing the two up",
        "ts": "1479130641.003819"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "what is the showstopper to do that?",
        "ts": "1479130651.003820"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "<@U0XPR4NP4>  and <@U0XQ35CDD>  basically :wink:",
        "ts": "1479130661.003821"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "aha",
        "ts": "1479130669.003822"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "so soft problem",
        "ts": "1479130671.003823"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "solo does not need that",
        "ts": "1479130689.003824"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "and probably CFT does not either",
        "ts": "1479130693.003825"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "but for BFT we may want to hook up",
        "ts": "1479130701.003826"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "I am indifferent to architecture arguments (unless they effect me), I'm just a simple man who writes code.... if you want to open something for a discussion and that is related to ordering service you should ask them",
        "edited": {
            "user": "U0ZJZBJLF",
            "ts": "1479130736.000000"
        },
        "ts": "1479130713.003827"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "well let's put that aside",
        "ts": "1479130746.003829"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "<@U0Y14MWA2> is your goal to fill the gaps in the orderer raw ledger?",
        "ts": "1479130747.003830"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "or is your goal for the committers to tolerate gaps",
        "ts": "1479130766.003831"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "<@U0XR6J961> this is not needed unless we have consenter reocnfiguration",
        "ts": "1479130768.003832"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "I thought he wanted to full up holes in peers",
        "ts": "1479130769.003833"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "but with consenter reconfiguration this is needed as well",
        "ts": "1479130786.003834"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "so I want gossip capability from consenters to peers in the first place",
        "ts": "1479130801.003835"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "you want maybe to chime in the consensus scrum today and ask that?",
        "ts": "1479130805.003836"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "but also, eventually, among consenters themselves",
        "ts": "1479130813.003837"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "ask what?",
        "ts": "1479130825.003838"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "\"so I want gossip capability from consenters to peers in the first place\" - what does that mean precisely?",
        "ts": "1479130833.003839"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "I mean- to talk about any architectural change you may want",
        "ts": "1479130853.003840"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "this is not an architectural change",
        "ts": "1479130876.003841"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "so I still don't understand what change you're suggesting exactly :confused:",
        "ts": "1479130894.003842"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "this is making gossip part of our bft consensus service implenmentation",
        "ts": "1479130900.003843"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "\"so I want gossip capability from consenters to peers in the first place\" - what does that mean",
        "ts": "1479130911.003844"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "ohhhhhh",
        "ts": "1479130916.003845"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "you want to use our gossip code in PBFT code?",
        "ts": "1479130923.003846"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "well",
        "ts": "1479130930.003847"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "in a structured manner",
        "ts": "1479130934.003848"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "but the answer is yes",
        "ts": "1479130937.003849"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "hmmm but we can only replicate raw ledgr blocks",
        "ts": "1479130949.003850"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "is that ok?",
        "ts": "1479130952.003851"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "that's what I need",
        "ts": "1479130956.003852"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "I mean, the multi-signed ledger blocks",
        "ts": "1479130964.003853"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "not something \"uncooked\"",
        "ts": "1479130971.003854"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "that's what we have :slightly_smiling_face:",
        "ts": "1479130973.003855"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "ok then I would be honored :wink:",
        "ts": "1479130981.003856"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "my pleasure :slightly_smiling_face:",
        "ts": "1479130987.003857"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "but you need I guess to talk about it with others, don't you?",
        "ts": "1479131004.003858"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "I talked to <@U0XR6J961> :slightly_smiling_face:",
        "ts": "1479131020.003859"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "because from what I understood, <@U0XPR4NP4>  and <@U0XQ35CDD>  wanted the ordering service to be \"pure\" and without gossip code",
        "ts": "1479131027.003860"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so would orderers fill their raw ledger?",
        "edited": {
            "user": "U0XR6J961",
            "ts": "1479131054.000000"
        },
        "ts": "1479131042.003861"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "possibly yes",
        "ts": "1479131050.003863"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "<@U0XR6J961> ^^^",
        "ts": "1479131056.003865"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "ah",
        "ts": "1479131059.003866"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "okay",
        "ts": "1479131064.003867"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "(this is needed for reconfig)",
        "ts": "1479131073.003868"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so that would be a combination of (3) to achieve (2)?",
        "ts": "1479131083.003869"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "I have a better idea though, marko.",
        "ts": "1479131085.003870"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "I have a pull module in the gossip code",
        "ts": "1479131101.003871"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "listening",
        "ts": "1479131101.003872"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "it's pluggable",
        "ts": "1479131103.003873"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "you can maybe use it to sync the blocks you need",
        "ts": "1479131117.003874"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "without running a fully fledges gossip component",
        "ts": "1479131123.003875"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "this is a lower level detail",
        "ts": "1479131131.003876"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "let's talk about that",
        "ts": "1479131137.003877"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "it';s simpler",
        "ts": "1479131142.003878"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "this isn't such a lower level detail. You already know how to send messages, right?",
        "ts": "1479131165.003879"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "from orderers",
        "ts": "1479131168.003880"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "to orderers",
        "ts": "1479131171.003881"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "so you can use the module (maybe) to synchronize the state. you just need to \"teach\" it the following things:",
        "ts": "1479131195.003882"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "yes we do that :slightly_smiling_face:",
        "ts": "1479131196.003883"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U0ZJZBJLF|yacovm> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/yacovm\/F324N2ESF\/-.go|Untitled>",
        "file": {
            "id": "F324N2ESF",
            "created": 1479131208,
            "timestamp": 1479131208,
            "name": "-.go",
            "title": "Untitled",
            "mimetype": "text\/plain",
            "filetype": "go",
            "pretty_type": "Go",
            "user": "U0ZJZBJLF",
            "editable": true,
            "size": 816,
            "mode": "snippet",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F324N2ESF\/-.go?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F324N2ESF\/download\/-.go?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/yacovm\/F324N2ESF\/-.go",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F324N2ESF-7e0da415b5",
            "edit_link": "https:\/\/hyperledgerproject.slack.com\/files\/yacovm\/F324N2ESF\/-.go\/edit",
            "preview": "type PullAdapter interface {\r\n\t\/\/ SelectPeers returns a slice of peers which the engine will initiate the protocol with\r\n\tSelectPeers() []string\r\n\r\n\t\/\/ Hello sends a hello message to initiate the protocol\r",
            "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text\/plain',window.getSelection().toString().replace(\/\\u200b\/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-keyword\">type<\/span> <span class=\"cm-variable\">PullAdapter<\/span> <span class=\"cm-keyword\">interface<\/span> {<\/pre><\/div>\n<div><pre>\t<span class=\"cm-comment\">\/\/ SelectPeers returns a slice of peers which the engine will initiate the protocol with<\/span><\/pre><\/div>\n<div><pre>\t<span class=\"cm-variable\">SelectPeers<\/span>() []<span class=\"cm-keyword\">string<\/span><\/pre><\/div>\n<div><pre>&#8203;<\/pre><\/div>\n<div><pre>\t<span class=\"cm-comment\">\/\/ Hello sends a hello message to initiate the protocol<\/span><\/pre><\/div>\n<\/div>\n<\/div>\n",
            "lines": 20,
            "lines_more": 15,
            "preview_is_truncated": false,
            "channels": [
                "C0Z4NBUN6"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 0
        },
        "user": "U0ZJZBJLF",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U0ZJZBJLF|yacovm>",
        "bot_id": null,
        "ts": "1479131209.003884"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "this is the protocol:",
        "ts": "1479131228.003885"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U0ZJZBJLF|yacovm> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/yacovm\/F328WG812\/-.go|Untitled>",
        "file": {
            "id": "F328WG812",
            "created": 1479131236,
            "timestamp": 1479131236,
            "name": "-.go",
            "title": "Untitled",
            "mimetype": "text\/plain",
            "filetype": "go",
            "pretty_type": "Go",
            "user": "U0ZJZBJLF",
            "editable": true,
            "size": 1001,
            "mode": "snippet",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F328WG812\/-.go?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F328WG812\/download\/-.go?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/yacovm\/F328WG812\/-.go",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F328WG812-c360960854",
            "edit_link": "https:\/\/hyperledgerproject.slack.com\/files\/yacovm\/F328WG812\/-.go\/edit",
            "preview": "\/* PullEngine is an object that performs pull-based gossip, and maintains an internal state of items\r\n   identified by uint64 numbers.\r\n   The protocol is as follows:\r\n   1) The Initiator sends a Hello message with a specific NONCE to a set of remote peers.\r\n   2) Each remote peer responds with a digest of its messages and returns that NONCE.\r",
            "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text\/plain',window.getSelection().toString().replace(\/\\u200b\/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-comment\">\/* PullEngine is an object that performs pull-based gossip, and maintains an internal state of items<\/span><\/pre><\/div>\n<div><pre>   <span class=\"cm-comment\">identified by uint64 numbers.<\/span><\/pre><\/div>\n<div><pre>   <span class=\"cm-comment\">The protocol is as follows:<\/span><\/pre><\/div>\n<div><pre>   <span class=\"cm-comment\">1) The Initiator sends a Hello message with a specific NONCE to a set of remote peers.<\/span><\/pre><\/div>\n<div><pre>   <span class=\"cm-comment\">2) Each remote peer responds with a digest of its messages and returns that NONCE.<\/span><\/pre><\/div>\n<\/div>\n<\/div>\n",
            "lines": 17,
            "lines_more": 12,
            "preview_is_truncated": false,
            "channels": [
                "C0Z4NBUN6"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 0
        },
        "user": "U0ZJZBJLF",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U0ZJZBJLF|yacovm>",
        "bot_id": null,
        "ts": "1479131237.003886"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "oh the copy-paste beheaded the right guy :open_mouth:",
        "ts": "1479131265.003887"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "but I would like it more high level",
        "ts": "1479131400.003888"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "I would like gossip to take care about falling back to other sources if the source I selected does not work",
        "ts": "1479131420.003889"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "we have a hello message of our own - but basically the goal would be to have things happen automagically",
        "ts": "1479131458.003890"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "rather than re-doing low level sends",
        "ts": "1479131465.003891"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "or I have to select right away the worst-case number of remote peers?",
        "ts": "1479131714.003892"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0Y14MWA2> Requiring that ordering nodes be able to initiate network connections to any node which is not another orderer is a bit of a non-starter for the \"as a service\" model.",
        "ts": "1479131930.003893"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "<@U0XPR4NP4> you seem to be implicitly assuming this is a push-based gossip",
        "ts": "1479131982.003894"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "it seems to me that it is a pull-based one",
        "ts": "1479131989.003895"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "So what is the flow for reconfiguration? Ordering node starts up, and waits for a gossiping peer to connect to it?",
        "ts": "1479132028.003896"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "Marko, the pull protocol in gossip is optimized for gossip pulling of blocks which are in-flight",
        "ts": "1479132033.003897"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "it's not optimized for your use case but I think it can be very easily",
        "ts": "1479132069.003898"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "yeah and I agree with what Jason said",
        "ts": "1479132093.003899"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "It doesn't make any sense having an orderer node connect to a *none* orderer node, or even pull information out of it.",
        "edited": {
            "user": "U0ZJZBJLF",
            "ts": "1479132132.000000"
        },
        "ts": "1479132109.003900"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "(where did I write I want that?)",
        "ts": "1479132138.003902"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "I want",
        "ts": "1479132159.003903"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "\"other sources\"",
        "ts": "1479132162.003904"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "1) peers pull info from orderers",
        "ts": "1479132168.003905"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "2) orderes pull info from other orderers",
        "ts": "1479132176.003906"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "ok, so (1) is achieved via Deliver, and (2) can be achieved if you adopt a mutation of the pull mechanism in gossip",
        "ts": "1479132201.003907"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "But (2) does not need gossip? The cardinality of the orderer set is relatively small, why not simply pull the blocks over a normal stream, as we did before for 0.5\/0.6?",
        "ts": "1479132275.003908"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "Yeah but you see, gossip comes with a very big bunch of other stuff",
        "ts": "1479132298.003909"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "I think since you already know how to send messages between orderers you could simply instantiate a `PullEngine` ( a gossip object) and give it a customized `PullAdapter` which will do the work for you",
        "ts": "1479132361.003910"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I agree, that possibly re-using the gossip state transfer code would save the orderer the headache of re implementing it, though with in order block retrieval, I don't think it would be a very complicated piece of code.  Either way, if it is just state transfer among orderers, gossip\/not seems like an implementation detail.",
        "ts": "1479132513.003911"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "wait, why not have the orderer instance that needs a block simply call Deliver on another ordering instance?",
        "ts": "1479132561.003912"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "or maybe I'm missing something here",
        "ts": "1479132584.003913"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "it doesn't know which one to ask",
        "ts": "1479132640.003914"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and it doesn't maintain a list of which blocks it doesn't have",
        "ts": "1479132665.003915"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i think we will need a \"headers only\" deliver anyways",
        "ts": "1479132674.003916"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and in that case, the orderer could subscribe to headers only from all connected orderers",
        "edited": {
            "user": "U0XR6J961",
            "ts": "1479132701.000000"
        },
        "ts": "1479132691.003917"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and that's half of a push mechanism",
        "ts": "1479132721.003919"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "oh... well, that's a problem then.",
        "ts": "1479132742.003920"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "why doesn't it know which one to ask?",
        "ts": "1479132748.003921"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and you'd put the window at the lowest gap you have",
        "ts": "1479132751.003922"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so if you hear about a batch you have a gap at, you'd ask for that batch",
        "ts": "1479132785.003923"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "state transfer essentially",
        "ts": "1479132790.003924"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "wait simon I don't understand",
        "ts": "1479132800.003925"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "how can you not know you have a gap?",
        "ts": "1479132805.003926"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "just read the sequences",
        "ts": "1479132813.003927"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and then you yourself in turn would have to notify all listeners that have their window at this batch, etc.",
        "ts": "1479132817.003928"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "if it's sequential- you have no gaps. else- you have a gap?",
        "ts": "1479132824.003929"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "some sort of gossip",
        "ts": "1479132824.003930"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "you know you have a gap",
        "ts": "1479132836.003931"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "you just don't know who can fill it",
        "ts": "1479132843.003932"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "so ask all other orderers",
        "ts": "1479132852.003933"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "whether they have the item",
        "ts": "1479132856.003934"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "that's gossip, no?",
        "ts": "1479132865.003935"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "not quite",
        "ts": "1479132875.003936"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "yeah but I mean- you can use the pull engine in gossip to do that",
        "ts": "1479132876.003937"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "all could ask the same guy",
        "ts": "1479132887.003938"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "no",
        "ts": "1479132898.003939"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "they ask everyone",
        "ts": "1479132901.003940"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "or a subset",
        "edited": {
            "user": "U0ZJZBJLF",
            "ts": "1479132921.000000"
        },
        "ts": "1479132902.003941"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes, but if there is just one reachable guy",
        "ts": "1479132921.003943"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "then ask him... what's the problem :confused:",
        "ts": "1479132931.003944"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "then all of them might be transfering from that one",
        "ts": "1479132932.003945"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "so?",
        "ts": "1479132936.003946"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "you overload one guy",
        "ts": "1479132942.003947"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "but there is only 1 reachable like you just said",
        "ts": "1479132946.003948"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "wait how is that even possible?",
        "ts": "1479132957.003949"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "a 1-way network partition?",
        "ts": "1479132962.003950"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "with periodic gossip, you distribute the load",
        "ts": "1479132968.003951"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "the pull engine does just that",
        "ts": "1479132984.003952"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "if you have 100 blocks missing",
        "ts": "1479132990.003953"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "you do round-robin, or random",
        "ts": "1479132995.003954"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "I don't remember what",
        "ts": "1479132998.003955"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "I think random",
        "ts": "1479133001.003956"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "and you ask 100\/K blocks from each 1..K peers",
        "ts": "1479133022.003957"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "okay",
        "ts": "1479133028.003958"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "you can take a look if you want at `gossip\/gossip\/algo\/pull*.go`",
        "edited": {
            "user": "U0ZJZBJLF",
            "ts": "1479133171.000000"
        },
        "ts": "1479133157.003959"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "i'm still not really seeing the scenario, why do so few ordering nodes have blocks? An orderer should be able to very quickly detect when it misses a sequence number in the sbft model, and it will generally have the set of orderers which it can retrieve those blocks from.",
        "ts": "1479133245.003961"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "&gt; i think we will need a \"headers only\" deliver anyways\n\nI do concur with this though",
        "ts": "1479133273.003962"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "if the gap is larger than 1, it does not know who has the previous blocks",
        "ts": "1479133295.003963"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "True, though it still seems like in most sane scenarios, the probability of picking someone with all the blocks is pretty high.  In general, why would we expect so many holes across all the nodes?",
        "ts": "1479133399.003964"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "it's possible",
        "ts": "1479133423.003965"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "isn't that all that counts?",
        "ts": "1479133432.003966"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "this is about how to deal with such a situation",
        "ts": "1479133442.003967"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Tolerating a situation and optimizing for it are two different things.  I'm still not seeing concretely a likely scenario for how the network ends up in this state (obviously carefully orchestrated failures can do this, but seems very unlikely)",
        "ts": "1479133534.003968"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "sure, but how do you deal with it?",
        "ts": "1479133555.003969"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "what's the simplest way to deal with it",
        "ts": "1479133567.003970"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Well, naively, you randomly pick an orderer, ask for the block, and if he has it great, otherwise, ask someone else until you get a successful reply.",
        "ts": "1479133586.003971"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "<https:\/\/jira.hyperledger.org\/browse\/FAB-1096>",
        "ts": "1479133588.003972"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so you basically update the deliver window?",
        "ts": "1479133642.003973"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "or do you have some sort of non-streaming rpc to ask for that block?",
        "ts": "1479133663.003974"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "they don't (at least from what i know)",
        "edited": {
            "user": "U0ZJZBJLF",
            "ts": "1479133772.000000"
        },
        "ts": "1479133760.003975"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "So, you pick the lowest block number you need, send a deliver (normal streaming RPC), and get blocks through the number you do need.",
        "edited": {
            "user": "U0XPR4NP4",
            "ts": "1479133989.000000"
        },
        "ts": "1479133891.003977"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "If you get back a 404 not found, you switch orderers and try again.",
        "ts": "1479133900.003978"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I agree it's inefficient when there are many holes spread across many ordering nodes, but the logic is simple, easy to implement, and doesn't require exposing any new RPCs.",
        "edited": {
            "user": "U0XPR4NP4",
            "ts": "1479133958.000000"
        },
        "ts": "1479133949.003979"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "By setting the window size on the Deliver SeekInfo, you can actually replicate a 'Pull just n blocks'",
        "ts": "1479134020.003982"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "(So, if you are missing blocks 3-5, and 8, you can call Deliver() SeekInfo(seekto=3 window=3), SeekInfo(seekto=8, window=1) and that will retrieve exactly blocks 3-5 and 8 )",
        "edited": {
            "user": "U0XPR4NP4",
            "ts": "1479134101.000000"
        },
        "ts": "1479134093.003983"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "TL;DR?",
        "ts": "1479134693.003985"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "(had a call in the meantime)",
        "ts": "1479134703.003986"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "can you loop me in on the scrum hangout?  i'll be travelling on train",
        "ts": "1479134803.003987"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "<@U0XR6J961> , tell me what to do to loop you in ?",
        "ts": "1479134869.003988"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "scrum ...",
        "ts": "1479135485.003989"
    },
    {
        "text": "<@U0UGH3X7X|tuand> has started a Google+ Hangout for this channel. <https:\/\/hangouts.google.com\/hangouts\/_\/nf4tqrdvbbbozc2iparf56e65ee|Join Hangout>.",
        "username": "hangouts",
        "bot_id": "B0UKUAJ0Y",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1479135503.003990"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "pascal...? :open_mouth: <@U0Y14MWA2>",
        "edited": {
            "user": "U0ZJZBJLF",
            "ts": "1479136136.000000"
        },
        "ts": "1479136123.003991"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "pluscal",
        "ts": "1479136230.003993"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "<http:\/\/research.microsoft.com\/en-us\/um\/people\/lamport\/tla\/pluscal.html>",
        "ts": "1479136434.003994"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "see also <http:\/\/cacm.acm.org\/magazines\/2015\/4\/184701-how-amazon-web-services-uses-formal-methods\/fulltext>",
        "attachments": [
            {
                "title": "How Amazon Web Services Uses Formal Methods",
                "title_link": "http:\/\/cacm.acm.org\/magazines\/2015\/4\/184701-how-amazon-web-services-uses-formal-methods\/fulltext",
                "text": "Engineers use TLA+ to prevent serious but subtle bugs from reaching production.",
                "fallback": "How Amazon Web Services Uses Formal Methods",
                "image_url": "http:\/\/cacm.acm.org\/system\/assets\/0001\/9188\/032015_CACMpg67_How-Amazon-Web1.large.jpg?1476779462&1426857401",
                "from_url": "http:\/\/cacm.acm.org\/magazines\/2015\/4\/184701-how-amazon-web-services-uses-formal-methods\/fulltext",
                "image_width": 250,
                "image_height": 250,
                "image_bytes": 17519,
                "service_icon": "http:\/\/cacm.acm.org\/favicon.ico",
                "service_name": "cacm.acm.org",
                "id": 1
            }
        ],
        "ts": "1479136490.003995"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "(although some of us have been using it way before Amazon)",
        "ts": "1479136511.003997"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "well about that",
        "ts": "1479136538.003998"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "nobody invited me",
        "ts": "1479136541.003999"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "to amazon? pluscal?",
        "ts": "1479136573.004000"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "to the scrum",
        "ts": "1479136578.004001"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "or just scrum? :slightly_smiling_face:",
        "ts": "1479136580.004002"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "thank god I thought you said Pascal",
        "ts": "1479136659.004003"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "hey <@U0XPR4NP4>  I have an important question regarding multi-channel and ordering service",
        "ts": "1479136723.004004"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "let's say we have orgs A, B and C in a channel X",
        "ts": "1479136734.004005"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "after a while, channel X is: B, C only",
        "ts": "1479136743.004006"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "what happens to the peers that call deliver on X to the orderer in org A?",
        "edited": {
            "user": "U0ZJZBJLF",
            "ts": "1479136767.000000"
        },
        "ts": "1479136756.004007"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "They'll get back an error in reply to their seek request",
        "ts": "1479137047.004011"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "how?",
        "ts": "1479137059.004012"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "they'll get a downstream message that contains an error?",
        "edited": {
            "user": "U0ZJZBJLF",
            "ts": "1479137159.000000"
        },
        "ts": "1479137064.004013"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "(deliver response)",
        "ts": "1479137185.004015"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "and how will they know that it is because they're no longer in the channel, and there isn't a different fault that returns an error? <@U0XPR4NP4>  ?",
        "edited": {
            "user": "U0ZJZBJLF",
            "ts": "1479139586.000000"
        },
        "ts": "1479137210.004016"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "oh there is a problem with new-view messages and null requests in sbft",
        "ts": "1479137324.004017"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i thought i had fixed it for the hello message, but i did not",
        "ts": "1479137342.004018"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so the problem is that a null request after view change produces an empty batch",
        "ts": "1479137380.004019"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but for that the hash of the previous batch needs to be known",
        "ts": "1479137399.004020"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but if we have a gap, we don't know that hash, so we cannot validate that batch",
        "ts": "1479137588.004021"
    },
    {
        "type": "message",
        "user": "U1AU8DRQR",
        "text": "does anybody have suggestions how to do the network testing of sbft?",
        "ts": "1479138051.004022"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "my guess is that the p sets in the new-view message should allow you to verify the last batch hash",
        "ts": "1479138469.004023"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "hum hum hum",
        "ts": "1479138549.004024"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i suspect a reconnect could fix all of this",
        "ts": "1479138591.004025"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "why are there null requests in sbft",
        "ts": "1479138672.004026"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "pbft had null requests for holes - if I recall correctly",
        "ts": "1479138687.004027"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "there are no holes in sbft by design",
        "ts": "1479138700.004028"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "&gt; and how will they know that it is because they're no longer in the channel, and there isn't a different fault that returns an error?\n\n<@U0ZJZBJLF> This is something I'd welcome feedback on.  We could return a 403 FORBIDDEN or a 404 NOT_FOUND.  This somewhat goes to the idea of \"Do you return account not found or bad password\" on authentication failure.  We could uniformly respond with a 403 when someone accesses a channel which doesn't exist or they are not authorized on, or, we could return a 404 when the channel doesn't exist, and a 403 when they are not authorized.  The question is whether leaking knowledge that the chain exists is okay or not.",
        "ts": "1479147068.004030"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "why use an HTTP status code?",
        "ts": "1479147088.004031"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "That's what the fabric has standarized on for error codes",
        "edited": {
            "user": "U0XPR4NP4",
            "ts": "1479147109.000000"
        },
        "ts": "1479147104.004032"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "lol you are REST-ful?",
        "ts": "1479147132.004034"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "just kidding",
        "ts": "1479147139.004035"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "where is common.Status?",
        "ts": "1479147157.004036"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "`fabric\/protos\/common\/common.proto`",
        "ts": "1479147168.004037"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "I see... so I think that forbidden is good for this case.",
        "ts": "1479147206.004038"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "actually",
        "ts": "1479147239.004039"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "wait I take that back",
        "ts": "1479147243.004040"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "is the action a peer needs to take in case of 404 the same if it's actually 403?",
        "ts": "1479147256.004041"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "if it is- then maybe use always 404?",
        "ts": "1479147262.004042"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I see merits to all the options.  My gut says use 404 for 'does not exist', and 403 when the user is not authorized.",
        "ts": "1479147398.004043"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Because chain IDs are going to be generates as hashes, searching for a chain's existence exhaustively does not seem feasible, and the existence of a chain doesn't allow the attacker any real knowledge about its membership or contents, it seems better to leak the chain's existence, in favor of making errors less opaque to the client.",
        "ts": "1479147496.004044"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Just my gut, if anyone has a strong argument for another policy, I'm certainly ready to be swayed",
        "ts": "1479147533.004045"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "how long is the hash?",
        "ts": "1479147870.004046"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "*it seems better to leak the chain's existence, in favor of making errors less opaque to the client.* - I don't agree with this statement. Isn't this an API which is being used inside the project? it's not like we expose this API to customers, so making it informative and opaque isn't a big concern",
        "ts": "1479147944.004047"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "&gt; how long is the hash?\nA good question, I assume 256 bits, but this needs to be finalized\n\n&gt; Isn't this an API which is being used inside the project? it's not like we expose this API to customers, so making it informative and opaque isn't a big concern\nI'm not sure what you mean? The peer is a client to the ordering service.  We can either be opaque about the reason why a seek request was rejected (the client knows either the chain doesn't exist, or the client is not authorized to view the service, but does not know which) or, we can be explicit about why (replying 403 on not authorized, and 404 on doesn't exist).",
        "ts": "1479148668.004048"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "(I agree with the 403\/404 thinking.)",
        "ts": "1479149177.004049"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "But jason, the client is someone that writes either the peer or the sdk, meaning a fabric developer",
        "ts": "1479150807.004050"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "Being not opaque is good for debugging",
        "edited": {
            "user": "U0ZJZBJLF",
            "ts": "1479154222.000000"
        },
        "ts": "1479150827.004051"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "And development",
        "ts": "1479150840.004052"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "It has no value in the day to day scenario",
        "ts": "1479150860.004053"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I'm not following.  How is having 1 error reply for 2 different conditions easier to debug than 2 error replies, one for each of 2 conditions?",
        "edited": {
            "user": "U0XPR4NP4",
            "ts": "1479151944.000000"
        },
        "ts": "1479151896.004054"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "it's not easier to debug, I'm saying- after the debugging phase is over, you don't need to debug anymore.",
        "ts": "1479153617.004056"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "and you get more information hiding",
        "ts": "1479153625.004057"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "I meant, being not opaque of course",
        "ts": "1479154229.004059"
    },
    {
        "type": "message",
        "user": "U0XV1HDL3",
        "text": "<@U0ZJZBJLF>, <@U0Y14MWA2>: reading your discussion from earlier on using gossip module's state transfer also to support the state transfers needed by the consensus protocol. \nYES! this is how it should be! no duplication of a state transfer function.\nthere should not be concerns about violating modularity, but interfaces will be important: since the consensus API here already contains hash-chained batches\/blocks (unlike, say, etcd or ZK), the main prerequisites exist on both sides.",
        "ts": "1479154432.004060"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "let's just be clear",
        "ts": "1479154478.004061"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "I didn't mean using gossip's state transfer module",
        "ts": "1479154491.004062"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "I meant using gossip's pull module",
        "ts": "1479154497.004063"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "they are completely different stuff and the state transfer heavily relies on gossip (I think, <@U1HFNJB50>  correct me if I'm wrong)",
        "ts": "1479154524.004064"
    },
    {
        "type": "message",
        "user": "U1HFNJB50",
        "text": "state transfer relies on gossip to get most up to date info about ledger height on other nodes",
        "ts": "1479154647.004065"
    },
    {
        "type": "message",
        "user": "U1HFNJB50",
        "text": "and getting blocks of course",
        "ts": "1479154687.004066"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "by the way <@U0XV1HDL3> , if you want to do that, you'll need to slightly mutate the pull mechanism, because the way it is now - it doesn't fit to the PBFT use case 100%....",
        "ts": "1479154769.004067"
    },
    {
        "type": "message",
        "user": "U0XV1HDL3",
        "text": "OK, i am not aware of the details, sorry. but in principle, from knowing the \"tip\" (= most uptodate block and its hash) one can reconstruct the correct, agreed-on sequence of raw-ledger-batches. i understood that a consenter may need that and that the peers need that. from very far, this looks the same.",
        "ts": "1479154858.004068"
    },
    {
        "type": "message",
        "user": "U0XV1HDL3",
        "text": "but again i leave this to you, i am not 'in' the code",
        "ts": "1479154871.004069"
    },
    {
        "type": "message",
        "user": "U1RLZ5729",
        "text": "Hey all,\nI am running with a setup which has two peers running on two different physical machines. When security was not enabled, i was able to have communication between them. \nBut now, I have security enabled and now the peers are not able to communicate and it is giving certification error. \nI am using the following docker-compose.yaml file:\n# membersrvc:\n#   image: hyperledger\/fabric-membersrvc\n#   ports:\n#     - \"50051:50051\"\n#     - \"7054:7054\"\n#   command: membersrvc\nvp1:\nimage: hyperledger\/fabric-peer\nports:\n  - \"5000:5000\"\n  - \"7051:7051\"\n  - \"7050:7050\"\n  - \"30303:30303\"\n  - \"30304:30304\"\nenvironment:\n  - CORE_PEER_ADDRESSAUTODETECT=false\n  - CORE_VM_ENDPOINT=unix:\/\/\/var\/run\/docker.sock\n  - CORE_LOGGING_LEVEL=DEBUG\n  - CORE_PEER_ID=vp1\n  - CORE_SECURITY_ENABLED=true\n  #- CORE_SECURITY_PRIVACY=true\n  - CORE_SECURITY_ENROLLID=test_vp0\n  - CORE_SECURITY_ENROLLSECRET=MwYpmSRjupbT\n  - CORE_PEER_DISCOVERY_ROOTNODE=9.109.251.105:7051\n  - CORE_PEER_PKI_ECA_PADDR=9.109.251.105:7054\n  - CORE_PEER_PKI_TCA_PADDR=9.109.251.105:7054\n  - CORE_PEER_PKI_TLSCA_PADDR=9.109.251.105:7054\n  - CORE_CHAINCODE_DEPLOYTIMEOUT=180000\n#  - MEMBERSRVC_CA_ACA_ENABLED=true\nvolumes:\n  - \/var\/run\/docker.sock:\/var\/run\/docker.sock\n# links:\n#   - membersrvc\ncommand: sh -c \"sleep 5; peer node start\u201d\n\nAny help is appreciated.",
        "ts": "1479189744.004070"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "<@U0Y14MWA2> there are null requests so that you can play to the latest view number from the chain",
        "ts": "1479196443.004071"
    }
]
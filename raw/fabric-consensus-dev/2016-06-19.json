[
    {
        "type": "message",
        "user": "U1B2FF8LR",
        "text": "It seems 1877 fixed 1873 but not 1874. <https:\/\/github.com\/hyperledger\/fabric\/issues\/1874>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "Peer PBFT Batch does not work on queue after two VPs bounce \u00b7 Issue #1874 \u00b7 hyperledger\/fabric \u00b7 GitHub",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/issues\/1874",
                "text": "Description Some basic behavior with Consensus seems to be no longer working, in a specific scenario. This test fails on test images from 6\/15 (f8ffcd1) and 6\/16 (04f076b). The test passed on 6\/9 ...",
                "fallback": "GitHub: Peer PBFT Batch does not work on queue after two VPs bounce \u00b7 Issue #1874 \u00b7 hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/19557276?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/issues\/1874",
                "thumb_width": 420,
                "thumb_height": 420,
                "service_icon": "https:\/\/a.slack-edge.com\/e8ef6\/img\/unfurl_icons\/github.png",
                "id": 1
            }
        ],
        "ts": "1466320853.000256"
    },
    {
        "user": "U1HFNJB50",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1HFNJB50|c0rwin> has joined the channel",
        "ts": "1466332278.000258"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U1B2FF8LR|scottz> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/scottz\/F1J755SRH\/s1s2ir2iq.go|S1S2IR2IQ.go> and commented: I updated 1874. I cannot yet explain why it fails, even though the behave test passes, and they seem to perform the same steps. I even modified my testcase to avoid extra things and avoid stopping peer0.",
        "file": {
            "id": "F1J755SRH",
            "created": 1466354192,
            "timestamp": 1466354192,
            "name": "S1S2IR2IQ.go",
            "title": "S1S2IR2IQ.go",
            "mimetype": "text\/plain",
            "filetype": "go",
            "pretty_type": "Go",
            "user": "U1B2FF8LR",
            "editable": true,
            "size": 10130,
            "mode": "snippet",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1J755SRH\/s1s2ir2iq.go?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1J755SRH\/download\/s1s2ir2iq.go?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/scottz\/F1J755SRH\/s1s2ir2iq.go",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F1J755SRH-a6754426ca",
            "edit_link": "https:\/\/hyperledgerproject.slack.com\/files\/scottz\/F1J755SRH\/s1s2ir2iq.go\/edit",
            "preview": "package main\n\/******************** Testing Objective consensu:STATE TRANSFER ********\n*   S1S2IR2IQ.go\n*   Setup: 5 node local docker peer network with security\n*   0. Deploy chaincodeexample02 with 10, 20 as initial args, query any one peer to verify.",
            "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text\/plain',window.getSelection().toString().replace(\/\\u200b\/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-keyword\">package<\/span> <span class=\"cm-variable\">main<\/span><\/pre><\/div>\n<div><pre><span class=\"cm-comment\">\/******************** Testing Objective consensu:STATE TRANSFER ********<\/span><\/pre><\/div>\n<div><pre><span class=\"cm-comment\">*   S1S2IR2IQ.go<\/span><\/pre><\/div>\n<div><pre><span class=\"cm-comment\">*   Setup: 5 node local docker peer network with security<\/span><\/pre><\/div>\n<div><pre><span class=\"cm-comment\">*   0. Deploy chaincodeexample02 with 10, 20 as initial args, query any one peer to verify.<\/span><\/pre><\/div>\n<\/div>\n<\/div>\n",
            "lines": 289,
            "lines_more": 284,
            "preview_is_truncated": null,
            "channels": [
                "C0Z4NBUN6"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 1,
            "initial_comment": {
                "id": "Fc1J8FENTA",
                "created": 1466354192,
                "timestamp": 1466354192,
                "user": "U1B2FF8LR",
                "is_intro": true,
                "comment": "I updated 1874. I cannot yet explain why it fails, even though the behave test passes, and they seem to perform the same steps. I even modified my testcase to avoid extra things and avoid stopping peer0.",
                "channel": ""
            }
        },
        "user": "U1B2FF8LR",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U1B2FF8LR|scottz>",
        "bot_id": null,
        "ts": "1466354192.000261"
    },
    {
        "type": "message",
        "user": "U142E5N0P",
        "text": "It seems the behaviors of latest version under stress test have been changed:\n\nPreviously, I setup 4 nodes with `pbft` and `batch`, after deploying chaincode `example2`, I use jmeter to send restful API to certain nodes to send `invoke` requests. The results show that jmeter could reach nearly 10K TPS, while fabric will process the transaction at a speed of 20 per second or so, therefore the left requests are discarded.\n\nFor the latest codebase, I can see jmeter only show tens of request around per second, while at the same time any other REST clients will be blocked.  It seems the behaviors have been changed from `asynchronous` to `near synchronous` ? \n\nAdditionally, there are some bugs for the latest codebase, because I can only see the `invoke` transactions have been executed for several times, while the later requests will not take into effects on the chaincode\u2014I drew the conclusion through continuously sending `query` requests to peer node.",
        "edited": {
            "user": "U142E5N0P",
            "ts": "1466403665.000000"
        },
        "ts": "1466403584.000262"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yingfeng: what do you mean, several times and no effect?",
        "ts": "1466405932.000266"
    },
    {
        "type": "message",
        "user": "U142E5N0P",
        "text": "yes, latest commit show that only several `invoke` requests have taken into effects",
        "ts": "1466405976.000267"
    }
]
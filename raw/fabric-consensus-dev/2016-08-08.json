[
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "<@U0XPR4NP4>: i realized that we're building an outside \"byzantine\" consensus if we're doing the commiter-signature gossip thing",
        "ts": "1470644289.000654"
    },
    {
        "type": "message",
        "user": "U1751P7U4",
        "text": "i am using PBFT with N=4 and f=1. What will happen if one node is Byzantine and the other node is crashed. will the system still remain stable ?",
        "ts": "1470647687.000655"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "it will stop processing transactions",
        "ts": "1470647722.000656"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "once the crashed node comes back up, it will continue",
        "ts": "1470647735.000657"
    },
    {
        "type": "message",
        "user": "U1751P7U4",
        "text": "i was going through the XFT paper and it said that it can handle both non crash and crash faults but with limited resources.i.e. n=2f+1. How is XFT acheiving this?",
        "ts": "1470647838.000658"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i believe it works by assuming that network faults and byzantine nodes do not happen at the same time",
        "ts": "1470647886.000659"
    },
    {
        "type": "message",
        "user": "U1751P7U4",
        "text": "oh and what about the PBFT?  then why pbft requires 3f+1 nodes?",
        "ts": "1470647998.000660"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "because that's what you need in the face of concurrent network outage and byzantine nodes",
        "edited": {
            "user": "U0XR6J961",
            "ts": "1470648278.000000"
        },
        "ts": "1470648253.000661"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "do you have any specific questions about pbft?",
        "ts": "1470648293.000663"
    },
    {
        "type": "message",
        "user": "U1751P7U4",
        "text": "so in pbft when crash and non crash fault happens at a same time (in case f =1 and n=4 ),then the system will be consistent (i.e state of remaining correct 2 nodes is guranteed to be same )but the system will only have to wait till the crashed node comes up to continue with the consesus ?",
        "ts": "1470648693.000664"
    },
    {
        "type": "message",
        "user": "U1751P7U4",
        "text": "and in case of XFT the cosistency might not be guranteed (in case f=1 and n = 3)?",
        "ts": "1470648739.000665"
    },
    {
        "type": "message",
        "user": "U1751P7U4",
        "text": "correct me if m wrong",
        "ts": "1470648749.000666"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes for pbft",
        "ts": "1470649231.000667"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i can't answer for XFT",
        "ts": "1470649237.000668"
    },
    {
        "type": "message",
        "user": "U1751P7U4",
        "text": "ohh okay",
        "ts": "1470649261.000669"
    },
    {
        "type": "message",
        "user": "U1751P7U4",
        "text": "on what basis is that independent events assumptions made? Any proof on this?",
        "ts": "1470649471.000670"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "it's assumptions",
        "ts": "1470649557.000671"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "did you read the XFT paper?",
        "ts": "1470649566.000672"
    },
    {
        "type": "message",
        "user": "U1751P7U4",
        "text": "yes i read... it says that the faults occurs independently which is very reasonable in practice.. so if in the system using XFT , if both occurs at the same time then the whole  system will crash right?",
        "ts": "1470649724.000673"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "<@U0Y14MWA2>: ^^",
        "ts": "1470650046.000674"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "<@U1751P7U4>: in XFT, if the count of Byzantine replicas is &gt;0 then one counts BOTH Byzantine and CORRECT but partitioned replicas towards the threshold t",
        "ts": "1470650209.000675"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "in this case, below the threshold t (inclusive) - both availability and consistency are preserved",
        "ts": "1470650240.000676"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "if the count goes above t there are no guarantees",
        "ts": "1470650251.000677"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "additionally, if you DO NOT have Byzantine replicas then you get the same guarantees as Paxos\/Raft\/ZAB",
        "ts": "1470650272.000678"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "hope this helps",
        "ts": "1470650279.000679"
    },
    {
        "type": "message",
        "user": "U1751P7U4",
        "text": "ohh okay",
        "ts": "1470650292.000680"
    },
    {
        "type": "message",
        "user": "U1751P7U4",
        "text": "got it",
        "ts": "1470650301.000681"
    },
    {
        "type": "message",
        "user": "U1751P7U4",
        "text": "<@U0Y14MWA2>:@simon:thanks",
        "ts": "1470650334.000682"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "<@U0XR6J961> - where's the latest prototype code for the new architecture?  still in your fabric fork?",
        "ts": "1470650956.000685"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "hi gari!",
        "ts": "1470651061.000686"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes, there is a hacked version that implements the new flow",
        "ts": "1470651077.000687"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "transaction -&gt; rest -&gt; devops -&gt; peer -&gt; chaincode simulation &amp; collect changeset; changeset -&gt; engine -&gt; atomic broadcast network -&gt; engine -&gt; ledger applies changeset",
        "ts": "1470651173.000688"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "cool - which branch should I look at?  I saw 2 with similar names",
        "ts": "1470651264.000689"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "separate-consensus",
        "ts": "1470651419.000690"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "maybe just browse the commits",
        "ts": "1470651431.000691"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "cool - I was actually looking at the right stuff then.  just wanted to make sure",
        "ts": "1470651669.000692"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "right",
        "ts": "1470651681.000693"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "what's not implemented is endorser flow",
        "ts": "1470651695.000694"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "nor signature\/changeset validation",
        "ts": "1470651705.000695"
    },
    {
        "type": "message",
        "user": "U12AHQ3NK",
        "text": "<@U0Y14MWA2>:  are the passive replicas in XFT part of the synchronous group?",
        "ts": "1470652231.000696"
    },
    {
        "type": "message",
        "user": "U1751P7U4",
        "text": "<@U0Y14MWA2>:  why is prepare phase required in common-case when t&gt;=2.?",
        "ts": "1470653444.000697"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "<@U12AHQ3NK>: no <@U1751P7U4> the answer would be very long :slightly_smiling_face:",
        "ts": "1470653564.000698"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "let's just say it is necessary always, but optimizations are possible for t=1",
        "ts": "1470653640.000699"
    },
    {
        "type": "message",
        "user": "U1751P7U4",
        "text": "ohh okay",
        "ts": "1470653647.000700"
    },
    {
        "type": "message",
        "user": "U1751P7U4",
        "text": "is it because of some blocking of resources issue ?like in 2 phase commit protocol?",
        "ts": "1470653734.000701"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "it is essentially because, when t=1, the first message from the primary acts as a PREPARE msg as well, so no need to send that one in the 2nd phase",
        "ts": "1470653878.000702"
    },
    {
        "type": "message",
        "user": "U1751P7U4",
        "text": "oh okay",
        "ts": "1470653902.000703"
    },
    {
        "type": "message",
        "user": "U1751P7U4",
        "text": "and when t=1 the primary sends his and followers reply to  reply to client  or just the followers reply?",
        "ts": "1470654135.000704"
    },
    {
        "type": "message",
        "user": "U1751P7U4",
        "text": "i.e. m1 to c accoding to the paper",
        "ts": "1470654161.000705"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "yes (the primary sends his and followers reply to  reply to client )",
        "ts": "1470654381.000706"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "t=1 is boring",
        "ts": "1470654402.000707"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "it is - but it shows drastic difference wrt. PBFT t=1",
        "ts": "1470654438.000708"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "the fact it is boring is beautiful :slightly_smiling_face:",
        "edited": {
            "user": "U0Y14MWA2",
            "ts": "1470654458.000000"
        },
        "ts": "1470654449.000709"
    },
    {
        "type": "message",
        "user": "U1751P7U4",
        "text": ":smile: that is true <@U0Y14MWA2>",
        "ts": "1470654473.000711"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i mean, there is an optimization for t=1, but you also only have very few nodes",
        "ts": "1470654504.000712"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "for more nodes - what needs to be improved in that protocol is rotation across synchronous groups",
        "ts": "1470654549.000713"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "combinatorial rotation is ok for t=1 and t=2 but for large values of n and t won't do it",
        "ts": "1470654582.000714"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "the protocol was invented 4 years ago w\/o blockchain in mind at that moment",
        "ts": "1470654654.000715"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "when one had to convince people of the very need of Byz fault tolerant protocols - let alone the need for those that scale well",
        "ts": "1470654757.000716"
    },
    {
        "type": "message",
        "user": "U1751P7U4",
        "text": "<@U0Y14MWA2>:  how will the view change take place when primary turn byzantine when t=1?",
        "ts": "1470659533.000717"
    },
    {
        "type": "message",
        "user": "U0Y14MWA2",
        "text": "<@U1751P7U4>: let's please not abuse this channel too much - I suggest you carefully read the whole paper (<http:\/\/arxiv.org\/pdf\/1502.05831v2.pdf>) esp Sec 4.2 and contact me on private or email in case of particular questions",
        "ts": "1470659641.000718"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0XR6J961> To your comment much earlier:\n&gt; i  realized that we're building an outside \"byzantine\" consensus if we're doing the commiter-signature gossip thing\nI completely agree.  We are leveraging atomic broadcast to build this external byzantine tolerant consensus.  We may choose to re-use the signatures from PBFT nodes if we wish to perform no validation, but ultimately, consensus occurs at the peer, while atomic broadcast ordering (which requires its own internal consensus) is a separate piece.",
        "ts": "1470664763.000719"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "right, it will only be byzantine tolerant if we know N and configure the required signatures to be appropriate",
        "ts": "1470664826.000720"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Correct",
        "ts": "1470664833.000721"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "right",
        "ts": "1470664851.000722"
    },
    {
        "type": "message",
        "user": "U0YMACQSW",
        "text": "<@U0XPR4NP4>: <@U0XR6J961> To your discussion about: \"commiter-signature gossip thing\". can you please give more details? we had some discussions last week with Marko <@U0Y14MWA2> at Haifa about signatures from consenters to commiters",
        "ts": "1470666323.000723"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i don't quite know, i guess one design idea is to have committers sign blocks and exchange signatures",
        "ts": "1470666416.000724"
    },
    {
        "type": "message",
        "user": "U0YMACQSW",
        "text": "We were more focused on propagation from consenters to commmiters and how to sign this messages",
        "ts": "1470666493.000725"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "okay",
        "ts": "1470666558.000726"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0YMACQSW> Yes, I believe the idea was to have a 'block validation system chaincode', which would define a policy for bringing a block into the chain.  Something like \"It has k signatures from the following n public keys\"",
        "ts": "1470666718.000727"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "The nice\/elegant thing about defining block acceptance through such mechanism, is that you can update it simply by adding a new block with a new policy, so if you want to bring other public keys in, or blacklist others, it's relatively simple.  Similarly, the validation policy is tied to the chain, so that as the policy changes, it's possible to verify that older blocks still matched whatever the policy was at their time of inclusion.",
        "ts": "1470667221.000728"
    },
    {
        "type": "message",
        "user": "U0N0GDVJ5",
        "text": "<@U0XR6J961> I am trying to look at the code for the new flow. i see that you have mentioned its under the name separate-consensus. where is this exactly?",
        "ts": "1470676634.000729"
    },
    {
        "type": "message",
        "user": "U0N0GDVJ5",
        "text": "I should have been a little bit more clear. When I say new flow, I mean the consensus flow based on the new consensus architecture",
        "ts": "1470676881.000730"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "<https:\/\/github.com\/corecode\/fabric\/tree\/separate-consensus>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "corecode\/fabric",
                "title_link": "https:\/\/github.com\/corecode\/fabric\/tree\/separate-consensus",
                "text": "Blockchain fabric code",
                "fallback": "GitHub: corecode\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/177979?v=3&s=400",
                "from_url": "https:\/\/github.com\/corecode\/fabric\/tree\/separate-consensus",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1470676921.000731"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "For this: <https:\/\/hyperledgerproject.slack.com\/archives\/fabric-consensus-dev\/p1470651173000688>",
        "attachments": [
            {
                "from_url": "https:\/\/hyperledgerproject.slack.com\/archives\/fabric-consensus-dev\/p1470651173000688",
                "fallback": "[August 8th, 2016 3:12 AM] simon: transaction -&gt; rest -&gt; devops -&gt; peer -&gt; chaincode simulation &amp; collect changeset; changeset -&gt; engine -&gt; atomic broadcast network -&gt; engine -&gt; ledger applies changeset",
                "ts": "1470651173.000688",
                "author_subname": "simon",
                "channel_id": "C0Z4NBUN6",
                "channel_name": "fabric-consensus-dev",
                "is_msg_unfurl": true,
                "text": "transaction -&gt; rest -&gt; devops -&gt; peer -&gt; chaincode simulation &amp; collect changeset; changeset -&gt; engine -&gt; atomic broadcast network -&gt; engine -&gt; ledger applies changeset",
                "author_name": "Simon Schubert",
                "author_link": "https:\/\/hyperledgerproject.slack.com\/team\/simon",
                "author_icon": "https:\/\/secure.gravatar.com\/avatar\/676aeb5acbd353b77e077be1b7bd1a6e.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2F66f9%2Fimg%2Favatars%2Fava_0016-48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "footer": "Posted in #fabric-consensus-dev"
            }
        ],
        "ts": "1470676924.000733"
    },
    {
        "type": "message",
        "user": "U0N0GDVJ5",
        "text": "<@U0XQ35CDD>.. Thank you!",
        "ts": "1470677143.000735"
    }
]
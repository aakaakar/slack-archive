[
    {
        "user": "U0MRY2LKY",
        "text": "<@U0MRY2LKY|troyronda> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1471000141.000736"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0XR6J961> <https:\/\/github.com\/jyellick\/fabric\/commit\/babe257fb6fe2f571559aa8de51e0b244da3579f>\n\nStill work pending, in particular tests, but there is a first pass implementation of 'solo' using the new offset\/history aware proto api for the orderer.  I ended up excluding the security stuff for now as it wasn't necessary for this first pass.  If you wish to give it a test drive, you can build an 'orderer' 'reader' and 'submitter' binary by simply typing `go build` in their respective directories.  The reader just dumps blocks out to stdout as they are created, and 'submitter' submits a single new transaction blob to the orderer.  It should be safe to run multiple readers and submitters, though obviously only one solo orderer.  All of the configuration is simply hard coded in go for the moment and something else can be plugged in later.",
        "ts": "1471031869.000737",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0PB67X4K"
                ],
                "count": 1
            }
        ]
    }
]
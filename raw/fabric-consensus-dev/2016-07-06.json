[
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "it is really a question of connection versus connectionless when it comes to TCP or UDP( <@U0XPR4NP4> - DTLS is basically the analog of TLS for UDP).  For WAN-based deployments there is not way to do traditional multicast (since it would be impossible to know what networks \/ switches to broadcast on)",
        "ts": "1467804464.001540"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "<@U0XR6J961> - on the gRPC issue, isn't the question really whether or not we continue to use protobufs as the serialization format?  Technically we should be able to transport the same protobufs over other transports if we ever wanted to given that gRPC is basically protobufs over HTTP\/2  (yes - I know there is an additional serialization for the gRPC stream but in the end what gets delivered to the handlers are protobufs)",
        "ts": "1467804601.001541"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "or we transport other data via gRPC",
        "ts": "1467804625.001542"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "well minimally gRPC will require a base protobuf",
        "ts": "1467804649.001543"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i just saw a lot of memory\/GC activity, my suspicion is mostly due to protobufs",
        "ts": "1467804653.001544"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "no, gRPC seems to be able to handle other encoders\/decoders",
        "ts": "1467804666.001545"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "well that is technically true I guess, but have you ever seen an example of that?  and I don't believe that there are (any?) libraries \/ generators for anything other than the default protobuf implementation",
        "ts": "1467804835.001546"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "just something to keep in mind",
        "ts": "1467804926.001547"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "I am not against swapping out the serialization \/  transport, but in that case we are probably better off just using the raw building blocks (e.g. TCP or HTTP\/2) rather than gRPC  :wink:",
        "ts": "1467805022.001548"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i don't know - it does nice things for us",
        "ts": "1467805150.001549"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "actually - this is kinda interesting - <https:\/\/open.dgraph.io\/post\/rpc-vs-grpc\/>",
        "attachments": [
            {
                "title": "Custom encoding: Go implementation in net\/rpc vs grpc and why we switched - Dgraph Blog",
                "title_link": "https:\/\/open.dgraph.io\/post\/rpc-vs-grpc\/",
                "fallback": "Custom encoding: Go implementation in net\/rpc vs grpc and why we switched - Dgraph Blog",
                "image_url": "https:\/\/open.dgraph.io\/images\/martian-encoding.jpg",
                "from_url": "https:\/\/open.dgraph.io\/post\/rpc-vs-grpc\/",
                "image_width": 602,
                "image_height": 250,
                "image_bytes": 360963,
                "service_name": "open.dgraph.io",
                "id": 1
            }
        ],
        "ts": "1467805575.001550",
        "reactions": [
            {
                "name": "cool",
                "users": [
                    "U12452RAP"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "jyellick: i just pushed a refactored version of the client",
        "ts": "1467828905.001552"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i think it is getting to a point where it should be able to create a network, but i didn't try that yet",
        "ts": "1467828925.001553"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "basically you need to create a local cert + key, and push the certs of all replicas into the persistence store (`data\/config.peers.`)",
        "ts": "1467828978.001554"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Neat, that was quick, I'll try to take a look",
        "ts": "1467829192.001555"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i spent most time figuring out tls :slightly_smiling_face:",
        "ts": "1467830910.001556"
    }
]
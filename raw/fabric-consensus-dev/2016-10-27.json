[
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "jyellick: any particular reason why you didn't +2 the changesets you reviewed?",
        "ts": "1477555946.002819"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "also no need to -1 if verified fails",
        "ts": "1477555979.002820"
    },
    {
        "type": "message",
        "user": "U2DHRR4TE",
        "text": "dumb question but the mockstub, does this work for fabric 0.5",
        "ts": "1477556259.002821"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "where what?",
        "ts": "1477556341.002822"
    },
    {
        "user": "U2UT57Y6Q",
        "text": "<@U2UT57Y6Q|nitin> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1477560767.002823"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "scrum hangout ...",
        "ts": "1477576712.002824"
    },
    {
        "text": "<@U0UGH3X7X|tuand> has started a Google+ Hangout for this channel. <https:\/\/hangouts.google.com\/hangouts\/_\/wh7v7zj4avfpvj4nrtahlf5ajie|Join Hangout>.",
        "username": "hangouts",
        "bot_id": "B0UKUAJ0Y",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1477576743.002825"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "<@U0XR6J961> ?",
        "ts": "1477576831.002826"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "<@U1AU8DRQR> ?",
        "ts": "1477576840.002827"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "@yacov ?",
        "ts": "1477576852.002828"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "<@U0ZJZBJLF> ?",
        "ts": "1477576859.002829"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0XR6J961> Since the build was failing, did not want to +2 (agree, maybe the -1 was unnecessary), and I commented as to why on <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/2025\/> the commit message does not contain a JIRA reference, and could be a bit more informative (Just following what I have seen from other reviewers here, have had my changesets not +2-ed for this reason)",
        "edited": {
            "user": "U0XPR4NP4",
            "ts": "1477576890.000000"
        },
        "ts": "1477576864.002830"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "yes?",
        "ts": "1477576866.002831"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "sorry",
        "ts": "1477576873.002832"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "all the squad are in my room atm, they distracted me :slightly_smiling_face:",
        "edited": {
            "user": "U0ZJZBJLF",
            "ts": "1477576898.000000"
        },
        "ts": "1477576889.002833"
    },
    {
        "type": "message",
        "user": "U1HFNJB50",
        "text": "<@U0ZJZBJLF> oh, here we start with excuses.",
        "ts": "1477577032.002836",
        "reactions": [
            {
                "name": "laughing",
                "users": [
                    "U0ZJZBJLF"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "<@U0UKTPMG8> Can you remind me what is your suggestion w\/r\/t multiple channels and their respective Broadcast\/Deliver streams?",
        "ts": "1477577378.002837"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "I'm stubbing out support for this now",
        "ts": "1477577395.002838"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "<@U0XQ35CDD> I would think it may be simpler to use a different port for each channel at first",
        "ts": "1477579059.002839"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "could always consolidate if necessary",
        "ts": "1477579092.002840"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "<@U0UKTPMG8>: A different port for the connection between the gRPC client (the peer) and the gRPC server (the shim)?",
        "ts": "1477579610.002841"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "yes, not sure how else you could serve the same service over the same port with GRPC",
        "ts": "1477579786.002842"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "Well, we could do it all on the same port, and add logic on both the client and the server that filters on the channel ID. (But I remember the concern about resource starvation when multiplexing.)",
        "edited": {
            "user": "U0XQ35CDD",
            "ts": "1477579984.000000"
        },
        "ts": "1477579909.002843"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "Let's Hangout real quick if you have time?",
        "ts": "1477579949.002844"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0XQ35CDD> <@U0UKTPMG8> I don't understand the resource starvation when multiplexing a broadcast.  It is a client, if it wants to try to resource starve itself, who cares? With respect to deliver, we simply update the `SeekInfo` to specify a chainID, and then invoke multiple delivers at the client side.  What am I missing?",
        "ts": "1477580293.002846"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "This is what I'm trying to figure out?",
        "ts": "1477580361.002847"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Sorry, I meant the question to be targeted at Jeff, just calling your attention to it",
        "ts": "1477580458.002848"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "I was concerned about the orderer side wrt to QoS",
        "ts": "1477580948.002849"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "does that make sense?  <@U0XPR4NP4>",
        "ts": "1477581035.002850"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I'm afraid it does not",
        "ts": "1477581051.002851"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "hangout with Kostas?",
        "ts": "1477581060.002852"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Sure",
        "ts": "1477581066.002853"
    },
    {
        "text": "<@U0UKTPMG8|jeffgarratt> has started a Google+ Hangout for this channel. <https:\/\/hangouts.google.com\/hangouts\/_\/23s7hw2frjasllzi4jex6cpu4ee|Join Hangout>.",
        "username": "hangouts",
        "bot_id": "B0UKUAJ0Y",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1477581076.002854"
    },
    {
        "text": "<@U0XQ35CDD|kostas> has started a Google+ Hangout for this channel. <https:\/\/hangouts.google.com\/hangouts\/_\/6uvwjvozorejhhwqkzhttcmkrme|Join Hangout>.",
        "username": "hangouts",
        "bot_id": "B0UKUAJ0Y",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1477581078.002855"
    },
    {
        "text": "<@U0XPR4NP4|jyellick> has started a Google+ Hangout for this channel. <https:\/\/hangouts.google.com\/hangouts\/_\/4ugq4lgfuzc3bmtwwbz52otonqe|Join Hangout>.",
        "username": "hangouts",
        "bot_id": "B0UKUAJ0Y",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1477581079.002856"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Wow...",
        "ts": "1477581100.002857"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "you guys ...",
        "ts": "1477581102.002858"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": ":wink:",
        "ts": "1477581104.002859"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "join hasons?",
        "ts": "1477581107.002860"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "jasons",
        "ts": "1477581110.002861"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": ":slightly_smiling_face:",
        "ts": "1477581110.002862"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I\u2019ll stay away and focus on using the new protos integration :slightly_smiling_face:",
        "ts": "1477581137.002863"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "last thing I want to do is join 3 hangouts :wink:",
        "ts": "1477581151.002864"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "on Jasons :slightly_smiling_face:",
        "ts": "1477581193.002865"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "haha \u2026 indeed :slightly_smiling_face:",
        "ts": "1477581781.002866"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "In the Kafka case, do we want the addition of a new orderer to refer to (a) another shim, (b) a Kafka broker, or (c) either\/or, or (d) always both?",
        "edited": {
            "user": "U0XQ35CDD",
            "ts": "1477585391.000000"
        },
        "ts": "1477585346.002867"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "The more I think about it, the more I think that (c) is the way to go.",
        "ts": "1477585428.002869"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Instinctivey I would say (a), though (c) provides a convenient mechanism to reconfigure shims.  I would say not (b) and not (d).",
        "ts": "1477587115.002870"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "c)",
        "ts": "1477587719.002871"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "minimally a)",
        "ts": "1477587731.002872"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "Sorry - MVP would need to do c) but I think we could start with a)",
        "ts": "1477587767.002873"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "for adding Kafka brokers, we should be able to leverage Kafka capabilities.  For a) there is work on our side",
        "ts": "1477587797.002874"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "Alright, so same page here. And that is indeed the plan with Kafka brokers, (but I need to add support for Metadata requests to the code).",
        "ts": "1477587916.002875"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "Some thoughts before I turn this into a JIRA issue.",
        "ts": "1477597906.002876"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "We need TLS connections between the shims and the Kafka brokers.",
        "ts": "1477598130.002877"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "But there's no API to set the Kafka ACLs (note: this is different than the ACLs that _we_ have been talking about so far; these are maintained on the shim level).",
        "ts": "1477598170.002878"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "The way you update Kafka ACLs is by executing a script.",
        "ts": "1477598185.002879"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "So every time we add\/remove a shim, we'll need to execute this script.",
        "ts": "1477598220.002880"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "Sounds a bit flaky, but wanted to check if there are any thoughts or alternative approaches to it.",
        "ts": "1477598252.002881"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "<@U0XQ35CDD> - just to clarify - on the Kafka broker side - we want to:\n\n1) Require TLS\n2) Require client authentication between the shim(s) and Kafka\n\n\nDo we want to explicitly limit access to Kafka topics or are you good with allowing any authenticated client (e.g. Shims) to do anything?",
        "ts": "1477598558.002882"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "At the risk of missing something, I'd say I'm good with allowing any authenticated shim to do anything.",
        "ts": "1477598599.002883"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I agree, I see no reason for restriction",
        "ts": "1477598656.002884"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "OK - cool.  So if we:\n\n1) Only enable the TLS (SSL in Kafka terms) listener on Kafka\n2) We require client certificates\n3) Then we should be able to simply configure Kafka brokers with a list of CAs to trust",
        "ts": "1477598874.002885"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "But if these CAs change, then the `kafka-acls.sh` script needs to be executed. That's what I'm getting at.",
        "ts": "1477598921.002886"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "well I did not think that that script actually deals with the truststore - although given the truststore is going to be a Java Key Store, you'll still need a script to add \/ remove trusted certificates from there",
        "ts": "1477599251.002887"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "I think we can avoid Kafka ACLs with TLS client authentication only, but you'll need to be able to modify the keystore",
        "ts": "1477599287.002888"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "and I am not sure if it is statically loaded at runtime",
        "ts": "1477599305.002889"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "Does the Go Kafka client support any of the SASL mechanisms?",
        "ts": "1477599326.002890"
    },
    {
        "type": "message",
        "user": "U0KN2SSKE",
        "text": "<@U0XQ35CDD> is it possible to config brokers to accept only local connections so that we would force shim to be on the same box\/vm?",
        "ts": "1477599409.002891"
    },
    {
        "type": "message",
        "user": "U0KN2SSKE",
        "text": "and would that be good enough to remove the requirement of ssl?",
        "ts": "1477599429.002892"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "you need to have TLS in any case for broker to broker communcation",
        "ts": "1477599609.002893"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "same listener(s)",
        "ts": "1477599622.002894"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "<@U0KN2SSKE>: Gari's correct, you'll need TLS for comms between brokers.",
        "edited": {
            "user": "U0XQ35CDD",
            "ts": "1477605598.000000"
        },
        "ts": "1477605592.002895"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "<@U0PB67X4K>: I looked it up and you are correct that the `kafka-acls.sh` script does _not_ modify the truststore.",
        "edited": {
            "user": "U0XQ35CDD",
            "ts": "1477605677.000000"
        },
        "ts": "1477605665.002897"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "But yeah you'll need a script to manage it nonetheless, so we're back to square one.",
        "ts": "1477605692.002899"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "The library that we are using does support SASL, but I am not familiar with the underlying mechanism. Should I be looking into it? (And is there a one-liner as to what makes it better?)",
        "ts": "1477605751.002900"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "<@U0XQ35CDD> - nothing inherently makes it \"better\" - they chose SASL because its a pluggable authentication layer.  They support Kerberos and Plain (username \/ password) SASL mechanisms today.  I think there is some flexibility in adding usernames \/ password (the BMX Message Hub use the Plain mechanism and I think they are able to easily add credentials programmatically)",
        "ts": "1477607272.002901"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "I am not sure if Kafka would reload the keystore if it is modified either - likely it does - and there are utilities (key tool) which can be used from the command line \/ exec functions to add certs as well",
        "ts": "1477607338.002902"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "so TLS with client certificates and this utility might be straightforward.  There may even be key tool source out there (likely C) so perhaps you can just link it in to the shim as well",
        "ts": "1477607397.002903"
    }
]
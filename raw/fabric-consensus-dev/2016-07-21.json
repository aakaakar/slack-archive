[
    {
        "type": "message",
        "user": "U0XV1HDL3",
        "text": "<@U0XPR4NP4>: interesting diagram ... but can you perhaps add some API descriptions? i dont follow. would the endorsers work as described in next-consensus-architecture? if yes, which box filters those tx after \"consenter\" (where there is total order) violate version dependencies? why loop twice from \"consenter\" to \"orderer\" ?",
        "ts": "1469085774.000280"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "<@U0XV1HDL3>: Jason will expand more, but in the meantime maybe it'll be a bit clearer if you think of \"consenter\" as a \"validator\". (At least it did to me.) The first pass through the consenter gives you valid transactions (i.e. those read the read the right version of a key and propose a valid changeset), the second pass gives you valid blocks (so it makes sure there are no conflicting transactions in the same block, and filters out transactions that may have become stale).",
        "edited": {
            "user": "U0XQ35CDD",
            "ts": "1469098684.000000"
        },
        "ts": "1469098513.000281"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "hi guys",
        "ts": "1469107275.000283"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "hey simon",
        "ts": "1469107301.000284"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "managed to catch up with everything?",
        "ts": "1469107323.000285"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "eh ...",
        "ts": "1469107334.000286"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "reading through our task list",
        "ts": "1469107346.000287"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "idk  ... is there enough details for us to start prioritizing a bit ?",
        "ts": "1469107381.000288"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "also, binh is going to send out some proposals for v2 ...  he wants to show the community on monday's arch group call",
        "ts": "1469107463.000289"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "okay",
        "ts": "1469107613.000290"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "in the mean time , i'm going to take a quick look at #2262 ... go totally sidetracked yesterday",
        "ts": "1469107802.000291"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i think it isn't worth it",
        "ts": "1469108329.000292"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i'd appreciate it if we could decide on whether we want to go with my separate consensus approach",
        "ts": "1469108362.000293"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and if so, work on getting it into the main repo",
        "ts": "1469108374.000294"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "or figure out what we need to do to get it into the repo",
        "ts": "1469108387.000295"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "My vote on this is known, I believe.",
        "ts": "1469108388.000296"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "ok ...  i say we go for it and get a PR to get into master ... what's needed ?",
        "ts": "1469108534.000297"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "I'm all for the work in your branch, but I disagree with the main repo approach.",
        "ts": "1469108585.000298"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "I suggest we work in your branch until the powers that be realize that a separate consensus branch is the way to go.",
        "ts": "1469108648.000299"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "well in the end we need to get it in",
        "ts": "1469108653.000300"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "in one form or another",
        "ts": "1469108665.000301"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0XV1HDL3> I'll put together a better diagram.  My key thought was that we should split block creation from ordering consensus.  Basically, Bitcoin uses PoW puzzle solving as its primitive for this block is next, but we can use a 'total order broadcast' for our primitive as to what block is next.  In this way, the flow for the permissioned BFT path and the probabilistic PoW\/PoET paths become the same, each utilizing a different primitive to determine block validity.",
        "ts": "1469108737.000302"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "and we have to get the community aware of and using simon's branch",
        "ts": "1469108769.000303"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yea that's silly",
        "ts": "1469108785.000304"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "which is silly ?",
        "ts": "1469108831.000305"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "fyi #2262  ... looks to be a bug in chaincode",
        "ts": "1469109232.000306"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "<@U0XPR4NP4>: Spent some more time thinking about this yesterday. How would you say that this is different from the concept of bringing validation to the consenter level in the NCAP work, as DAH had suggested? The only difference that I see is the first pass through the consenter\/validator to filter out potentially invalid transactions. But you can maybe argue that you'll take the toll on ordering invalid transactions because you'll filter them on the way out anyway. Is there another difference?",
        "ts": "1469109368.000307"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I'm not very familiar with the NCAP work \/ DAH's suggestion",
        "ts": "1469109418.000308"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "NCAP is the new consensus architecture proposal. DAH's suggestion is to have the consenters validate the blocks before they get emitted, instead of having the committers do the validation.",
        "ts": "1469109485.000309"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Ah okay, sorry, didn't catch the acronym.  I think it's all pretty similar, probably more semantic than anything.  The issue about modifying the NCAP and emitting only 'valid blocks' is that you lose the chain aspect, as once you've pruned the block, the hash chain from consensus is broken.  But, you could certainly build a new chain, and, if you even added some sort of gossip of block signatures at that step, then I'd argue they're very similar.  I still think the right first step is to go to the consenter\/validator, and not the orderer, because not all consensus mechanisms require that ordering step.",
        "ts": "1469109985.000310"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0XR6J961> Assuming your comment was about my remark, certainly open to criticism, I can see some downsides, but it doesn't seem obviously broken to me, would like to hear your thoughts",
        "ts": "1469110055.000311"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "my comment is about developing on our own branch",
        "ts": "1469110095.000312"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and telling the community to use that branch",
        "ts": "1469110105.000313"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "regarding the design, can we do API design first?",
        "ts": "1469110155.000314"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "(while thinking about how different implementations would work)",
        "ts": "1469110173.000315"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Definitely",
        "ts": "1469110208.000316"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "<@U0XPR4NP4>: Gotcha. RE: \"But, you could certainly build a new chain, and, if you even added some sort of gossip of block signatures at that step, then I'd argue they're very similar.\" Inevitably you would be collecting signatures on the new block (that's linked to the previous one) during the validation in the NCAP+DAH design, so yeah, I think the two approaches would overlap.",
        "ts": "1469110411.000317"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I think the block validation strategy could optionally depend on ordering as well.",
        "ts": "1469110459.000318"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "If the rule is, you require f+1 signatures for a valid block, for instance.  That's a broken rule in a 3f+1 network, because you can have two sets of f+1 signatures.  If however, you require the \"first set of f+1 signatures\", then you're back to only one valid block.",
        "ts": "1469110509.000319"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Of course, if you require 2f+1 signatures, then it should be safe without ordering.",
        "ts": "1469110526.000320"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "what are you talking about?",
        "ts": "1469110605.000321"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "<@U0XPR4NP4>: I agree.",
        "ts": "1469110628.000322"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0XR6J961> If the validators\/consenters (not the ordering consenters) are building the blockchain themselves, by pruning bad transactions, creating a new block, and signing that block, then they must have some sort of threshold for the number of required signatures before a block becomes valid.",
        "ts": "1469110667.000323"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1469110735.000324"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "how can we describe this independent of the consensus method",
        "ts": "1469110751.000325"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "because PoW will be different",
        "ts": "1469110757.000326"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "In some schemes, a simple threshold of \"&gt; n\" might be sufficient, but, you could imagine a scheme which depends on the 'first to &gt; n', which requires fewer signatures.",
        "ts": "1469110773.000327"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "So, for the validator\/consenter (not ordering consenter) [we should really come up with a formal name for this], I would think the API is pretty naturally defined.  You have two api points of ingress, one accepts new transactions, the other accepts proposed blocks (or block representations, maybe hash+signature).  Then, you have a single defined point of egress which is 'valid blocks'.",
        "ts": "1469110939.000328"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "how do the blocks get proposed?",
        "ts": "1469111005.000329"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "In the PoW mechanism, the ingress and egress are both done via gossip, trans come in, you try to solve a puzzle, and valid blocks go out.  If someone else solves the puzzle first, you get that block coming in (from someone else's valid block egress) commit it, and you work on the next block.",
        "edited": {
            "user": "U0XPR4NP4",
            "ts": "1469111203.000000"
        },
        "ts": "1469111025.000330"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "In the PBFT mechanism, the ingress of trans is unordered, we then use our atomic broadcast ordering primitive (equivalent to the puzzle solving step) to give us an ordered list of trans, and we create a valid block, sign it and send it out.  Gossip would be fine here depending on the threshold scheme.  Once we receive enough valid signatures, we consider that block to be valid and commit it.",
        "edited": {
            "user": "U0XPR4NP4",
            "ts": "1469111230.000000"
        },
        "ts": "1469111102.000331"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "(RE: formal names. The consenter term has been so overloaded that I honestly propose we get rid of it, at least internally. I read a doc yesterday that talked about \"block adders\" and thought to myself, \"well, at least it gets the message across\". So validators, and orderers work for me.)",
        "ts": "1469111114.000332"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "(Great, I'll use that)",
        "ts": "1469111160.000333"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but the \"send it out\" would be internal to that specific pbft consensus cloud",
        "ts": "1469111216.000335"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "&gt; Gossip would be fine here depending on the threshold scheme.\nHere you mean among the orderers?",
        "ts": "1469111217.000336"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so i guess my questions are:",
        "ts": "1469111232.000338"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0XQ35CDD> I mean among the validators",
        "edited": {
            "user": "U0XPR4NP4",
            "ts": "1469111258.000000"
        },
        "ts": "1469111238.000339"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "1. how do we define what \"right set of signatures\" is",
        "ts": "1469111248.000341"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "or rather, \"cryptographic proof\"",
        "ts": "1469111263.000343"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "which is different between consensus models",
        "ts": "1469111274.000344"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "crash fault tolerant doesn't have any",
        "ts": "1469111299.000345"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "PoW has one crypto puzzle",
        "ts": "1469111306.000346"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "bft has 2f+1 signatures of replicas (at that time)",
        "ts": "1469111330.000347"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so clearly the \"proof\" is specific to the consensus method chosen",
        "ts": "1469111356.000348"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "1. Yes, these I've been handwaving at with \"There are a bunch of ways you could do this\", which I do think is true.  As a proof of concept first step sort of thing, I would say we use the PBFT scheme.  Given 3f+1 validators, require 2f+1 signatures before a block is valid.",
        "ts": "1469111368.000349"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "And on top of that, another thing that I believe Christian mentioned yesterday, and threw me off. How do you prove that the signature you have for block X did indeed belong to a valid-at-the-time validator. What if the validator wasn't authorized to be a validator back then?",
        "ts": "1469111404.000350"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "You probably solve this by recording on the blockchain who the validators are during an epoch.",
        "ts": "1469111462.000351"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I would say timestamps solve that somewhat nicely, if the signature is for something before the cert became valid (was issued), then it is not a valid signature.",
        "edited": {
            "user": "U0XPR4NP4",
            "ts": "1469111487.000000"
        },
        "ts": "1469111475.000352"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Ah, yes, recording that on the blockchain might be cleaner",
        "ts": "1469111508.000354"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "I'm thinking a \"from now on, and until we record another block suggesting otherwise, A-B-C-D are the approved validators\" block on the chain.",
        "ts": "1469111559.000355"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "Right.",
        "ts": "1469111560.000356"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "This is a hard problem, though I would maintain that it's probably easier to come up with a correct validator signature scheme, than to make PBFT dynamically add orderers.",
        "ts": "1469111599.000357"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "(If, for our first pass, we are interested in adding and removing validators, but not orderers)",
        "ts": "1469111630.000358"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Alright, going to hop offline for a few minutes as I make my way to the main site, back in a bit",
        "ts": "1469111791.000359"
    },
    {
        "type": "message",
        "user": "U0XV1HDL3",
        "text": "<@U0XPR4NP4> - to understand better, you want to accommodate BFT and PoW consensus in this one framework? this will be quite difficult because PoW is not final, while BFT is...",
        "ts": "1469113261.000360"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0XV1HDL3> So certainly, PoW can create forks, while BFT does not.  So, to me the difference is, in  BFT there is exactly one possible valid block for each block number, while in PoW there may be multiple.  So, the idea would be that a 'validator' simply creates\/validates blocks, and the actual mechanism for determining the content of the block (whether it be ordering, or puzzle solving) would plug into the validator.",
        "ts": "1469113941.000361"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I know that <@U0TFEHX8E> has been looking to make the ledger support forks, so I'm not sure what else would make the support of both so challenging?",
        "ts": "1469114481.000362"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "hi",
        "ts": "1469122373.000363"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i think people took over that room",
        "ts": "1469122383.000364"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "do we have an API surface thing?",
        "ts": "1469122440.000365"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U0KN2SSKE|binhn> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/binhn\/F1TUZG2DD\/slack_for_ios_upload.jpg|Slack for iOS Upload>",
        "file": {
            "id": "F1TUZG2DD",
            "created": 1469122738,
            "timestamp": 1469122738,
            "name": "Slack for iOS Upload.jpg",
            "title": "Slack for iOS Upload",
            "mimetype": "image\/jpeg",
            "filetype": "jpg",
            "pretty_type": "JPEG",
            "user": "U0KN2SSKE",
            "editable": false,
            "size": 1337858,
            "mode": "hosted",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1TUZG2DD\/slack_for_ios_upload.jpg?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1TUZG2DD\/download\/slack_for_ios_upload.jpg?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_64": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F1TUZG2DD-061768a660\/slack_for_ios_upload_64.jpg?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_80": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F1TUZG2DD-061768a660\/slack_for_ios_upload_80.jpg?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_360": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F1TUZG2DD-061768a660\/slack_for_ios_upload_360.jpg?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_360_w": 360,
            "thumb_360_h": 270,
            "thumb_480": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F1TUZG2DD-061768a660\/slack_for_ios_upload_480.jpg?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_480_w": 480,
            "thumb_480_h": 360,
            "thumb_160": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F1TUZG2DD-061768a660\/slack_for_ios_upload_160.jpg?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_720": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F1TUZG2DD-061768a660\/slack_for_ios_upload_720.jpg?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_720_w": 720,
            "thumb_720_h": 540,
            "thumb_960": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F1TUZG2DD-061768a660\/slack_for_ios_upload_960.jpg?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_960_w": 960,
            "thumb_960_h": 720,
            "thumb_1024": "https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F1TUZG2DD-061768a660\/slack_for_ios_upload_1024.jpg?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "thumb_1024_w": 1024,
            "thumb_1024_h": 768,
            "image_exif_rotation": 1,
            "original_w": 3264,
            "original_h": 2448,
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/binhn\/F1TUZG2DD\/slack_for_ios_upload.jpg",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F1TUZG2DD-405194367a",
            "channels": [
                "C0Z4NBUN6"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 0
        },
        "user": "U0KN2SSKE",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U0KN2SSKE|binhn>",
        "bot_id": null,
        "ts": "1469122745.000366"
    },
    {
        "type": "message",
        "user": "U0KN2SSKE",
        "text": "<@U0XPR4NP4>: could you post the new picture here",
        "ts": "1469140863.000367"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I'm not sure which new picture you mean? We plan on writing something more formal up soon that is the hybrid option 2 \/ 3 as described ",
        "ts": "1469148172.000368"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "(Jason: Probably the drawing that Tuan had on the whiteboard which I believe wasn't captured because of the upcoming write-up.)",
        "edited": {
            "user": "U0XQ35CDD",
            "ts": "1469148944.000000"
        },
        "ts": "1469148686.000369"
    },
    {
        "type": "message",
        "user": "U0KN2SSKE",
        "text": "I thought we split out the validator into 2 components, so ",
        "ts": "1469150708.000371"
    },
    {
        "type": "message",
        "user": "U0KN2SSKE",
        "text": "I like to see those components in a diagram",
        "ts": "1469150756.000372"
    }
]
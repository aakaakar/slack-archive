[
    {
        "user": "U1422GVM1",
        "text": "<@U1422GVM1|yajneshrai> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1469005154.000209"
    },
    {
        "type": "message",
        "user": "U1422GVM1",
        "text": "Hello. I have a question on new consensus architecture.\nIn a blockchain network, can we have all the peers as endorsing peers and omit submitting peers? \nAre these peers just the roles that can be played by any node? (I mean can a submitting peer play the role of other nodes as well?)",
        "edited": {
            "user": "U1422GVM1",
            "ts": "1469011065.000000"
        },
        "ts": "1469005847.000210"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1469009663.000211"
    },
    {
        "type": "message",
        "user": "U1422GVM1",
        "text": "<@U0XR6J961>: May I know which of the above statements are true, to be more precise?",
        "ts": "1469010828.000212"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "any machine can run multiple node types",
        "ts": "1469010861.000213"
    },
    {
        "type": "message",
        "user": "U1422GVM1",
        "text": "okay thank you <@U0XR6J961> ! Any comment on first question, regarding omitting all the submitting peers and keeping only endorsing peers?",
        "ts": "1469011115.000215"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "well you need somebody to submit",
        "ts": "1469011225.000216"
    },
    {
        "type": "message",
        "user": "U1422GVM1",
        "text": "yeah got it",
        "ts": "1469011264.000217"
    },
    {
        "type": "message",
        "user": "U1422GVM1",
        "text": "<@U0XR6J961>: Have you got any idea about the limit for chains that can be present in a blockchain network? (The max no of chains in a network)",
        "edited": {
            "user": "U1422GVM1",
            "ts": "1469011473.000000"
        },
        "ts": "1469011421.000218"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i don't understand",
        "ts": "1469011612.000220"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "the design is single chain",
        "ts": "1469011620.000221"
    },
    {
        "type": "message",
        "user": "U1422GVM1",
        "text": "Is there any notion of maintaining multiple chains to keep confidentiality against other peers?",
        "ts": "1469011731.000222"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "there is talk about it, but no clear design yet",
        "ts": "1469011856.000223"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "do you have suggestions?",
        "ts": "1469011861.000224"
    },
    {
        "type": "message",
        "user": "U1422GVM1",
        "text": "Yes. For a particular group of business entities(peers) create a separate chain where only they can maintain their relevant transactions. \nBut I feel this would lead to an overhead if there are 100(or more) separate group of peers.",
        "ts": "1469012213.000225"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "it is a difficult thing, yes",
        "ts": "1469013146.000226"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "what does it mean to create a separate chain?  maintain own set of consensus nodes as well?",
        "ts": "1469013188.000227"
    },
    {
        "type": "message",
        "user": "U1422GVM1",
        "text": "Just endorsing peers will change, and consenters can remain same as they do not keep the ledgers",
        "ts": "1469016871.000228"
    },
    {
        "type": "message",
        "user": "U1422GVM1",
        "text": "<@U0XR6J961>: Is PBFT going to be replaced by XFT in the next consensus model?",
        "edited": {
            "user": "U1422GVM1",
            "ts": "1469017243.000000"
        },
        "ts": "1469017225.000229"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "we want to make consensus exchangable",
        "ts": "1469017311.000231"
    },
    {
        "type": "message",
        "user": "U1422GVM1",
        "text": "What does exchangable mean?",
        "ts": "1469017466.000232"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "ideally there will be pbft, and some sort of PoW, some crash-fault tolerant",
        "ts": "1469017624.000233"
    },
    {
        "type": "message",
        "user": "U1422GVM1",
        "text": "But in the new proposal it is mentioned that PBFT will be completely replaced in the architecture.",
        "ts": "1469017873.000234"
    },
    {
        "type": "message",
        "user": "U1422GVM1",
        "text": "<https:\/\/github.com\/hyperledger\/fabric\/wiki\/Fabric-Next#212-consensus-service-development-after-solo>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/wiki\/Fabric-Next#212-consensus-service-development-after-solo",
                "text": "fabric - Fabric is a blockchain project in Incubation proposed to the community and documented at <https:\/\/goo.gl\/RYQZ5N>. Information on what Incubation entails can be found in the Hyperledger Proj...",
                "fallback": "GitHub: hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/wiki\/Fabric-Next#212-consensus-service-development-after-solo",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1469017915.000235"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "interesting ... <https:\/\/github.com\/hyperledger\/fabric\/issues\/2262>   ... I've asked Dongming to post logs",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "invokes do mot go thru with large payload (1M) \u00b7 Issue #2262 \u00b7 hyperledger\/fabric \u00b7 GitHub",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/issues\/2262",
                "text": "Description commit level: 3e0e80a branch: v0.5-developer-preview When test invokes (200 transactions with 1 thread) with large payload, about 1.3M, only part of transactions recorded to ledger. O...",
                "fallback": "GitHub: invokes do mot go thru with large payload (1M) \u00b7 Issue #2262 \u00b7 hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/17034559?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/issues\/2262",
                "thumb_width": 420,
                "thumb_height": 420,
                "service_icon": "https:\/\/a.slack-edge.com\/e8ef6\/img\/unfurl_icons\/github.png",
                "id": 1
            }
        ],
        "ts": "1469019942.000237"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "why are people storing megabyte files in the blockchain?",
        "ts": "1469020193.000239"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "what is going on?",
        "ts": "1469020197.000240"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "i think they're testing effects of different payload sizes",
        "ts": "1469020250.000241"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "peers are down?",
        "ts": "1469035137.000242"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "what kind of test is this?",
        "ts": "1469035141.000243"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "It is well known that large payloads require timeouts to be turned way up.",
        "ts": "1469035553.000244"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "jyellick: <https:\/\/github.com\/corecode\/fabric\/commits\/separate-consensus-config>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "corecode\/fabric",
                "title_link": "https:\/\/github.com\/corecode\/fabric\/commits\/separate-consensus-config",
                "text": "Blockchain fabric code",
                "fallback": "GitHub: corecode\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/177979?v=3&s=400",
                "from_url": "https:\/\/github.com\/corecode\/fabric\/commits\/separate-consensus-config",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1469036269.000245"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "does this look remotely reasonable?",
        "ts": "1469036288.000247"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "(looking)",
        "ts": "1469036340.000248"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "So, I'm not sure I'm sold either way, but I think there's definitely a tradeoff using a map vs. explicitly enumerating the config parameters in the protobuf definition",
        "ts": "1469036493.000249"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "The map means the proto stays constant and you don't have to worry about forward\/backward compatibility at the proto level, but it also seems far more opaque",
        "ts": "1469036546.000250"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1469036591.000251"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "the map is internal",
        "ts": "1469036597.000252"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "initial config is done via json and does not do a map",
        "ts": "1469036615.000253"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "we may want a `pbft.CheckConfig(c *BatchConfig) error`",
        "ts": "1469036657.000254"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "also maybe something with defaults",
        "ts": "1469036693.000255"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "my test config looked this way:",
        "ts": "1469036698.000256"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U0XR6J961|simon> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/simon\/F1THDNR6H\/consensus.json|consensus.json>",
        "file": {
            "id": "F1THDNR6H",
            "created": 1469036738,
            "timestamp": 1469036738,
            "name": "consensus.json",
            "title": "consensus.json",
            "mimetype": "text\/plain",
            "filetype": "javascript",
            "pretty_type": "JavaScript\/JSON",
            "user": "U0XR6J961",
            "editable": true,
            "size": 356,
            "mode": "snippet",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1THDNR6H\/consensus.json?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1THDNR6H\/download\/consensus.json?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/simon\/F1THDNR6H\/consensus.json",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F1THDNR6H-c0ac69d8ea",
            "edit_link": "https:\/\/hyperledgerproject.slack.com\/files\/simon\/F1THDNR6H\/consensus.json\/edit",
            "preview": "{\n    \"consensus\": {\n        \"pbft_config\": {\n            \"f\": 0,\n            \"k\": 2,",
            "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text\/plain',window.getSelection().toString().replace(\/\\u200b\/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>{<\/pre><\/div>\n<div><pre>    <span class=\"cm-string\">&quot;consensus&quot;<\/span>: {<\/pre><\/div>\n<div><pre>        <span class=\"cm-string\">&quot;pbft_config&quot;<\/span>: {<\/pre><\/div>\n<div><pre>            <span class=\"cm-string\">&quot;f&quot;<\/span>: <span class=\"cm-number\">0<\/span>,<\/pre><\/div>\n<div><pre>            <span class=\"cm-string\">&quot;k&quot;<\/span>: <span class=\"cm-number\">2<\/span>,<\/pre><\/div>\n<\/div>\n<\/div>\n",
            "lines": 17,
            "lines_more": 12,
            "preview_is_truncated": null,
            "channels": [
                "C0Z4NBUN6"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 0
        },
        "user": "U0XR6J961",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U0XR6J961|simon>",
        "bot_id": null,
        "ts": "1469036739.000257"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U0XPR4NP4|jyellick> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/jyellick\/F1THGPCEB\/two_phase_consensus.pdf|two_phase_consensus.pdf> and commented: Two Phase Consensus Illustrated",
        "file": {
            "id": "F1THGPCEB",
            "created": 1469037166,
            "timestamp": 1469037166,
            "name": "two_phase_consensus.pdf",
            "title": "two_phase_consensus.pdf",
            "mimetype": "application\/pdf",
            "filetype": "pdf",
            "pretty_type": "PDF",
            "user": "U0XPR4NP4",
            "editable": false,
            "size": 144487,
            "mode": "hosted",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1THGPCEB\/two_phase_consensus.pdf?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F1THGPCEB\/download\/two_phase_consensus.pdf?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/jyellick\/F1THGPCEB\/two_phase_consensus.pdf",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F1THGPCEB-5bb39ad2af",
            "channels": [
                "C0Z4NBUN6"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 1,
            "initial_comment": {
                "id": "Fc1THTAGBC",
                "created": 1469037166,
                "timestamp": 1469037166,
                "user": "U0XPR4NP4",
                "is_intro": true,
                "comment": "Two Phase Consensus Illustrated",
                "channel": ""
            },
            "num_stars": 1
        },
        "user": "U0XPR4NP4",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U0XPR4NP4|jyellick>",
        "bot_id": null,
        "ts": "1469037167.000258"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "maybe the timeouts should be strings",
        "ts": "1469037168.000259"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0XQ35CDD> <@U0XR6J961> See above",
        "ts": "1469037186.000260"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yea that is one way of doing that with total order broadcast",
        "ts": "1469037212.000261"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I don't see why it strictly requires total order broadcast, if you allow forking",
        "ts": "1469037243.000262"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "From the broadcast to deliver step, it looks exactly like bitcoin to me.  Assuming you use gossip without ordering for the network box",
        "ts": "1469037329.000263"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "With total ordering, then you can guarantee exactly one correct block comes out.",
        "ts": "1469037422.000264"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1469037430.000265"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and you don't need to order the TX before",
        "ts": "1469037456.000266"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Well, I'd argue you are getting an implicit TX order",
        "ts": "1469037479.000267"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "Just came back, looking now.",
        "ts": "1469037491.000268"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so (4) and (5) could be using gossip",
        "ts": "1469037491.000269"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "while (6) and (7) use total order broadcast",
        "ts": "1469037503.000270"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I think you could.  Though by having ordering at 5, you can guarantee everyone builds the same block, which I think would improve the efficiency of 7",
        "ts": "1469037624.000271"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "So this separation between \"Consenter\" and \"Network Orderer\" in this diagram throws me off a bit. You're basically saying that on the Consenter level, you have TXs coming in, candidate blocks being created internally, which are then validated and delivered.",
        "edited": {
            "user": "U0XQ35CDD",
            "ts": "1469038158.000000"
        },
        "ts": "1469038120.000272"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "I guess I agree, but I'm not sure what's new here, compared to the rest of today's discussions. Not being blunt, I'm trying to realize if there's a subtle difference that I'm missing.",
        "ts": "1469038386.000274"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Yes, so I've deliberately called that a 'consenter' even though it really does nothing for 'consensus' from an ordering perspective.  Basically, we keep shoving 'ordering' and 'consenting' together, but I don't think people are great at articulating that they do not want this.  From a bitcoin perspective, I'd argue that their 'consenters' actually don't do ordering.  Ordering is done by looking at a collection of blocks, and picking the longest chain.  Using PBFT, we are exploiting ordering, to deterministically create blocks, but that's a different sort of 'ordering'.",
        "ts": "1469038386.000275"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "So yes, I'd say a blockchain is ordered, because blocks have numbers, and 'validity'.  Under some schemes, like PBFT, it will be impossible to generate multiple valid blocks for the same block number.  Under other schemes, like PoW, it may be possible to generate multiple valid blocks for the same block number, but there is an incentive not to.  But fundamentally, consenters create blocks and determine whether a block is valid, not what order the blocks go in.",
        "edited": {
            "user": "U0XPR4NP4",
            "ts": "1469038653.000000"
        },
        "ts": "1469038638.000276"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0XQ35CDD> With regards to what's new here, is that from Binh's picture, the consenter \/ orderer are the same, and then there's this external 'validator' thing, which I think is wrong.  I think the consenter \/ validator are one, and the orderer is the external thing (and could more appropriately be called 'network').  In the permissioned PBFT mode, the consenter\/validator can exploit the total ordering properties of the network to decide what blocks are valid, but they do not do ordering.",
        "ts": "1469039434.000278"
    },
    {
        "user": "U1SDX7EQZ",
        "text": "<@U1SDX7EQZ|liewsc> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1469064994.000279"
    }
]
[
    {
        "type": "message",
        "user": "U12AHQ3NK",
        "text": "Hello.. in the obcpbft\/config file the timeout value for singleblock=2s. So does that mean a block will be created in every 2s?",
        "ts": "1462518100.001255"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "what does \"consensus failure\" mean?",
        "ts": "1462529391.001256"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "nits7sid: if you run batch, then a new block will created after 2s, even if the block is not full",
        "ts": "1462529602.001257"
    },
    {
        "type": "message",
        "user": "U12AHQ3NK",
        "text": "ohh.. i was testing the pbft and noops working. in nops when i call a Invoke  chaincode function 100 times all the 100 transactions goes into one block. But in case of pbft it creates 100 seperate blocks. why does this happen? or am i going wrong in my configuration?",
        "ts": "1462529788.001258"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "you need to use pbft batch",
        "ts": "1462530182.001259"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U0XPR4NP4>: <@U0XR6J961> would you have some time to review \n<https:\/\/github.com\/muralisrini\/fabric\/tree\/report_transaction_and_block_failures_take2%23issue588> for changes to consensus for issue 588 please?",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "muralisrini\/fabric",
                "title_link": "https:\/\/github.com\/muralisrini\/fabric\/tree\/report_transaction_and_block_failures_take2%23issue588",
                "text": "Blockchain fabric incubator code",
                "fallback": "GitHub: muralisrini\/fabric",
                "thumb_url": "https:\/\/avatars1.githubusercontent.com\/u\/14361488?v=3&s=400",
                "from_url": "https:\/\/github.com\/muralisrini\/fabric\/tree\/report_transaction_and_block_failures_take2%23issue588",
                "thumb_width": 420,
                "thumb_height": 420,
                "id": 1
            }
        ],
        "ts": "1462535908.001260"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i will",
        "ts": "1462536077.001262"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "thanks!",
        "ts": "1462536181.001263"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "it only takes care of the \u201cconsensus succeeded\u201d path. For now we don\u2019t issue an event on \u201cconsensus failure\"",
        "ts": "1462536219.001264"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "the later needs more that to even determine all the cases so we can do it correctly (if it can be done)",
        "ts": "1462536306.001265"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "feels wrong that the result is non-hash (i.e. non-consensus) data",
        "ts": "1462536453.001266"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "it is",
        "ts": "1462536642.001267"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "there is some explanation in the issue why we do it this way",
        "ts": "1462536664.001268"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "and how we can change it in future to do the right thing",
        "ts": "1462536678.001269"
    },
    {
        "user": "U0PB67X4K",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0PB67X4K|garisingh> has joined the channel",
        "ts": "1462539719.001270"
    },
    {
        "user": "U16NAHH8U",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U16NAHH8U|michaelhaley> has joined the channel",
        "ts": "1462542253.001271"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "tuand: do we have #754 in now?",
        "ts": "1462545715.001272"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "no ... haven't finished rebasing",
        "ts": "1462545744.001273"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "ok",
        "ts": "1462545747.001274"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "btw,  you mentioned squishing all your commits together ?  how did you do that ?",
        "ts": "1462545801.001275"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i did a rebase -i and marked commits as fixup",
        "ts": "1462545834.001276"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "that's what i'm doing ... thought you mentioned something about reducing the # of commits so the committers don't complain so much",
        "ts": "1462545898.001277"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "well, it is a balance - too many small commits (especially those fixing previous errors) - difficult to review; too big of a commit - difficult to review as well",
        "ts": "1462545974.001278"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "well 90% of my commits are  -m \"resolve rebase xxxxx\"",
        "ts": "1462546016.001279"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "ok, if i'm not done monday, please kill me",
        "ts": "1462546034.001280"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "resolve rebase?",
        "ts": "1462546051.001281"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "don't you fix up the commit itself?",
        "ts": "1462546059.001282"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "rebase -i   ... hit a rebase conflict, resolve conflict through a commit",
        "ts": "1462546092.001283"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "oh",
        "ts": "1462546114.001284"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "then rinse and repeat",
        "ts": "1462546125.001285"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "is jyellick around today?",
        "ts": "1462546662.001286"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I'm here",
        "ts": "1462546670.001287"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "hi!",
        "ts": "1462546672.001288"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "do you think now would be a good time to move state transfer from consensus into core?",
        "ts": "1462546691.001289"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "that would allow us to slim down the consensus API significantly",
        "ts": "1462546713.001290"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "This could be a good time to do it, after your persistence changes eliminated the direct callins",
        "ts": "1462546731.001291"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "right",
        "ts": "1462546741.001292"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i snuck that in :simple_smile:",
        "ts": "1462546747.001293"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Working with bcbrock yesterday I found a state transfer bug of some sort, haven't figured out which side the failure's on, but was going to be mucking with that code anyway, I can go ahead and move it out.  What package would you propose? I would think `peer\/statetransfer`?",
        "ts": "1462546811.001294"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "(Was also looking at 1368 and am very confused)",
        "ts": "1462546846.001295"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "(Actually, found it)",
        "ts": "1462547018.001296"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i think sheehan and jeff may have an opinion on where it should go",
        "ts": "1462547081.001297"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i'd guess core\/statetransfer",
        "ts": "1462547088.001298"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "so how does 1368 happen?",
        "ts": "1462547107.001299"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Just added it to the issue text, but basically, when rebasing onto your stuff, I missed one of the instances where the Sieve thread started executing in `pbft-core.go`",
        "ts": "1462547151.001300"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "So there were concurrent modification to the checkpoint map, so it changed size between counting the entries, and filling the array",
        "ts": "1462547183.001301"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "oh, is this the same as 1366?",
        "ts": "1462547186.001302"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Good chance",
        "ts": "1462547198.001303"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "execDoneSync() calls?",
        "ts": "1462547204.001304"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Yep",
        "ts": "1462547206.001305"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "ha",
        "ts": "1462547209.001306"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1462547209.001307"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "They should be able to just be `execDone` now I believe",
        "ts": "1462547226.001308"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "<https:\/\/github.com\/hyperledger\/fabric\/pull\/1384>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "sieve: do not bypass pbft state machine, #1366 by corecode \u00b7 Pull Request #1384 \u00b7 hyperledger\/fabric \u00b7 GitHub",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/pull\/1384",
                "text": "Signed-off-by: Simon Schubert <mailto:sis@zurich.ibm.com|sis@zurich.ibm.com>",
                "fallback": "GitHub: sieve: do not bypass pbft state machine, #1366 by corecode \u00b7 Pull Request #1384 \u00b7 hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/177979?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/pull\/1384",
                "thumb_width": 400,
                "thumb_height": 400,
                "id": 1
            }
        ],
        "ts": "1462547227.001309"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Perfect, thanks",
        "ts": "1462547306.001311"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "<@U0N1D1UAE>:  was also mentioning #1091 and #919 yesterday ?   I haven't seen any updates on these though",
        "ts": "1462547438.001312"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I worked with <@U0N1D1UAE> on 1091 yesterday, which revealed the statetransfer bug I referred to above, but also exposed that the test was perhaps being too stringent on the behavior of PBFT.  The key point being that even with 4 non-byzantine nodes, the only guarantee is that 2f+1=3 of them will be participating in the network, and that the network will be making progress.  It is okay, and largely expected, from a protocol perspective that 1 of them is behind and not participating.  This is something I've discussed a little with <@U0Y14MWA2> and something we'll be looking to improve upon the future, but it's not a bug, changing this behavior would be an enhancement.",
        "ts": "1462547749.001313"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "With respect to 919, that has been closed, I think maybe you're thinking of 915, which I think may be fixed, but, will be tough to verify until Simon's PR 1384 goes through.",
        "ts": "1462547815.001314"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0TFEHX8E>: <@U0UKTPMG8> We are thinking this sprint would be an opportune time to move statetransfer out of consensus and into some other package, where would you propose we move it in the package structure?  Since it is dependent on the peer network, my proposal would be `core\/peer\/statetransfer` but I'm open to other places.",
        "ts": "1462547823.001315"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "yup, typo #915",
        "ts": "1462547850.001316"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "<@U0XPR4NP4>: <@U0TFEHX8E> makes sense to me.",
        "ts": "1462547902.001317"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "<@U0XPR4NP4>: please feel free to contact me any time if you want to discuss the task",
        "ts": "1462547968.001318"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0UKTPMG8>: <@U0XR6J961> Suggested `core\/statetransfer`, maybe he can explain his reasoning",
        "ts": "1462547988.001319"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "I should free up a bit early next week",
        "ts": "1462548002.001320"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Thanks, I likely will confer, as it will need to stop using the helper calls, and go directly into peer.  My guess is that it should be a fairly simple migration, but will double check to make sure it's being hooked in correctly.",
        "ts": "1462548067.001321"
    },
    {
        "type": "message",
        "user": "U0UKTPMG8",
        "text": "sounds good",
        "ts": "1462548090.001322"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "jyellick: i suggest still using interfaces",
        "ts": "1462548379.001323"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "jyellick: but then you can use ledger as something that provides this interface",
        "ts": "1462548400.001324"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0XR6J961>: Yes, I would still try to use the MessageHandlerCoordinator interface, which `helper.go` wraps, so the method names would change slightly.  It is getting the reference to it properly that I might need Jeff's help with.",
        "edited": {
            "user": "U0XPR4NP4",
            "ts": "1462548452.000000"
        },
        "ts": "1462548437.001325"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "I simply meant that statetransfer should no longer need to use the `consensus.Stack` interface",
        "ts": "1462548491.001327"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "right, that's my idea",
        "ts": "1462548504.001328"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "the stack interface could be reduced considerably",
        "ts": "1462548514.001329"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Exactly, which would be great",
        "ts": "1462548522.001330"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but given that most interfaces that statetransfer uses are basically passed through by the helper, you could use the ledger itself (or a mock)",
        "ts": "1462548563.001331"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "of course not for all",
        "ts": "1462548567.001332"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and it won't be a single \"object\" providing all these interfaces",
        "ts": "1462548617.001333"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "there will be ledger, communication, etc.",
        "ts": "1462548629.001334"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Yes",
        "ts": "1462548767.001335"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "<https:\/\/s3.amazonaws.com\/archive.travis-ci.org\/jobs\/128321194\/log.txt>",
        "ts": "1462548873.001336"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "any idea what is happening here?",
        "ts": "1462548878.001337"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "is this #1358 ?",
        "ts": "1462549051.001338"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "--- FAIL: TestBatchCustody (6.01s)\n\tobc-batch_test.go:105: Expected replica 0 to have one block",
        "ts": "1462549058.001339"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "(I really still want to know how this isn't a huge bug in  `go test`.  When a test fails, you should get the output of the failing test, and that's it.  Instead, you get just tons of random output from other tests in addition to the failing test, and it makes it obnoxious to figure out what actually failed.  Why I always end up running with `go test -v`)",
        "ts": "1462549156.001340"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "some timing issue",
        "ts": "1462549609.001341"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "just saw #1379 `**23:58:39.168 [consensus\/util] RegisterChannel -&gt; WARN 055 Received duplicate connection from &lt;nil&gt;, switching to new connection**`",
        "ts": "1462549792.001342"
    },
    {
        "type": "message",
        "user": "U0UGH3X7X",
        "text": "we can use  &lt;nil&gt; as a map key ?",
        "ts": "1462549817.001343"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "Yes, I've noticed that too, need to investigate, I did not believe that `<http:\/\/handler.peerHandler.To|handler.peerHandler.To>()` could be `nil`",
        "ts": "1462549953.001344"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "My money is on handler's being unnecessarily instantiated.  It bears investigation, just hasn't obviously broken anything.",
        "ts": "1462549984.001345"
    },
    {
        "user": "U0Z5BHCEM",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0Z5BHCEM|suma> has joined the channel",
        "ts": "1462555325.001346"
    }
]
[
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "is it possible to have the chaintool working inside the docker images?",
        "ts": "1472200569.000042"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "It's currently installed in the ccenv image, so it's certainly \"possible\".  I'm guessing you are asking for something else, like available in the peer image that is pushed to dockerhub",
        "ts": "1472211957.000043"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "?",
        "ts": "1472211969.000044"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "<@U0KPFAZNF> I was not aware of the ccenv image. :disappointed:",
        "ts": "1472214255.000045"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "<@U0KPFAZNF> and yes, i was curious if i could take the peer image hyperledger builds on the docker hub and autobuild an image on top of it with chaintool support",
        "ts": "1472214299.000046"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "it should be possible, though we dont (yet) install chaintool in the peer image",
        "ts": "1472214335.000047"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "ccenv is not on the docker hub?",
        "ts": "1472214381.000048"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "right now, the only thing that is really fully supported is assuming you are using vagrant\u2026the ability to run everything from a simple \u201cdocker pull\u201d is still emerging",
        "ts": "1472214389.000049"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "no, but we are working on it",
        "ts": "1472214399.000050"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "i am not using vagrant either",
        "ts": "1472214409.000051"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "in fact, a major piece of the puzzle was just merged yesterday",
        "ts": "1472214410.000052"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "understood, just setting expectations..your use case is reasonable, but not quite ready yet",
        "ts": "1472214431.000053"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i expect this to start to look better in the next few weeks",
        "ts": "1472214472.000054"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "<@U0KPFAZNF> thanks, i was asking because we want to try to make such an image, but I figured better ask first, maybe not possible and the we shouldn't waste time on it",
        "ts": "1472214474.000055"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "(as I need to get docker based workflow working too)",
        "ts": "1472214481.000056"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "yeah, that's our goal :smile:",
        "ts": "1472214494.000057"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "well, help is always welcome, but if you do want to work on it, lets coordinate",
        "ts": "1472214507.000058"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "avoid duplicate effort, etc",
        "ts": "1472214517.000059"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "absolutely",
        "ts": "1472214542.000060"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "ill fill you in on where its at now and where I see it going",
        "ts": "1472214556.000061"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "so, this is the patch that went in yesterday",
        "ts": "1472214586.000062"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<https:\/\/github.com\/hyperledger\/fabric\/commit\/2eadb11a0dd57d59d9645711a75ee8a0be9876f9>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "Add versioning support to our applications \u00b7 hyperledger\/fabric@2eadb11 \u00b7 GitHub",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/commit\/2eadb11a0dd57d59d9645711a75ee8a0be9876f9",
                "text": "This patch introduces a more robust versioning mechanism, summarized as follows: 1) The top-level makefile defines $PROJECT_VERSION which is intended to be consumed throughout (though some plac...",
                "fallback": "GitHub: Add versioning support to our applications \u00b7 hyperledger\/fabric@2eadb11",
                "thumb_url": "https:\/\/avatars0.githubusercontent.com\/u\/367132?v=3&s=200",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/commit\/2eadb11a0dd57d59d9645711a75ee8a0be9876f9",
                "thumb_width": 200,
                "thumb_height": 200,
                "service_icon": "https:\/\/a.slack-edge.com\/e8ef6\/img\/unfurl_icons\/github.png",
                "id": 1
            }
        ],
        "ts": "1472214587.000063"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "the reason it was important (to this conversation) is because (and you may already know this) the peer itself manages docker containers (chaincode is deployed in docker containers)",
        "ts": "1472214630.000065"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "so, one of the problems with the current setup is that the current peer assumes it can build chaincode containers with a FROM reference that only exists in the local build environment (e.g. vagrant)",
        "ts": "1472214672.000066"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "it doesnt exist on dockerhub",
        "ts": "1472214677.000067"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "oh, i see, i was not aware of this",
        "ts": "1472214698.000068"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "in order to sanely allow something to be pulled from dockerhub, we needed way to associate versions",
        "ts": "1472214699.000069"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "for instance, peer:v1.0.0 should be using ccenv:v1.0.0, etc",
        "ts": "1472214716.000070"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "in lockstep",
        "ts": "1472214718.000071"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "yeah, i understand the need for this",
        "ts": "1472214726.000072"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "ok, good",
        "ts": "1472214730.000073"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "so that was the first step",
        "ts": "1472214733.000074"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "the next step is I want to clean up the image library generation method, and then I want to start having the peer use \u201cccenv\u201d etc, rather than \u201cbaseimage\u201d which was never meant to be used directly",
        "ts": "1472214782.000075"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "I already fixed CAR\/JAVA types, but the main GOLANG type still needs more work",
        "ts": "1472214824.000076"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/peer\/core.yaml#L280>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/peer\/core.yaml#L280",
                "text": "Read-only mirror of <https:\/\/gerrit.hyperledger.org\/r\/#\/admin\/projects\/fabric>",
                "fallback": "GitHub: hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/peer\/core.yaml#L280",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1472214825.000077"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "the goal is that the GOLANG type will probably be similar to the CAR target",
        "ts": "1472214867.000079"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "(ccenv:$VERSION)",
        "ts": "1472214884.000080"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "but before we can switch that over, I need to refactor the entire docker image generation pipeline",
        "ts": "1472214910.000081"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "i was just about to ask, what does the \"library generation method\" mean? and now \"image generation pipeline\", the terminology for me is unclear",
        "ts": "1472214949.000082"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "the rest i see, although I am not sure how can we  coordinate on this, what is the work that we can do",
        "ts": "1472214991.000083"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "images are generated primarily in 2 places",
        "ts": "1472214993.000084"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/Makefile#L196>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/Makefile#L196",
                "text": "Read-only mirror of <https:\/\/gerrit.hyperledger.org\/r\/#\/admin\/projects\/fabric>",
                "fallback": "GitHub: hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/Makefile#L196",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1472214995.000085"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "and <https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/scripts\/provision\/docker.sh>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/scripts\/provision\/docker.sh",
                "text": "Read-only mirror of <https:\/\/gerrit.hyperledger.org\/r\/#\/admin\/projects\/fabric>",
                "fallback": "GitHub: hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/scripts\/provision\/docker.sh",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1472215032.000087"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "and you have to change\/refactor this whole Makefile?",
        "ts": "1472215047.000089"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "well, no, \u201crefactor\u201d is probably too strong of a word here",
        "ts": "1472215061.000090"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "just minor tweaks to the build process",
        "ts": "1472215071.000091"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "the \u201cmajor refactoring\u201d would really be w.r.t. the current hierarchy of images",
        "ts": "1472215105.000092"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "i see",
        "ts": "1472215137.000093"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "nice hack with the ENV variables btw :smile:",
        "ts": "1472215144.000094"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "right now it looks something like this: dockerhub:baseimage -&gt; local:baseimage -&gt; local:src -&gt; [ccenv, javaenv, peer, membersrvc]",
        "ts": "1472215147.000095"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "yeah, that needs to go",
        "ts": "1472215170.000096"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "have to step away for 5 minute, brb",
        "ts": "1472215213.000097"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "ok. i will be online for like 3 more hours, and i will have time to discuss this at any point",
        "ts": "1472215240.000098"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "back",
        "ts": "1472215932.000099"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "so, the fundamental thing I want to change is #1, nothing at runtime should reference baseimage directly\u2026it should just be a cache for the build to use to speed things up",
        "ts": "1472215992.000100"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "#2 the way we build fabric-src and then derive everything else is suboptimal",
        "ts": "1472216021.000101"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "what should happen instead is the chaincode environments (ccenv, javaenv, etc) should only have the shims+tools injected, and the runtime environments (peer, membersrvc) should just volume mount the source for the purposes of building",
        "ts": "1472216077.000102"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "once those things are done, we can push the suite up to dockerhub (peer, membersrvc, ccenv, javaenv) with their versioned tags, and people can just use standard \u201cdocker pull\u201d like operations and it should all just work",
        "ts": "1472216142.000103"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "yeah, that sounds really nice",
        "ts": "1472216333.000104"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "so what do you think I could help you with here?",
        "ts": "1472216342.000105"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "well, one thing that needs to happen is regarding shims",
        "ts": "1472216756.000106"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i think ideally, things like the java and golang shims were in their own repos",
        "ts": "1472216774.000107",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U1JB7QCBD"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "but until that happens, we will have to suffice with extracting the shims out and injecting them into docker containers",
        "ts": "1472216791.000108"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "one thing I could use help on is develping a script\/tool that can extract the golang shim (or at least a file list)",
        "ts": "1472216817.000109"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "theres some interesting properties of the \u201cgo list\u201d tool that can likely be exploited",
        "ts": "1472216834.000110"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i had written about this in an issue once, let me see if I can find it",
        "ts": "1472216853.000111"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "here it is: <https:\/\/github.com\/hyperledger-archives\/fabric\/issues\/1581>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "Deploy transaction is too large and not good for the client SDK \u00b7 Issue #1581 \u00b7 hyperledger-archives\/fabric \u00b7 GitHub",
                "title_link": "https:\/\/github.com\/hyperledger-archives\/fabric\/issues\/1581",
                "text": "Description The current deploy transaction as created by the NVP (Non Validating Peer) consists of the chaincode plus dependencies (e.g. shim, etc). The size of the dependencies is large which mak...",
                "fallback": "GitHub: Deploy transaction is too large and not good for the client SDK \u00b7 Issue #1581 \u00b7 hyperledger-archives\/fabric",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/9592001?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger-archives\/fabric\/issues\/1581",
                "thumb_width": 420,
                "thumb_height": 420,
                "service_icon": "https:\/\/a.slack-edge.com\/e8ef6\/img\/unfurl_icons\/github.png",
                "id": 1
            }
        ],
        "ts": "1472216967.000112"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "and here is the link I referred to",
        "ts": "1472216983.000114"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<http:\/\/dave.cheney.net\/2014\/09\/14\/go-list-your-swiss-army-knife>",
        "ts": "1472216984.000115"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "it should be possible to use that technique to introspect the golang shim and all of its dependencies for a file list",
        "ts": "1472217028.000116"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "we can then take that filelist, and inject those files into the ccenv",
        "ts": "1472217043.000117"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "thats a task that can be easily worked on independently",
        "ts": "1472217059.000118"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "if you were interested",
        "ts": "1472217063.000119"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "im envisioning its something like a script in .\/scripts\/getGolangFiles.sh that we can call with a golang package and it will return a list of all the files that this package needs",
        "ts": "1472217158.000120"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "e.g. \".\/scripts\/getGolangFiles.sh <http:\/\/github.com\/hyperledger\/fabric\/core\/chaincode\/shim|github.com\/hyperledger\/fabric\/core\/chaincode\/shim>\"",
        "ts": "1472217186.000121"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "we could then use that in the makefile",
        "ts": "1472217201.000122"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i have to step out for a little bit, but ill be back online later",
        "ts": "1472217249.000123"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "let me know if you think you want to tackle that",
        "ts": "1472217257.000124"
    },
    {
        "user": "U25ATRAMB",
        "text": "<@U25ATRAMB|schristie> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1472219193.000125"
    },
    {
        "user": "U257V93MJ",
        "text": "<@U257V93MJ|u_peter> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1472219498.000126"
    },
    {
        "type": "message",
        "user": "U25ATRAMB",
        "text": "<@U0KPFAZNF> when loading a protobuf in clojure, how does it find the java protobuf library? Is that through the com.google.protobuf\/protobuf-java dependency of clojure-protobuf? or just somewhere on the classpath?",
        "ts": "1472221970.000127"
    },
    {
        "type": "message",
        "user": "U25ATRAMB",
        "text": "I'm running into an error trying to load a cci compiled with the latest protoc v3.0.0: error: package \ncom.google.protobuf.GeneratedMessageV3 does not exist",
        "ts": "1472222064.000128"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U25ATRAMB>",
        "ts": "1472222073.000129"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "opps, sorry, fat fingered the send",
        "ts": "1472222080.000130"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "its a transitive dep on on the clojars.ghaskins\/protobuf library",
        "ts": "1472222101.000131"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "ill probably need to update things to the released v3.0.0",
        "ts": "1472222138.000132"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "im still on the beta, but i am confused how that is mattering",
        "ts": "1472222148.000133"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "everything should be relatively self contained IIUC",
        "ts": "1472222215.000134"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "so, this: <https:\/\/github.com\/hyperledger\/fabric-chaintool\/blob\/master\/project.clj#L20>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric-chaintool",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric-chaintool\/blob\/master\/project.clj#L20",
                "text": "fabric-chaintool - Chaintool - Chaincode Tooling for <https:\/\/github.com\/hyperledger\/fabric>",
                "fallback": "GitHub: hyperledger\/fabric-chaintool",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric-chaintool\/blob\/master\/project.clj#L20",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1472222252.000135"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "pulls in this: <https:\/\/github.com\/ghaskins\/clojure-protobuf\/blob\/develop\/project.clj#L10>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "ghaskins\/clojure-protobuf",
                "title_link": "https:\/\/github.com\/ghaskins\/clojure-protobuf\/blob\/develop\/project.clj#L10",
                "text": "clojure-protobuf - Google protocol buffers wrapper for Clojure.",
                "fallback": "GitHub: ghaskins\/clojure-protobuf",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/367132?v=3&s=400",
                "from_url": "https:\/\/github.com\/ghaskins\/clojure-protobuf\/blob\/develop\/project.clj#L10",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1472222276.000137"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "actually, reading your post again, you clearly already understood this",
        "ts": "1472222317.000139"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "(sorry)",
        "ts": "1472222321.000140"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "can you describe the scenario you are seeing in more detail?",
        "ts": "1472222341.000141"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "unless you are somehow messing with the classpath, it should be only using the beta-3.jar that I baked into the binary",
        "ts": "1472222371.000142"
    },
    {
        "type": "message",
        "user": "U25ATRAMB",
        "text": "from what I understand, when they released the final v3 of protoc \/ protobuf, they changed the class names to be versioned",
        "ts": "1472222589.000143"
    },
    {
        "type": "message",
        "user": "U25ATRAMB",
        "text": "so they're now GeneratedMessageV3 instead of just GeneratedMessage, and it's not backward compatible to the beta3 or earlier versions",
        "ts": "1472222613.000144"
    },
    {
        "type": "message",
        "user": "U25ATRAMB",
        "text": "which is somewhat annoying",
        "ts": "1472222621.000145"
    },
    {
        "type": "message",
        "user": "U25ATRAMB",
        "text": "so your clojure-protobuf library is properly loading the v3.0.0-beta3 jar, but I need to load the final v3.0.0 jar in order to get the compiled protobufs to work",
        "ts": "1472222685.000146"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "understood on the abi borkage\u2026but what i dont understand is that, IIUC, the chaintool environment should be \"hermetically sealed\" on beta3",
        "ts": "1472222799.000147"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "can you post the errors you are seeing, including some context as to what you were doing",
        "ts": "1472222830.000148"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "e.g. were you using \u201cchaintool build\u201d, doing something else? etc",
        "ts": "1472222850.000149"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "oh, i think I might understand what you are saying now",
        "ts": "1472222889.000150"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "you are saying the output of the cci -&gt; .proto conversion is not compliant with v3.0.0 as an input?",
        "ts": "1472222914.000151"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "to protoc, i mean",
        "ts": "1472222928.000152"
    },
    {
        "type": "message",
        "user": "U25ATRAMB",
        "text": "no, it's compliant with protoc as an input",
        "ts": "1472222949.000153"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "where do things blow up?",
        "ts": "1472222958.000154"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U25ATRAMB|schristie> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/schristie\/F25BRG0N5\/-.txt|Untitled>",
        "file": {
            "id": "F25BRG0N5",
            "created": 1472223031,
            "timestamp": 1472223031,
            "name": "-.txt",
            "title": "Untitled",
            "mimetype": "text\/plain",
            "filetype": "text",
            "pretty_type": "Plain Text",
            "user": "U25ATRAMB",
            "editable": true,
            "size": 355,
            "mode": "snippet",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F25BRG0N5\/-.txt?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F25BRG0N5\/download\/-.txt?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/schristie\/F25BRG0N5\/-.txt",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F25BRG0N5-a24eea8590",
            "edit_link": "https:\/\/hyperledgerproject.slack.com\/files\/schristie\/F25BRG0N5\/-.txt\/edit",
            "preview": "mkdir -p interfaces\/\r\nchaintool proto registry\/src\/interfaces\/appinit.cci -o interfaces\/appinit.proto\r\n\r\nchaintool proto registry\/src\/interfaces\/registry.cci -o interfaces\/registry.proto\r\n\r",
            "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text\/plain',window.getSelection().toString().replace(\/\\u200b\/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>mkdir -p interfaces\/<\/pre><\/div>\n<div><pre>chaintool proto registry\/src\/interfaces\/appinit.cci -o interfaces\/appinit.proto<\/pre><\/div>\n<div><pre><\/pre><\/div>\n<div><pre>chaintool proto registry\/src\/interfaces\/registry.cci -o interfaces\/registry.proto<\/pre><\/div>\n<div><pre><\/pre><\/div>\n<div><pre><\/pre><\/div>\n<\/div>\n<\/div>\n",
            "lines": 9,
            "lines_more": 4,
            "preview_is_truncated": false,
            "channels": [
                "C1JJ6BL5T"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 0
        },
        "user": "U25ATRAMB",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U25ATRAMB|schristie>",
        "bot_id": null,
        "ts": "1472223032.000155"
    },
    {
        "type": "message",
        "user": "U25ATRAMB",
        "text": "those are the commands my make script runs to generate the java protobufs for my clojure app",
        "ts": "1472223058.000156"
    },
    {
        "type": "message",
        "user": "U25ATRAMB",
        "text": "it works after I made a checkouts version of your clojure-protobuf bumping the protobuf-java version to `[com.google.protobuf\/protobuf-java \"3.0.0\"]`",
        "ts": "1472223111.000157"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "ok, cool..can you do me a favor and file an issue against chaintool",
        "ts": "1472223319.000158"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "ill update to the 3.0 release, as I need to anyway",
        "ts": "1472223339.000159"
    },
    {
        "type": "message",
        "user": "U25ATRAMB",
        "text": "is that against chaintool, or clojure-protobuf?",
        "ts": "1472223352.000160"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "well, both, heh",
        "ts": "1472223357.000161"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "but clojure-protobuf doesnt really have much governance around it",
        "ts": "1472223373.000162"
    },
    {
        "type": "message",
        "user": "U25ATRAMB",
        "text": "ah",
        "ts": "1472223378.000163"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "(probably should fix that",
        "ts": "1472223378.000164"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i more or less consider them one in the same project",
        "ts": "1472223393.000165"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "nice to meet a fellow clojurist, though",
        "ts": "1472223444.000166"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "btw: I was recently forced to learn clojurescript on nodejs because of the hyperledger SDK supporting node\u2026.i have to say, the protobuf environment under clojurescript\/node is 100x better than on clojure\/jvm",
        "ts": "1472223501.000167"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "the protobuf.js library is awesome\u2026no compilation, does everything with reflection",
        "ts": "1472223534.000168"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "its awesome",
        "ts": "1472223536.000169"
    },
    {
        "type": "message",
        "user": "U25ATRAMB",
        "text": "interesting",
        "ts": "1472223761.000170"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U25ATRAMB> you probably already understand this, but in case not: I would recommend naming \u201cregistry.cci\u201d to something more specific (like \u201ccom.acme.registry.cci\"",
        "ts": "1472223787.000171"
    },
    {
        "type": "message",
        "user": "U25ATRAMB",
        "text": "it does seem that protobufs on clojure\/jvm are nearly unused",
        "ts": "1472223788.000172"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "otherwise, you could conflict with another project someday",
        "ts": "1472223799.000173"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "yeah, its really poorly supported on clojure, which is unforunate",
        "ts": "1472223827.000174"
    },
    {
        "type": "message",
        "user": "U25ATRAMB",
        "text": "yeah, we should probably do that, though I kinda doubt this PoC will get that far",
        "ts": "1472223832.000175"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i hacked that original flatlands project to make the clojure-protobufs lib in use now",
        "ts": "1472223845.000176"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "it was in bad shape, and I couldnt find any derivatives that were much better",
        "ts": "1472223859.000177"
    },
    {
        "type": "message",
        "user": "U25ATRAMB",
        "text": "I noticed",
        "ts": "1472223864.000178"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i think part of the pain points was that v3 was in beta\/flux for so long",
        "ts": "1472223933.000179"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "now that its stabilized, perhaps the clojure community can make something more tenable",
        "ts": "1472223958.000180"
    },
    {
        "type": "message",
        "user": "U25ATRAMB",
        "text": "yeah, based on the fact that they managed to break things between v3.0.0 beta3 and the final, I'm not surprised",
        "ts": "1472223975.000181"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "actually the flatlands code that I based on is fairly decent, its just been a huge PITA to deal with the flux in the protobuf community",
        "ts": "1472223996.000182"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "you will probably appreciate this:",
        "ts": "1472224080.000183"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<https:\/\/github.com\/hyperledger\/fabric-chaintool\/blob\/master\/examples\/example02\/client\/sdk\/src\/example02\/core.cljs#L20>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric-chaintool",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric-chaintool\/blob\/master\/examples\/example02\/client\/sdk\/src\/example02\/core.cljs#L20",
                "text": "fabric-chaintool - Chaintool - Chaincode Tooling for <https:\/\/github.com\/hyperledger\/fabric>",
                "fallback": "GitHub: hyperledger\/fabric-chaintool",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric-chaintool\/blob\/master\/examples\/example02\/client\/sdk\/src\/example02\/core.cljs#L20",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1472224081.000184"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "lines 12-20 are really all you need to do in clojurescript\/nodejs to injest a .proto directly",
        "ts": "1472224101.000186"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "it couldnt be easier",
        "ts": "1472224113.000187"
    },
    {
        "type": "message",
        "user": "U25ATRAMB",
        "text": "I'm almost wondering whether I should have built the whole app in cljs",
        "ts": "1472224345.000188"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "the cljs language itself is impressively robust and supported\u2026but I think the main thrust of the clojurescript community is on in-browser, not nodejs",
        "ts": "1472224672.000189"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "so, things are a little rough around the edges",
        "ts": "1472224681.000190"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "but its doable, I now have 4-5 cljs\/node projects under my belt and am quite pleased with the environment",
        "ts": "1472224709.000191"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "for example: there is no equivalent to uber.jar",
        "ts": "1472224741.000192"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "the cljsbuild compiler on the node platform just spits a big mess of .js files",
        "ts": "1472224766.000193"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "so, packaging, repl, etc, is a little weak compared to jvm clojure",
        "ts": "1472224784.000194"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "ive mitigated the lack of uber.jar by adopting my own processes on top, but you dont get it out of the can",
        "ts": "1472224835.000195"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "in the hyperledger context, the key is that you get node-sdk integration",
        "ts": "1472224879.000196"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "<@U0KPFAZNF> sorry, something came up even though I said I will have time. I read what you wrote, but I will have to dive into it. Maybe in the weekend I will have some time :slightly_smiling_face:. If I understand correctly you want to use `go list` and retrieve the dependencies given by it dynamically at deploy time?",
        "ts": "1472225561.000197"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "Build time, but yes",
        "ts": "1472225627.000198"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "For a given go package, return all of the files that need to be present to successfully build, including direct and transitive deps ",
        "ts": "1472225686.000199"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "I know it does this, just needs to be written",
        "ts": "1472225708.000200"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "I can then use this to extract the golang shim for the purposes of injecting it into a docker build",
        "edited": {
            "user": "U0KPFAZNF",
            "ts": "1472225774.000000"
        },
        "ts": "1472225752.000201"
    },
    {
        "type": "message",
        "user": "U1JB7QCBD",
        "text": "I will definitely look more into the discussion on the github issue and how to use it, and get back to you monday. I know we will have time for this, but not sure exactly how much, I just know that I would love to avoid the whole vagrant thing. :slightly_smiling_face:",
        "ts": "1472225876.000203"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "Thanks <@U1JB7QCBD> ",
        "ts": "1472232197.000204"
    }
]
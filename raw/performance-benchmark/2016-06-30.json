[
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "running two nodes locally with short-circuited chaincode, i get about 3000 transactions",
        "ts": "1467293120.000293"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but that may be my laptop being overloaded",
        "ts": "1467293131.000294"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "<@U0XR6J961>: , you mean you short-circuit this section?\n<https:\/\/github.com\/hyperledger\/fabric\/blob\/1ec46065c5f803ebd7f2b1da96c2a3ebcef7a455\/core\/chaincode\/chaincode_support.go#L616>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "hyperledger\/fabric",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/blob\/1ec46065c5f803ebd7f2b1da96c2a3ebcef7a455\/core\/chaincode\/chaincode_support.go#L616",
                "text": "fabric - Fabric is a blockchain project in Incubation proposed to the community and documented at <https:\/\/goo.gl\/RYQZ5N>. Information on what Incubation entails can be found in the Hyperledger Proj...",
                "fallback": "GitHub: hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/blob\/1ec46065c5f803ebd7f2b1da96c2a3ebcef7a455\/core\/chaincode\/chaincode_support.go#L616",
                "thumb_width": 142,
                "thumb_height": 142,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1467300561.000295"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yea",
        "ts": "1467300778.000297"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "actually in handler",
        "ts": "1467300787.000298"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "Theoretically speaking, if all peers submit the same order or transactions, isn't it possible to send a batch of them to the CC, and optimistically execute all of them, and only then have the peer read the batch of PutState generated by the CC (assuming the CC doesn't need to fetch via GetState)?",
        "edited": {
            "user": "U0ZJZBJLF",
            "ts": "1467300874.000000"
        },
        "ts": "1467300838.000299"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1467300914.000302"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but that won't speed it up much",
        "ts": "1467300927.000303"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "why not?",
        "ts": "1467300930.000304"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "because the chaincode still needs to ask for the state from the database",
        "ts": "1467300942.000305"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "but why can't we cache it?",
        "ts": "1467300958.000306"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "because other CCs use it?",
        "ts": "1467300967.000307"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1467300970.000308"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "But in the protocol spec it's written \"Each chaincode may define its own persistent state variables\"",
        "ts": "1467301178.000309"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "yes",
        "ts": "1467301215.000310"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "but one chaincode can invoke\/query another chaincode",
        "ts": "1467301228.000311"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "So what? why can't we keep the state in memory cached and only GetState when needed?",
        "ts": "1467301334.000312"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "as long as the same CC instance holds the state and no one changes these keys in the DB but itself, the calls via GetState either cached or not are coherent because it's the only writer to these keys",
        "ts": "1467301397.000313"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "because then you need to make sure that the chaincode handles it right",
        "ts": "1467301419.000314"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "you need to communicate rollbacks, aborts",
        "ts": "1467301486.000315"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "yeah I didn't say it's simple :slightly_smiling_face:",
        "ts": "1467301495.000316"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "well, why",
        "ts": "1467301499.000317"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "to increase throughput, because right now it's like Stop&amp;Wait network scheduling",
        "ts": "1467301517.000318"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "the new architecture design would put the burden on execution on the submitter",
        "ts": "1467301574.000319"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "and on the endorsers, who can parallelize execution",
        "ts": "1467301589.000320"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "You're saying you can't employ this because it'd not work well in the new architecture?",
        "ts": "1467301710.000321"
    },
    {
        "type": "message",
        "user": "U0XR6J961",
        "text": "i'm saying the new architecture will improve the performance",
        "ts": "1467301804.000322"
    },
    {
        "type": "message",
        "user": "U0ZJZBJLF",
        "text": "ok",
        "ts": "1467301899.000323"
    },
    {
        "type": "message",
        "user": "U0XPR4NP4",
        "text": "<@U0XR6J961> I'm having trouble replicating your setup. I've got 2 peers running, with f=0, batchsize=1000, off your simon\/chaincode-shortcircuit branch.  My CPU is basically idle, and I am getting only about 10 tps.  I'm wondering how you are ingressing your requests, presumably through the REST api?",
        "ts": "1467307584.000324"
    }
]
[
    {
        "type": "message",
        "user": "U0MM86C84",
        "text": "is it possible to use hfc without the membership service?",
        "ts": "1475674196.000779"
    },
    {
        "type": "message",
        "user": "U23CGEC7N",
        "text": "I think it is not.",
        "ts": "1475675971.000780"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0MM86C84> I am by no means an expert on the internals of HFC, but as a user, my impression is that you must have membersrvc running but you dont need to enable security per se",
        "ts": "1475676954.000781"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "that is how I do most development, ca running, security off",
        "ts": "1475676979.000782"
    },
    {
        "type": "message",
        "user": "U0Z81GL6S",
        "text": "<@U0MM86C84> SDK doesn\u2019t currently support a path that doesn\u2019t require an enrolled user in order to submit a transaction. And in order to have the user enrolled, you *must* have a membership service running. So the answer to your question is \u201cno\u201d, you can not use the hfc without the membership service.",
        "ts": "1475679992.000783"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "",
        "attachments": [
            {
                "fallback": "[October 5th, 2016 12:02 PM] velibor.mandic: Hi all, not sure if this is the right channel to ask, did anyone have any luck enabling TLS on Member service and peers and then running Node.js unit tests against it? We are looking at enabling TLS in our Swift client and based on documentation we think this is what we need to do: 1. enable TLS on ledger via config file, 2. get a pem file generated by TLS CA, 3. embed pem file in our client, 4. pass it to grpc layer. Is this correct? Are we missing anything? It is not really clear how does current version of Node.js client accomplish this...",
                "ts": "1475694165.000378",
                "author_subname": "velibor.mandic",
                "channel_id": "C1J0BM448",
                "channel_name": "membership-services",
                "is_msg_unfurl": true,
                "text": "Hi all, not sure if this is the right channel to ask, did anyone have any luck enabling TLS on Member service and peers and then running Node.js unit tests against it? We are looking at enabling TLS in our Swift client and based on documentation we think this is what we need to do: 1. enable TLS on ledger via config file, 2. get a pem file generated by TLS CA, 3. embed pem file in our client, 4. pass it to grpc layer. Is this correct? Are we missing anything? It is not really clear how does current version of Node.js client accomplish this...",
                "author_name": "Velibor Mandic",
                "author_link": "https:\/\/hyperledgerproject.slack.com\/team\/velibor.mandic",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2016-10-03\/86676366084_bfd2e539d75a6c21d8ec_48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "color": "D0D0D0",
                "from_url": "https:\/\/hyperledgerproject.slack.com\/archives\/membership-services\/p1475694165000378",
                "is_share": true,
                "footer": "Posted in #membership-services"
            }
        ],
        "ts": "1475694407.000785"
    },
    {
        "user": "U1AASP2SJ",
        "inviter": "U11MANG9G",
        "text": "<@U1AASP2SJ|velibor.mandic> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1475694448.000786"
    },
    {
        "type": "message",
        "user": "U11MANG9G",
        "text": "(just sharing)",
        "ts": "1475694460.000787"
    },
    {
        "type": "message",
        "user": "U1AASP2SJ",
        "text": "thanks <@U11MANG9G>",
        "ts": "1475694570.000788"
    }
]
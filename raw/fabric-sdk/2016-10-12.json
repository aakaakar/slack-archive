[
    {
        "type": "message",
        "user": "U0Z81GL6S",
        "text": "Hi <@U10SJMAHH>, yes <@U0KQ9QKH6> had added event support to the Node SDK and there is an accompanying example inside the \/fabric\/sdk\/node\/test\/unit\/event-tests.js file. I am not sure if we have additional documentation on how to use the events aside from this example. <@U0KQ9QKH6> if you have other docs you could point to for showing how to configure and use the event hub, could you please post them here? Thanks!",
        "ts": "1476288719.000903"
    },
    {
        "user": "U2NDE1ZCK",
        "text": "<@U2NDE1ZCK|jdockter> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1476290061.000904"
    },
    {
        "type": "message",
        "user": "U0KQ9QKH6",
        "text": "<@U10SJMAHH> : if you enable eventhub by calling eventHubConnect ( see event-tests.js), deploy and invoke transactions will  complete when the transaction is confirmed via a fabric event or timeout subject to the deploy and invoke wait time out values",
        "ts": "1476291661.000905"
    },
    {
        "type": "message",
        "user": "U0KQ9QKH6",
        "text": "the sdk currently doesn't do anything with the rejection events however this could be added if there is a use case not covered by the positive confirmation of the above",
        "ts": "1476291803.000906"
    },
    {
        "type": "message",
        "user": "U10SJMAHH",
        "text": "<@U0KQ9QKH6> <@U0Z81GL6S> Thanks you. A possible use case for rejection events is to inform the user when his trsnsaction is rejected, and why.  For example, assume someone try to transfer an asset to another user, but transaction is rejected because he is not the currdnt owner of the asset. It would make sense that the client application shows an error message with reason for rejection. ",
        "ts": "1476315353.000909"
    },
    {
        "type": "message",
        "user": "U0KQ9QKH6",
        "text": "<@U10SJMAHH> : great point and that is exactly what chaincode events are intended to address. The error that you mention is chaincode specific and the chaincode must raise its specific error as a result.",
        "ts": "1476317959.000910"
    },
    {
        "type": "message",
        "user": "U0KQ9QKH6",
        "text": "if you look at event-test.js, you should see a test case that sends a chaincode specific event and receives it(parsing its content). let me know if you have any trouble finding or otherwise.",
        "ts": "1476318114.000911"
    }
]
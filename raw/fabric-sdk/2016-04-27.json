[
    {
        "user": "U0Z3BE0F5",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0Z3BE0F5|mcrafols> has joined the channel",
        "ts": "1461742763.000049"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0S5KF44D>: do you have any advice\/pointers for how you are configuring the current enrollment identities in the membership service today?",
        "ts": "1461766970.000050"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i see there are user\/passwords in the yaml, though they look like hashed passwords",
        "ts": "1461766989.000051"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "I ultimately need to create a test identity that I can pass to the SDK user.enroll(), but its unclear how to map between what I need to pass to the SDK vs put in the yaml",
        "ts": "1461767028.000052"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "(or whatever other method is appropriate)",
        "ts": "1461767045.000053"
    },
    {
        "type": "message",
        "user": "U0S5KF44D",
        "text": "They are enrollment passwords (i.e. one-time passwords) and are not hashed",
        "ts": "1461767082.000054"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i am fine with dynamically adding the identity too to the membersvs daemon or whatever",
        "ts": "1461767085.000055"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U0KPFAZNF|ghaskins> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/ghaskins\/F146J57BR\/-.txt|Untitled> and commented: is this the right config?",
        "file": {
            "id": "F146J57BR",
            "created": 1461767145,
            "timestamp": 1461767145,
            "name": "-.txt",
            "title": "Untitled",
            "mimetype": "text\/plain",
            "filetype": "text",
            "pretty_type": "Plain Text",
            "user": "U0KPFAZNF",
            "editable": true,
            "size": 340,
            "mode": "snippet",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F146J57BR\/-.txt?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T0J024XGA-F146J57BR\/download\/-.txt?t=xoxe-18002167554-139099126023-137701436192-e599afc92e",
            "permalink": "https:\/\/hyperledgerproject.slack.com\/files\/ghaskins\/F146J57BR\/-.txt",
            "permalink_public": "https:\/\/slack-files.com\/T0J024XGA-F146J57BR-ab47c7e477",
            "edit_link": "https:\/\/hyperledgerproject.slack.com\/files\/ghaskins\/F146J57BR\/-.txt\/edit",
            "preview": "eca:\r\n        users:\r\n                # <EnrollmentID>: <role (1:client, 2: peer, 4: validator, 8: auditor)> <EnrollmentPWD>\r\n                lukas: 1 NPKYL39uKbkj\r\n                system_chaincode_invoker: 1 DRJ20pEql15a\r",
            "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text\/plain',window.getSelection().toString().replace(\/\\u200b\/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>eca:<\/pre><\/div>\n<div><pre>        users:<\/pre><\/div>\n<div><pre>                # &lt;EnrollmentID&gt;: &lt;role (1:client, 2: peer, 4: validator, 8: auditor)&gt; &lt;EnrollmentPWD&gt;<\/pre><\/div>\n<div><pre>                lukas: 1 NPKYL39uKbkj<\/pre><\/div>\n<div><pre>                system_chaincode_invoker: 1 DRJ20pEql15a<\/pre><\/div>\n<div><pre><\/pre><\/div>\n<\/div>\n<\/div>\n",
            "lines": 10,
            "lines_more": 5,
            "preview_is_truncated": false,
            "channels": [
                "C14011Q9M"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 1,
            "initial_comment": {
                "id": "Fc1452HQLT",
                "created": 1461767145,
                "timestamp": 1461767145,
                "user": "U0KPFAZNF",
                "is_intro": true,
                "comment": "is this the right config?",
                "channel": ""
            }
        },
        "user": "U0KPFAZNF",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U0KPFAZNF|ghaskins>",
        "bot_id": null,
        "ts": "1461767147.000056"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "given the uniformity of the length, i assumed they were hashed",
        "ts": "1461767159.000057"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "are those just literal passwords?",
        "ts": "1461767165.000058"
    },
    {
        "type": "message",
        "user": "U0S5KF44D",
        "text": "Greg, currently ECAA.RegisterUser on memberservices is unprotected, which means you can use the client API registerAndEnroll call to register any identity you want.  You can put a dummy registrar member there since it isn\u2019t even being passed to member services today.",
        "ts": "1461767216.000059"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "ah, ok, that probably works too",
        "ts": "1461767239.000060"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "my primary goal right now is to use the API to emit TCert signed transactions, so I dont care much about the actual identity that I use..this is probably perfect",
        "ts": "1461767293.000061"
    },
    {
        "type": "message",
        "user": "U0S5KF44D",
        "text": "In the future, the registrar will need to be a valid identity \u2026 and the way you could boot strap is by just adding the single registrar member identity in the yaml and all others are registered and enrolled dynamically",
        "ts": "1461767294.000062"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "right, ok",
        "ts": "1461767309.000063"
    },
    {
        "type": "message",
        "user": "U0S5KF44D",
        "text": "ok, that should work then",
        "ts": "1461767313.000064"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "any thoughts\/comments about the idempotency of the registerAndEnroll identity?",
        "ts": "1461767347.000065"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "e.g. can I blast the same uid each time, or should I randomize it",
        "ts": "1461767362.000066"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "(i realize that is silly in a real scenario, i just dont care about the actual identity at the moment)",
        "ts": "1461767382.000067"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "e.g. will the ECA reject calls to register the same user over and over?",
        "ts": "1461767418.000068"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "(for now, while we are in this early stage of development and\/or config",
        "ts": "1461767449.000069"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "obviously a production config would have that all locked down",
        "ts": "1461767462.000070"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i guess I can just try it",
        "ts": "1461767478.000071"
    },
    {
        "user": "U0KQ9QKH6",
        "inviter": "U0KPFAZNF",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0KQ9QKH6|pmullaney> has joined the channel",
        "ts": "1461767553.000072"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0S5KF44D>: unrelated question: what, if any, is the association with the name given to the chain in the SDK to the outside world",
        "ts": "1461767918.000073"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "is it just used internally to organize the SDK state, or does that map to something (like the IP addresses of the VP network)",
        "ts": "1461767949.000074"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "I am referring to the string passed to chain.newChain()",
        "ts": "1461767985.000075"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i.e. is that arbitrary\/internal to the client, or am I trying to map to something that needs to exist elsewhere (like the ca\/peer yaml)",
        "ts": "1461768022.000076"
    },
    {
        "type": "message",
        "user": "U0S5KF44D",
        "text": "It is just used internally and has no relation to the outside world",
        "ts": "1461769064.000077"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "regarding first question, it does seem you need to not reuse ids",
        "ts": "1461769079.000078"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "thought I am trying to directly enroll, perhaps if I switch to the registrar+enroll model like in test.js it will work",
        "ts": "1461769107.000079"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "regarding the second, where does the SDK learn about where the VP network lives?",
        "ts": "1461769131.000080"
    },
    {
        "type": "message",
        "user": "U0S5KF44D",
        "text": "Hmm \u2026 can probably be more tolerant, but you could check isEnrolled 1st for now",
        "ts": "1461769154.000081"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "(I was thinking perhaps the \u201cnewChain\u201d key downloaded IPs from the CA or something",
        "ts": "1461769155.000082"
    },
    {
        "type": "message",
        "user": "U0S5KF44D",
        "text": "no, not yet anyway",
        "ts": "1461769185.000083"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i ask because it appears that the test.js just magically knows where the VPs are, only the CA URL is specified",
        "ts": "1461769186.000084"
    },
    {
        "type": "message",
        "user": "U0S5KF44D",
        "text": "only the CA URL as the transaction path is not done yet",
        "ts": "1461769208.000085"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "ah, ok",
        "ts": "1461769213.000086"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "that makes more sense",
        "ts": "1461769217.000087"
    },
    {
        "type": "message",
        "user": "U0S5KF44D",
        "text": "then you have to add peer URLs for transaction processing",
        "ts": "1461769220.000088"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "right, ok\u2026that was what I was expecting actually",
        "ts": "1461769233.000089"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "but when i saw the test code and couldnt see the second URL(s) being passed in, i was wondering if it was auto-negotiated via the chain-name or something",
        "ts": "1461769262.000090"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i get it now, thanks",
        "ts": "1461769267.000091"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i know at RTP you were shooting for 5\/1 for SDK basic availability, so I suspect I am getting a bit ahead of myself to try to play around now",
        "ts": "1461769318.000092"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "do you expect basic transaction path to be operational in that timeframe?",
        "ts": "1461769332.000093"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "fwiw, right now I only care about being able to generate tcert-signed transactions, not the full NVP integration\u2026..whenever you think that is ready, just let me know",
        "ts": "1461769399.000094"
    }
]
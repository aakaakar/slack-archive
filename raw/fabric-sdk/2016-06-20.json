[
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0S5KF44D>: Do we have any option today to determine transaction status even with a polling operation?",
        "ts": "1466427956.000083"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i know the \u201ctx.on(complete)\u201d is predicated on the event subsystem",
        "ts": "1466427980.000084"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "im just wondering if I can implement a polling solution for the interim",
        "ts": "1466427993.000085"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "(BTW, I am completely operational with the v0.0.12 client including deploys, etc!)",
        "ts": "1466428034.000086"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0Z81GL6S>: ^^^",
        "ts": "1466428053.000087"
    },
    {
        "type": "message",
        "user": "U0Z81GL6S",
        "text": "Hi <@U0KPFAZNF>. I assume you\u2019re asking for how we determine if a transaction has actually taken place\/succeeded? In the REST API we did have an option to retrieve a transaction with the GET \/transactions\/{UUID} endpoint. Are you asking if the sdk has something similar? The sdk does not have it at this time, but I could add it.",
        "ts": "1466433285.000088"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "yes, that is what I am asking\u2026but not sure its worth it to add just as a stop-gap if its not useful longer term",
        "ts": "1466433335.000089"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i was just curious if it already existed",
        "ts": "1466433348.000090"
    },
    {
        "type": "message",
        "user": "U0Z81GL6S",
        "text": "no, it is not currently implemented. but i am also not aware of when the events are being added and how long that would take. so it may be worth considering to add it for the time being if the events are not coming any time soon. i believe someone else was working on the events, but i can\u2019t recall who it was.",
        "ts": "1466433410.000091"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "I know <@U0KQ9QKH6> from my team has been involved, not sure who else or ETA though",
        "ts": "1466433514.000092"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "but yeah, if you can add it, I will use it",
        "ts": "1466433522.000093"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "right now I have to implement my flow control via submitted vs complete, neither of which yields satisfactory results",
        "ts": "1466433562.000094"
    },
    {
        "type": "message",
        "user": "U0Z81GL6S",
        "text": "I understand. One thing I will need to do first, is to discuss with the consensus team to confirm that transactions that are either invalid or have failed are NOT added to a recorded block. In that case, a similar query to GET \/transactions\/{UUID} would let you know the status of the invocation. However, I believe that at some point things may have changed as I noted that transactions that have failed were also being recorded. I will confirm on that and let you know.",
        "ts": "1466443856.000095"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "yeah, I think there is an outstanding PR along these lines",
        "ts": "1466444992.000096"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "(dropping failed TXNs)",
        "ts": "1466444997.000097"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "thats ok, I can implement a timeout (or the SDK can)",
        "ts": "1466445009.000098"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "right - in the current design is a transaction gets ordered (and delivered in the case of batch) to peers, then even if the chaincode which process the transaction has an error that tran will still make it into a block",
        "ts": "1466445894.000099"
    },
    {
        "type": "message",
        "user": "U0PB67X4K",
        "text": "if however, a transaction is just dropped, then it will never make it anywhere",
        "ts": "1466445911.000100"
    }
]
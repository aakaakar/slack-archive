[
    {
        "user": "U1CK6522F",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1CK6522F|zuowang> has joined the channel",
        "ts": "1466593023.000045"
    },
    {
        "user": "U1GLPP8QN",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U1GLPP8QN|deeflorian> has joined the channel",
        "ts": "1466599460.000046"
    },
    {
        "type": "message",
        "user": "U0TFEHX8E",
        "text": "<@U0KM61BCP> <@U0TH5GUQ6> thanks for the feedback. I responded to the note in the mailing list. I think the idea of a voting process is a very good one",
        "ts": "1466599598.000047"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "when we go to gerrit, we can implement that properly - I also like the idea of 3 +2s at least for a while and then if it works keep or pull back to 2 +2s if we find we aren\u2019t able to keep pace with reviews",
        "ts": "1466599688.000048"
    },
    {
        "user": "U12452RAP",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U12452RAP|grapebaba> has joined the channel",
        "ts": "1466601127.000049"
    },
    {
        "type": "message",
        "user": "U0TFEHX8E",
        "text": "<@U0ULK2JPP>: could you please join the discussion here on PRs 1719, 1721, and 1722 as you have been very active in those",
        "ts": "1466604045.000050"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I want to <@U0TFEHX8E>\u2026 but will join as soon as I can",
        "ts": "1466604077.000051"
    },
    {
        "type": "message",
        "user": "U0TFEHX8E",
        "text": "for 1721 I am waiting for comment from <@U0MT4CBHB>",
        "ts": "1466604084.000052"
    },
    {
        "type": "message",
        "user": "U0TFEHX8E",
        "text": "for 1719 and 1722 I will read through and add comments to the PRs based on where I think they stand",
        "edited": {
            "user": "U0TFEHX8E",
            "ts": "1466604215.000000"
        },
        "ts": "1466604162.000053"
    },
    {
        "type": "message",
        "user": "U0KN2SSKE",
        "text": "ok, i am here and looking at these",
        "ts": "1466604275.000055"
    },
    {
        "type": "message",
        "user": "U0TFEHX8E",
        "text": "also, I\u2019d really like to start using voting as a method of approving PRs. <@U0KPFAZNF> <@U0KN2SSKE> <@U0MT4CBHB> <@U0ULP7ARX> Please respond to the \"Pull requests to connect fabric-api\u201d thread in the Hyperledger-fabric mailing list with your opinion",
        "ts": "1466604324.000056"
    },
    {
        "type": "message",
        "user": "U0KN2SSKE",
        "text": "ok",
        "ts": "1466604502.000057"
    },
    {
        "type": "message",
        "user": "U0KN2SSKE",
        "text": "re 1719, we need to keep the events, but it is a hack at this point until the next architecture, it is needed for playback",
        "ts": "1466604687.000058"
    },
    {
        "type": "message",
        "user": "U0KN2SSKE",
        "text": "so I would leave things as they are until we change the architecture to avoid API changes at this point",
        "ts": "1466604767.000059"
    },
    {
        "type": "message",
        "user": "U0TFEHX8E",
        "text": "can you add a comment to the PR with that statement?",
        "ts": "1466604784.000060"
    },
    {
        "type": "message",
        "user": "U0KN2SSKE",
        "text": "sure",
        "ts": "1466604806.000061"
    },
    {
        "type": "message",
        "user": "U0KN2SSKE",
        "text": "I think at this point, we should all focus on stabilizing the code base (fixing bugs, building test cases), and move all new features\/functions to the Fabric next",
        "edited": {
            "user": "U0KN2SSKE",
            "ts": "1466605371.000000"
        },
        "ts": "1466605352.000062"
    },
    {
        "type": "message",
        "user": "U0KN2SSKE",
        "text": "I think that would dove-tail nicely with Fabric-API work",
        "ts": "1466605415.000064"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "I think persistent events are neither needed by a use case nor  do they have a place in the new architecture",
        "ts": "1466605790.000065"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "copy from PR request to save me typo",
        "ts": "1466605803.000066"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "<@U0KN2SSKE> you introduced a feature that creates the requirement in the first place. I am questioning if the feature is needed and not its handling. It is BTW not an option to keep the feature in the new architecture as the events could only be delivered to endorsers without disclosing information about the transaction. There is also no reason to deliver to anyone else then endorsers since it is a result of chaincode execution. Delivering event back from chaincode execution would only happen in the submitting peer and well served with the mechanism we suggest in the other PR #1754",
        "ts": "1466605811.000067"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "<@U0KM61BCP>: do you also agree that focus is on stabilizing code and fixing bugs?",
        "ts": "1466605874.000068"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "as @binh wrote above",
        "ts": "1466605882.000069"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "<@U0KN2SSKE>: what did you mean about events needed for \u201cplayback\u201d?",
        "ts": "1466605994.000070"
    },
    {
        "type": "message",
        "user": "U0KN2SSKE",
        "text": "<@U0MT4CBHB> probably not the time to discuss event handling since it\u2019s been out there as an issue for quite some time",
        "ts": "1466606021.000071"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "<@U0MT4CBHB>: we have a release branch that should be exclusively about stabilizing and fixing known (or newly discovered) bugs",
        "ts": "1466606033.000072"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "but I think that all new features from this point on need consensus amongst the maintainers before merging",
        "ts": "1466606073.000073"
    },
    {
        "type": "message",
        "user": "U0KN2SSKE",
        "text": "when a peer needs to synch, it would get blocks from other peers and playback",
        "ts": "1466606079.000074"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "ok, wanted to be clear I understood what you meant",
        "ts": "1466606102.000075"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "<@U0KN2SSKE>",
        "ts": "1466606131.000076"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "<@U0KN2SSKE>: I do not get it. Being out there in a dev preview means that it has to remain part of the product forever even if there is no need for it in production?",
        "ts": "1466606163.000077"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "<@U0KM61BCP> I would not want to merge PR into release branch but master, so it moves toward the architecture we can use",
        "ts": "1466606191.000078"
    },
    {
        "user": "U0YNFB22X",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0YNFB22X|satheesh> has joined the channel",
        "ts": "1466606258.000079"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "<@U0MT4CBHB> they can be merged to master as well.",
        "ts": "1466606286.000080"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "I do not care of release as I think fabric is useless as is",
        "ts": "1466606305.000081"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "the release is a technical exercise",
        "ts": "1466606319.000082"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "Quesxtion is if we can move forward with new features",
        "ts": "1466606332.000083"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "on master",
        "ts": "1466606335.000084"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "yes, it was and we still need to get people comfortable with its execution",
        "ts": "1466606347.000085"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "so it should not be ignored",
        "ts": "1466606353.000086"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "and also remove features for which there is no justification",
        "ts": "1466606381.000087"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "justification != it is already there",
        "ts": "1466606406.000088"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I think the chaincode events is useful - we will have to add things like security and access control ( to control who can get what events etc) but it provides some alternate paths to make design of applications easier",
        "ts": "1466606434.000089"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "IMO",
        "ts": "1466606436.000090"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "<@U0ULK2JPP>: explain me how events fith with new consensus architecture?",
        "ts": "1466606558.000091"
    },
    {
        "type": "message",
        "user": "U0KN2SSKE",
        "text": "<@U0MT4CBHB> persistence of events is a requirement and has been discussed, but as i said, the implementation of the persistence is a hack at this point since we don\u2019t want to change the API and the data causing backward compatibiilty issues",
        "ts": "1466606579.000092"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "<@U0KN2SSKE>: same question to you. How do events fit with an architecture where endorsers execute chaincode and and content is opaque for others?",
        "ts": "1466606632.000093"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "How do you address privacy and conflict of this new data structure in addition to worldstate and blockchain",
        "ts": "1466606656.000094"
    },
    {
        "type": "message",
        "user": "U0KN2SSKE",
        "text": "whom would you think interest in the custom events?",
        "ts": "1466606668.000095"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "but before you start tell me the use case the requirement was derived from",
        "ts": "1466606671.000096"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "Endorsers execute chaincode and produce world state.",
        "ts": "1466606728.000097"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "Endorses execute chaincode and produce events",
        "ts": "1466606737.000098"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "why would events mean anything to other than endorser?",
        "ts": "1466606772.000099"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "the matter of state or events is pretty synonymous from the PoV of who can see what and how opaque it is",
        "ts": "1466606774.000100"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "why would you want to store them, why replay?",
        "ts": "1466606794.000101"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "so you are really asking a question about any value \/ state stored in general",
        "ts": "1466606798.000102"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "my ansewr to _events fit with an architecture where endorsers execute chaincode and and content is opaque for others_ would be same way any state would fit the architecture",
        "ts": "1466606842.000103"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "in fact, come to that, PR #1754 would have the same issue wouldn\u2019t it ?",
        "ts": "1466606878.000104"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "Events are generated by chaincode execution right?",
        "ts": "1466606885.000105"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "except that it ONLY posts \u201cchaincode execution failed\u201d and is not even store on state ?",
        "ts": "1466606940.000106"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "so they are of interest for those submitting the transaction. All other do not even know what events mean.",
        "ts": "1466606948.000107"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "ie, purely ephemera;",
        "ts": "1466606950.000108"
    },
    {
        "type": "message",
        "user": "U0KN2SSKE",
        "text": "the applications are the ones interest in the appropriate events that they are authorized to listen to",
        "ts": "1466607075.000109"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "it is of interest for whoever is allowed and authorized",
        "ts": "1466607085.000110"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "right",
        "ts": "1466607086.000111"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "<@U0KN2SSKE>: what is for everyone is on blockchain. events are only for those executing the chaincode. if you make events available for more you leak privacy or add junk to all other's infrastructure.",
        "ts": "1466607156.000112"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "the way I look at it is - and this is the reason why we stored it persistently - the same holds for \u201cevents\u201d . as well",
        "ts": "1466607215.000113"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "just as a state is allowed for anyone who can view it, so can events",
        "ts": "1466607238.000114"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "events provide just an alternate means for wiring applications. This is why we wanted to make sure they are NOT ephemeral",
        "ts": "1466607273.000115"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "If I'd follow your argument that events are like states then I'd ask why you need both. An application can listen to blockchain and observe state changes. It can imply events for its own upstream needs if needs to. For me you introduced yet another cathegory of shared data for no good reason. with that increased complexity, vulnerability and hurt performance. what we should build here is a high performance bare bone modular blockchain and not what we could imagine being useful.",
        "ts": "1466607445.000116"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "I don\u2019t know about complexity, vulnerability and perforamnce.. to take performance alone, if I want to get the same information from state (say via query) I\u2019d have to poll for the data (sometimes multiple times to see \u201cif state changed\u201d)\u2026 my point is the event approach has its place",
        "ts": "1466607625.000117"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "We should only care of performance that is within the scope of the project and include support for high level optimisation after this is justified with a use case and has sufficient community pressure behind it.",
        "ts": "1466607684.000118"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "I am afraid of building a swiss knife while we need a corkscrew",
        "ts": "1466607760.000119"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "well, I didn\u2019t bring up performance \u2026 I only pointed out that I don\u2019t see how it hurts it",
        "ts": "1466607979.000120"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "as I see it, events are a critical component of building compositions specifically to allow more efficient state discrimination",
        "ts": "1466611639.000121"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "state is what matters, yes, but events are a view into state transitions",
        "ts": "1466611669.000122"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "without them, your only options are monolithic applications or polling, neither of which are particularly great solutions in many use cases",
        "ts": "1466611715.000123"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "just because an external observer may, in certain circumstances, be privy to blockchain level events such as the creation of blocks, the committing of transactions, or the mutation of state, doesn\u2019t mean they are necessarily able to reason about what those events mean in very specific ways",
        "ts": "1466611850.000124"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "custom events allow a chaincode application to distill internal schema to external schema in an application specific way",
        "ts": "1466611916.000125"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "in short: i think they are a very useful abstraction",
        "ts": "1466611934.000126"
    },
    {
        "user": "U0MRY2LKY",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0MRY2LKY|troyronda> has joined the channel",
        "ts": "1466613226.000127"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "<@U0KPFAZNF>",
        "ts": "1466614639.000128"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "you are aware that with events you introduce a 3rd shared data. Bitcoin works with one and Ethereum blew up with 2. I wish for more respect of the difficulty of the job we face here and we would add features only after they are absolutely demanded by a use case and not because we anticipate it would be cute.",
        "ts": "1466614742.000129"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "You assume I am doing that",
        "ts": "1466614766.000130"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "I should assume what?",
        "ts": "1466614814.000131"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "No, sorry, you are assuming we are adding this speculatively",
        "ts": "1466614834.000132"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "yes, that is my assumption.",
        "ts": "1466614847.000133"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "Right, and I am saying that is not the case :wink:",
        "ts": "1466614859.000134"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "prove it to me please with a community demanding the feature because without it real products can not reach production quality.",
        "ts": "1466614893.000135"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "I can only represent my team, but we need it",
        "ts": "1466614933.000136"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "Same for me and we do not.",
        "ts": "1466614955.000137"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "Thats fine, I dont expect all use cases to overlap 100%",
        "ts": "1466614973.000138"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "Could you elaborate why state and blockchain is not sufficient?",
        "ts": "1466614993.000139"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "Ok, so you have a chaincode application, and it has some state that can be mutated with an invoke() iff enough VPs agree that it is valid, right?",
        "ts": "1466615048.000140"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "ok",
        "ts": "1466615083.000141"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "that \u201cstate\u201d is some schema modeled on top of a kv-store that the chaincode manages, right?",
        "ts": "1466615112.000142"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "yes, I assume its the 'world state' of fabric a kv store, right",
        "ts": "1466615155.000143"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "yes, but I actually hate the term: i prefer to think of them as merkel roots of each chaincode app, but sure",
        "ts": "1466615189.000144"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "there are some number of kv entries that change in response to an accepted transaction, the mechanics\/semantics dont matter much at this level",
        "ts": "1466615232.000145"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "one problem is, to an outside observer, thats exactly what it looks like",
        "ts": "1466615274.000146"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "a transaction goes in, and some delta to world state comes out",
        "ts": "1466615296.000147"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "so, anyone that would like to derive meaning from that transform would need a deep understanding of the schema that governed all deltas leading to that point",
        "edited": {
            "user": "U0KPFAZNF",
            "ts": "1466615377.000000"
        },
        "ts": "1466615356.000148"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "the transform is recorded with invoke transactions.",
        "ts": "1466615394.000151"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "understood, but that isnt the problem",
        "ts": "1466615406.000152"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i dont need to know that the transform happened, I need to know what the transform _means_",
        "ts": "1466615432.000153"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "for instance, \"did someone just deposit funds in my wallet?\" as oppposed to \u201cdid the asset manager just mutate rows [x y z a b c m n o]?\"",
        "ts": "1466615488.000154"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "so, the event mechanism allows a chaincode app to attach semantic meaning to the operations that, really, only it understands to begin with",
        "ts": "1466615546.000155"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "You want the events to translate invokes into a lower granularity actions. I think it is not the job of the framework to solve for that.",
        "ts": "1466615606.000156"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "why not?",
        "ts": "1466615617.000157"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "because keep it stupid simple",
        "ts": "1466615631.000158"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "once we prove that that works we can add luxuriy featiures",
        "ts": "1466615643.000159"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "it sounds like that is exactly what you want the framework to do, otherwise you have no other means to reason about the transaction",
        "ts": "1466615656.000160"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "this isnt luxury, I don\u2019t think you can build much utility without it",
        "ts": "1466615691.000161"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "at least, not for a class of use cases I care about",
        "ts": "1466615719.000162"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "If you can not reason about invokes than they are probably ill-designed.",
        "ts": "1466615731.000163"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i disagree",
        "ts": "1466615743.000164"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "you can always reason about the invokes without events, but if you have operations that are predicated on invokes you would be left to poll, which is not good",
        "ts": "1466615799.000165"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "events can be recreated with execution of chain code right? So why persist them?",
        "ts": "1466615849.000166"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "for instance, say I have a compositional contract that reacts in response to payment",
        "ts": "1466615868.000167"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "if that is your only way to reason about invokes, then execute.",
        "ts": "1466615871.000168"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "oh, well persistence is another matter",
        "ts": "1466615875.000169"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "I am all about persistence",
        "ts": "1466615887.000170"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i dont have a strong opinion on whether events need to be persistent or not\u2026ephemeral is probably fine for my use cases too",
        "ts": "1466615900.000171"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "It is fine to create an event and return as a feedback from validation",
        "ts": "1466615902.000172"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "What I disagree with is perisistent events anotther shared data",
        "ts": "1466615928.000173"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "the persistence discussion was something I wasnt involved in",
        "ts": "1466615932.000174"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "ok, then we are probably not even isagreeing",
        "ts": "1466615950.000175"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "*d",
        "ts": "1466615954.000176"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "right, ok",
        "ts": "1466615956.000177"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "I just need to get the event emitted\u2026I am ok if the observer might have missed it",
        "ts": "1466615983.000178"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "We have a pull request <https:\/\/github.com\/hyperledger\/fabric\/pull\/1754>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "Add transaction rejection events by gabre \u00b7 Pull Request #1754 \u00b7 hyperledger\/fabric \u00b7 GitHub",
                "title_link": "https:\/\/github.com\/hyperledger\/fabric\/pull\/1754",
                "text": "This change adds a new type of events: transaction rejection. These events are sent out to listeners in case the corresponding chain code of a transaction exited with error. Description See the s...",
                "fallback": "GitHub: Add transaction rejection events by gabre \u00b7 Pull Request #1754 \u00b7 hyperledger\/fabric",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/5565153?v=3&s=400",
                "from_url": "https:\/\/github.com\/hyperledger\/fabric\/pull\/1754",
                "thumb_width": 420,
                "thumb_height": 420,
                "service_icon": "https:\/\/a.slack-edge.com\/e8ef6\/img\/unfurl_icons\/github.png",
                "id": 1
            }
        ],
        "ts": "1466615994.000179"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "that is about relaying chaincode result back to submitter",
        "ts": "1466616011.000181"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "what I was opposing is storing events in addition to tranansactions and state",
        "ts": "1466616071.000182"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i havent reviewed it in depth, but I think the general concept sounds good",
        "ts": "1466616078.000183"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "ok, like I said I have no opinion on the persistence so I\u2019ll abstain from voting for or against it",
        "ts": "1466616120.000184"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U0MT4CBHB>, trying to understand where we stand\u2026 are you saying you are ok with chaincode events as long as we don\u2019t persist them ?",
        "ts": "1466616596.000185"
    },
    {
        "user": "U17BRDHPG",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U17BRDHPG|jeroiraz> has joined the channel",
        "ts": "1466616738.000186"
    },
    {
        "user": "U11L9NAUW",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U11L9NAUW|gromeroar> has joined the channel",
        "ts": "1466617062.000187"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "<@U0ULK2JPP>: yes, delivering events, that are by-product of chaincode execution, back to submitter of a transaction was compatible with the new consensus architecture. Persisting them however would introduce yet another class of shared data on top of transactions and kv state.",
        "ts": "1466625147.000188"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0MT4CBHB>: to be clear, I also need the use case where the events may be subscribed to from non submitters",
        "ts": "1466626123.000189"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "( but again, do not care about the persistence aspect)",
        "ts": "1466626136.000190"
    },
    {
        "user": "U113EGLBE",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U113EGLBE|nkunkel> has joined the channel",
        "ts": "1466626544.000191"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "The blockchain is an infrastructure to distribute transactions and any node can subscribe to them. You now imply to need a lower granularity. Is it really the job of this infrastructure to help you there or are your transactions not defined at the right granularity?",
        "ts": "1466626646.000192"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "<@U0MT4CBHB> there is the blockchain network, and then there are ancillary services that might want to subscribe to information about what is going on with the blockchain. I suspect that <@U0KPFAZNF> is referring to the need to get information via events that reflect what is going on",
        "ts": "1466626795.000193"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0MT4CBHB>: they seem perfectly defined to me, constrained by my competence as an architect :wink:",
        "ts": "1466626825.000194"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "but I think its sound",
        "ts": "1466626850.000195"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "Yes, but whatever is going on is implied by transactions and distribution of them is exactly the job we build an infrastructure for.",
        "ts": "1466626853.000196"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "you are then suggesting that the information implied by transactions is interesting only to the peer nodes?",
        "ts": "1466626893.000197"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "<@U0MT4CBHB>: the problem I think people run into is its easy to say \u201cdo this function somewhere else\u201d but that becomes a less tenable proposal when you consider the reasons people need\/want to run on a blockchain",
        "ts": "1466626923.000198"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "Yes. that is the job of the blockchain distribute transactions and define their order. everything else is optimisation or sugar on top.",
        "ts": "1466626981.000199"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "and I also do not think the notion of events is particularly onerous nor non-sensical to include in the framework",
        "edited": {
            "user": "U0KPFAZNF",
            "ts": "1466627063.000000"
        },
        "ts": "1466626998.000200",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0KM61BCP"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "I\u2019m with <@U0KPFAZNF> that the events are interesting\u2026 the persistence aspect less so",
        "ts": "1466627005.000201"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "There are other products for distribute events. The blockchain is about replication of persistent state in set order.",
        "ts": "1466627065.000203"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "I disagree, there are plenty of solutions that can do strongly ordered replication",
        "ts": "1466627104.000204"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "I am fine with generating events and returning them to submitter. Just not create another class of shared data.",
        "ts": "1466627109.000205"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "<@U0MT4CBHB> yes, and there we agree - but something needs to emit them\u2026 I agree that it is rather silly that we don\u2019t just leverage 0mq or kafka",
        "ts": "1466627120.000206",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0KPFAZNF"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "blockchain, to me, is about having an agreement protocol for mutation policy",
        "ts": "1466627123.000207"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "and some mutations are composible",
        "ts": "1466627149.000208"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i need the event mechanism to do that, otherwise I have to poll or trust an external component",
        "ts": "1466627172.000209"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "state mutation is only implied by set sequence of immutable transaction. shared persistent state is only an optimisation, not the core of the technology. See Bitcoin. It has an implied state (the UTXO) but only replicates ordered sequence of transactions. Similarly Hyperledgers kv state is only an optimisation that could be recomputed through reexecuting all transaction in the order set by consensus. Events you ask for could be recreated in the same process. The point is the more 'optimisations' you introduce on top of the core function of storing ordered immutable transactions the more complex the system will be. Chances are it will be the less stable and secure.",
        "ts": "1466627426.000210"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "Theres always a complexity line, but I dont think this crosses it",
        "ts": "1466627497.000211"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "and <@U0KM61BCP>, I dont disagree with the 0mq observation\u2026im likely just going to bridge SDK to 0mq anyway",
        "ts": "1466627588.000212"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "so, if the peers surfaced a native 0mq subscription point, thats probably awesome from my perspective",
        "ts": "1466627610.000213"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "but id have to look into it deeper to see if that makes sense in the context of a potentially hostile network",
        "ts": "1466627639.000214"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "<@U0KPFAZNF>: I was thinking we could use a pluggable approach but yes",
        "ts": "1466627661.000215"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "yeah, thats the way to go",
        "ts": "1466627668.000216"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "I think you underestimate how fiercely this infrastructure will be attacked and what value it will have to protect. There is no better strategy to deal with that than having respect toward the problem and assume that implications of features are much bigger than you first think. I'd hope the DAO was opening eyes.",
        "ts": "1466627704.000217"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "well, one of my problems was that we didnt have events, so we asked for them\u2026.now, the community doesn\u2019t have to agree to their importance but to say its a lack of respect to the problem is not really understanding where we are coming from.  The way I see it, it will be difficult to compose applications that will be meaningful to the purpose of blockchain without them.  I guess we should flip it around:  what is the problem you think these events are going to cause?",
        "ts": "1466628056.000218"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "I do not want persistent failure events as they create obvious DoS. I do not want persistent ok events as they are recomputable by reexecuting transactions for those who can read the transactions generated them and those who cant should not get ok events as they would either leak privacy or be just additional garbage on disk.",
        "ts": "1466628211.000219"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "and in general every additional line of code is additional risk.",
        "ts": "1466628269.000220"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "ok, but I think we are in agreement that persistence is uninteresting (to me), and I am not even talking about general events like confirm\/reject, but custom events that a chaincode app can define",
        "ts": "1466628274.000221"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "(though I am interested in txn confirmations too)",
        "ts": "1466628330.000222"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "but that is a different use case",
        "ts": "1466628334.000223"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "you can get custom events returned by submitting peer without persistence, this is what i suggest.",
        "ts": "1466628337.000224"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "yes, dropping persistence is totally fine by me",
        "ts": "1466628366.000225"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "thats all I argue for...",
        "ts": "1466628378.000226"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "I dont see it as as submitting peer constraint though",
        "ts": "1466628388.000227"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "I think all VPs the execute the txn will compute the event set",
        "ts": "1466628412.000228"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "so, a subscriber should be able to listen elsewhere",
        "ts": "1466628438.000229"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "submitting peer either execute chaincode and therefore has events or gets events from endorsing peers. if you want events forwarded to other then submitting peers then please use some message bus but not the fabric.",
        "ts": "1466628452.000230"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "(maybe this is why some are pushing for persistence, so then the E\u2019 set travels to all?",
        "ts": "1466628458.000231"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "ok, i see, you are using the endorsing nomenclature",
        "ts": "1466628488.000232"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "yes, thats fine",
        "ts": "1466628490.000233"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "I assume we are moving toward Marko's new consensu protocol proposal",
        "ts": "1466628528.000234"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "the main criteria is that for a given function f() with state S and message M, it might generate [S\u2019, []E] = f(S, M)",
        "ts": "1466628545.000235"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "where E is the set of events emitted",
        "ts": "1466628559.000236"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "as long as the validation process agree to [S\u2019 []E], and E is released at the same time S\u2019 is accepted, I am happy",
        "ts": "1466628581.000237"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "if that is a function orchestrated by the submitting peer, or persisted in the ledger, or whatever, I dont really care",
        "ts": "1466628623.000238"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "I do care that it should not be persisted on ledger, so we save one shared dataset, otherwise on the same page with you.",
        "ts": "1466628700.000239"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "ok",
        "ts": "1466628711.000240"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "To be precise: I mean []E should not be stored",
        "ts": "1466628785.000241"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "understood, and that is fine by me as long as it works",
        "ts": "1466628803.000242"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "great",
        "ts": "1466628829.000243"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "I do not need any kind of notion of replay of the event, as I can make reconciliation queries to cover that case",
        "ts": "1466628857.000244"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "to me, that seems like one of the major drivers of persisting it",
        "ts": "1466628891.000245"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "the part I guess I would need to study more is, if [S\u2019 []E] could be considered the deterministic output, does that mean it needs to be considered part of the world state?",
        "ts": "1466628949.000246"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "that I dont know",
        "ts": "1466628952.000247"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "maybe its part of the hash but the event itself doesnt need to persist",
        "ts": "1466628989.000248"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "You can hash []E into S' yourself in chaincode,  if you have that requirement.",
        "ts": "1466629035.000249"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "how would that work?",
        "ts": "1466629054.000250"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "(hash(S\u2019) is normally done outside the chaincode by the framework",
        "ts": "1466629083.000251"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "You can have a key in S' that is hash([]E)",
        "ts": "1466629107.000252"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "maybe the event doesnt need to be part of the hash",
        "ts": "1466629111.000253"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "yeah, you could probably do something like that",
        "ts": "1466629171.000254"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "it probably has little meaning to do it at any level, though",
        "ts": "1466629187.000255"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "the event, unless correlated in a strong-read fashion, should not be trusted outright but rather treated as a trigger to consult the chain",
        "ts": "1466629230.000256"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "so either via explicit hash(E) or indirect in hash(S\u2019), it might not matter",
        "ts": "1466629254.000257"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "Actually you could add a key=\"Events\" with value=[]E  in f",
        "ts": "1466629367.000258"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "yeah, but you technically only need to mention the events you are emitting _right now_ so you\u2019d want to delete that table every time",
        "ts": "1466629414.000259"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "otherwise it would grow without bound (though perhaps that is the desired effect)",
        "ts": "1466629445.000260"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "anyway, there are options",
        "ts": "1466629460.000261"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i need to give it more thought, but I think we can just let the event emit",
        "ts": "1466629480.000262"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "it has no more authority than a system level event, like txn-confirmed",
        "ts": "1466629497.000263"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "yes, a peer sent it, but does the network agree?",
        "ts": "1466629512.000264"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "to put it another way, we could try to get consensus on the event \u2026.",
        "ts": "1466629552.000265"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "oh, i just thought of something",
        "ts": "1466629557.000266"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "maybe that is the magic",
        "ts": "1466629569.000267"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "so, for a given transaction, you have the [S\u2019 []E] = f(S, M)",
        "ts": "1466629596.000268"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "The network agrees on valid transactions and their order. Everything else is only implied. Everything else you add as optimisation is only at risk to be out of sync with that truth.",
        "ts": "1466629610.000269"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "we then shop the [S\u2019 []E] around for consensus",
        "ts": "1466629611.000270"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "if we have it, S\u2019 (or the MVCC delta of it, at least) goes in the ledger, and []E goes on the network",
        "ts": "1466629640.000271"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "both of which could carry a commit-certificate on their own, in theory",
        "ts": "1466629653.000272"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "so, the event could actually carry endorser signatures, if we wanted",
        "ts": "1466629691.000273"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "yes thats I am saying...",
        "ts": "1466629711.000274"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "ok, i like that",
        "ts": "1466629726.000275"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "slight correction we shop for endorsement of [S' []E] not consensus",
        "ts": "1466629783.000276"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "yes yes, i need to get the new lingo down :wink:",
        "ts": "1466629796.000277"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "i think this works for me",
        "ts": "1466629821.000278"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "good. please add your conclusion to the PR",
        "ts": "1466629841.000279"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "ok",
        "ts": "1466629846.000280"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "this is 1719?",
        "ts": "1466629858.000281"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "yes, i have to get some sleep. thanks a lot",
        "ts": "1466629887.000282"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "I am on CET timezone",
        "ts": "1466629900.000283"
    },
    {
        "type": "message",
        "user": "U0KPFAZNF",
        "text": "ah, good night",
        "ts": "1466629908.000284"
    },
    {
        "type": "message",
        "user": "U0MT4CBHB",
        "text": "bye",
        "ts": "1466629917.000285"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "just read the recent exchanges\u2026. want to make sure I understood. Chaincode can generate event to be sent out as long as we don\u2019t persist. ie, Just like state, it can be created in a transaction. Just like state, it has to be somehow be part of endorsement to be agreed upon. But unlike state it cannot be persisted. So in future, if we want to know what was endorsed, we can only look at the state value and not the events. Don\u2019t we want to keep around everything that was endorsed upon ?",
        "ts": "1466630937.000286"
    },
    {
        "type": "message",
        "user": "U0KM61BCP",
        "text": "yes, the persistence is a hack admittedly\u2026 I think we are all in agreement (well, those of us here)",
        "ts": "1466631148.000287"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "<@U0KM61BCP> persistence was stored in nonhashdata in the current consensus model (in that sense a hack) but the idea was we could move it to be part of state in the next consensus model so it can be properly endorsed upon.",
        "ts": "1466631452.000288"
    },
    {
        "type": "message",
        "user": "U0ULK2JPP",
        "text": "what was done was recognize that this was post-consensus and deliberately place events in nonhashdata to call out clearly that was not hashed upon (as opposed to storieng elsewhere) so we can fix it correctly when we move to the new model",
        "ts": "1466631643.000289"
    },
    {
        "type": "message",
        "user": "U0XQ35CDD",
        "text": "have followed all the conversation here so far, another +1 for non-persisting the events",
        "ts": "1466632546.000290"
    }
]
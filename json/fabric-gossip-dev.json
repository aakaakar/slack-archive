[{"user":"U0ZJZBJLF","text":"<@U0ZJZBJLF|yacovm> has joined the channel","type":"message","subtype":"channel_join","ts":"1475159090.000002"},{"user":"U0ZJZBJLF","purpose":"Discussions about fabric gossip network","text":"<@U0ZJZBJLF|yacovm> set the channel purpose: Discussions about fabric gossip network","type":"message","subtype":"channel_purpose","ts":"1475159091.000003"},{"user":"U0YP7KFGQ","inviter":"U0ZJZBJLF","text":"<@U0YP7KFGQ|gennady.laventman> has joined the channel","type":"message","subtype":"channel_join","ts":"1475159116.000004"},{"user":"U0YM41HA5","inviter":"U0ZJZBJLF","text":"<@U0YM41HA5|mandler> has joined the channel","type":"message","subtype":"channel_join","ts":"1475159116.000005"},{"user":"U0YMACQSW","inviter":"U0ZJZBJLF","text":"<@U0YMACQSW|vita> has joined the channel","type":"message","subtype":"channel_join","ts":"1475159117.000006"},{"type":"message","user":"U0ZJZBJLF","text":"<@U1HFNJB50>","ts":"1475159157.000007"},{"user":"U1HFNJB50","inviter":"U0ZJZBJLF","text":"<@U1HFNJB50|c0rwin> has joined the channel","type":"message","subtype":"channel_join","ts":"1475159162.000008"},{"user":"U0UGH3X7X","inviter":"U0ZJZBJLF","text":"<@U0UGH3X7X|tuand> has joined the channel","type":"message","subtype":"channel_join","ts":"1475159199.000009"},{"type":"message","user":"U0ZJZBJLF","text":"<@U1KDHJT6H>","ts":"1475502598.000002"},{"user":"U1KDHJT6H","inviter":"U0ZJZBJLF","text":"<@U1KDHJT6H|claytonsims> has joined the channel","type":"message","subtype":"channel_join","ts":"1475502608.000003"},{"type":"message","user":"U0ZJZBJLF","text":"<@U184J2R7S>","ts":"1475502677.000004"},{"user":"U184J2R7S","inviter":"U0ZJZBJLF","text":"<@U184J2R7S|weeds> has joined the channel","type":"message","subtype":"channel_join","ts":"1475502688.000005"},{"user":"U0XQ35CDD","text":"<@U0XQ35CDD|kostas> has joined the channel","type":"message","subtype":"channel_join","ts":"1475514456.000006"},{"user":"U12452RAP","text":"<@U12452RAP|grapebaba> has joined the channel","type":"message","subtype":"channel_join","ts":"1475539383.000007"},{"user":"U2B3A70TX","text":"<@U2B3A70TX|soldat> has joined the channel","type":"message","subtype":"channel_join","ts":"1475608450.000002"},{"user":"U0XV1HDL3","text":"<@U0XV1HDL3|cca> has joined the channel","type":"message","subtype":"channel_join","ts":"1475738732.000002"},{"type":"message","user":"U0ZJZBJLF","text":"Work baseline sync:\n\nSo far I have the following issues closed:\n\nAPI definition related issues:\n<https:\/\/jira.hyperledger.org\/browse\/FAB-292>\n<https:\/\/jira.hyperledger.org\/browse\/FAB-291>\n<https:\/\/jira.hyperledger.org\/browse\/FAB-293>\n\nGossip Discovery component implementation:\n<https:\/\/jira.hyperledger.org\/browse\/FAB-480>\n\nSomething unrelated- fixed a thread-safety bug in the go-logging dependancy that sometimes made our unit tests fail\nI first fixed it in: <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/1261\/>\nBut then I went on and simply fixed the bug in the vendor folder since go-logging maintainers didn't respond to the issue and PR I opened:\n<https:\/\/jira.hyperledger.org\/browse\/FAB-573>\n\nGossip pull algorithm implementation:\n<https:\/\/jira.hyperledger.org\/browse\/FAB-483>\n\nDatastructures for gossip dissemination\n<https:\/\/jira.hyperledger.org\/browse\/FAB-484>\n\nMade a security-related API change for our gossip component to be able to be resiliant to identity spoofing\nThis change will be implemented in next week\n(from some reason there are 2 issues...)\n<https:\/\/jira.hyperledger.org\/browse\/FAB-511>\n<https:\/\/jira.hyperledger.org\/browse\/FAB-584>\n\nAlso have <https:\/\/jira.hyperledger.org\/browse\/FAB-482> in CR - this is a bug fix for the discovery implementation\n\nI also finished writing the gossip module but I don't have a JIRA issue for that because I don't have a corresponding gerrit item.\nNext week I hope to finish changing the communication module and will commit at least one of them for CR.","edited":{"user":"U0ZJZBJLF","ts":"1475768930.000000"},"ts":"1475765607.000003"},{"type":"message","user":"U0YP7KFGQ","text":"Working on: <https:\/\/jira.hyperledger.org\/browse\/FAB-513>","ts":"1475765817.000006"},{"user":"U2GT93M2T","text":"<@U2GT93M2T|zdavatz> has joined the channel","type":"message","subtype":"channel_join","ts":"1475829877.000002"},{"type":"message","user":"U0ZJZBJLF","text":"Created a gossip demo video\n<https:\/\/jira.hyperledger.org\/browse\/FAB-636>\n\nCheck it out:\n<https:\/\/www.youtube.com\/watch?v=qpFzZRNKKp0>","edited":{"user":"U0ZJZBJLF","ts":"1476103268.000000"},"ts":"1476093270.000002"},{"type":"message","user":"U0ZJZBJLF","text":"And created this issue, will work on that this week:\n<https:\/\/jira.hyperledger.org\/browse\/FAB-639>","ts":"1476100527.000004"},{"user":"U1B5DPRLG","text":"<@U1B5DPRLG|lhaskins> has joined the channel","type":"message","subtype":"channel_join","ts":"1476115006.000006"},{"user":"U13Q594J2","text":"<@U13Q594J2|ratnakar> has joined the channel","type":"message","subtype":"channel_join","ts":"1476117047.000007"},{"user":"U0YJUECE8","text":"<@U0YJUECE8|silliman> has joined the channel","type":"message","subtype":"channel_join","ts":"1476125513.000008"},{"user":"U1GN670VD","text":"<@U1GN670VD|thiruworkspace> has joined the channel","type":"message","subtype":"channel_join","ts":"1476135773.000009"},{"user":"U132537KP","text":"<@U132537KP|andrearei> has joined the channel","type":"message","subtype":"channel_join","ts":"1476141551.000010"},{"user":"U1CPB11D0","text":"<@U1CPB11D0|dianfu> has joined the channel","type":"message","subtype":"channel_join","ts":"1476153946.000011"},{"user":"U0NCW1DPX","text":"<@U0NCW1DPX|gengjh> has joined the channel","type":"message","subtype":"channel_join","ts":"1476167296.000012"},{"user":"U2MCH9EEB","text":"<@U2MCH9EEB|crazybit> has joined the channel","type":"message","subtype":"channel_join","ts":"1476187058.000013"},{"user":"U0W7D64LC","text":"<@U0W7D64LC|markparz> has joined the channel","type":"message","subtype":"channel_join","ts":"1476213865.000014"},{"user":"U2FR6FUJV","text":"<@U2FR6FUJV|niubwang> has joined the channel","type":"message","subtype":"channel_join","ts":"1476266594.000015"},{"user":"U0KM61BCP","text":"<@U0KM61BCP|cbf> has joined the channel","type":"message","subtype":"channel_join","ts":"1476303814.000016"},{"user":"U2PE37K3J","text":"<@U2PE37K3J|n.ohagan> has joined the channel","type":"message","subtype":"channel_join","ts":"1476453387.000017"},{"user":"U2PE37K3J","text":"<@U2PE37K3J|n.ohagan> has left the channel","type":"message","subtype":"channel_leave","ts":"1476454334.000018"},{"user":"U2NNLN56V","text":"<@U2NNLN56V|conghonglei> has joined the channel","type":"message","subtype":"channel_join","ts":"1476755811.000019"},{"type":"message","user":"U0ZJZBJLF","text":"Currently working on <https:\/\/jira.hyperledger.org\/browse\/FAB-639>: Making communication layer of gossip component :\n- Resilient for impersonations \n- To be able to maintain only 1 bidi stream per peer pair in contrast to the existing code which has 2 bidi streams.","ts":"1476885273.000020"},{"type":"message","user":"U0ZJZBJLF","text":"I think everything is working now, I'll push it tomorrow hopefully after the merge","ts":"1476894730.000021"},{"type":"message","user":"U12452RAP","text":"guys, i saw a new patch introduce hashicorp gossip, what's the purpose for it?","ts":"1476958824.000022"},{"type":"message","user":"U0ZJZBJLF","text":"This is <@U0YP7KFGQ> 's patch","ts":"1476963730.000023"},{"type":"message","user":"U0YP7KFGQ","text":"<@U12452RAP> - the idea was that we try hashicorp based gossip before we move to <@U0ZJZBJLF> developed gossip.","ts":"1476963892.000024"},{"type":"message","user":"U0ZJZBJLF","text":"Thoughts regarding Gossip multi-channel support:\n(Multichannel Consensus and Ledgers): <https:\/\/docs.google.com\/document\/d\/1eRNxxQ0P8yp4Wh__Vi6ddaN_vhN2RQHP-IruHNUwyhc\/edit#heading=h.v3lesbw3atum> \nIt shouldn't be too hard to implement support for that, but there is only 1 delicate issue when the channel membership changes (specifically- when nodes are *removed*):\n- For state transfer we're good (feasible to implement) because the way the state transfer works is it obtains blocks from the ledger directly, meaning- if the a peer `p0` got a block `B50` from `p1`, then `p1 ` must have committed all configuration blocks sent prior to `B50` and ensured that `p0` is still a member of the channel when he requests that block. \n- If we use the gossip to disseminate blocks from the consenters to the peers (instead of having *all of them* them connected directly to kafka orderers\/sBFT\/SOLO, that's not the current architecture but I want gossip to support this option)  we have a problem because our gossip disseminates blocks in arbitrary order, meaning- if I'm a peer I might gossip a block to peers before I got a configuration change that should have prevented me of gossipping that block.  What I propose to do for this is to have the following mechanism: once in every `Min(K blocks, T seconds)` the consenters send via gossip a `channel` message containing the channel membership + the latest block sequence number sent. Of course, once a configuration is changed, a `channel` message is sent right away.\nNow, if I'm a peer and I got block `B50`,  before I disseminate it further I wait to get a `channel` message (via gossip) with a block sequence `i` such that `i&gt;=50` and when I got that message (I might get it even before I got `B50`) I know who are the members of the channel that I can forward this message to. \nIf `K` and `T` are chosen optimally I think we can minimize dissemination latency. \n\nAny comments\/ideas (<@U0PB67X4K>  \/ <@U0KN2SSKE> )?","edited":{"user":"U0ZJZBJLF","ts":"1477072024.000000"},"ts":"1477051466.000031"},{"user":"U0XPR4NP4","text":"<@U0XPR4NP4|jyellick> has joined the channel","type":"message","subtype":"channel_join","ts":"1477072021.000036"},{"type":"message","user":"U0XPR4NP4","text":"<@U0ZJZBJLF> You say the gossip disseminates blocks in arbitrary order, how is this possible? Without knowledge of the preceding blocks or a succeeding block, there is no way to validate the block contents?","ts":"1477072271.000038"},{"type":"message","user":"U0ZJZBJLF","text":"really? why? I thought you can always determine it came from the consensus and that no one simply made a blob and sent it","ts":"1477072388.000039"},{"type":"message","user":"U0ZJZBJLF","text":"maybe you mean- validation in terms of ledger?","ts":"1477072402.000040"},{"type":"message","user":"U0ZJZBJLF","text":"I thought consensus hashes the block, signes the hash and sends it and it's possible to hash at the peer side, verify the sig and forward it?","ts":"1477072458.000041"},{"type":"message","user":"U0XPR4NP4","text":"But imagine the scenario where:\n\nblock 0: declare blocks must be signed by A,B,C 2\/3\nblock 1: data\nblock 2: data\nblock 3: data\nblock 4: declare blocks must now be signed by B,C,D 3\/3\nblock 5: data\nblock 6: data","ts":"1477072605.000042"},{"type":"message","user":"U0XPR4NP4","text":"If you retrieve them in arbitrary order, how do you know which validation policy to apply to those signatures?\n\nIf you were to retrieve 0, 1, 5, 6, 3, 4","ts":"1477072642.000043"},{"type":"message","user":"U0ZJZBJLF","text":"block 0 and 4 is a consenter change?","ts":"1477072646.000044"},{"type":"message","user":"U0XPR4NP4","text":"It is a block validation policy change","ts":"1477072663.000045"},{"type":"message","user":"U0ZJZBJLF","text":"so if we get block 5 before 4 is committed, it'll be thrown. what's the problem with that? how frequently does a BVP change?","ts":"1477072708.000046"},{"type":"message","user":"U0XPR4NP4","text":"It'll be thrown?","ts":"1477072723.000047"},{"type":"message","user":"U0ZJZBJLF","text":"into the abyss","ts":"1477072729.000048"},{"type":"message","user":"U0XPR4NP4","text":"What if you get back a faked block 5 with signatures from A,B","ts":"1477072751.000049"},{"type":"message","user":"U0ZJZBJLF","text":"then it's OK","ts":"1477072762.000050"},{"type":"message","user":"U0XPR4NP4","text":"You would accept it as a valid block, even though it violates the block validation policy","ts":"1477072766.000051"},{"type":"message","user":"U0ZJZBJLF","text":"nope","ts":"1477072770.000052"},{"type":"message","user":"U0XPR4NP4","text":"How not?","ts":"1477072773.000053"},{"type":"message","user":"U0ZJZBJLF","text":"because I'm talking now (I wasn't clear enough) about only the gossip layer. it doesn't interact with the ledger. it simply forwards to another layer that we have (we don't even have a name for it yet, even though it's implemented. we call it \"state\" or something) and that layer passes to the peer in order","edited":{"user":"U0ZJZBJLF","ts":"1477072859.000000"},"ts":"1477072839.000054"},{"type":"message","user":"U0XPR4NP4","text":"Ah okay,  and what prevents the gossip layer from being crowded with garbage? And discarding valid post-configuration blocks?","edited":{"user":"U0XPR4NP4","ts":"1477072925.000000"},"ts":"1477072910.000056"},{"type":"message","user":"U0ZJZBJLF","text":"if you initialized the gossip component with proper cryptographic implementation of \"Verify(Block)\" I discard blocks that are not signed properly","ts":"1477072956.000058"},{"type":"message","user":"U0ZJZBJLF","text":"discarding valid post-configuration- nothing prevents, well, no one is perfect","ts":"1477072972.000059"},{"type":"message","user":"U0ZJZBJLF","text":"I don't think it's that bad as you describe","ts":"1477072991.000060"},{"type":"message","user":"U0ZJZBJLF","text":"if I don't pass the block to the \"state\" layer- it \"senses it\" because it \"senses\" other peers have a higher block than the peer has and fetches from other peers the valid blocks","ts":"1477073027.000061"},{"type":"message","user":"U0XPR4NP4","text":"If you are not committing to the ledger, I agree, things are probably fine.  I'm a little concerned about the gossip network grinding to a near halt on configuration change, but maybe this is okay","ts":"1477073042.000062"},{"type":"message","user":"U0ZJZBJLF","text":"well, it's good I know this now because without knowing I can never start thinking of a solution to a problem I wasn't aware of","ts":"1477073169.000063"},{"type":"message","user":"U0ZJZBJLF","text":"(obviously, I'm only blaming myself here)","ts":"1477073196.000064"},{"type":"message","user":"U0XPR4NP4","text":"Eh, we as a project could be better with communication.  As it stands today, there is a very simple, 'configuration transaction', which defines the chain configuration, including things like 'who must sign a block for it to be valid'","ts":"1477073223.000065"},{"type":"message","user":"U0XPR4NP4","text":"This configuration transaction always comes in a block by itself","ts":"1477073236.000066"},{"type":"message","user":"U0ZJZBJLF","text":"where is this thing written, btw?","ts":"1477073257.000067"},{"type":"message","user":"U0ZJZBJLF","text":"the architecture proposal?","ts":"1477073271.000068"},{"type":"message","user":"U0ZJZBJLF","text":"I've read it, but I don't recall orderers and stuff, maybe it has changed since","ts":"1477073299.000069"},{"type":"message","user":"U0XPR4NP4","text":"<https:\/\/jira.hyperledger.org\/browse\/FAB-359> has some information on it","ts":"1477073310.000070"},{"type":"message","user":"U0XPR4NP4","text":"As does the multichannel doc from Binh","ts":"1477073325.000071"},{"type":"message","user":"U0XPR4NP4","text":"A lot of it was sort of handwaved at \"The chain has a validation policy which is stored on the chain\"","ts":"1477073346.000072"},{"type":"message","user":"U0XPR4NP4","text":"<https:\/\/gerrit.hyperledger.org\/r\/#\/c\/1799\/> and the dependent commits have a first pass implementation","ts":"1477073370.000073"},{"type":"message","user":"U0ZJZBJLF","text":"ok I see. I'll see what can be done about the configuration change, but- I still don't think that's really an acute problem if it happens rare enough. \nWhat about my suggestion regarding m-channels? What do you think?","edited":{"user":"U0ZJZBJLF","ts":"1477073564.000000"},"ts":"1477073553.000074"},{"type":"message","user":"U0XPR4NP4","text":"The contents of the configuration transaction are somewhat open ended right now.  My hope is that configuration changes will be relatively infrequent, but, if it is abused to track other information, it could be more frequent.","ts":"1477073731.000076"},{"type":"message","user":"U0XPR4NP4","text":"&gt; What I propose to do for this is to have the following mechanism: once in every \ufeff\u2060\u2060\u2060\u2060Min(K blocks, T seconds)\ufeff\u2060\u2060\u2060\u2060 the consenters send via gossip a \ufeff\u2060\u2060\u2060\u2060channel\ufeff\u2060\u2060\u2060\u2060 message containing the channel membership + the latest block sequence number sent. Of course, once a configuration is changed, a \ufeff\u2060\u2060\u2060\u2060channel\ufeff\u2060\u2060\u2060\u2060 message is sent right away.\n\nBy consenters, here, you mean the orderers?","ts":"1477073752.000077"},{"type":"message","user":"U0ZJZBJLF","text":"yeah","ts":"1477073760.000078"},{"type":"message","user":"U0XPR4NP4","text":"Two notes.\n\nFirst, I am wary of having the ordering service try to manage channel membership by peer.  I think this is too fine grained for the orderer, and in order to do this, we would essentially have to embed this into the configuration tx, which would (in my mind) be a bit abusive, and lead to many frequent configuration changes, which is not ideal.\n\nSecondly, going back to what was said in <#C0Z4NBUN6|fabric-consensus-dev> I'm also very skeptical of having the ordering service do any sort of gossiping.  The atomicbroadcast api is quite simple as it stands, and easy to implement without pulling in a lot of fabric specific logic.  I wouldn't say never, but I would want a very compelling reason before modifying the orderer spec in this way.","ts":"1477073925.000079"},{"type":"message","user":"U0ZJZBJLF","text":"about the 2nd thing- it doesn't matter if its the ordering service or a peer, if you transfer raw blocks using gossip in the way we discussed a few min ago on cons-dev, the problem persists","ts":"1477074053.000080"},{"type":"message","user":"U0XPR4NP4","text":"Elaborate?","ts":"1477074071.000081"},{"type":"message","user":"U0ZJZBJLF","text":"if you either connect directly to the ordering service, or you connect via gossip","ts":"1477074096.000082"},{"type":"message","user":"U0ZJZBJLF","text":"if you connect via the ordering service you're safe, but then you disseminate blocks in a non-order-guaranteeing manner","ts":"1477074124.000083"},{"type":"message","user":"U0XPR4NP4","text":"In the gossip, why not include the number of the last configuration block?","ts":"1477074163.000084"},{"type":"message","user":"U0ZJZBJLF","text":"oh, in the block itself?","ts":"1477074181.000085"},{"type":"message","user":"U0ZJZBJLF","text":"(in a \"real\" block)?","ts":"1477074189.000086"},{"type":"message","user":"U0ZJZBJLF","text":"this will only work in a non-byzantine environment though","ts":"1477074213.000087"},{"type":"message","user":"U0XPR4NP4","text":"Not in the real block, but as metadata.  That way if a peer gets  block 6, and included in the metadata is that the config changed at block 4, then the receiving peers know not to rebroadcast it until they have committed block 4","ts":"1477074229.000088"},{"type":"message","user":"U0XPR4NP4","text":"In a byzantine environment, if the peer's goal is to leak the block contents, I think you have already lost","ts":"1477074259.000089"},{"type":"message","user":"U0ZJZBJLF","text":"oh, I get it","ts":"1477074273.000091"},{"type":"message","user":"U0ZJZBJLF","text":"that actually is pretty convenient","ts":"1477074290.000092"},{"type":"message","user":"U0ZJZBJLF","text":"multi-channel essentially works only in a conforming-peer-type env","ts":"1477074311.000093"},{"type":"message","user":"U0ZJZBJLF","text":"I actually thought about that idea, but- it's hard to implement and will impact latency. But, if you want to make the orderers as simple as possible I assume our code can change to accommodate....","ts":"1477074404.000094"},{"type":"message","user":"U0XPR4NP4","text":"I think you can allow and handle some types of byzantine attacks, like censorship, but information leakage is one that I see no way to ever prevent.  You can encrypt data so that if it is leaked it is less useful (think netflix DRM type stuff), but if a rogue actor wants to rebroadcast what you sent, you are out of luck.","ts":"1477074413.000095"},{"type":"message","user":"U0ZJZBJLF","text":"ok so let me recap","ts":"1477074450.000096"},{"type":"message","user":"U0ZJZBJLF","text":"a peer that is connected directly to the ordering service, gossips a block but also puts there the last sequence number of the configuration block, right? I assume you sign the hash of the conf block?","ts":"1477074513.000097"},{"type":"message","user":"U0ZJZBJLF","text":"then, each peer (including that peer that's directly connected to the ordering service) first commits block `i` and only then transfers it.","ts":"1477074619.000098"},{"type":"message","user":"U0XPR4NP4","text":"The ordering service will sign the block header and include the signature in the block metadata.  And the config tx hash will be in the block header (for the block in which the config tx appears, because the config tx is the block contents)","ts":"1477074631.000099"},{"type":"message","user":"U0XPR4NP4","text":"Right.  The rule would be, never transmit a block for which you have not already committed its corresponding configuration block.","ts":"1477074686.000100"},{"type":"message","user":"U0ZJZBJLF","text":"I think this might *really* impact latency, and also impact throughput because blocks are created in an \"application-driven\" pace and not a constant pace but that can be done, I guess. \nAnother idea is to simply include the configuration in each transaction block, that's the simplest of all.","edited":{"user":"U0ZJZBJLF","ts":"1477074789.000000"},"ts":"1477074773.000101"},{"type":"message","user":"U0XPR4NP4","text":"I _might_ be convinced that it's worth adding the last configuration block number to the block header, so that it does not need to be encoded at the peer, as I think this might be a generally useful thing.  However when you say membership, you mean on a per peer basis?","ts":"1477074891.000104"},{"type":"message","user":"U0ZJZBJLF","text":"what else? isn't that what is written in the configuration block?","ts":"1477074933.000105"},{"type":"message","user":"U0ZJZBJLF","text":"how does the ordering service know it can send block `i` to `p`?","ts":"1477074956.000106"},{"type":"message","user":"U0XPR4NP4","text":"No, the participant org CA membership is written into the configuration","ts":"1477074966.000107"},{"type":"message","user":"U0XPR4NP4","text":"Any peer who calls deliver against a channel who presents a valid signed cert which chains to a participant org CA is allowed to receive the blocks for that channel","ts":"1477075001.000108"},{"type":"message","user":"U0ZJZBJLF","text":"oh, I see. so you blacklist and white list an entire org then?","ts":"1477075042.000109"},{"type":"message","user":"U0XPR4NP4","text":"The orderer makes no decisions about what peer to send it to.  If a peer wants it, the peer connects to the orderer to get it.  The peer then allows or disallows based on the presented cert and configured policy","ts":"1477075044.000110"},{"type":"message","user":"U0XPR4NP4","text":"In general, yes, I would expect to whitelist only, at an org level.  The use cases I have seen, this is the desired behavior.","ts":"1477075102.000111"},{"type":"message","user":"U0ZJZBJLF","text":"wait... I didn't catch the last part. the peer itself does what?","ts":"1477075107.000112"},{"type":"message","user":"U0ZJZBJLF","text":"the filtering is done by the peers themselves?!","ts":"1477075128.000113"},{"type":"message","user":"U0XPR4NP4","text":"The orderer service never initiates any connections.  A peer connects in and asks for blocks from a particular channel.  If that peer's identity is allowed to use that channel, the orderer replies as requested, if not, it drops the request.","ts":"1477075166.000114"},{"type":"message","user":"U0ZJZBJLF","text":"but if a peer is no longer a valid member, the ordering service is supposed to stop disseminating the messages to it","ts":"1477075216.000115"},{"type":"message","user":"U0XPR4NP4","text":"If an org is no longer allowed to transact on that channel, someone needs to submit a configuration transaction to that channel, which will be consensed upon, and once committed, applied to deliver requests","ts":"1477075261.000116"},{"type":"message","user":"U0ZJZBJLF","text":"but that deliver API is a gRPC stream, isn't it? once I start the \"deliver\" stream I get blocks on that channel non-stop, don't i? or maybe I'm missing something really important here","ts":"1477075331.000117"},{"type":"message","user":"U0XPR4NP4","text":"Kicking off existing streams is going to be an annoying implementation detail, but basically, when a configuration change happens, all existing deliver streams will need to be re-authorized, and clients which are no longer allowed disconnected","ts":"1477075421.000118"},{"type":"message","user":"U0ZJZBJLF","text":"oh, I missed that part","ts":"1477075434.000119"},{"type":"message","user":"U0XPR4NP4","text":"The good news is, this should not require any client interaction","ts":"1477075439.000120"},{"type":"message","user":"U0XPR4NP4","text":"Since we already have the client ID, it's just verifying they are still allowed or not","ts":"1477075449.000121"},{"type":"message","user":"U0ZJZBJLF","text":"I understand. But, basically what's important here is that you have (or will have) code that does this \"is this peer valid?\" logic","ts":"1477075523.000122"},{"type":"message","user":"U0ZJZBJLF","text":"I can simply incorporate that code into the peer and this makes sending all the \" participant org CA membership\" or whatever in each block a no-brainer doesn't it?","edited":{"user":"U0ZJZBJLF","ts":"1477075610.000000"},"ts":"1477075553.000123"},{"type":"message","user":"U0XPR4NP4","text":"Yes, there is code which does this, and it's being designed as 'common code' which can hopefully be libraryified easily","ts":"1477075590.000124"},{"type":"message","user":"U0XPR4NP4","text":"But it's much more generic than that.  We cannot only consider the peer org certificates","ts":"1477075633.000126"},{"type":"message","user":"U0XPR4NP4","text":"There are going to be an arbitrary number of policies, different ones for who is allowed to submit from who is allowed to modify policy, etc.","ts":"1477075658.000127"},{"type":"message","user":"U0XPR4NP4","text":"We could shove a hash of the last configuration transaction into the block header, but I see that as less useful than the last block the policy changed in.","ts":"1477075688.000128"},{"type":"message","user":"U0XPR4NP4","text":"It's not like you can evaluate the policies based only on a hash.","ts":"1477075698.000129"},{"type":"message","user":"U0ZJZBJLF","text":"I see... well, this must be discussed in further detail some other time I think.","ts":"1477075709.000130"},{"type":"message","user":"U0ZJZBJLF","text":"Thanks a lot for the discussion and explanations and for bringing up that problem.","ts":"1477075798.000131"},{"type":"message","user":"U0XPR4NP4","text":"Sure thing, always happy to, good to hear how the gossip stuff is developing as well","ts":"1477075995.000132"},{"user":"U2BGFAHC7","text":"<@U2BGFAHC7|donovanhide> has joined the channel","type":"message","subtype":"channel_join","ts":"1477076554.000133"},{"user":"U138W4A1F","text":"<@U138W4A1F|hfeeki> has joined the channel","type":"message","subtype":"channel_join","ts":"1477142092.000134"},{"user":"U0MRY2LKY","text":"<@U0MRY2LKY|troyronda> has joined the channel","type":"message","subtype":"channel_join","ts":"1477172323.000135"},{"type":"message","user":"U0XPR4NP4","text":"<@U0ZJZBJLF> To continue the thought from the earlier hangout, I would propose that:\n\n1. A non-byzantine peer which connects to the orderer _must_ validate the block received from ordering before gossiping about it.\n2. In order to validate a block, that peer must have all previous blocks committed, and therefore knows the index of the last configuration block.\n3. When the peer gossips about the block, it can also include the index of the last configuration block\n4. Any peer which receives a block who's last configuration block index is not committed must not gossip about that block until that index is committed\n\nAs I see it, the attacks are:\n1. A byzantine peer lies and claims a configuration change has not recently taken place.  This to me is a non-attack, as the result is the block being gossiped to an older set of authorized peers.  Because this is only information leakage, the byzantine peer could do this without the network's assistance.\n2. A byzantine peer lies and claims a configuration change has taken place when one has not, this could cause peers to buffer blocks which are invalid, because they cannot currently validate the block (because they do not have the corresponding config block).  This seems like a problem which must be addressed regardless of what information is in the block.  Even if the full configuration is embedded in the block header, if that configuration is different, there is no way to validate it until all preceeding blocks have been committed.","ts":"1477323612.000136"},{"type":"message","user":"U0ZJZBJLF","text":"sorry, was on the phone. processing....","edited":{"user":"U0ZJZBJLF","ts":"1477326644.000000"},"ts":"1477326635.000137"},{"type":"message","user":"U0ZJZBJLF","text":"1- what do you mean \"validate\"?","ts":"1477326748.000139"},{"type":"message","user":"U0ZJZBJLF","text":"we have many notions of validations now. is it channel validation BVP, or security?","ts":"1477326771.000140"},{"type":"message","user":"U0ZJZBJLF","text":"oh, I guess channel validation","ts":"1477326791.000141"},{"type":"message","user":"U0XPR4NP4","text":"&gt; 1- what do you mean \"validate\"?\n\nThe peer must verify that the block returned by the orderer satisfies the chain block validation policies, in the PBFT case, this would be f+1 signatures from among the orderers","ts":"1477326802.000142"},{"type":"message","user":"U0ZJZBJLF","text":"maybe I should read everything and only then comment instead of acting like a ledger","ts":"1477326817.000143"},{"type":"message","user":"U0ZJZBJLF","text":"oh","ts":"1477326835.000144"},{"type":"message","user":"U0ZJZBJLF","text":"wait, that always happens","ts":"1477326841.000145"},{"type":"message","user":"U0ZJZBJLF","text":"that is enforced at the gossip entrance code basically","ts":"1477326852.000146"},{"type":"message","user":"U0ZJZBJLF","text":"we discard data blocks that are not signed properly","ts":"1477326862.000147"},{"type":"message","user":"U0ZJZBJLF","text":"but we have this problem with the configuration change","ts":"1477326871.000148"},{"type":"message","user":"U0XPR4NP4","text":"Since the policy is embedded in the chain, the preceeding blocks must be committed before this validation can take place (2)","ts":"1477326949.000149"},{"type":"message","user":"U0XPR4NP4","text":"And, since we are talking about a peer connected directly to the orderer, this is a sane assumption (as it received blocks point to point in order)","ts":"1477326980.000150"},{"type":"message","user":"U0ZJZBJLF","text":"indeed","ts":"1477326992.000151"},{"type":"message","user":"U0XPR4NP4","text":"So, the _first_ peer to gossip about a block must validate it before gossiping","ts":"1477326999.000152"},{"type":"message","user":"U0ZJZBJLF","text":"yep","ts":"1477327005.000153"},{"type":"message","user":"U0XPR4NP4","text":"So, that peer could also say \"this block was validated by config from block N\"","ts":"1477327019.000154"},{"type":"message","user":"U0ZJZBJLF","text":"because the code flow will go: peer code --&gt; ledger; gossip","ts":"1477327019.000155"},{"type":"message","user":"U0ZJZBJLF","text":"right?","ts":"1477327026.000156"},{"type":"message","user":"U0XPR4NP4","text":"Right","ts":"1477327029.000157"},{"type":"message","user":"U0ZJZBJLF","text":"oh","ts":"1477327060.000158"},{"type":"message","user":"U0XPR4NP4","text":"But the first peer to gossip about a block, can definitely say \"This is block N, and it was validated by config from block M &lt; N\"?","ts":"1477327074.000159"},{"type":"message","user":"U0ZJZBJLF","text":"about 4- that's not true","ts":"1477327093.000160"},{"type":"message","user":"U0ZJZBJLF","text":"yeah","ts":"1477327103.000161"},{"type":"message","user":"U0ZJZBJLF","text":"so what I'm saying- if there are non-byzantine nodes:","ts":"1477327112.000162"},{"type":"message","user":"U0ZJZBJLF","text":"then since the blocks flow into the \"gossip network\" in-roder","ts":"1477327127.000163"},{"type":"message","user":"U0ZJZBJLF","text":"*in order","ts":"1477327129.000164"},{"type":"message","user":"U0ZJZBJLF","text":"you can deliver them to others out of order","ts":"1477327141.000165"},{"type":"message","user":"U0ZJZBJLF","text":"is that right?","ts":"1477327143.000166"},{"type":"message","user":"U0XPR4NP4","text":"I would agree that blocks may be gossiped about out of order","ts":"1477327156.000167"},{"type":"message","user":"U0ZJZBJLF","text":"I'm talking here strictly about the validation of signatures","ts":"1477327167.000168"},{"type":"message","user":"U0XPR4NP4","text":"However, the 'originating gossiper' gossips in order","ts":"1477327172.000169"},{"type":"message","user":"U0ZJZBJLF","text":"yeah","ts":"1477327181.000170"},{"type":"message","user":"U0XPR4NP4","text":"So, let's say an originating gossip peer says \"This is block 10, and it was validated via config from block 9\"","ts":"1477327210.000171"},{"type":"message","user":"U0XPR4NP4","text":"If another peer receives this message, but has only committed through block 7","ts":"1477327235.000172"},{"type":"message","user":"U0ZJZBJLF","text":"you mean say to itself, or to others?","ts":"1477327239.000173"},{"type":"message","user":"U0XPR4NP4","text":"To others","ts":"1477327246.000174"},{"type":"message","user":"U0ZJZBJLF","text":"wait, why should it say that?","ts":"1477327252.000175"},{"type":"message","user":"U0ZJZBJLF","text":"I claim that if this architecture of \"first-order-gossipers initiating the gossip\" is non-byzantine, then we don't have to check anything","ts":"1477327307.000176"},{"type":"message","user":"U0ZJZBJLF","text":"because they already do the filtering of improperly-signed blocks","ts":"1477327317.000177"},{"type":"message","user":"U0XPR4NP4","text":"We are not assuming they are not byzantine","ts":"1477327363.000178"},{"type":"message","user":"U0ZJZBJLF","text":"oh, ok","ts":"1477327371.000179"},{"type":"message","user":"U0XPR4NP4","text":"However, if they are byzantine, I only see the two attacks I outlined","ts":"1477327372.000180"},{"type":"message","user":"U0XPR4NP4","text":"So, back to the example:\n\nSo, let's say an originating gossip peer says \"This is block 10, and it was validated via config from block 9\"\nIf another peer receives this message, but has only committed through block 7, then I assert it should _not_ forward this block until it has committed block 9, because it cannot be certain that (a) this block is valid, or (b) that others are authorized to hear about it","edited":{"user":"U0XPR4NP4","ts":"1477327522.000000"},"ts":"1477327489.000181"},{"type":"message","user":"U0ZJZBJLF","text":"what does \"through block 7\" mean?","ts":"1477327551.000183"},{"type":"message","user":"U0ZJZBJLF","text":"until 7?","ts":"1477327558.000184"},{"type":"message","user":"U0XPR4NP4","text":"inclusive of block 7, block 0,1,2,3,4,5,6,7","ts":"1477327572.000185"},{"type":"message","user":"U0ZJZBJLF","text":"ok","ts":"1477327576.000186"},{"type":"message","user":"U0ZJZBJLF","text":"no I don't agree","ts":"1477327635.000187"},{"type":"message","user":"U0ZJZBJLF","text":"I don't agree with you on that","ts":"1477327640.000188"},{"type":"message","user":"U0XPR4NP4","text":"Why?","ts":"1477327644.000189"},{"type":"message","user":"U0ZJZBJLF","text":"like I said- it is best to assume optimistically that this block is valid, and gossip it anyway","ts":"1477327673.000190"},{"type":"message","user":"U0ZJZBJLF","text":"it will not get past the gossip layer","ts":"1477327681.000191"},{"type":"message","user":"U0ZJZBJLF","text":"to the ledger","ts":"1477327685.000192"},{"type":"message","user":"U0XPR4NP4","text":"You told me Friday that in this scenario, block 10 would be discarded","ts":"1477327694.000193"},{"type":"message","user":"U0ZJZBJLF","text":"no... that's the opposite","ts":"1477327703.000194"},{"type":"message","user":"U0XPR4NP4","text":"Which seems more pessimistic than retaining until commit","ts":"1477327704.000195"},{"type":"message","user":"U0ZJZBJLF","text":"it'll be discarded if the block is considered *invalid*","ts":"1477327713.000196"},{"type":"message","user":"U0XPR4NP4","text":"And how is that decided?","ts":"1477327718.000197"},{"type":"message","user":"U0ZJZBJLF","text":"of course, by the last validating policy we have","ts":"1477327732.000198"},{"type":"message","user":"U0XPR4NP4","text":"But I just said, block 10 was validated based on the policy from block 9","ts":"1477327747.000199"},{"type":"message","user":"U0XPR4NP4","text":"So, there's no reason to believe it will be valid based on the previous policy","ts":"1477327762.000200"},{"type":"message","user":"U0ZJZBJLF","text":"I don't get you","ts":"1477327823.000201"},{"type":"message","user":"U0XPR4NP4","text":"At block 9, the chain configuration changed.  This may have included (a) what signatures are required to validate a block (b) which peer orgs are allowed to receive the block","ts":"1477327883.000202"},{"type":"message","user":"U0ZJZBJLF","text":"ok","ts":"1477327893.000203"},{"type":"message","user":"U0XPR4NP4","text":"Because of (a) block 10's signatures may not validate against the old policy","ts":"1477327907.000204"},{"type":"message","user":"U0ZJZBJLF","text":"wait, I thought you're *not* talking about channels now","ts":"1477327907.000205"},{"type":"message","user":"U0XPR4NP4","text":"I would assert that you have the same problem with a single chain.  Presumably you can kick a peer org entirely out of the network.","ts":"1477327945.000206"},{"type":"message","user":"U0ZJZBJLF","text":"I don't see what's the problem, besides gossiping garbage","ts":"1477328052.000207"},{"type":"message","user":"U0ZJZBJLF","text":"you realize that gossiping garbage can *only* happen *during* an orderer membership change, right?","edited":{"user":"U0ZJZBJLF","ts":"1477328095.000000"},"ts":"1477328082.000208"},{"type":"message","user":"U0XPR4NP4","text":"If the consortium decides to kick a member out, then none of the old member's peers should receive blocks after the block which contains that configuration change.","ts":"1477328108.000210"},{"type":"message","user":"U0XPR4NP4","text":"If you optimistically gossip, then information may leak to the exiled org's peers","ts":"1477328139.000211"},{"type":"message","user":"U0ZJZBJLF","text":"ohhh... wait, you mean there are ACLs for a \"single channel\" too?","ts":"1477328140.000212"},{"type":"message","user":"U0ZJZBJLF","text":"I didn't know that","ts":"1477328144.000213"},{"type":"message","user":"U0XPR4NP4","text":"Of course","ts":"1477328145.000214"},{"type":"message","user":"U0ZJZBJLF","text":"I learn new stuff every day, this is awesome","ts":"1477328159.000215"},{"type":"message","user":"U0XPR4NP4","text":"How else do you decide who is allowed to transact on the 'single channel'?","ts":"1477328183.000216"},{"type":"message","user":"U0ZJZBJLF","text":"I assumed it's simple","ts":"1477328192.000217"},{"type":"message","user":"U0ZJZBJLF","text":"you are denied at the membership service level","ts":"1477328201.000218"},{"type":"message","user":"U0XPR4NP4","text":"There is no longer a centralized membership services","ts":"1477328223.000219"},{"type":"message","user":"U0ZJZBJLF","text":"well, when we designed gossip, there *was* :slightly_smiling_face:","ts":"1477328236.000220"},{"type":"message","user":"U0ZJZBJLF","text":"you're right of course","ts":"1477328259.000221"},{"type":"message","user":"U0ZJZBJLF","text":"and thanks for taking the time explaining all this, otherwise our part could've simply thrown into the trash","ts":"1477328284.000222"},{"type":"message","user":"U0XPR4NP4","text":"Always happy to help, hopefully I am also on the right page... there are the design docs out there, it is on my list today to go and add some more details about the chain config in particular.","ts":"1477328339.000223"},{"type":"message","user":"U0ZJZBJLF","text":"so, basically even a \"single channel network\" works in the same mechanism as a multi-channel network, right?","ts":"1477328343.000224"},{"type":"message","user":"U0XPR4NP4","text":"Exactly","ts":"1477328354.000225"},{"type":"message","user":"U0ZJZBJLF","text":"cool","ts":"1477328357.000226"},{"type":"message","user":"U0ZJZBJLF","text":"So... yeah you're right here. I can't gossip until I committed all blocks prior","ts":"1477328376.000227"},{"type":"message","user":"U0ZJZBJLF","text":"which from one hand, seriously effects latency, and you must understand why","ts":"1477328393.000228"},{"type":"message","user":"U0ZJZBJLF","text":"hmmm you weren't at the demo I showed to Gari and Sharon and Binh","ts":"1477328405.000229"},{"type":"message","user":"U0XPR4NP4","text":"I wouldn't say all blocks prior, you can't gossip until you've committed the prior configuration block","ts":"1477328408.000230"},{"type":"message","user":"U0ZJZBJLF","text":"basically I had a gossip network of size 30, ok?","ts":"1477328417.000231"},{"type":"message","user":"U0XPR4NP4","text":"Was this with the dots in a browser? I think I saw this","ts":"1477328433.000232"},{"type":"message","user":"U0ZJZBJLF","text":"yep!","ts":"1477328436.000233"},{"type":"message","user":"U0XPR4NP4","text":"I was not there live, but saw the recording","ts":"1477328451.000234"},{"type":"message","user":"U0ZJZBJLF","text":"so, that video you seen on youtube- I cheated there, I used a very large dissemination factor, that made everything look continues. but it shouldn't act like that","edited":{"user":"U0ZJZBJLF","ts":"1477328628.000000"},"ts":"1477328458.000235"},{"type":"message","user":"U0ZJZBJLF","text":"I showed to them live a cooler demonstration","ts":"1477328471.000236"},{"type":"message","user":"U0ZJZBJLF","text":"in which you only gossip to 3 peers","ts":"1477328476.000237"},{"type":"message","user":"U0ZJZBJLF","text":"and once in 5 sec, you pull information","ts":"1477328485.000238"},{"type":"message","user":"U0ZJZBJLF","text":"so there were many peers that got blocks like: 1111111110000001111111111","ts":"1477328497.000239"},{"type":"message","user":"U0ZJZBJLF","text":"and then these \"holes\" were completed","ts":"1477328502.000240"},{"type":"message","user":"U0ZJZBJLF","text":"so this 2nd wave of \"1111111\" needed to wait a few seconds until it was gossiped forward, BUT!!!","ts":"1477328527.000241"},{"type":"message","user":"U0ZJZBJLF","text":"I think that if we have multiple sources, AKA \"first-level-gossipers\"","ts":"1477328542.000242"},{"type":"message","user":"U0ZJZBJLF","text":"it's negligible","ts":"1477328546.000243"},{"type":"message","user":"U0XPR4NP4","text":"Right, okay.  So, I think this is still possible.  Let me elaborate, let CC be a configuration block, and BB be a normal block:\n\n```\n00 01 02 03 04 05 06 07 08 09 10 11 12 13 14\nCC BB BB BB BB BB BB BB BB CC BB BB BB BB BB\n```\n\nNow, when gossiping about this chain, assuming you were bootstrapped with 0 and clever, I posit, that you _could_ actually follow:\n\n```\nRX TX\n04 04\n08 08\n11 --\n07 07\n09 09 11\n14 14\n....\n```","edited":{"user":"U0XPR4NP4","ts":"1477328843.000000"},"ts":"1477328774.000245"},{"type":"message","user":"U0ZJZBJLF","text":"Rx?Tx?","ts":"1477328885.000249"},{"type":"message","user":"U0XPR4NP4","text":"Receive, Transmit","ts":"1477328892.000250"},{"type":"message","user":"U0ZJZBJLF","text":"oh","ts":"1477328896.000251"},{"type":"message","user":"U0ZJZBJLF","text":"can you explain?","ts":"1477328951.000252"},{"type":"message","user":"U0ZJZBJLF","text":"I mean- where is the \"time\" in this?","ts":"1477328969.000253"},{"type":"message","user":"U0XPR4NP4","text":"Time is vertical, lower lines occur later","edited":{"user":"U0XPR4NP4","ts":"1477328993.000000"},"ts":"1477328989.000254"},{"type":"message","user":"U0XPR4NP4","text":"So, basically, bootstrapped with block 0, you can do first pass validation, and have knowledge of who to share with, through block 08","ts":"1477329014.000256"},{"type":"message","user":"U0XPR4NP4","text":"So, you receive block 04, block 08, and you can instantly gossip about them","ts":"1477329028.000257"},{"type":"message","user":"U0ZJZBJLF","text":"that's what I thought, how do you know it's safe to send block 8?","ts":"1477329041.000258"},{"type":"message","user":"U0XPR4NP4","text":"When you received blocks 04 and 08, you were told that they were validated by the config at block 00","ts":"1477329060.000259"},{"type":"message","user":"U0XPR4NP4","text":"Then you receive block 11, and with it, metadata that there was a config change at block 09, so you know it's okay that you can't validate it now, so you just hold onto it, and don't forward it","ts":"1477329083.000260"},{"type":"message","user":"U0ZJZBJLF","text":"but I thought you said that you shouldn't believe them, because if they're byzantine?","ts":"1477329085.000261"},{"type":"message","user":"U0XPR4NP4","text":"Let's address the byzantine at the end","ts":"1477329113.000262"},{"type":"message","user":"U0XPR4NP4","text":"For now, happy path","ts":"1477329117.000263"},{"type":"message","user":"U0ZJZBJLF","text":"so yeah I agree","ts":"1477329127.000264"},{"type":"message","user":"U0XPR4NP4","text":"Then you receive block 07, great, validated and gossipped","ts":"1477329139.000265"},{"type":"message","user":"U0XPR4NP4","text":"Now, you receive block 09, which can be validated against block 00, and is a config change, so you're good to gossip about it too.  Further, you now have a speculative config for block 11, and if block 11 validates against it, you can now gossip block 11 by the rules in block 09","ts":"1477329196.000266"},{"type":"message","user":"U0ZJZBJLF","text":"wait","ts":"1477329238.000267"},{"type":"message","user":"U0ZJZBJLF","text":"now I'm lost","ts":"1477329240.000268"},{"type":"message","user":"U0ZJZBJLF","text":"how do you know for *certain* that 10 isn't a C block?","ts":"1477329252.000269"},{"type":"message","user":"U0XPR4NP4","text":"You don't, you only know what the person who sent you block 11 told you, and that is that block 09 is a config block (and 10 is not)","ts":"1477329279.000270"},{"type":"message","user":"U0XPR4NP4","text":"So, if the person who sent you block 11 is byzantine, and they lied about the config change in block 10, then you might inappropriately forward the block (to the set of members from block 09)","ts":"1477329319.000271"},{"type":"message","user":"U0ZJZBJLF","text":"yes","ts":"1477329341.000272"},{"type":"message","user":"U0XPR4NP4","text":"But, I maintain this isn't a worthwhile attack, as they could have forwarded the block themselves","ts":"1477329342.000273"},{"type":"message","user":"U0ZJZBJLF","text":"true","ts":"1477329349.000274"},{"type":"message","user":"U0ZJZBJLF","text":"I get where you're going to","ts":"1477329357.000275"},{"type":"message","user":"U0ZJZBJLF","text":"\"if there are byzantines, they can simply invoke \"gameOver()\" without having to lie\"","edited":{"user":"U0ZJZBJLF","ts":"1477329386.000000"},"ts":"1477329379.000276"},{"type":"message","user":"U0ZJZBJLF","text":"so you can trust the peers to be compliant to \"hey, I totally swear that there weren't any C blocks before X and Y\"","ts":"1477329411.000278"},{"type":"message","user":"U0XPR4NP4","text":"Right, maybe there is an attack I missed, but I can't come up with any case where the attacker accomplishes anything by lying about this.  Maybe some garbage gets gossiped, but short of doing the in order commits, I see no way to avoid this.","ts":"1477329487.000279"},{"type":"message","user":"U0ZJZBJLF","text":"so, a first-order (pun intended) peer is the only one that sets the \"last configuration block at-\" label","ts":"1477329588.000280"},{"type":"message","user":"U0ZJZBJLF","text":"and the rest forward by looking at it","ts":"1477329595.000281"},{"type":"message","user":"U0XPR4NP4","text":"Right, exactly.","ts":"1477329612.000282"},{"type":"message","user":"U0XPR4NP4","text":"A forwarding peer could corrupt this metadata, and lie about it, but, there aren't any obvious viable attacks by doing this.","edited":{"user":"U0XPR4NP4","ts":"1477329761.000000"},"ts":"1477329754.000283"},{"type":"message","user":"U0ZJZBJLF","text":"hmmm","ts":"1477329835.000285"},{"type":"message","user":"U0ZJZBJLF","text":"let me think","ts":"1477329839.000286"},{"type":"message","user":"U0ZJZBJLF","text":"well, as you said- if it lies and says a lower number than it really is- then it's data leakage, and it could've done so itself. \notherwise- it says a higher number and simply \"stalls\" the peer (because it should've disseminated, but is waiting) but that won't work as long as there are non-byzantine forwarders","edited":{"user":"U0ZJZBJLF","ts":"1477330136.000000"},"ts":"1477329917.000287"},{"type":"message","user":"U0ZJZBJLF","text":"I mean- they'll say the true number, and we can have a logic that assumes always the Min among all blocks","ts":"1477329947.000288"},{"type":"message","user":"U0XPR4NP4","text":"I'm not 100% on the logic about min, depends on how optimistic or pessimistic you want to be.  I could see it being over the set of config numbers you have for a block","ts":"1477330382.000290"},{"type":"message","user":"U0XPR4NP4","text":"(For the very optimistic case)","ts":"1477330387.000291"},{"type":"message","user":"U0ZJZBJLF","text":"min is the most optimistic isn't it?","ts":"1477330419.000292"},{"type":"message","user":"U0XPR4NP4","text":"If you have two attestations for block 10, that config came from block 6, and block 9.  If you get block 9, and it is a config change, then you can validate it now","ts":"1477330553.000293"},{"type":"message","user":"U0ZJZBJLF","text":"so can I when I get block 6","ts":"1477330622.000294"},{"type":"message","user":"U0ZJZBJLF","text":"I can for sure validate when I get 9","ts":"1477330646.000295"},{"type":"message","user":"U0ZJZBJLF","text":"but can also validate when I got block 6","ts":"1477330655.000296"},{"type":"message","user":"U0XPR4NP4","text":"Right, that's why I was thinking just retain all, and as soon as one validates, you're good","ts":"1477330673.000297"},{"type":"message","user":"U0ZJZBJLF","text":"BTW I think it'd be also cool for a peer to \"sign\" his \"assertion\"","ts":"1477330678.000298"},{"type":"message","user":"U0ZJZBJLF","text":"I mean for the first-order peer","ts":"1477330684.000299"},{"type":"message","user":"U0XPR4NP4","text":"Right, so you can prove that it's not your fault you blabbed to someone who shouldn't know","ts":"1477330696.000300"},{"type":"message","user":"U0ZJZBJLF","text":"I'm thinking about something else actually","ts":"1477330707.000301"},{"type":"message","user":"U0ZJZBJLF","text":"In the membership layer of the gossip, a peer gossips information about itself, like- his PKI-id, endpoint, etc.","ts":"1477330731.000302"},{"type":"message","user":"U0ZJZBJLF","text":"right?","ts":"1477330734.000303"},{"type":"message","user":"U0XPR4NP4","text":"(going into a meeting, back in a bit)","ts":"1477330735.000304"},{"type":"message","user":"U0ZJZBJLF","text":"so basically there is nothing that prevents a peer from lying about his remote endpoint.","ts":"1477330747.000305"},{"type":"message","user":"U0ZJZBJLF","text":"so what I am going to do to tackle this- is to discourage them to lie by doing the following:","ts":"1477330763.000306"},{"type":"message","user":"U0ZJZBJLF","text":"each peer \"hears\" these signed messages from other peers. If it catches a peer lying (by having two contradicting publications of its endpoint, for example- publishing your endpoint while someone else claims to have it, and publishing another one (your real endpoint))","edited":{"user":"U0ZJZBJLF","ts":"1477330821.000000"},"ts":"1477330805.000307"},{"type":"message","user":"U0ZJZBJLF","text":"then it black-lists it","ts":"1477330829.000309"},{"type":"message","user":"U0ZJZBJLF","text":"I already have a black-list method in the communication, that turns off communication with a peer with a certain PKI-id (public key hash)","ts":"1477330866.000310"},{"type":"message","user":"U0ZJZBJLF","text":"so peers wouldn't want to lie about their endpoint, otherwise they'll be short lived in the network and the network would punish them. \nSame logic can be applied to signing the \"last-config\" field","ts":"1477330902.000311"},{"type":"message","user":"U0ZJZBJLF","text":"<https:\/\/docs.google.com\/document\/d\/157AvKxVRqgeaCTSpN86ICa5x-XihZ67bOrNMc5xLvEU\/edit#heading=h.rrii36vrca54>\n<@U0UGH3X7X>","ts":"1477577451.000314","reactions":[{"name":"+1","users":["U0UGH3X7X"],"count":1}]},{"type":"message","user":"U0ZJZBJLF","text":"<@U0XPR4NP4> , we had a telco with Binh today and I understood from him that when a peer is added to an existing channel it is given by the SDK a block that already has the latest configuration, and the peer parses this configuration block even though its number is &gt;0 , did I understand correctly? If so- can a peer parse configuration blocks that come from the consensus in a similar fashion, without being needed to commit them into the ledger beforehand?","ts":"1477604422.000316"},{"type":"message","user":"U0XPR4NP4","text":"<@U0ZJZBJLF> My hope is that configuration transactions will always be a 'total configuration', so that they are standalone.  In this sense, that if you are given a block which you trust, then you are free to apply that configuration and execute.  However, receiving blocks out of order from the ordering service only gives you trust if you absolutely trust the orderer on the other end.  In general, they must be received sequentially to enforce the current block validation policy to make sure that the orderer has not inappropriately modified config properties which the orderer may not be entitled to change (such as peer org membership, for instance).","ts":"1477604944.000317"},{"type":"message","user":"U0ZJZBJLF","text":"so, a couple of questions. I'm trying to get the full picture (and my squad members can also read that and sync), I know you're discussing another channel in parallel so feel free to answer when you can spare the time.\n1) A configuration block contains *only* configuration transactions, right? if yes- than how many? 1? or more? just of 1 type (orderer membership, channel membership) or mixed types?\n2) Is it possible to write in each data block the last configuration sequence number of the channel membership? It's just 1 uint64, it can't hurt right? \nI'm of course thinking in the direction- if there is a byzantine set of orderers, and they fake that last conf number and maybe even the block- I can still send it, because the only thing that gets hurt here is data leakage, not corruption as long as the blocks are passed to the ledger in-order.\n3) Same question as above regarding an  orderer(s) membership configuration block this time- can it be \"opened\" without comitting all blocks before it, if we know somehow from some oracle that there were no conf blocks from our last committed orderer conf block and the conf block we just got (out of order)?","edited":{"user":"U0ZJZBJLF","ts":"1477606125.000000"},"ts":"1477605876.000318"},{"type":"message","user":"U0XPR4NP4","text":"So, clearly, my expectations are being challenged, but:\n\n1) Exactly one transaction in the block\n2) I'm not opposed to this, I actually think it could be a pretty elegant solution, but since it would modify the block structure, I am hesitant to commit\n3) Orderer membership is a subset of 'the configuration block'","ts":"1477606586.000320"},{"type":"message","user":"U0ZJZBJLF","text":"your expectations are being challenged....?","ts":"1477606701.000321"},{"type":"message","user":"U0XPR4NP4","text":"By challenged, I simply mean, there were assumption I made which I did not expect resistance on, but which others do not agree.  So, I am replying as to 'the system as I see it', with the caveat that some pieces are still up in the air.","ts":"1477606749.000322"},{"type":"message","user":"U0ZJZBJLF","text":"ok, and about what you said- \n```\n However, receiving blocks out of order from the ordering service only gives you trust if you absolutely trust the orderer on the other end\n```\nI remember from a previous discussion on slack that I mentioned that if we take into account only the validation policy derived from the last committed orderer-membership-block, we either:\n* throw a block away, which is a bummer, but we can live with it\n* believe that block, and forward it to the wrong peers (channel wise) in case it was both signed by malicious orderers and the membership of orderers increased, but that's OK too, since a malicious orderer could have leaked everything it had anyway, right? \nDo you see any problem with the strategy here? (always believing configuration blocks of channel membership, even if we didn't get prior blocks which could be configuration blocks of *any* kind)","ts":"1477607041.000323"},{"type":"message","user":"U0XPR4NP4","text":"I wouldn't say there's any strict problem with this, but, I might advocate for a third sort of 'quarantine' for a block, where instead of disseminating it or discarding it, you wait some amount of time (or until a cache overflows) before discarding it","ts":"1477607461.000324"},{"type":"message","user":"U0XPR4NP4","text":"But really, you could even make this configurable policy.  I suspect in most networks always believing will be right, because byzantine behavior is punishable","edited":{"user":"U0XPR4NP4","ts":"1477607646.000000"},"ts":"1477607610.000325"},{"type":"message","user":"U0ZJZBJLF","text":"yeah, good idea. Of course, it'll be configurable.","ts":"1477607696.000327"},{"type":"message","user":"U0ZJZBJLF","text":"thanks (for the AMA)","edited":{"user":"U0ZJZBJLF","ts":"1477607747.000000"},"ts":"1477607729.000328"},{"type":"message","user":"U0XPR4NP4","text":"No problem, always happy to chat","ts":"1477607784.000330"},{"user":"U24M29R4G","text":"<@U24M29R4G|nikileshsa> has joined the channel","type":"message","subtype":"channel_join","ts":"1477613822.000331"},{"user":"U2QLU433N","text":"<@U2QLU433N|msoumeit> has joined the channel","type":"message","subtype":"channel_join","ts":"1477939743.000332"},{"type":"message","user":"U0XPR4NP4","text":"<@U0XQ35CDD> I think the idea here is flipped a little bit.  Gossip does not want to use this 'last config change' to validate the block. It's actually entirely the opposite.  Passing the test is more of a 'well formed we'll gossip and retain this', but if the block claims to be for a config we don't know, we can't safely gossip it, because membership may have changed.","ts":"1478111355.000333"},{"type":"message","user":"U0XQ35CDD","text":"I don't follow.","ts":"1478111400.000334"},{"type":"message","user":"U0ZJZBJLF","text":"I'm going to the store nearby before it closes (to buy food), on the phone-slack in the meantime","ts":"1478111405.000335"},{"type":"message","user":"U0XPR4NP4","text":"So, the problem this is intended to address, is when say you have 3 peer orgs, and one is kicked out","ts":"1478111457.000336"},{"type":"message","user":"U0XQ35CDD","text":"It's a piece of info you cannot trust.","ts":"1478111460.000337"},{"type":"message","user":"U0XPR4NP4","text":"It would be bad, if peer org C is kicked out at block 100, to gossip them block 101","ts":"1478111481.000338"},{"type":"message","user":"U0XPR4NP4","text":"So, you're a peer, you've committed through block 90, and you get a gossiped block for block 101, which says \"My last config happened in block 100\"","ts":"1478111521.000339"},{"type":"message","user":"U0XPR4NP4","text":"Now, you don't know whether it's a lie, or the truth, however, you can say that if it's the truth, you shouldn't share it with anyone, until you find out who you're authorized to share it with.","ts":"1478111546.000340"},{"type":"message","user":"U0XPR4NP4","text":"So, if it's the truth, you don't forward the block until you commit block 100, have the new config, and know who to share it with.","ts":"1478111564.000341"},{"type":"message","user":"U0XPR4NP4","text":"If on the other hand, it's a lie, you also don't forward it, you commit block 100, which wasn't a config tx, and you realize it was a lie, so you discard it.","ts":"1478111586.000342"},{"type":"message","user":"U0ZJZBJLF","text":"I have a simple idea","ts":"1478111618.000343"},{"type":"message","user":"U0XQ35CDD","text":"I honestly don't follow.","ts":"1478111630.000344"},{"type":"message","user":"U0ZJZBJLF","text":"Can i store the certificate hashes of the orderers?","ts":"1478111649.000345"},{"type":"message","user":"U0XQ35CDD","text":"Where by \"don't follow\", I mean \"I'm not sold at all on the usefulness of this.\"","edited":{"user":"U0XQ35CDD","ts":"1478111844.000000"},"ts":"1478111657.000346"},{"type":"message","user":"U0ZJZBJLF","text":"The usefilness is latwncy","ts":"1478111674.000347"},{"type":"message","user":"U0ZJZBJLF","text":"Latency","ts":"1478111677.000348"},{"type":"message","user":"U0XQ35CDD","text":"I know you're headed to the grocery store now, so I cannot call you out for not providing more context :simple_smile:","ts":"1478111785.000349"},{"type":"message","user":"U0XQ35CDD","text":"But yeah, I'll need more context.","ts":"1478111799.000350"},{"type":"message","user":"U0XPR4NP4","text":"<@U0XQ35CDD> Would you agree that the gossip should allow gossiping out of order?","ts":"1478111872.000352"},{"type":"message","user":"U0ZJZBJLF","text":"Jyellic can explain :sweat_smile: ","ts":"1478111879.000353"},{"type":"message","user":"U0ZJZBJLF","text":"You know what i mean?","ts":"1478111892.000354"},{"type":"message","user":"U0ZJZBJLF","text":"About latenxy","ts":"1478111911.000355"},{"type":"message","user":"U0ZJZBJLF","text":"I want to disseminate a block as fast as i can","ts":"1478111923.000356"},{"type":"message","user":"U0XQ35CDD","text":"I know why you want to do that, sure.","ts":"1478111940.000357"},{"type":"message","user":"U0ZJZBJLF","text":"So if i store then locally and only send in order","ts":"1478111964.000358"},{"type":"message","user":"U0ZJZBJLF","text":"That impacts latency","ts":"1478111972.000359"},{"type":"message","user":"U0XPR4NP4","text":"If the gossip is sending blocks out of order, then, for a given block, it's not clear who the authorized recipients are.","ts":"1478111998.000360","reactions":[{"name":"+1","users":["U0ZJZBJLF"],"count":1}]},{"type":"message","user":"U0XPR4NP4","text":"(Unless all blocks prior to that one have been committed locally)","ts":"1478112016.000361"},{"type":"message","user":"U0XQ35CDD","text":"I've yet to hear how relying on a piece of info that may be junk is a sound decision.","ts":"1478112061.000362"},{"type":"message","user":"U0XPR4NP4","text":"So I'll pose this instead.  Gossiping peer A receives block 10, but has only committed through block 7.  What should he do?  If the answer is \"Wait until block 9 is committed\", then we have a latency problem.  Otherwise, what should the behavior be?","ts":"1478112182.000363"},{"type":"message","user":"U0XQ35CDD","text":"Go on with the suggestion that was brought up by <@U0ZJZBJLF>.","edited":{"user":"U0XQ35CDD","ts":"1478112266.000000"},"ts":"1478112259.000364"},{"type":"message","user":"U0ZJZBJLF","text":"Which was?","ts":"1478112282.000366"},{"type":"message","user":"U0XPR4NP4","text":"So, I guess I'm trying to lead you to the suggestion.  But I can state it outright.","ts":"1478112303.000367"},{"type":"message","user":"U0XQ35CDD","text":"You're asking me? Including the last config block # in the block header, right?","ts":"1478112312.000368"},{"type":"message","user":"U0XQ35CDD","text":"And I guess I'm trying to get you to see that this technique is not sound.","ts":"1478112337.000369"},{"type":"message","user":"U0XPR4NP4","text":"I absolutely get that it is forgable","ts":"1478112354.000370"},{"type":"message","user":"U0XPR4NP4","text":"And I maintain that this does not matter","ts":"1478112360.000371"},{"type":"message","user":"U0XPR4NP4","text":"Consider the forgery cases.  Someone can forge a block claiming that the configuration block is older than in reality.  Or, someone can forge a block claiming that the configuration block is newer than in reality.  Anything else?","ts":"1478112402.000372"},{"type":"message","user":"U0XQ35CDD","text":"First of all, that's a good first step, because earlier I saw a claim that this forging cannot happen: <https:\/\/hyperledgerproject.slack.com\/archives\/fabric-crypto\/p1478110668001837>","attachments":[{"from_url":"https:\/\/hyperledgerproject.slack.com\/archives\/fabric-crypto\/p1478110668001837","fallback":"[November 2nd, 2016 11:17 AM] yacovm: how can you make that data block be signed?","ts":"1478110668.001837","author_subname":"yacovm","channel_id":"C2GE7GXM1","channel_name":"fabric-crypto","is_msg_unfurl":true,"text":"how can you make that data block be signed?","author_name":"Yacov Manevich","author_link":"https:\/\/hyperledgerproject.slack.com\/team\/yacovm","author_icon":"https:\/\/avatars.slack-edge.com\/2016-09-30\/85916865123_74ecb5d18535acea44aa_48.png","mrkdwn_in":["text"],"id":1,"footer":"Posted in #fabric-crypto"}],"ts":"1478112461.000373"},{"type":"message","user":"U0XQ35CDD","text":"As I noted on that call two weeks ago, DoS is the only concern here.","ts":"1478112527.000375"},{"type":"message","user":"U0XQ35CDD","text":"With the caveat that all DoS fears in a permissioned network are exaggerated.","ts":"1478112553.000376"},{"type":"message","user":"U0ZJZBJLF","text":"ok I'm back","ts":"1478112570.000377"},{"type":"message","user":"U0ZJZBJLF","text":"I have an idea","ts":"1478112578.000378"},{"type":"message","user":"U0XPR4NP4","text":"Right.  I agree that forgery is theoretically possible, however, there's a limited window for it, and since it's all attributable, less likely.","ts":"1478112602.000379"},{"type":"message","user":"U0XQ35CDD","text":"But when you're talking gossip, you're talking scale, and you don't want to ship 999 blocks shipped to 100,000 peers w\/o reason.","ts":"1478112620.000380"},{"type":"message","user":"U0XPR4NP4","text":"<@U0ZJZBJLF> We walked through this before, I'd like to do the same with <@U0XQ35CDD>, on the attacks","ts":"1478112623.000381"},{"type":"message","user":"U0XPR4NP4","text":"&gt; Someone can forge a block claiming that the configuration block is older than in reality.  Or, someone can forge a block claiming that the configuration block is newer than in reality.  Anything else?","ts":"1478112636.000382"},{"type":"message","user":"U0ZJZBJLF","text":"the essence of the problem here is the following: i trust f+1 signatures, and N can grow to a level in which the number f+1 can consist of only byzantine orderers, is that correct?","edited":{"user":"U0ZJZBJLF","ts":"1478112674.000000"},"ts":"1478112666.000383"},{"type":"message","user":"U0ZJZBJLF","text":"N- total number of orderers","ts":"1478112691.000385"},{"type":"message","user":"U0XQ35CDD","text":"That is the attack that I have right now in mind, yes.","ts":"1478112701.000386"},{"type":"message","user":"U0ZJZBJLF","text":"ok so why not employ the following tactic:","ts":"1478112711.000387"},{"type":"message","user":"U0ZJZBJLF","text":"I \"remember\" the current last committed set of orderers","ts":"1478112731.000388"},{"type":"message","user":"U0ZJZBJLF","text":"meaning- let's say I committed up to block `i`- then I know that the orderer set now is: `S_i`","ts":"1478112754.000389"},{"type":"message","user":"U0ZJZBJLF","text":"ok?","ts":"1478112755.000390"},{"type":"message","user":"U0XQ35CDD","text":"Yes.","ts":"1478112763.000391"},{"type":"message","user":"U0ZJZBJLF","text":"so, now I get a block with a higher number `j`&gt;`i`i","ts":"1478112773.000392"},{"type":"message","user":"U0ZJZBJLF","text":"if there is no intersection in the orderer sets","edited":{"user":"U0ZJZBJLF","ts":"1478112785.000000"},"ts":"1478112781.000393"},{"type":"message","user":"U0ZJZBJLF","text":"I say \"hmmm... this looks suspicious!\"","ts":"1478112793.000395"},{"type":"message","user":"U0ZJZBJLF","text":"if there is an intersection","ts":"1478112796.000396"},{"type":"message","user":"U0ZJZBJLF","text":"hmm wait","ts":"1478112816.000397"},{"type":"message","user":"U0XQ35CDD","text":"Even if there is an intersection it can be suspicious.","ts":"1478112816.000398"},{"type":"message","user":"U0ZJZBJLF","text":"no","ts":"1478112818.000399"},{"type":"message","user":"U0ZJZBJLF","text":"yeah","ts":"1478112820.000400"},{"type":"message","user":"U0ZJZBJLF","text":"because the good guys might be left out","ts":"1478112825.000401"},{"type":"message","user":"U0XPR4NP4","text":"I think we are getting way ahead of ourselves.","ts":"1478112830.000402"},{"type":"message","user":"U0ZJZBJLF","text":"and the bad guys inside","ts":"1478112830.000403"},{"type":"message","user":"U0XPR4NP4","text":"The simple answer is that blocks can be forged. Period.","ts":"1478112888.000404"},{"type":"message","user":"U0XQ35CDD","text":"Bottom line is what I said on the call: this exposes you to DoS. I'm against adding this extra bit of info. You may as well gossip around based on what you have committed so far.","ts":"1478112890.000405"},{"type":"message","user":"U0XPR4NP4","text":"Trying to heuristic our way out of that is a dead end.","ts":"1478112898.000406"},{"type":"message","user":"U0ZJZBJLF","text":"wait, but - what is actually the use case here?","ts":"1478112921.000407"},{"type":"message","user":"U0ZJZBJLF","text":"a forging that causes me to send info to someone that shouldn't get","ts":"1478112931.000408"},{"type":"message","user":"U0ZJZBJLF","text":"the orderer can do that without my help","ts":"1478112938.000409"},{"type":"message","user":"U0ZJZBJLF","text":"right?","ts":"1478112972.000410"},{"type":"message","user":"U0XQ35CDD","text":"It's fooling the gossiping node into doing that.","ts":"1478112978.000411"},{"type":"message","user":"U0XQ35CDD","text":"But I thought you said you were inclined to add that bit to the block header?","attachments":[{"fallback":"[November 2nd, 2016 2:54 PM] jyellick: Trying to heuristic our way out of that is a dead end.","ts":"1478112898.000406","author_subname":"jyellick","channel_id":"C2HHHJCSU","channel_name":"fabric-gossip-dev","is_msg_unfurl":true,"text":"Trying to heuristic our way out of that is a dead end.","author_name":"Jason Yellick","author_link":"https:\/\/hyperledgerproject.slack.com\/team\/jyellick","author_icon":"https:\/\/secure.gravatar.com\/avatar\/80fccad690b283483c3b5418b8b82b5b.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2F272a%2Fimg%2Favatars%2Fava_0026-48.png","mrkdwn_in":["text"],"color":"D0D0D0","from_url":"https:\/\/hyperledgerproject.slack.com\/archives\/fabric-gossip-dev\/p1478112898000406","is_share":true,"footer":"Posted in #fabric-gossip-dev"}],"ts":"1478113006.000412"},{"type":"message","user":"U0XPR4NP4","text":"If we want to allow out of order gossip, there is DoS possibility","edited":{"user":"U0XPR4NP4","ts":"1478113018.000000"},"ts":"1478113012.000413"},{"type":"message","user":"U0ZJZBJLF","text":"because, it'll gossip garbage?","ts":"1478113025.000415"},{"type":"message","user":"U0XQ35CDD","text":"Yes.","ts":"1478113029.000416"},{"type":"message","user":"U0ZJZBJLF","text":"only for a short period of time though, right?","ts":"1478113036.000417"},{"type":"message","user":"U0ZJZBJLF","text":"because, once I get the real blocks","ts":"1478113043.000418"},{"type":"message","user":"U0XQ35CDD","text":"Guys, it's a hack.","ts":"1478113049.000419"},{"type":"message","user":"U0ZJZBJLF","text":"I can point my finger at the bad orderer, can't i?","ts":"1478113053.000420"},{"type":"message","user":"U0ZJZBJLF","text":"after all- signing a lie, proves that you signed a lie","ts":"1478113101.000421"},{"type":"message","user":"U0ZJZBJLF","text":"<@U1HFNJB50>  what do you think about this?","ts":"1478113125.000422"},{"type":"message","user":"U0XQ35CDD","text":"Even if you eventually figure out what happened (which will happen), you've already gossiped garbage.","ts":"1478113153.000423"},{"type":"message","user":"U0ZJZBJLF","text":"so?","ts":"1478113169.000424"},{"type":"message","user":"U1HFNJB50","text":"Need to read through your discussion ","ts":"1478113214.000425"},{"type":"message","user":"U0XQ35CDD","text":"So if you run the risk of gossiping garbage anyway, why not gossip based on what you've already committed?","ts":"1478113215.000426"},{"type":"message","user":"U0XPR4NP4","text":"&gt; Guys, it's a hack.\n\nI'm not sure I agree with this.  It's a happy-path optimization.  If we expected a ton of DoS garbage attacks, then I would simply say \"No out of order gossip\", but the case where there's DoS garbage is likely to be infrequent, and brief.","ts":"1478113224.000427","reactions":[{"name":"+1","users":["U0ZJZBJLF"],"count":1}]},{"type":"message","user":"U0XQ35CDD","text":"I maintain that statement actually.","ts":"1478113242.000428"},{"type":"message","user":"U0ZJZBJLF","text":"because, gossiping in-order is really really slow","ts":"1478113247.000429"},{"type":"message","user":"U0XPR4NP4","text":"I will say, there's zero requirement that it actually has to be in the block itself.  This could be metadata added by the gossip network","ts":"1478113248.000430"},{"type":"message","user":"U0ZJZBJLF","text":"the propagation of blocks is not in-order","ts":"1478113275.000431"},{"type":"message","user":"U0XQ35CDD","text":"<@U0ZJZBJLF> I am not pointing you to the direction of gossiping in order.","ts":"1478113278.000432"},{"type":"message","user":"U0XQ35CDD","text":"I am saying: <https:\/\/hyperledgerproject.slack.com\/archives\/fabric-gossip-dev\/p1478113215000426>","attachments":[{"from_url":"https:\/\/hyperledgerproject.slack.com\/archives\/fabric-gossip-dev\/p1478113215000426","fallback":"[November 2nd, 2016 12:00 PM] kostas: So if you run the risk of gossiping garbage anyway, why not gossip based on what you've already committed?","ts":"1478113215.000426","author_subname":"kostas","channel_id":"C2HHHJCSU","channel_name":"fabric-gossip-dev","is_msg_unfurl":true,"text":"So if you run the risk of gossiping garbage anyway, why not gossip based on what you've already committed?","author_name":"Kostas Christidis","author_link":"https:\/\/hyperledgerproject.slack.com\/team\/kostas","author_icon":"https:\/\/avatars.slack-edge.com\/2016-04-05\/31983107923_80db5353e9278df980c7_48.png","mrkdwn_in":["text"],"id":1,"footer":"Posted in #fabric-gossip-dev"}],"ts":"1478113285.000433"},{"type":"message","user":"U0XPR4NP4","text":"You commit in order","ts":"1478113298.000435"},{"type":"message","user":"U0ZJZBJLF","text":"that is called- gossiping in-order","ts":"1478113300.000436"},{"type":"message","user":"U0XQ35CDD","text":"No.","ts":"1478113317.000437"},{"type":"message","user":"U0XQ35CDD","text":"You decide whether you'll gossip this out of order block, based on the last config that you yourself have validated\/committed.","ts":"1478113343.000438"},{"type":"message","user":"U0XQ35CDD","text":"Do you see the difference?","ts":"1478113355.000439"},{"type":"message","user":"U0XPR4NP4","text":"Then you're still vulnerable to DoS","ts":"1478113355.000440"},{"type":"message","user":"U0XQ35CDD","text":"Exactly!","ts":"1478113360.000441"},{"type":"message","user":"U0XQ35CDD","text":"But you're not adding junk to the block.","ts":"1478113368.000442"},{"type":"message","user":"U0XQ35CDD","text":"That's exactly my point.","ts":"1478113372.000443"},{"type":"message","user":"U0XPR4NP4","text":"So you're slow and vulnerable to DoS","ts":"1478113380.000444"},{"type":"message","user":"U0XPR4NP4","text":"Vs. just being vulnerable to DoS","ts":"1478113385.000445"},{"type":"message","user":"U0ZJZBJLF","text":"yes I see","ts":"1478113403.000446"},{"type":"message","user":"U0XQ35CDD","text":"Why are you slow? You already have a config that's about as useful for future propagation as the one that you would reference in the new format.","ts":"1478113425.000447"},{"type":"message","user":"U0ZJZBJLF","text":"but wait, why isn't that also prone to an attack in this manner?","ts":"1478113436.000448"},{"type":"message","user":"U0XPR4NP4","text":"Oh","ts":"1478113438.000449"},{"type":"message","user":"U0XPR4NP4","text":"Yeah, you can't do that","ts":"1478113441.000450"},{"type":"message","user":"U0ZJZBJLF","text":"what if there was a config change in the meantime?","ts":"1478113443.000451"},{"type":"message","user":"U0XPR4NP4","text":"You will gossip blocks to those who shouldn't know about it","ts":"1478113449.000452"},{"type":"message","user":"U0XQ35CDD","text":"Sigh, we're doing circles :simple_smile:","ts":"1478113453.000453"},{"type":"message","user":"U0XPR4NP4","text":"So you're wrong and slow and vulnerable to DoS","ts":"1478113455.000454"},{"type":"message","user":"U0XPR4NP4","text":"So, let's assume the last config reference is not in the block.  Because there's really no reason it needs to be","ts":"1478113498.000455"},{"type":"message","user":"U0XQ35CDD","text":"&gt; So, let's assume the last config reference is not in the block.  Because there's really no reason it needs to be","ts":"1478113508.000456"},{"type":"message","user":"U0XQ35CDD","text":"Stop right there.","ts":"1478113510.000457"},{"type":"message","user":"U0XPR4NP4","text":"Instead, the gossip layer attaches a \"and this was validated by this config block\"","ts":"1478113512.000458"},{"type":"message","user":"U0XQ35CDD","text":"Everything you say after that statement is fine with me.","ts":"1478113523.000459"},{"type":"message","user":"U0ZJZBJLF","text":"wait, a question before that- how many orderers sign each block in practice?","ts":"1478113527.000460"},{"type":"message","user":"U0ZJZBJLF","text":"it's 2f+1 right?","ts":"1478113533.000461"},{"type":"message","user":"U0ZJZBJLF","text":"not f+1","ts":"1478113535.000462"},{"type":"message","user":"U0XPR4NP4","text":"Depends on the consensus scheme","ts":"1478113538.000463"},{"type":"message","user":"U0XQ35CDD","text":"As long as you realize that adding that last config reference in the block is useless, my job is done.","ts":"1478113542.000464"},{"type":"message","user":"U0ZJZBJLF","text":"because I need f+1 *identical*","ts":"1478113542.000465"},{"type":"message","user":"U0XPR4NP4","text":"For Kafka, I'd expect 1","ts":"1478113542.000466"},{"type":"message","user":"U0ZJZBJLF","text":"so why not do that optimization with kafka then?","ts":"1478113561.000467"},{"type":"message","user":"U0XQ35CDD","text":"(For context to <@U1HFNJB50>, etc., this is what causes this conversation: <https:\/\/hyperledgerproject.slack.com\/archives\/fabric-crypto\/p1478108757001743>)","attachments":[{"from_url":"https:\/\/hyperledgerproject.slack.com\/archives\/fabric-crypto\/p1478108757001743","fallback":"[November 2nd, 2016 10:45 AM] jyellick: While I have everyone here, something <@U0ZJZBJLF> requested, which I'm somewhat inclined to add, is to include the index of the last configuration transaction for a chain in the block header.  Because, given a block header, and a set of signatures, you need a third piece of information \"Which signatures are required\", which is embedded in the configuration transaction.  What does everyone think?","ts":"1478108757.001743","author_subname":"jyellick","channel_id":"C2GE7GXM1","channel_name":"fabric-crypto","is_msg_unfurl":true,"text":"While I have everyone here, something <@U0ZJZBJLF> requested, which I'm somewhat inclined to add, is to include the index of the last configuration transaction for a chain in the block header.  Because, given a block header, and a set of signatures, you need a third piece of information \"Which signatures are required\", which is embedded in the configuration transaction.  What does everyone think?","author_name":"Jason Yellick","author_link":"https:\/\/hyperledgerproject.slack.com\/team\/jyellick","author_icon":"https:\/\/secure.gravatar.com\/avatar\/80fccad690b283483c3b5418b8b82b5b.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2F272a%2Fimg%2Favatars%2Fava_0026-48.png","mrkdwn_in":["text"],"id":1,"footer":"Posted in #fabric-crypto"}],"ts":"1478113583.000468"},{"type":"message","user":"U0XPR4NP4","text":"<@U0XQ35CDD> I'm not saying it's useless... it's just not necessary.","edited":{"user":"U0XPR4NP4","ts":"1478113627.000000"},"ts":"1478113615.000470"},{"type":"message","user":"U0XPR4NP4","text":"It seemed like _maybe_ 8 bytes extra in the header was worthwhile to make people's lives easier.","ts":"1478113650.000472"},{"type":"message","user":"U0ZJZBJLF","text":"and faster","ts":"1478113672.000473"},{"type":"message","user":"U0XPR4NP4","text":"So, for instance, when the orderer starts up, it doesn't have to scan the blockchain looking for the last config tx, it just looks at the most recent block to get the index of the last config tx","ts":"1478113673.000474"},{"type":"message","user":"U0ZJZBJLF","text":"much faster","ts":"1478113675.000475"},{"type":"message","user":"U0XPR4NP4","text":"<@U0ZJZBJLF> You can add this as metadata yourself","ts":"1478113682.000476"},{"type":"message","user":"U0XPR4NP4","text":"There's no need for it to actually be in the block structure","ts":"1478113688.000477"},{"type":"message","user":"U0ZJZBJLF","text":"no I can't","ts":"1478113690.000478"},{"type":"message","user":"U0ZJZBJLF","text":"I can't sign it","ts":"1478113692.000479"},{"type":"message","user":"U0XPR4NP4","text":"Who cares? It's forgable","ts":"1478113699.000480"},{"type":"message","user":"U0ZJZBJLF","text":"hmmm","ts":"1478113707.000481"},{"type":"message","user":"U0XQ35CDD","text":"^^ EXACTLY","ts":"1478113718.000482"},{"type":"message","user":"U0ZJZBJLF","text":"but, it may really lead to a DDOS now","ts":"1478113722.000483"},{"type":"message","user":"U0ZJZBJLF","text":"because there are lots of peers","ts":"1478113728.000484"},{"type":"message","user":"U0XQ35CDD","text":"It could before!","ts":"1478113730.000485"},{"type":"message","user":"U0XPR4NP4","text":"You can require that the peer who adds it signs it","ts":"1478113731.000486"},{"type":"message","user":"U0ZJZBJLF","text":"and only so much orderers","ts":"1478113732.000487"},{"type":"message","user":"U0XPR4NP4","text":"That gives you attribution, and I really don't think the DoS is any wider","ts":"1478113748.000488"},{"type":"message","user":"U0ZJZBJLF","text":"I don't like this, it's not that I'm lazy or anything, I just think that black-listing an orderer is something an attack would really *not* want to happen, but it can spare peers if he would need","edited":{"user":"U0ZJZBJLF","ts":"1478113789.000000"},"ts":"1478113773.000489"},{"type":"message","user":"U0XQ35CDD","text":"The orderer already had some of its privileges removed, so it's going rogue.","ts":"1478113831.000491"},{"type":"message","user":"U0XPR4NP4","text":"I'm a peer, I create block 110, claiming that the config in block 109 switched out all the orderers to some public keys I control, I then forge the block with real sigs and broadcast","ts":"1478113833.000492"},{"type":"message","user":"U0XPR4NP4","text":"This is a DoS vector, that you can't detect, even requiring the last config in the signed block header","ts":"1478113851.000493"},{"type":"message","user":"U0ZJZBJLF","text":"I can detect at the end","ts":"1478113866.000494"},{"type":"message","user":"U0ZJZBJLF","text":"when I get the real block 109","ts":"1478113873.000495"},{"type":"message","user":"U0XPR4NP4","text":"Sure, I don't think anyone is insinuating that this could cause you to commit a bad block","ts":"1478113885.000496"},{"type":"message","user":"U0XPR4NP4","text":"Simply that having the block number in the header gives you no real additional DoS prevention","ts":"1478113901.000497"},{"type":"message","user":"U0ZJZBJLF","text":"no, i mean: the idea of preventing a DDOS should be that it will be really expensive for the attacker to perform a DDOS","ts":"1478113917.000498"},{"type":"message","user":"U0ZJZBJLF","text":"so if the attacker uses peers, and say- we have 1000 peers","ts":"1478113926.000499"},{"type":"message","user":"U0ZJZBJLF","text":"it's really cheap","ts":"1478113930.000500"},{"type":"message","user":"U0ZJZBJLF","text":"but if the attacker controls only 1 orderer, out of 3 and the peers detect that- they will black list that orderer","ts":"1478113951.000501"},{"type":"message","user":"U0XQ35CDD","text":"Right, in that sense it's less easy to pull off.","ts":"1478113953.000502"},{"type":"message","user":"U0ZJZBJLF","text":"and it's game over","ts":"1478113958.000503"},{"type":"message","user":"U0XPR4NP4","text":"But: \n&gt; I'm a peer, I create block 110, claiming that the config in block 109 switched out all the orderers to some public keys I control, I then forge the block with real sigs and broadcast","ts":"1478113981.000504"},{"type":"message","user":"U0XPR4NP4","text":"If you control 1000 peers, you can have them all making up blocks and sending them","ts":"1478113991.000505"},{"type":"message","user":"U0XPR4NP4","text":"DoS-ing the network","ts":"1478113993.000506"},{"type":"message","user":"U0XPR4NP4","text":"I don't see how having the block number in the header mitigates any of it","ts":"1478114007.000507"},{"type":"message","user":"U0ZJZBJLF","text":"nope","ts":"1478114008.000508"},{"type":"message","user":"U0ZJZBJLF","text":"if a peer will make up a block and send to another peer","ts":"1478114033.000509"},{"type":"message","user":"U0ZJZBJLF","text":"the peer will take that block, validate it, and see it's fake, right?","ts":"1478114042.000510"},{"type":"message","user":"U0XPR4NP4","text":"It can't validate it, because it doesn't have the config yet","ts":"1478114052.000511"},{"type":"message","user":"U0ZJZBJLF","text":"I'm talking now about the use case in which orderers sign the blocks","ts":"1478114069.000512"},{"type":"message","user":"U0XPR4NP4","text":"If you want to gossip about blocks you can't validate, (which is any that are out of order)","ts":"1478114069.000513"},{"type":"message","user":"U0XPR4NP4","text":"But without the full chain, you can't be sure who the orderers are","ts":"1478114092.000514"},{"type":"message","user":"U0ZJZBJLF","text":"oh you mean- a full membership change?","ts":"1478114104.000515"},{"type":"message","user":"U0XPR4NP4","text":"Doesn't really matter if it's a full membership change or not","ts":"1478114114.000516"},{"type":"message","user":"U0ZJZBJLF","text":"no, wait- that also won't work as an attack","ts":"1478114116.000517"},{"type":"message","user":"U0ZJZBJLF","text":"I can't verify the signature of a block","ts":"1478114127.000518"},{"type":"message","user":"U0XPR4NP4","text":"If I send you a block, and tell you the config changed, then there's no way to validate that block","ts":"1478114131.000519"},{"type":"message","user":"U0XPR4NP4","text":"(Until you get up through where I claim the config changed)","ts":"1478114144.000520"},{"type":"message","user":"U0ZJZBJLF","text":"hmmm is it possible to maybe switch to a hangout?","ts":"1478114155.000521"},{"type":"message","user":"U0ZJZBJLF","text":"and we will post the conclusions here at the end?","ts":"1478114163.000522"},{"type":"message","user":"U0XQ35CDD","text":"Sure.","ts":"1478114171.000523"},{"type":"message","user":"U0XPR4NP4","text":"I prefer text, personally","ts":"1478114171.000524"},{"type":"message","user":"U0ZJZBJLF","text":"ok","ts":"1478114173.000525"},{"type":"message","user":"U0XPR4NP4","text":"But I can do hangout if you guys would rather","ts":"1478114179.000526"},{"type":"message","user":"U0ZJZBJLF","text":"no problem, text it is","ts":"1478114179.000527"},{"type":"message","user":"U0ZJZBJLF","text":"so, I think that a full orderer change is not an attack that can work","ts":"1478114209.000528"},{"type":"message","user":"U0ZJZBJLF","text":"at all","ts":"1478114211.000529"},{"type":"message","user":"U0XQ35CDD","text":"We're honestly doing circles, Hangouts will hopefully put an end to the confusion.","ts":"1478114217.000530"},{"type":"message","user":"U0XPR4NP4","text":"~That's fine, I nominate <@U0XQ35CDD> to start the hangout~ I will I guess","edited":{"user":"U0XPR4NP4","ts":"1478114403.000000"},"ts":"1478114230.000531"},{"type":"message","user":"U0ZJZBJLF","text":"wait for me, I'm booting my work laptop, this one doesn't have a mic","ts":"1478114279.000532"},{"type":"message","user":"U0ZJZBJLF","text":"<@U0YP7KFGQ>  I see you're also on, you can join too and <@U1HFNJB50> I'm just tagging you for fun","edited":{"user":"U0ZJZBJLF","ts":"1478114382.000000"},"ts":"1478114329.000533"},{"type":"message","user":"U0ZJZBJLF","text":"yeah","ts":"1478114410.000537"},{"text":"<@U0XPR4NP4|jyellick> has started a Google+ Hangout for this channel. <https:\/\/hangouts.google.com\/hangouts\/_\/tozjor3qlnfd5f3l2vtznlh2aae|Join Hangout>.","username":"hangouts","bot_id":"B0UKUAJ0Y","type":"message","subtype":"bot_message","ts":"1478114417.000538"},{"type":"message","user":"U0ZJZBJLF","text":"So TLDR of hangout","ts":"1478119371.000539"},{"type":"message","user":"U0ZJZBJLF","text":"<@U0XPR4NP4>  and <@U0XQ35CDD>  will *strongly consider* each orderer to sign the sequence number of the last configuration block in the metadata of the block","ts":"1478119443.000540"},{"type":"message","user":"U0ZJZBJLF","text":"am I right? :thinking_face:","ts":"1478119469.000541"},{"type":"message","user":"U0XPR4NP4","text":"That's correct","ts":"1478119544.000542"},{"type":"message","user":"U0XQ35CDD","text":"That's true. ","edited":{"user":"U0XQ35CDD","ts":"1478119943.000000"},"ts":"1478119546.000543"},{"type":"message","user":"U0ZJZBJLF","text":"cool","ts":"1478119552.000544"},{"type":"message","user":"U0W7D64LC","text":"bunch of new videos posted on <#C28M6TC90|playbacks> and our youtube channel at <https:\/\/www.youtube.com\/channel\/UCCFdgCWH_1vCndMPVqQlwZw> Check them out and subscribe, including new gossip video showing starting new peers and them catching up","attachments":[{"service_name":"YouTube","title":"Hyperledger Fabric","title_link":"https:\/\/www.youtube.com\/channel\/UCCFdgCWH_1vCndMPVqQlwZw","text":"Hyperledger fabric","fallback":"YouTube: Hyperledger Fabric","thumb_url":"https:\/\/yt3.ggpht.com\/-p3I4WZFQpKc\/AAAAAAAAAAI\/AAAAAAAAAAA\/nfXbn9j5Dao\/s900-c-k-no-mo-rj-c0xffffff\/photo.jpg","from_url":"https:\/\/www.youtube.com\/channel\/UCCFdgCWH_1vCndMPVqQlwZw","thumb_width":900,"thumb_height":900,"service_icon":"https:\/\/s.ytimg.com\/yts\/img\/favicon-vflz7uhzw.ico","id":1}],"ts":"1478540361.000546"},{"user":"U1D89DP47","text":"<@U1D89DP47|subzer0> has joined the channel","type":"message","subtype":"channel_join","ts":"1478981827.000548"},{"type":"message","user":"U184J2R7S","text":"i have put some notes in fabric-peer-dev based on the structuring of the blockchain genesis,etc,.. and channels","ts":"1479237230.000549"},{"type":"message","user":"U0ZJZBJLF","text":"thanks <@U184J2R7S>  will review","ts":"1479237654.000550"},{"type":"message","user":"U0YM41HA5","text":"A slightly updated version of the gossip design document is available: <https:\/\/docs.google.com\/document\/d\/157AvKxVRqgeaCTSpN86ICa5x-XihZ67bOrNMc5xLvEU\/edit#heading=h.rrii36vrca54>","edited":{"user":"U0YM41HA5","ts":"1479311509.000000"},"ts":"1479308910.000551"},{"type":"message","user":"U0ZJZBJLF","text":"why are you sharing it via a meeting? <@U0YM41HA5>","edited":{"user":"U0ZJZBJLF","ts":"1479309047.000000"},"ts":"1479308961.000552","reactions":[{"name":"joy","users":["U1HFNJB50"],"count":1}]},{"user":"U2NDE1ZCK","text":"<@U2NDE1ZCK|jdockter> has joined the channel","type":"message","subtype":"channel_join","ts":"1479482436.000555"},{"user":"U319G36P4","text":"<@U319G36P4|chris.zhenghf> has joined the channel","type":"message","subtype":"channel_join","ts":"1479707335.000556"},{"user":"U37Q1F5FT","text":"<@U37Q1F5FT|firas.qutishat> has joined the channel","type":"message","subtype":"channel_join","ts":"1480454095.000557"},{"user":"U38H8MS11","text":"<@U38H8MS11|lovesh> has joined the channel","type":"message","subtype":"channel_join","ts":"1480488390.000558"},{"user":"U12AHQ3NK","text":"<@U12AHQ3NK|nits7sid> has joined the channel","type":"message","subtype":"channel_join","ts":"1480607732.000559"},{"user":"U0Y14MWA2","text":"<@U0Y14MWA2|vukolic> has joined the channel","type":"message","subtype":"channel_join","ts":"1481103028.000002"},{"type":"message","user":"U0Y14MWA2","text":"folks I was browsing <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/2969\/>","ts":"1481103051.000003"},{"type":"message","user":"U0Y14MWA2","text":"this does not seem to be Byzantine fault tolerant leader election, right?","ts":"1481103069.000004"},{"type":"message","user":"U1HFNJB50","text":"yes","ts":"1481103332.000005"},{"type":"message","user":"U1HFNJB50","text":"<@U0Y14MWA2> this is primarily used to decide which peer will connect to ordering service with delivery client to pull blocks for dissemination","ts":"1481103422.000006"},{"type":"message","user":"U0Y14MWA2","text":"so this will be the only peer to connect to ordering service?","edited":{"user":"U0Y14MWA2","ts":"1481103478.000000"},"ts":"1481103469.000007"},{"type":"message","user":"U1HFNJB50","text":"on behalf of organization","ts":"1481103495.000009"},{"type":"message","user":"U0Y14MWA2","text":"ah so this is within a trust domain?","ts":"1481103509.000010"},{"type":"message","user":"U1HFNJB50","text":"right","ts":"1481103515.000011"},{"type":"message","user":"U0Y14MWA2","text":"ok","ts":"1481103518.000012"},{"user":"U3C5S0SP7","text":"<@U3C5S0SP7|jinchang1> has joined the channel","type":"message","subtype":"channel_join","ts":"1481161694.000013"},{"user":"U327VGGF9","text":"<@U327VGGF9|yuwei> has joined the channel","type":"message","subtype":"channel_join","ts":"1481379681.000014"},{"type":"message","user":"U0ZJZBJLF","text":"<@U0ZR63HLK>  Post the link here","ts":"1481625514.000015"},{"user":"U0ZR63HLK","inviter":"U0ZJZBJLF","text":"<@U0ZR63HLK|adc> has joined the channel","type":"message","subtype":"channel_join","ts":"1481625519.000016"},{"type":"message","user":"U12AHQ3NK","text":"Does ordering service uses PBFT?","ts":"1481631292.000017"},{"type":"message","user":"U0ZJZBJLF","text":"You should ask in <#C0Z4NBUN6|fabric-consensus-dev>","ts":"1481631316.000018"},{"user":"U1B9E51R8","text":"<@U1B9E51R8|xixuejia> has joined the channel","type":"message","subtype":"channel_join","ts":"1481690886.000019"},{"user":"U1M9R3C8Z","text":"<@U1M9R3C8Z|rascal> has joined the channel","type":"message","subtype":"channel_join","ts":"1481701176.000020"},{"type":"message","user":"U0ZJZBJLF","text":"Would like some comments on: <https:\/\/jira.hyperledger.org\/browse\/FAB-1391>\n<@U0Y14MWA2>  \\ <@U0PB67X4K>  your comments\\acks are welcome.","edited":{"user":"U0ZJZBJLF","ts":"1481717180.000000"},"ts":"1481715794.000021"},{"type":"message","user":"U0Y14MWA2","text":"<@U0ZJZBJLF> I think the way you want the solution to work requires consensus","ts":"1481721609.000025"},{"type":"message","user":"U0Y14MWA2","text":"so I don't believe you should require a solution to work like this :slightly_smiling_face:","ts":"1481721634.000026"},{"type":"message","user":"U0Y14MWA2","text":"some reappearence of \"dead\" nodes in memory seems acceptable so far as this is not \"too often\"","ts":"1481721665.000027"},{"type":"message","user":"U0Y14MWA2","text":"BTW, what happens if a given peer is Byzantine - it may gossip about dead nodes all the time, no?","ts":"1481721693.000028"},{"type":"message","user":"U0Y14MWA2","text":"OTOH, if you cannot live w\/o strong consistency on peer membership - you should use a channel for this","ts":"1481722080.000029"},{"type":"message","user":"U0Y14MWA2","text":"(I am not sure strong consistency is mandatory here)","ts":"1481722092.000030"},{"type":"message","user":"U0ZJZBJLF","text":"why consensus?","ts":"1481722406.000031"},{"type":"message","user":"U0ZJZBJLF","text":"can you explain? <@U0Y14MWA2>","ts":"1481722411.000032"},{"type":"message","user":"U0ZJZBJLF","text":"There is no agreement here, each peer decides for itself","ts":"1481722441.000033"},{"type":"message","user":"U0Y14MWA2","text":"Because you want to have p0 and p1 agree that they kick p2 out","ts":"1481722450.000034"},{"type":"message","user":"U0ZJZBJLF","text":"no","ts":"1481722453.000035"},{"type":"message","user":"U0Y14MWA2","text":"Then i am misreading sth","ts":"1481722469.000036"},{"type":"message","user":"U0ZJZBJLF","text":"I only want both to kick p2 out, but no one cares whether the other does it or not","ts":"1481722471.000037"},{"type":"message","user":"U0Y14MWA2","text":"Well","ts":"1481722479.000038"},{"type":"message","user":"U0Y14MWA2","text":"Unless both do","ts":"1481722484.000039"},{"type":"message","user":"U0Y14MWA2","text":"One of them is going to gossip","ts":"1481722491.000040"},{"type":"message","user":"U1HFNJB50","text":"what we want, is that once p1 kicked p2, p0 won\u2019t revive it back in p2 view","ts":"1481722503.000041","reactions":[{"name":"+1","users":["U0ZJZBJLF"],"count":1}]},{"type":"message","user":"U0Y14MWA2","text":"About p2","ts":"1481722506.000042"},{"type":"message","user":"U0ZJZBJLF","text":"The thing is, I claim that if we consider that silence period *k*T*","edited":{"user":"U0ZJZBJLF","ts":"1481722544.000000"},"ts":"1481722537.000043"},{"type":"message","user":"U0Y14MWA2","text":"If you do it with timers you seem to be just moving to synchronous consensus","ts":"1481722571.000045"},{"type":"message","user":"U0Y14MWA2","text":"I might be wrong","ts":"1481722577.000046"},{"type":"message","user":"U0ZJZBJLF","text":"huh","ts":"1481722580.000047"},{"type":"message","user":"U0Y14MWA2","text":"But this is how it looks","ts":"1481722583.000048"},{"type":"message","user":"U0ZJZBJLF","text":"I don't understand :confused:","ts":"1481722585.000049"},{"type":"message","user":"U0Y14MWA2","text":"You will be reaching agreement when timers are respected","ts":"1481722609.000050"},{"type":"message","user":"U0ZJZBJLF","text":"no no","ts":"1481722618.000051"},{"type":"message","user":"U0ZJZBJLF","text":"I'm not doing any agreement","ts":"1481722622.000052"},{"type":"message","user":"U0ZJZBJLF","text":"it's more simple:","ts":"1481722628.000053"},{"type":"message","user":"U0ZJZBJLF","text":"look:","ts":"1481722630.000054"},{"type":"message","user":"U0ZJZBJLF","text":"In each peer, it has local internal timers for each dead peer, ok?","ts":"1481722642.000055"},{"type":"message","user":"U0ZJZBJLF","text":"if that peer suddenly sees an AliveMessage from that peer","ts":"1481722654.000056"},{"type":"message","user":"U0ZJZBJLF","text":"it's not longer dead","ts":"1481722658.000057"},{"type":"message","user":"U0ZJZBJLF","text":"but once that timer expires, it will delete that peer from the memory","ts":"1481722673.000058"},{"type":"message","user":"U0Y14MWA2","text":"ok...","ts":"1481722686.000059"},{"type":"message","user":"U0ZJZBJLF","text":"That's my goal, I want the peers to eventually be evicted from the memory if they are dead long enough","ts":"1481722693.000060"},{"type":"message","user":"U0Y14MWA2","text":"what if there was a network partition between \"dead\" node and our node?","ts":"1481722704.000061"},{"type":"message","user":"U0ZJZBJLF","text":"but i have that problem in which you can make a peer re-incarnate from another peer if the eviction\/purge of dead peers isn't *synchronous*","ts":"1481722722.000062"},{"type":"message","user":"U0ZJZBJLF","text":"it's ok","ts":"1481722731.000063"},{"type":"message","user":"U0ZJZBJLF","text":"why would I care about the reason I can't reach that node?","ts":"1481722740.000064"},{"type":"message","user":"U0ZJZBJLF","text":"I can't reach it, and that's what's important","ts":"1481722747.000065"},{"type":"message","user":"U0Y14MWA2","text":"but you mark it as dead","ts":"1481722755.000066"},{"type":"message","user":"U0ZJZBJLF","text":"yes","ts":"1481722759.000067"},{"type":"message","user":"U0Y14MWA2","text":"and you do not want it back, right","ts":"1481722761.000068"},{"type":"message","user":"U0ZJZBJLF","text":"I might, if it comes back again","ts":"1481722776.000069"},{"type":"message","user":"U0ZJZBJLF","text":"but if it doesn't. i want to \"forget\" about it","ts":"1481722783.000070"},{"type":"message","user":"U0Y14MWA2","text":"well others may be gossiping about it","ts":"1481722788.000071"},{"type":"message","user":"U0Y14MWA2","text":"as they can talk to it","ts":"1481722794.000072"},{"type":"message","user":"U0Y14MWA2","text":"but you cannot","ts":"1481722796.000073"},{"type":"message","user":"U0ZJZBJLF","text":"oh you mean they gossip about it, to me?","ts":"1481722802.000074"},{"type":"message","user":"U0Y14MWA2","text":"so it is not dead","ts":"1481722802.000075"},{"type":"message","user":"U0ZJZBJLF","text":"then it's not dead :wink:","ts":"1481722805.000076"},{"type":"message","user":"U0Y14MWA2","text":"well","ts":"1481722808.000077"},{"type":"message","user":"U0ZJZBJLF","text":"I consider it alive then","ts":"1481722810.000078"},{"type":"message","user":"U0Y14MWA2","text":"looks like a hidden agreement somewhere","ts":"1481722822.000079"},{"type":"message","user":"U0Y14MWA2","text":"moreover,","ts":"1481722836.000080"},{"type":"message","user":"U0Y14MWA2","text":"with a single Byz gossip peer","edited":{"user":"U0Y14MWA2","ts":"1481722865.000000"},"ts":"1481722840.000081"},{"type":"message","user":"U0Y14MWA2","text":"yo unever eliminate anything from memory","ts":"1481722848.000082"},{"type":"message","user":"U0Y14MWA2","text":"such a guy can easily make everybody alive","ts":"1481722874.000084"},{"type":"message","user":"U0Y14MWA2","text":"anyway","ts":"1481722875.000085"},{"type":"message","user":"U0Y14MWA2","text":"I need to run now","ts":"1481722879.000086"},{"type":"message","user":"U0ZJZBJLF","text":"I got the byzantine part covered <@U0Y14MWA2> , I obviously thought of that :wink:\nBasically a peer cannot impersonate another peer's messages, and also- re-transmit them won't work because we track of the *logical* timestamp of the message","edited":{"user":"U0ZJZBJLF","ts":"1481722969.000000"},"ts":"1481722961.000087"},{"type":"message","user":"U0Y14MWA2","text":"very good!","ts":"1481723048.000089"},{"type":"message","user":"U0Y14MWA2","text":"but it still looks like agreement :slightly_smiling_face:","ts":"1481723068.000090"},{"type":"message","user":"U1HFNJB50","text":"yeah, looks like we going to agree what we disagree","ts":"1481723109.000091"},{"type":"message","user":"U0ZJZBJLF","text":"It's not agreement, because:\n1) The values aren't proposed by the peers, but are deduced by them\n2) No value is transmitted among peers\n3) No peer \"cares\" about other peers reaching the same decision","ts":"1481723141.000092"},{"type":"message","user":"U0Y14MWA2","text":"ok","ts":"1481723154.000093"},{"type":"message","user":"U0Y14MWA2","text":"it should not be agreement","ts":"1481723271.000094"},{"type":"message","user":"U0Y14MWA2","text":"you just asked me for an opinion","ts":"1481723278.000095"},{"type":"message","user":"U0Y14MWA2","text":"i said that whats written in jira looks like an agreement","ts":"1481723290.000096"},{"type":"message","user":"U1HFNJB50","text":"now, when I articulated what is written in JIRA, it started to smell like an agreement","ts":"1481723573.000097"},{"type":"message","user":"U1HFNJB50","text":":slightly_smiling_face:","ts":"1481723589.000098"},{"type":"message","user":"U0ZJZBJLF","text":"I still don't understand why it's an agreement. \nIf it is- can you implement consensus with it? how?","ts":"1481723601.000099"},{"type":"message","user":"U1HFNJB50","text":"you implicitly agree that p0 eventually has to be evicted from view of p1 and p2","ts":"1481723641.000100"},{"type":"message","user":"U1HFNJB50","text":"and you waiting a grace period to ensure this","ts":"1481723650.000101"},{"type":"message","user":"U1HFNJB50","text":"not sure about reduction","ts":"1481723655.000102"},{"type":"message","user":"U0ZJZBJLF","text":"The *Integrity* property of agreement doesn't hold here:     \n&gt; Every correct process decides at most one value, and if it decides some value v, then v must have been proposed by some process.\nThe values here are *not* proposed by *any* process.","ts":"1481723866.000103"},{"type":"message","user":"U0Y14MWA2","text":"It even looks like NBAC","ts":"1481724728.000104"},{"type":"message","user":"U0Y14MWA2","text":"Which is even worse as it requires P for solution","ts":"1481724748.000105"},{"type":"message","user":"U0Y14MWA2","text":"Which may explain the story about timers synchrony and skews","ts":"1481724770.000106"},{"type":"message","user":"U0ZJZBJLF","text":"I don't see how it looks like NBAC or consensus if we don't have any process writing to any other process","ts":"1481725051.000107"},{"type":"message","user":"U0Y14MWA2","text":"They vote on whether to kick p2 out or not","ts":"1481725083.000108"},{"type":"message","user":"U0Y14MWA2","text":"This is the input","ts":"1481725088.000109"},{"type":"message","user":"U0Y14MWA2","text":"And decision","ts":"1481725094.000110"},{"type":"message","user":"U0ZJZBJLF","text":"How do they vote if they don't communicate?","ts":"1481725098.000111"},{"type":"message","user":"U0ZJZBJLF","text":"No peer communicates with any peer","ts":"1481725104.000112"},{"type":"message","user":"U0Y14MWA2","text":"Hm","ts":"1481725118.000113"},{"type":"message","user":"U0Y14MWA2","text":"Then i do not understand all the i am alive stuff","ts":"1481725130.000114"},{"type":"message","user":"U0ZJZBJLF","text":"*They might* communicate but if they do, the algorithm stops.","ts":"1481725136.000115"},{"type":"message","user":"U0Y14MWA2","text":"Again","ts":"1481725147.000116"},{"type":"message","user":"U0Y14MWA2","text":"Jira problem statement looks TO ME as explained for these reasons","ts":"1481725175.000117"},{"type":"message","user":"U0Y14MWA2","text":"If jira is not the full story fair enough","ts":"1481725192.000118"},{"type":"message","user":"U0ZJZBJLF","text":"understood, thanks. I will update the item to explain how the membership AliveMessage handling works","ts":"1481725320.000119"},{"type":"message","user":"U0ZJZBJLF","text":"I of course appreciate the comments :wink:","ts":"1481725337.000120"},{"type":"message","user":"U0ZR63HLK","text":"Hi All, Elli and me have opend this Jira item <https:\/\/jira.hyperledger.org\/browse\/FAB-1394> to discuss about chain-related gossip messages. Please have your say on that. Thanks :slightly_smiling_face: <@U0ZJZBJLF> <@U1BC5A0F9> <@U0ULK2JPP> <@U0PB67X4K> <@U0KN2SSKE>","ts":"1481732312.000121"},{"user":"U1BC5A0F9","inviter":"U0ZR63HLK","text":"<@U1BC5A0F9|elli> has joined the channel","type":"message","subtype":"channel_join","ts":"1481732320.000122"},{"user":"U0KN2SSKE","inviter":"U0ZR63HLK","text":"<@U0KN2SSKE|binhn> has joined the channel","type":"message","subtype":"channel_join","ts":"1481732320.000123"},{"user":"U0PB67X4K","inviter":"U0ZR63HLK","text":"<@U0PB67X4K|garisingh> has joined the channel","type":"message","subtype":"channel_join","ts":"1481732320.000124"},{"user":"U0ULK2JPP","inviter":"U0ZR63HLK","text":"<@U0ULK2JPP|muralisr> has joined the channel","type":"message","subtype":"channel_join","ts":"1481732320.000125"},{"type":"message","user":"U0ZJZBJLF","text":"So, <@U0Y14MWA2> i was proposing something very similar to this:","ts":"1481750397.000126"},{"type":"message","subtype":"file_share","text":"<@U0ZJZBJLF|yacovm> uploaded a file: <https:\/\/hyperledgerproject.slack.com\/files\/yacovm\/F3ETY5UAE\/img_20161214_231910.jpg|Slack for Android Upload>","file":{"id":"F3ETY5UAE","created":1481750414,"timestamp":1481750414,"name":"IMG_20161214_231910.jpg","title":"Slack for Android Upload","mimetype":"image\/jpeg","filetype":"jpg","pretty_type":"JPEG","user":"U0ZJZBJLF","editable":false,"size":3645193,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https:\/\/files.slack.com\/files-pri\/T0J024XGA-F3ETY5UAE\/img_20161214_231910.jpg?t=xoxe-18002167554-139099126023-137701436192-e599afc92e","url_private_download":"https:\/\/files.slack.com\/files-pri\/T0J024XGA-F3ETY5UAE\/download\/img_20161214_231910.jpg?t=xoxe-18002167554-139099126023-137701436192-e599afc92e","thumb_64":"https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F3ETY5UAE-be6ee9dae2\/img_20161214_231910_64.jpg?t=xoxe-18002167554-139099126023-137701436192-e599afc92e","thumb_80":"https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F3ETY5UAE-be6ee9dae2\/img_20161214_231910_80.jpg?t=xoxe-18002167554-139099126023-137701436192-e599afc92e","thumb_360":"https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F3ETY5UAE-be6ee9dae2\/img_20161214_231910_360.jpg?t=xoxe-18002167554-139099126023-137701436192-e599afc92e","thumb_360_w":270,"thumb_360_h":360,"thumb_480":"https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F3ETY5UAE-be6ee9dae2\/img_20161214_231910_480.jpg?t=xoxe-18002167554-139099126023-137701436192-e599afc92e","thumb_480_w":360,"thumb_480_h":480,"thumb_160":"https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F3ETY5UAE-be6ee9dae2\/img_20161214_231910_160.jpg?t=xoxe-18002167554-139099126023-137701436192-e599afc92e","thumb_720":"https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F3ETY5UAE-be6ee9dae2\/img_20161214_231910_720.jpg?t=xoxe-18002167554-139099126023-137701436192-e599afc92e","thumb_720_w":540,"thumb_720_h":720,"thumb_960":"https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F3ETY5UAE-be6ee9dae2\/img_20161214_231910_960.jpg?t=xoxe-18002167554-139099126023-137701436192-e599afc92e","thumb_960_w":720,"thumb_960_h":960,"thumb_1024":"https:\/\/files.slack.com\/files-tmb\/T0J024XGA-F3ETY5UAE-be6ee9dae2\/img_20161214_231910_1024.jpg?t=xoxe-18002167554-139099126023-137701436192-e599afc92e","thumb_1024_w":768,"thumb_1024_h":1024,"image_exif_rotation":1,"original_w":3024,"original_h":4032,"permalink":"https:\/\/hyperledgerproject.slack.com\/files\/yacovm\/F3ETY5UAE\/img_20161214_231910.jpg","permalink_public":"https:\/\/slack-files.com\/T0J024XGA-F3ETY5UAE-0fd73fd226","channels":["C2HHHJCSU"],"groups":[],"ims":[],"comments_count":0},"user":"U0ZJZBJLF","upload":true,"display_as_bot":false,"username":"<@U0ZJZBJLF|yacovm>","bot_id":null,"ts":"1481750420.000127"},{"type":"message","user":"U0ZJZBJLF","text":"This is from:","ts":"1481750459.000128"},{"type":"message","user":"U0ZJZBJLF","text":"A Gossip-Style Failure Detectiomn Service, Robbert van Renesse, Yaron Minsky, and Mark Hayden","ts":"1481750795.000129"},{"user":"U1VG8LNP3","text":"<@U1VG8LNP3|yaoguo> has joined the channel","type":"message","subtype":"channel_join","ts":"1481868916.000130"},{"user":"U38JCNW5V","text":"<@U38JCNW5V|divyank-sk> has joined the channel","type":"message","subtype":"channel_join","ts":"1481901586.000131"},{"type":"message","user":"U2MCH9EEB","text":"is there any documentation for gossip component?","ts":"1482211195.000132"},{"type":"message","user":"U0ZJZBJLF","text":"<@U2MCH9EEB>  yeah","ts":"1482215653.000133"},{"type":"message","user":"U0ZJZBJLF","text":"You know where are the fabric design docs?","ts":"1482215665.000134"},{"type":"message","user":"U0ZJZBJLF","text":"There is a gossi google doc there too","ts":"1482215680.000135"},{"type":"message","user":"U0Y14MWA2","text":"<@U0ZJZBJLF> where is the gossip google doc?","ts":"1482235627.000136"},{"type":"message","user":"U0ZJZBJLF","text":"<https:\/\/docs.google.com\/document\/d\/157AvKxVRqgeaCTSpN86ICa5x-XihZ67bOrNMc5xLvEU\/edit>","ts":"1482235673.000137"},{"type":"message","user":"U0ZJZBJLF","text":"I can't ensure it's 100% up-to-date, if you find any problems or missing items or things that are not up to date I'd appreciate if you could tell me","ts":"1482235714.000139"},{"type":"message","user":"U0Y14MWA2","text":"1.3      Agreement on validated blocks\nOnce a peer has received a blockraw batch from the orderingconsensus service it goes through a validation process in which a valid block (vBlock) is created out of the blockraw batch. Once a valid block has been created it has to collect enough signatures from its peers that agree on the contents of the valid block, such that it can be inserted into the validated ledger and include enough information such that other nodes obtaining this block will be able to trust it.\nThis peer-to-peer information sharing will be done via the gossip based data dissemination network.","ts":"1482236206.000140"},{"type":"message","user":"U0Y14MWA2","text":"since we basically do not have validated ledger","ts":"1482236215.000141"},{"type":"message","user":"U0Y14MWA2","text":"should this be updated?","ts":"1482236220.000142"},{"type":"message","user":"U0Y14MWA2","text":"we gossip (raw) ledger blocks (ex batches)","ts":"1482236234.000143"},{"type":"message","user":"U0ZJZBJLF","text":"Yeah, well- I thought this is the end goal, isn't it?","ts":"1482236242.000144"},{"type":"message","user":"U0Y14MWA2","text":"the mechanism could gossip validated ledger blocks just like (normal) ledger blocks","ts":"1482236264.000145"},{"type":"message","user":"U0Y14MWA2","text":"I do not think one gains sth on insisting this is validated ledger block","ts":"1482236288.000146"},{"type":"message","user":"U0ZJZBJLF","text":"wait,this isn't about state transfer","ts":"1482236291.000147"},{"type":"message","user":"U0ZJZBJLF","text":"this is about block validation","ts":"1482236294.000148"},{"type":"message","user":"U0ZJZBJLF","text":"I thought the end goal is for when a peer wants to validate a block it doesn't do it itself, it collects acks from fellow peers or something?","ts":"1482236326.000149"},{"type":"message","user":"U0ZJZBJLF","text":"Right now, it is done autonomously","ts":"1482236341.000150"},{"type":"message","user":"U0Y14MWA2","text":"ok let me roll back a bit - anything related to validated ledger is post-v1","ts":"1482236357.000151"},{"type":"message","user":"U0ZJZBJLF","text":"I know","ts":"1482236363.000152"},{"type":"message","user":"U0Y14MWA2","text":"but I assume gossip will be used in v1","ts":"1482236365.000153"},{"type":"message","user":"U0ZJZBJLF","text":"yeah","ts":"1482236368.000154"},{"type":"message","user":"U0ZJZBJLF","text":"I'm not sure what the document needs to reflect though :open_mouth:","ts":"1482236375.000155"},{"type":"message","user":"U0ZJZBJLF","text":"<@U0YM41HA5>  <@U1HFNJB50>  your opinions please?","ts":"1482236386.000156"},{"type":"message","user":"U0Y14MWA2","text":"ok so we need to convey this - currently it reads that gossip gossips validated ledger info - and that reads to me like no gossip in v1 :slightly_smiling_face:","ts":"1482236399.000157"},{"type":"message","user":"U0Y14MWA2","text":"since this is not the case","ts":"1482236402.000158"},{"type":"message","user":"U0Y14MWA2","text":"let's fix it","ts":"1482236405.000159"},{"type":"message","user":"U0ZJZBJLF","text":"Yeah I agree.","ts":"1482236423.000160"},{"type":"message","user":"U0ZJZBJLF","text":"Can you create a comment to pin-point the place in the doc? (yeah I'm lazy\/busy)","ts":"1482236446.000161"},{"type":"message","user":"U0Y14MWA2","text":"yes yes","ts":"1482236452.000162"},{"type":"message","user":"U0Y14MWA2","text":"I am doing a pass","ts":"1482236455.000163"},{"type":"message","user":"U0ZJZBJLF","text":"thanks :slightly_smiling_face:","ts":"1482236457.000164"},{"type":"message","user":"U0Y14MWA2","text":"just wnated to confirm","ts":"1482236461.000165"},{"type":"message","user":"U0ZJZBJLF","text":"of course, thanks a lot for reviewing","ts":"1482236469.000166"},{"type":"message","user":"U0ZJZBJLF","text":"I'm sweeping after you","ts":"1482236493.000167"},{"type":"message","user":"U0Y14MWA2","text":"BTW, <https:\/\/gerrit.hyperledger.org\/r\/#\/c\/3411\/> tries to settle the terminology","ts":"1482236507.000168"},{"type":"message","user":"U0ZJZBJLF","text":"acronym of NCAP?","ts":"1482236528.000169"},{"type":"message","user":"U0Y14MWA2","text":"Next-Consensus-Architecture-Proposal.md","ts":"1482236541.000170"},{"type":"message","user":"U0ZJZBJLF","text":"rhymes with NBAC","ts":"1482236550.000171"},{"type":"message","user":"U0ZJZBJLF","text":"but totally different","ts":"1482236554.000172"},{"type":"message","user":"U0Y14MWA2","text":"he he","ts":"1482236554.000173"},{"type":"message","user":"U1HFNJB50","text":"<@U0ZJZBJLF> <@U0Y14MWA2> I'm not sure what validated ledger will exist even post v1.0, because it's not obvious how you will be able to handle ledger replication across peers","ts":"1482237579.000174"},{"type":"message","user":"U1HFNJB50","text":"&gt;  <@U0YM41HA5>  <@U1HFNJB50>  your opinions please?\n\nI think <@U0Y14MWA2> is right and gossip doc need to be updated","ts":"1482237641.000175"},{"type":"message","user":"U0Y14MWA2","text":"so I think the revision of Sec 1.3 will help a document a lot","ts":"1482238407.000176"},{"type":"message","user":"U0Y14MWA2","text":"it needs to clearly say what are the goals of gossip","ts":"1482238416.000177"},{"type":"message","user":"U0Y14MWA2","text":"the way I see it this is","ts":"1482238422.000178"},{"type":"message","user":"U0Y14MWA2","text":"1) alleviating the need that all peers connect directly to the ordering service to receive all ledger blocks","ts":"1482238454.000179"},{"type":"message","user":"U0Y14MWA2","text":"2) transfer of ledger (state) to newly connecting peers (w\/o involving ordering service)","ts":"1482238485.000180"},{"type":"message","user":"U0Y14MWA2","text":"also","ts":"1482238489.000181"},{"type":"message","user":"U0Y14MWA2","text":"what I expected to see is the discussion on how peers verify the integrity of gossiped blocks","edited":{"user":"U0Y14MWA2","ts":"1482239263.000000"},"ts":"1482238505.000182"},{"type":"message","user":"U0Y14MWA2","text":"discussing two possibilities: i.e., 1)  looking into (multi)sig from ordering service 2) filling the \"hole\" using hashchain","ts":"1482238555.000183"},{"type":"message","user":"U0Y14MWA2","text":"will add this comment also to google doc","ts":"1482238577.000184"},{"type":"message","user":"U0Y14MWA2","text":"(if you wish I can also write\/suggest some text along those lines)","ts":"1482238595.000185"},{"type":"message","user":"U0ZJZBJLF","text":"<@U0Y14MWA2>  I simply deleted the section","ts":"1482239299.000188"},{"type":"message","user":"U0ZJZBJLF","text":"I think it's the simplest solution","ts":"1482239305.000189"},{"type":"message","user":"U0ZJZBJLF","text":"It dealt with validation of transactions, not of signatures","ts":"1482239329.000190"},{"type":"message","user":"U0Y14MWA2","text":"ok - but the doc still misses the info on the above","ts":"1482239480.000191"},{"type":"message","user":"U0Y14MWA2","text":"1) why we have gossip","ts":"1482239485.000192"},{"type":"message","user":"U0Y14MWA2","text":"2) how peers verify what is gossipped to them (i.e., how do they verify that data coming out of the ordering service) is not modified in the meantime","ts":"1482239531.000193"},{"type":"message","user":"U0ZJZBJLF","text":"Yeah you're totally right about (2)","ts":"1482239556.000194"},{"type":"message","user":"U0Y14MWA2","text":"I have some text that I stripped out of NCAP","ts":"1482239577.000195"},{"type":"message","user":"U0Y14MWA2","text":"because it was essentially part of gossip","ts":"1482239590.000196"},{"type":"message","user":"U0ZJZBJLF","text":"oh?","ts":"1482239598.000197"},{"type":"message","user":"U0Y14MWA2","text":"so can suggest it there and you can massage it","ts":"1482239607.000198"},{"type":"message","user":"U0ZJZBJLF","text":"Sure.","ts":"1482239612.000199"},{"type":"message","user":"U0ZJZBJLF","text":"by the way, regarding the sbft ordering service:","ts":"1482239634.000200"},{"type":"message","user":"U0ZJZBJLF","text":"I recently added a metadata field to the hello message of the pull mechanism. It can be leveraged to start a context-specific pull \"round\" and it's useful for your use case","ts":"1482239694.000201"},{"type":"message","user":"U0ZJZBJLF","text":"because you can specify in the metadata things like- lower and upper bounds of blocks you'd like to receive","ts":"1482239716.000202"},{"type":"message","user":"U0Y14MWA2","text":"do you have a changeset link?","ts":"1482239755.000203"},{"type":"message","user":"U0ZJZBJLF","text":"no, it's in master","ts":"1482239789.000204"},{"type":"message","user":"U0ZJZBJLF","text":"I also made a generalized wrapper for the pull algorithm in gossip\/pull","ts":"1482239968.000205"},{"type":"message","user":"U0Y14MWA2","text":"I edited the google doc","ts":"1482240786.000206"},{"type":"message","user":"U0Y14MWA2","text":"please see first paragraphs of Section 1","ts":"1482240796.000207"},{"type":"message","user":"U0Y14MWA2","text":"and the new Section 1.3","ts":"1482240800.000208"},{"type":"message","user":"U0Y14MWA2","text":"hopefully it reflects the reality","ts":"1482240809.000209"},{"type":"message","user":"U0ZJZBJLF","text":"I commented","ts":"1482241227.000210"},{"type":"message","user":"U0ZJZBJLF","text":"Marko, I think the hashchain verification is written a bit confusing","ts":"1482241771.000211"},{"type":"message","user":"U0ZJZBJLF","text":"Why not simply define it with induction?","ts":"1482241834.000212"},{"type":"message","user":"U0Y14MWA2","text":"feel free to edit :slightly_smiling_face:","ts":"1482241880.000213"},{"type":"message","user":"U0Y14MWA2","text":"I was merely copy pasting text I already had","ts":"1482241889.000214"},{"type":"message","user":"U0ZJZBJLF","text":"oh","ts":"1482241905.000215"},{"type":"message","user":"U0Y14MWA2","text":"this was in the main arhitecture document but now is too low level","ts":"1482241937.000216"},{"type":"message","user":"U0Y14MWA2","text":"as there is a property of the consensus service that it outputs blocks in order","ts":"1482241957.000217"},{"type":"message","user":"U0Y14MWA2","text":"so discussing how to fill holes when holes are not allowed is not appropriate","ts":"1482241999.000218"},{"type":"message","user":"U0ZJZBJLF","text":"\"In this subsection, we describe how the integrity of the  ledger datastructure can be verified by peers. \"","ts":"1482242122.000219"},{"type":"message","user":"U0ZJZBJLF","text":"I don't think we do such a thing","ts":"1482242133.000220"},{"type":"message","user":"U0Y14MWA2","text":"integrity of the received ledger blocks?","ts":"1482242239.000221"},{"type":"message","user":"U1HFNJB50","text":"<@U0Y14MWA2> I do not think that gossip should be aware of ledger and specifically take care of its integrity","ts":"1482242244.000222"},{"type":"message","user":"U0Y14MWA2","text":"well","ts":"1482242253.000223"},{"type":"message","user":"U0Y14MWA2","text":"gossip needs to gossip correct information","ts":"1482242261.000224"},{"type":"message","user":"U1HFNJB50","text":"right","ts":"1482242264.000225"},{"type":"message","user":"U0Y14MWA2","text":"we just need to say shat correct means and how is it verified","ts":"1482242273.000226"},{"type":"message","user":"U1HFNJB50","text":"but information type is opaque for gossip","ts":"1482242282.000227"},{"type":"message","user":"U1HFNJB50","text":"since it's only communication middleware","ts":"1482242294.000228"},{"type":"message","user":"U0Y14MWA2","text":"so this is why I think saying about how the gossip receipient verifies the data is part of gossip","ts":"1482242297.000229"},{"type":"message","user":"U1HFNJB50","text":"we can provide a toolset for upper layers to help w\/ verification","ts":"1482242312.000230"},{"type":"message","user":"U0Y14MWA2","text":"you may say it is endpoint functionality - but this is a section which says how gossip works within hyperledger fabric","ts":"1482242327.000231"},{"type":"message","user":"U0Y14MWA2","text":"see title of Section 1","ts":"1482242331.000232"},{"type":"message","user":"U0Y14MWA2","text":"so this is why I thought to explain how it fits","ts":"1482242341.000233"},{"type":"message","user":"U0Y14MWA2","text":"before proceeding with low level details","ts":"1482242355.000234"},{"type":"message","user":"U1HFNJB50","text":"messages signed, and gossip verifies signatures","ts":"1482242368.000235"},{"type":"message","user":"U1HFNJB50","text":"but not the content and validity of the ledger","ts":"1482242378.000236"},{"type":"message","user":"U0Y14MWA2","text":"this is one option now mentioned in Sec 1.3.1","ts":"1482242389.000237"},{"type":"message","user":"U0ZJZBJLF","text":"I think that only the ledger needs to do the hash chain verification and not the gossip","ts":"1482242391.000238"},{"type":"message","user":"U0Y14MWA2","text":"but there is another in which hashchain is verified not the signatures?","ts":"1482242409.000239"},{"type":"message","user":"U0Y14MWA2","text":"or you do not like that one?","ts":"1482242414.000240"},{"type":"message","user":"U0Y14MWA2","text":"(because it may be faster)","ts":"1482242421.000241"},{"type":"message","user":"U0ZJZBJLF","text":"we don't like because it's in-order","ts":"1482242446.000242"},{"type":"message","user":"U0Y14MWA2","text":"of course you can verify always only (multi)sig","ts":"1482242448.000243"},{"type":"message","user":"U0ZJZBJLF","text":"we want to verify using multi-sigs","ts":"1482242454.000244"},{"type":"message","user":"U0Y14MWA2","text":"ok","ts":"1482242458.000245"},{"type":"message","user":"U0Y14MWA2","text":"then just drop 1.3.2","ts":"1482242462.000246"},{"type":"message","user":"U0Y14MWA2","text":"and leave 1.3.1","ts":"1482242465.000247"},{"type":"message","user":"U0Y14MWA2","text":"for instance","ts":"1482242480.000248"},{"type":"message","user":"U0Y14MWA2","text":"if sbft ends up using gossip","ts":"1482242489.000249"},{"type":"message","user":"U0ZJZBJLF","text":"OK I dropped it","ts":"1482242494.000250"},{"type":"message","user":"U0Y14MWA2","text":"I do not want to do multisig check","ts":"1482242495.000251"},{"type":"message","user":"U0ZJZBJLF","text":"wait wait","ts":"1482242498.000252"},{"type":"message","user":"U0Y14MWA2","text":"because I have anchors","ts":"1482242502.000253"},{"type":"message","user":"U0Y14MWA2","text":"head and tail","ts":"1482242505.000254"},{"type":"message","user":"U0ZJZBJLF","text":"but SBFT is something entierly else!","ts":"1482242506.000255"},{"type":"message","user":"U0ZJZBJLF","text":"and you won't use gossip","ts":"1482242520.000256"},{"type":"message","user":"U0Y14MWA2","text":"well... we talk about filling the hole","ts":"1482242524.000257"},{"type":"message","user":"U0ZJZBJLF","text":"you're only going to use (maybe) a tiny module","ts":"1482242530.000258"},{"type":"message","user":"U0Y14MWA2","text":"you say there is anti-entropy part of gossip","ts":"1482242545.000259"},{"type":"message","user":"U0Y14MWA2","text":"this may be using hashchain verification instead of multisig verification","ts":"1482242558.000260"},{"type":"message","user":"U0Y14MWA2","text":"because it is a point to point connection","ts":"1482242566.000261"},{"type":"message","user":"U0Y14MWA2","text":"anyway","ts":"1482242569.000262"},{"type":"message","user":"U0Y14MWA2","text":"if you guys do not like it","ts":"1482242573.000263"},{"type":"message","user":"U0Y14MWA2","text":"you do not like it","ts":"1482242576.000264"},{"type":"message","user":"U0ZJZBJLF","text":"I just say that we can't use hash chain verification","ts":"1482242585.000265"},{"type":"message","user":"U0ZJZBJLF","text":"since it will slow us","ts":"1482242592.000266"},{"type":"message","user":"U0ZJZBJLF","text":"because the traffic is out-of-order","ts":"1482242603.000267"},{"type":"message","user":"U0Y14MWA2","text":"even point to point anti-entropy?","ts":"1482242613.000268"},{"type":"message","user":"U0ZJZBJLF","text":"point2point?","ts":"1482242630.000269"},{"type":"message","user":"U0ZJZBJLF","text":"it's always in-order","ts":"1482242635.000270"},{"type":"message","user":"U0ZJZBJLF","text":"so the ledger can do it IMO","ts":"1482242641.000271"},{"type":"message","user":"U0ZJZBJLF","text":"the hash chain","ts":"1482242643.000272"},{"type":"message","user":"U0Y14MWA2","text":"ok","ts":"1482242648.000273"},{"type":"message","user":"U0Y14MWA2","text":"fair enough","ts":"1482242650.000274"},{"type":"message","user":"U0ZJZBJLF","text":"I any case we don't have this in V1","ts":"1482242653.000275"},{"type":"message","user":"U0Y14MWA2","text":"so you want to push it to even lower level","ts":"1482242660.000276"},{"type":"message","user":"U0Y14MWA2","text":"well I will need it in sbft","ts":"1482242666.000277"},{"type":"message","user":"U0Y14MWA2","text":"but apparently it will be sth similar to gossip","ts":"1482242673.000278"},{"type":"message","user":"U0Y14MWA2","text":"but not gossip :slightly_smiling_face:","ts":"1482242677.000279"},{"type":"message","user":"U0ZJZBJLF","text":"ok","ts":"1482242685.000280"},{"type":"message","user":"U0ZJZBJLF","text":"Like I said- you can use our code that does pull, and I don't have a problem to mutate it a bit to accommodate to your needs as long as too much mutation isn't needed, but I see not reason to use gossip in sbft...","ts":"1482242728.000281"},{"type":"message","user":"U0Y14MWA2","text":"ok - can you send me the pointer to your pull code?","ts":"1482242762.000282"},{"type":"message","user":"U0ZJZBJLF","text":"but- what does 1.3 do? `Ledger gossip integrity verification`","ts":"1482242768.000283"},{"type":"message","user":"U0ZJZBJLF","text":"sure","ts":"1482242772.000284"},{"type":"message","user":"U0Y14MWA2","text":"how do you verify the integrity of gossipped data","ts":"1482242790.000285"},{"type":"message","user":"U0Y14MWA2","text":"tries to answer that question","ts":"1482242800.000286"},{"type":"message","user":"U0ZJZBJLF","text":"<https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/gossip\/gossip\/pull\/pullstore.go>\n<https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/gossip\/gossip\/algo\/pull.go>","attachments":[{"service_name":"GitHub","title":"hyperledger\/fabric","title_link":"https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/gossip\/gossip\/pull\/pullstore.go","text":"Read-only mirror of <https:\/\/gerrit.hyperledger.org\/r\/#\/admin\/projects\/fabric>","fallback":"GitHub: hyperledger\/fabric","thumb_url":"https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400","from_url":"https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/gossip\/gossip\/pull\/pullstore.go","thumb_width":142,"thumb_height":142,"service_icon":"https:\/\/github.com\/apple-touch-icon.png","id":1}],"ts":"1482242804.000287"},{"type":"message","user":"U0ZJZBJLF","text":"Oh... of gossiped messages?","edited":{"user":"U0ZJZBJLF","ts":"1482242816.000000"},"ts":"1482242809.000289"},{"type":"message","user":"U0Y14MWA2","text":"yes","ts":"1482242816.000291"},{"type":"message","user":"U0Y14MWA2","text":"well of gossipped data","ts":"1482242823.000292"},{"type":"message","user":"U0Y14MWA2","text":"we gossip blocks right","ts":"1482242828.000293"},{"type":"message","user":"U0ZJZBJLF","text":"we just use the block verification","ts":"1482242837.000294"},{"type":"message","user":"U0ZJZBJLF","text":"that the security layer gives us","ts":"1482242841.000295"},{"type":"message","user":"U0ZJZBJLF","text":"basically","ts":"1482242843.000296"},{"type":"message","user":"U0Y14MWA2","text":"exactly so it explains how it is done","ts":"1482242852.000297"},{"type":"message","user":"U1HFNJB50","text":"we gossip blocks right or we gossip the right blocks?","ts":"1482242854.000298"},{"type":"message","user":"U0Y14MWA2","text":"I mean - a section called \"usage in Hyperledge fabric\" should explain how the integrity in the context of HL fabric","ts":"1482242895.000299"},{"type":"message","user":"U0Y14MWA2","text":"is ensured","ts":"1482242902.000300"},{"type":"message","user":"U0ZJZBJLF","text":"hmm, I changed it to *Ledger block verification*\nIn this subsection, we describe how the blocks gossiped are verified in the gossip layer","edited":{"user":"U0ZJZBJLF","ts":"1482242962.000000"},"ts":"1482242952.000301"},{"type":"message","user":"U0Y14MWA2","text":"ok","ts":"1482243000.000303"},{"type":"message","user":"U0Y14MWA2","text":"again these are suggestion","ts":"1482243010.000304"},{"type":"message","user":"U0ZJZBJLF","text":"Gossiped Ledger block verification","ts":"1482243010.000305"},{"type":"message","user":"U0Y14MWA2","text":"suggestions","ts":"1482243015.000306"},{"type":"message","user":"U0Y14MWA2","text":"feel free to accept them or not","ts":"1482243022.000307"},{"type":"message","user":"U0ZJZBJLF","text":"...?","ts":"1482243192.000308"},{"type":"message","user":"U0ZJZBJLF","text":"you timed out","ts":"1482243197.000309"},{"type":"message","user":"U0Y14MWA2","text":"i am here","ts":"1482243205.000310"},{"type":"message","user":"U0Y14MWA2","text":"i missed an \"action required\"","ts":"1482243234.000311"},{"type":"message","user":"U0ZJZBJLF","text":"you said \"suggestions\"","ts":"1482243283.000312"},{"type":"message","user":"U0Y14MWA2","text":"aha","ts":"1482243291.000313"},{"type":"message","user":"U0ZJZBJLF","text":"I thought you were going to write them next","ts":"1482243294.000314"},{"type":"message","user":"U0Y14MWA2","text":"\"these are suggestions\"","ts":"1482243296.000315"},{"type":"message","user":"U0ZJZBJLF","text":"oh","ts":"1482243299.000316"},{"type":"message","user":"U0Y14MWA2","text":"the things I already wrote in ggogle doc :slightly_smiling_face:","ts":"1482243309.000317"},{"type":"message","user":"U0Y14MWA2","text":"nothing new","ts":"1482243314.000318"},{"type":"message","user":"U0ZJZBJLF","text":"oh ok.","ts":"1482243319.000319"},{"user":"U2P0N5J5A","text":"<@U2P0N5J5A|sergefdrv> has joined the channel","type":"message","subtype":"channel_join","ts":"1482313229.000320"},{"type":"message","user":"U0ZJZBJLF","text":"<@U0XPR4NP4>  ,  so, I wanted to validate something regarding configuration transactions and ordering service","ts":"1482331667.000321"},{"type":"message","user":"U0ZJZBJLF","text":"When I get a block from the ordering service, can I use only the MSP to verify it?","ts":"1482331686.000322"},{"type":"message","user":"U0ZJZBJLF","text":"assuming the MSP is \"up-to-date\" with the ledger's data","ts":"1482331698.000323"},{"type":"message","user":"U0XPR4NP4","text":"Correct","ts":"1482331721.000324"},{"type":"message","user":"U0XPR4NP4","text":"If you have the previous configuration block, you can validate it","ts":"1482331731.000325"},{"type":"message","user":"U0ZJZBJLF","text":"But the validation is ONLY with using the MSP right?","ts":"1482331756.000326"},{"type":"message","user":"U0XPR4NP4","text":"(So, in general, if you have all blocks prior to this one, you can prove that you have the last configuration block)","ts":"1482331756.000327"},{"type":"message","user":"U0ZJZBJLF","text":"there is no other entity in the peer","ts":"1482331761.000328"},{"type":"message","user":"U0ZJZBJLF","text":"that does that","ts":"1482331763.000329"},{"type":"message","user":"U0ZJZBJLF","text":"I mean- the number of signers of the multi-sig it's all in the MSP too right?","ts":"1482331776.000330"},{"type":"message","user":"U0XPR4NP4","text":"Well, there are policies embedded in the configuration, which are not in the MSP","ts":"1482331794.000331"},{"type":"message","user":"U0ZJZBJLF","text":"such as?","ts":"1482331802.000332"},{"type":"message","user":"U0XPR4NP4","text":"Every configuration item has a modification policy","ts":"1482331819.000333"},{"type":"message","user":"U0XPR4NP4","text":"These policies can either be an MSP type policy, or a recursive \"n out of signature policy\"","ts":"1482331839.000334"},{"type":"message","user":"U0XPR4NP4","text":"The MSP ones are embedded within the MSP, but for cross MSP multi-sig stuff, that doesn't make any sense","ts":"1482331853.000335"},{"type":"message","user":"U0XPR4NP4","text":"Otherwise whoever controlled the MSP that policy was in would control the network","ts":"1482331875.000336"},{"type":"message","user":"U0ZJZBJLF","text":"how are blocks cross-MSP?","ts":"1482331882.000337"},{"type":"message","user":"U0ZJZBJLF","text":"an MSP is per channel and so is a block","ts":"1482331890.000338"},{"type":"message","user":"U0ZJZBJLF","text":"OK you know what, maybe I can get to the bottom line what I'm \"trying to do here\"","ts":"1482331904.000339"},{"type":"message","user":"U0ZJZBJLF","text":"and that will help you understand what I want","ts":"1482331912.000340"},{"type":"message","user":"U0XPR4NP4","text":"Ah, no, not at all","ts":"1482331930.000341"},{"type":"message","user":"U0XPR4NP4","text":"There are multiple MSPs per chain","ts":"1482331940.000342"},{"type":"message","user":"U0XPR4NP4","text":"One MSP per organization participating in the chain","ts":"1482331950.000343"},{"type":"message","user":"U0ZJZBJLF","text":"oh yeah","ts":"1482331955.000344"},{"type":"message","user":"U0ZJZBJLF","text":"I meant that this aggregation is per channel","ts":"1482331963.000345"},{"type":"message","user":"U0XPR4NP4","text":"But sure, get to the bottom line","ts":"1482331965.000346"},{"type":"message","user":"U0ZJZBJLF","text":"channel --&gt; [] MSP","ts":"1482331974.000347"},{"type":"message","user":"U0ZJZBJLF","text":"in any case","ts":"1482331979.000348"},{"type":"message","user":"U0ZJZBJLF","text":"In gossip we select a leader that connects to the ordering service on behalf of all channels of the org","ts":"1482331998.000349"},{"type":"message","user":"U0ZJZBJLF","text":"that leader isn't always, obviously in the channel itself","ts":"1482332009.000350"},{"type":"message","user":"U0ZJZBJLF","text":"So, one could ask a question- how does that leader \"trust\" the blocks it receives, etc.","ts":"1482332033.000351"},{"type":"message","user":"U0ZJZBJLF","text":"So I thought we could leverage the fact that the peers in gossip would replicate the MSPs in the organization","ts":"1482332059.000352"},{"type":"message","user":"U0ZJZBJLF","text":"meaning- if we have an org O1 and it has 3 channels, all peers of that channel would replicate the MSPs of the channel to all peers of O1","ts":"1482332080.000353"},{"type":"message","user":"U0ZJZBJLF","text":"the leader is selected from O1 so it can verify the blocks using the MSP.","ts":"1482332094.000354"},{"type":"message","user":"U0ZJZBJLF","text":"So I wanted to ask, if there is something I'm missing here, any data that that peer is missing because that data is not in the MSP","ts":"1482332111.000355"},{"type":"message","user":"U0XPR4NP4","text":"So trust is very easy.  The leader starts with a configuration block.  It then receives blocks in order from the ordering service after this point.","ts":"1482332257.000356"},{"type":"message","user":"U0ZJZBJLF","text":"wait wait","ts":"1482332268.000357"},{"type":"message","user":"U0ZJZBJLF","text":"the leader doesn't have the ledger","ts":"1482332272.000358"},{"type":"message","user":"U0ZJZBJLF","text":"I'm looking at the worst case","ts":"1482332278.000359"},{"type":"message","user":"U0ZJZBJLF","text":"in which the leader is not part of the channel itself","ts":"1482332284.000360"},{"type":"message","user":"U0ZJZBJLF","text":"just in that org","ts":"1482332287.000361"},{"type":"message","user":"U0ZJZBJLF","text":"it just has the MSP because I artificially replicate it","ts":"1482332300.000362"},{"type":"message","user":"U0XPR4NP4","text":"I maintain, the only way to connect to a channel\/chain is to start with its configuration block","ts":"1482332330.000363"},{"type":"message","user":"U0ZJZBJLF","text":"oh? why is that?","ts":"1482332342.000364"},{"type":"message","user":"U0XPR4NP4","text":"Otherwise you don't know who the orderers are, what the block validation policy is for that chain, or potentially even simpler things like how to verify hashes on a block","ts":"1482332390.000365"},{"type":"message","user":"U0ZJZBJLF","text":"wait","ts":"1482332397.000366"},{"type":"message","user":"U0ZJZBJLF","text":"I thought in V1 the orderes are the same","ts":"1482332402.000367"},{"type":"message","user":"U0ZJZBJLF","text":"how to verify hashes- what do you mean? you mean hash chain verification?","ts":"1482332423.000368"},{"type":"message","user":"U0ZJZBJLF","text":"I don't need to know that as the leader, I just want to verify the signatures on the block, I think... isn't it enough?","ts":"1482332453.000369"},{"type":"message","user":"U0XPR4NP4","text":"Some of these things may be static in v1, but it makes sense that we would define the hashing algorithms etc. in the chain configuration block","ts":"1482332454.000370"},{"type":"message","user":"U0XPR4NP4","text":"In v1 the orderers are the same, but if you're building the system based on this assumption, I think it's the wrong architecture","ts":"1482332485.000371"},{"type":"message","user":"U0ZJZBJLF","text":"I understand the hashing part but I don't need to verify it as the leader","ts":"1482332487.000372"},{"type":"message","user":"U0XPR4NP4","text":"You have to","ts":"1482332497.000373"},{"type":"message","user":"U0ZJZBJLF","text":"why?","ts":"1482332499.000374"},{"type":"message","user":"U0XPR4NP4","text":"You're checking the signature over the block","ts":"1482332522.000375"},{"type":"message","user":"U0XPR4NP4","text":"Over the block header","ts":"1482332528.000376"},{"type":"message","user":"U0XPR4NP4","text":"The block header contains the hash of the block data","ts":"1482332538.000377"},{"type":"message","user":"U0XPR4NP4","text":"So, checking the signature of the block header does nothing for you, unless you also check that the block data accompanying it is for that block header","ts":"1482332569.000378"},{"type":"message","user":"U0ZJZBJLF","text":"oh so I need to hash","ts":"1482332569.000379"},{"type":"message","user":"U0ZJZBJLF","text":"and to verify the sig on the hash","ts":"1482332574.000380"},{"type":"message","user":"U0ZJZBJLF","text":"?","ts":"1482332589.000381"},{"type":"message","user":"U0XPR4NP4","text":"The signature might include its own hashing algorithm, which is fine","ts":"1482332599.000382"},{"type":"message","user":"U0XPR4NP4","text":"But the hash of the block data needs to be checked","ts":"1482332612.000383"},{"type":"message","user":"U0XPR4NP4","text":"So hear my proposal out.","ts":"1482332622.000384"},{"type":"message","user":"U0ZJZBJLF","text":"ok","ts":"1482332626.000385"},{"type":"message","user":"U0XPR4NP4","text":"When the 'leader' is told to join a chain, it should be supplied with a configuration block for that chain.  The leader can process this block with zero ledger requirement.  It now has a list of all the MSPs for that chain, policies etc.","ts":"1482332672.000386"},{"type":"message","user":"U0XPR4NP4","text":"Then it retrieves blocks from the ordering service in order from that point forwards.  It does cursory validation, and in particular checks to see if it's a new configuration block.","ts":"1482332697.000387"},{"type":"message","user":"U0ZJZBJLF","text":"can the hash algo change?","ts":"1482332699.000388"},{"type":"message","user":"U0ZJZBJLF","text":"during the chain","ts":"1482332705.000389"},{"type":"message","user":"U0XPR4NP4","text":"If it is a new configuration block, then it processes it just like it did the first time, and proceeds.","ts":"1482332717.000390"},{"type":"message","user":"U0XPR4NP4","text":"I don't know that it's a technical requirement for v1, but imagining a chain which lives for 30 years, I'd imagine the hashing algorithm would have to change eventually","edited":{"user":"U0XPR4NP4","ts":"1482332830.000000"},"ts":"1482332738.000391"},{"type":"message","user":"U0XPR4NP4","text":"(Nothing we need to explicitly support in v1 is what I'm getting at, just don't want to back us into a corner where we can never support it)","ts":"1482332763.000392"},{"type":"message","user":"U0ZJZBJLF","text":"But Jason","ts":"1482332831.000394"},{"type":"message","user":"U0ZJZBJLF","text":"the leader doesn't get the JoinChannel message","ts":"1482332841.000395"},{"type":"message","user":"U0ZJZBJLF","text":"currently, at least","ts":"1482332845.000396"},{"type":"message","user":"U0ZJZBJLF","text":"so, let me ask you this","ts":"1482332856.000397"},{"type":"message","user":"U0ZJZBJLF","text":"what do we need from the genesis block","ts":"1482332863.000398"},{"type":"message","user":"U0ZJZBJLF","text":"apart from the hash algo?","ts":"1482332867.000399"},{"type":"message","user":"U0XPR4NP4","text":"Hold on, back in 20 minutes or so, have a tow truck outside","ts":"1482332918.000400"},{"type":"message","user":"U0ZJZBJLF","text":"sure np","ts":"1482332926.000401"},{"type":"message","user":"U0ZJZBJLF","text":"and thanks","ts":"1482332930.000402"},{"type":"message","user":"U0ZJZBJLF","text":"<@U0ULK2JPP>  feel free to ask what you wanted here","ts":"1482332943.000403"},{"type":"message","user":"U0ULK2JPP","text":"<@U0XPR4NP4> I was asking about validations \u2026 but let me read first","ts":"1482333068.000404"},{"type":"message","user":"U0ZJZBJLF","text":"<@U0XPR4NP4> , If we could have encapsulated the hash algorithm in the MSP our problem would've been solved. Right?\n<@U1BC5A0F9>  Does the MSP configuration has any generic field that can be used to store some arbitrary small byte slice? \nWe have a certain problem that Jason raised, which is that the MSP alone isn't enough to validate a block received from the ordering service, we need some more info that is stored in the genesis block.","edited":{"user":"U0ZJZBJLF","ts":"1482334631.000000"},"ts":"1482334610.000405"},{"type":"message","user":"U1BC5A0F9","text":"you mean what hash algorithm is used for what?","ts":"1482334882.000407"},{"type":"message","user":"U0XPR4NP4","text":"<@U1BC5A0F9> <@U0ULK2JPP> We've had discussions about how we want to do the hashing of the block data, whether it is Merkle tree or flat for instance","ts":"1482335036.000408"},{"type":"message","user":"U0XPR4NP4","text":"So, to give ourselves flexibility, we might want to encode which hashing scheme we are using for the chain into the configuration block","ts":"1482335054.000409"},{"type":"message","user":"U0XPR4NP4","text":"But I maintain, that you _must_ process every configuration block if you are a subscriber to a chain, including this gossip proxy process","ts":"1482335108.000410"},{"type":"message","user":"U0XPR4NP4","text":"And I'm not really sure why this is that onerous, the proxy is receiving the stream of blocks, the configuration blocks should be very infrequent, and you do not need to retain anything except for the contents of the most recent configuration block","ts":"1482335145.000411"},{"type":"message","user":"U0XPR4NP4","text":"There is no ledger required, seems quite straight forward to me, not sure what I am missing","ts":"1482335157.000412"},{"type":"message","user":"U0ZJZBJLF","text":"why including, Jason?","ts":"1482335274.000413"},{"type":"message","user":"U0ZJZBJLF","text":"I thought we talked about that hack with the last config block?","ts":"1482335294.000414"},{"type":"message","user":"U1HFNJB50","text":"Isn't last configuration block part of block metadata?","ts":"1482335337.000415"},{"type":"message","user":"U0XPR4NP4","text":"The index of the last configuration block can be part of the metadata","ts":"1482335502.000416"},{"type":"message","user":"U0XPR4NP4","text":"But that's not foolproof, we discussed that extensively","ts":"1482335522.000417"},{"type":"message","user":"U1HFNJB50","text":"Well, I was pretty sure it will be part of the metadata","ts":"1482335525.000418"},{"type":"message","user":"U0XPR4NP4","text":"Yes, it's not there yet, is all I meant to say","ts":"1482335541.000419"},{"type":"message","user":"U1HFNJB50","text":"k","ts":"1482335547.000420"},{"type":"message","user":"U0ZJZBJLF","text":"Well, it's not foolproof but the leader only disseminates","ts":"1482335554.000421"},{"type":"message","user":"U0XPR4NP4","text":"But I go back to \"Why not?\" The leader will be seeing the whole chain in order.","ts":"1482335578.000422"},{"type":"message","user":"U0XPR4NP4","text":"It seems far simpler to simply parse the configuration when it arrives","ts":"1482335587.000423"},{"type":"message","user":"U0XPR4NP4","text":"Than to try to invent some other more clever scheme","ts":"1482335595.000424"},{"type":"message","user":"U0ZJZBJLF","text":"yeah I agree here","ts":"1482335603.000425"},{"type":"message","user":"U0ZJZBJLF","text":"but how can we do that?","ts":"1482335606.000426"},{"type":"message","user":"U0XPR4NP4","text":"Ah, that's actually quite easy","ts":"1482335613.000427"},{"type":"message","user":"U0ZJZBJLF","text":"I mean- we'll have to persist that","ts":"1482335616.000428"},{"type":"message","user":"U0ZJZBJLF","text":"won't we?","ts":"1482335617.000429"},{"type":"message","user":"U0XPR4NP4","text":"In order to support restarting, yes","ts":"1482335630.000430"},{"type":"message","user":"U0XPR4NP4","text":"But it's just one block, should not be a big deal I would think?","ts":"1482335641.000431"},{"type":"message","user":"U0ZJZBJLF","text":"Wait, so the configuration block contains all the data I need?","ts":"1482335686.000432"},{"type":"message","user":"U1BC5A0F9","text":"hm but <@U0XPR4NP4> don;t you guys have a chicken and egg problem?","ts":"1482335688.000433"},{"type":"message","user":"U1HFNJB50","text":"I think there is a hard requirement that peer which not part of the channel should not process blocks","ts":"1482335689.000434"},{"type":"message","user":"U0ZJZBJLF","text":"not just \"updates\" for that?","ts":"1482335689.000435"},{"type":"message","user":"U0XPR4NP4","text":"<@U0ZJZBJLF> Correct, the configuration block is all you need","edited":{"user":"U0XPR4NP4","ts":"1482335702.000000"},"ts":"1482335698.000436"},{"type":"message","user":"U0ZJZBJLF","text":"it always contains all the data?","ts":"1482335708.000438"},{"type":"message","user":"U0XPR4NP4","text":"Correct","ts":"1482335715.000439"},{"type":"message","user":"U0ZJZBJLF","text":"Wait","ts":"1482335725.000440"},{"type":"message","user":"U0ZJZBJLF","text":"if I'm a leader and I join a channel","ts":"1482335732.000441"},{"type":"message","user":"U0ZJZBJLF","text":"I don't have the latest config","ts":"1482335737.000442"},{"type":"message","user":"U0ZJZBJLF","text":"I mean, not join a channel","ts":"1482335746.000443"},{"type":"message","user":"U0ZJZBJLF","text":"If I'm a leader and I'm suddenly told by a peer to grab blocks for a channel I'm not a member of","ts":"1482335773.000444"},{"type":"message","user":"U0ZJZBJLF","text":"I don't have the last config block","ts":"1482335781.000445"},{"type":"message","user":"U0XPR4NP4","text":"But let's look at the full flow","ts":"1482335810.000446"},{"type":"message","user":"U0XPR4NP4","text":"Why did that peer make that call?","ts":"1482335825.000447"},{"type":"message","user":"U0XPR4NP4","text":"Presumably, because someone called `JoinChain` on him","ts":"1482335835.000448"},{"type":"message","user":"U0XPR4NP4","text":"Which means he has the genesis\/configuration block for that chain","ts":"1482335843.000449"},{"type":"message","user":"U0XPR4NP4","text":"So he can just hand it in with his request.","ts":"1482335849.000450"},{"type":"message","user":"U0XPR4NP4","text":"Then there's no more problem?","ts":"1482335864.000451"},{"type":"message","user":"U0ZJZBJLF","text":"It has the genesis but it doesn't have the latest","ts":"1482335924.000452"},{"type":"message","user":"U0ZJZBJLF","text":"I just want to make sure you have a clear image of what we do","ts":"1482335941.000453"},{"type":"message","user":"U0ZJZBJLF","text":"we have peers of a channel, and a leader that's also a peer and in the worst case scenario it is not part of the channel and doesn't get the Joinchannel message","ts":"1482335962.000454"},{"type":"message","user":"U0ZJZBJLF","text":"But it does request blocks from the orderer by hearing messages from the channel peers that only contain (more or less) the chainID","ts":"1482335990.000455"},{"type":"message","user":"U0ZJZBJLF","text":"(and the ledger height)","ts":"1482335996.000456"},{"type":"message","user":"U0ZJZBJLF","text":"So it connects to the orderer and asks for blocks for the peers and disseminates to the channel peers","ts":"1482336020.000457"},{"type":"message","user":"U0ZJZBJLF","text":"I just want to verify the signature in the leader peer.  Now, we have some time period in which the latest MSP isn't replicated to the leader","ts":"1482336057.000458"},{"type":"message","user":"U0ZJZBJLF","text":"but that's ok","ts":"1482336059.000459"},{"type":"message","user":"U0ZJZBJLF","text":"because it's a pretty short time frame","ts":"1482336065.000460"},{"type":"message","user":"U0ZJZBJLF","text":"So I just need all the data I need in order to verify these blocks.","ts":"1482336098.000461"},{"type":"message","user":"U0ZJZBJLF","text":"<@U1BC5A0F9>  what chicken and egg problem?","ts":"1482336115.000462"},{"type":"message","user":"U0XPR4NP4","text":"I maintain, that without the configuration block, you can't verify these blocks.  You could make some handwavy assumptions about how the block validation policy is the same across chains because it's all coming from the same ordering service, but that seems like the wrong way to go about things to me.","edited":{"user":"U0XPR4NP4","ts":"1482336196.000000"},"ts":"1482336181.000463"},{"type":"message","user":"U0ZJZBJLF","text":"Yeah, so I also need that BVP, and the hash algo. Anything else?","ts":"1482336227.000465"},{"type":"message","user":"U0XPR4NP4","text":"In particular, when the network changes, you're going to have different states across all these chains momentarily","ts":"1482336233.000466"},{"type":"message","user":"U0ZJZBJLF","text":"what do you mean when the network changes? when the orderers change?","ts":"1482336271.000467"},{"type":"message","user":"U0XPR4NP4","text":"Sure, that's one possibility.  Let's say that an orderer is kicked out and a new one brought in.","ts":"1482336306.000468"},{"type":"message","user":"U0ZJZBJLF","text":"but in V1 it's the same for everyone","ts":"1482336333.000469"},{"type":"message","user":"U0XPR4NP4","text":"Then you're going to have a situation where on some `Deliver` calls, one set of signatures is valid","ts":"1482336334.000470"},{"type":"message","user":"U0ZJZBJLF","text":"So eventually","ts":"1482336340.000471"},{"type":"message","user":"U0XPR4NP4","text":"No, definitely not","ts":"1482336340.000472"},{"type":"message","user":"U0ZJZBJLF","text":"huh?","ts":"1482336346.000473"},{"type":"message","user":"U0XPR4NP4","text":"In order to prevent non-determinism, chain configuration _must_ change on a per chain basis, it cannot change globally","ts":"1482336366.000474"},{"type":"message","user":"U0XPR4NP4","text":"This is something that <@U1BC5A0F9> first noted, and it's very true","ts":"1482336379.000475"},{"type":"message","user":"U0XPR4NP4","text":"So even if you want to kick an orderer out from all the chains","ts":"1482336403.000476"},{"type":"message","user":"U0XPR4NP4","text":"You have to do it on a per chain basis","ts":"1482336411.000477"},{"type":"message","user":"U0ZJZBJLF","text":"ok","ts":"1482336415.000478"},{"type":"message","user":"U0ZJZBJLF","text":"so continue with your scenario","ts":"1482336420.000479"},{"type":"message","user":"U0XPR4NP4","text":"Which means you will have multiple chains, each with a different set of orderers","ts":"1482336422.000480"},{"type":"message","user":"U0ZJZBJLF","text":"an orderer is kicked and some other orderer is brought it","ts":"1482336438.000481"},{"type":"message","user":"U0ZJZBJLF","text":"I'm the leader peer, and I just grab the blocks, and disseminate them. \nOh. you mean- that I happen to connect to a byzantine orderer","ts":"1482336462.000482"},{"type":"message","user":"U0ZJZBJLF","text":"and then I'll disseminate blocks that are fake","ts":"1482336474.000483"},{"type":"message","user":"U0ZJZBJLF","text":"and I will never know it","ts":"1482336478.000484"},{"type":"message","user":"U0ZJZBJLF","text":"something like that?","ts":"1482336480.000485"},{"type":"message","user":"U0XPR4NP4","text":"I mean that, you cannot rely on the orderer configuration being consistent across chains","ts":"1482336496.000486"},{"type":"message","user":"U0XPR4NP4","text":"Let's say that you have two chains","ts":"1482336516.000487"},{"type":"message","user":"U0XPR4NP4","text":"And one of them is very high volume, so high volume, your deliver call is lagging by a few thousand blocks","ts":"1482336532.000488"},{"type":"message","user":"U0XPR4NP4","text":"The other chain gets a reconfiguration message which completely evicts the entire set of orderers, and adds new ones (one would hope this scenario doesn't happen, but it's easier to demonstrate)","ts":"1482336566.000489"},{"type":"message","user":"U0XPR4NP4","text":"The deliver call on the high volume chain is getting back signatures from those evicted orderers, and that's just fine, those blocks are still valid, because that chain is lagging","ts":"1482336596.000490"},{"type":"message","user":"U0XPR4NP4","text":"You will not see the new orderer signatures until you process the configuration block which evicts the old ones.","ts":"1482336614.000491"},{"type":"message","user":"U1HFNJB50","text":"Could you please ellaborate how this flow actually works? I mean how you completely evicts all orderers?","ts":"1482336635.000492"},{"type":"message","user":"U1HFNJB50","text":"This is should be a transaction which passes the ordering service","ts":"1482336650.000493"},{"type":"message","user":"U0XPR4NP4","text":"Correct","ts":"1482336657.000494"},{"type":"message","user":"U0XPR4NP4","text":"This is a configuration transaction","ts":"1482336661.000495"},{"type":"message","user":"U0ZJZBJLF","text":"This type of transaction can't happen","ts":"1482336682.000496"},{"type":"message","user":"U0XPR4NP4","text":"Why not?","ts":"1482336689.000497"},{"type":"message","user":"U0ZJZBJLF","text":"if you lose connection to the ordering service you're locked outside of your house","ts":"1482336696.000498"},{"type":"message","user":"U0XPR4NP4","text":"Imagine this isn't a change for byzantine behavior","ts":"1482336714.000499"},{"type":"message","user":"U0XPR4NP4","text":"Imagine this is just a change for system maintenance","ts":"1482336726.000500"},{"type":"message","user":"U0XPR4NP4","text":"You're closing down the Raleigh datacenter, and moving the orderers to Austin","ts":"1482336740.000501"},{"type":"message","user":"U0ZJZBJLF","text":"But if you have a peer that didn't have enough time to receive this block, and you did the change, it's disconnected from the orderer for ever","ts":"1482336751.000502"},{"type":"message","user":"U0XPR4NP4","text":"So, you submit a reconfiguration transaction which switches all of the orderers to be in Austin, and that's the last thing you submit to the Raleigh ones, they process it normally, and deliver it to everyone.  After a few weeks, once you're confident everyone is no longer on the Raleigh servers, you shut them down.","ts":"1482336793.000503"},{"type":"message","user":"U1HFNJB50","text":"<https:\/\/www.stihi.ru\/pics\/2011\/11\/13\/6955.jpg>","attachments":[{"fallback":"399x271px image","image_url":"https:\/\/www.stihi.ru\/pics\/2011\/11\/13\/6955.jpg","image_width":399,"image_height":271,"image_bytes":18250,"from_url":"https:\/\/www.stihi.ru\/pics\/2011\/11\/13\/6955.jpg","id":1}],"ts":"1482336804.000504"},{"type":"message","user":"U1HFNJB50","text":"make such transaction feel to me like this","ts":"1482336820.000506"},{"type":"message","user":"U0XPR4NP4","text":"I agree in practice, you would probably do this incrementally, but there is no technical reason this could not happen","ts":"1482336859.000507"},{"type":"message","user":"U1HFNJB50","text":"&gt; You're closing down the Raleigh datacenter, and moving the orderers to Austin\n\nI guess this suppose to happen gradually, e.g. add orderers from Austin and then evict those from RTP","ts":"1482336879.000508"},{"type":"message","user":"U0XPR4NP4","text":"Right, I would think this is how it would be done in practice","ts":"1482336897.000509"},{"type":"message","user":"U0ZJZBJLF","text":"So can you continue describing the attack?","ts":"1482336910.000510"},{"type":"message","user":"U0ZJZBJLF","text":"The key point in the attack vector","ts":"1482336919.000511"},{"type":"message","user":"U0ZJZBJLF","text":"is that different chains process configuration blocks in different times","edited":{"user":"U0ZJZBJLF","ts":"1482336951.000000"},"ts":"1482336930.000512"},{"type":"message","user":"U0ZJZBJLF","text":"right?","ts":"1482336931.000513"},{"type":"message","user":"U0XPR4NP4","text":"Right","ts":"1482336935.000514"},{"type":"message","user":"U0ZJZBJLF","text":"What's the attack?","ts":"1482336943.000515"},{"type":"message","user":"U1HFNJB50","text":"Also I'm not truely following that you are trying to say here:\n&gt;I mean that, you cannot rely on the orderer configuration being consistent across chains\nIt technically possible that each chain has its own ordering service","ts":"1482337028.000517"},{"type":"message","user":"U0XPR4NP4","text":"It's less of an attack, and more of a lack of correctness.  If you take the most recent orderer set and use that for your validation.  Then you will get stuck, because in the scenario I described, the signatures on the blocks are from the old set of orderers, and you'll think they are invalid, but they are valid.  So, you'll think the ordering service is giving you garbage, but it's not.","ts":"1482337137.000518"},{"type":"message","user":"U0XPR4NP4","text":"&gt; It technically possible that each chain has its own ordering service\n\nIt's absolutely technically possible.  And, since orderer reconfiguration is necessarily processed per chain, there will always be a window when even to the same ordering service, different chains have different views of what a valid block from the ordering service is.","ts":"1482337189.000519"},{"type":"message","user":"U0ZJZBJLF","text":"oh yeah I'm aware that I'll get stuck","ts":"1482337230.000520"},{"type":"message","user":"U0ZJZBJLF","text":"but only for a time","ts":"1482337233.000521"},{"type":"message","user":"U0XPR4NP4","text":"Why only for a time?","ts":"1482337238.000522"},{"type":"message","user":"U0ZJZBJLF","text":"because the peers of the channel did process the transactions in order","ts":"1482337256.000523"},{"type":"message","user":"U0ZJZBJLF","text":"will eventually update me, the leader","ts":"1482337262.000524"},{"type":"message","user":"U0ZJZBJLF","text":"for the right data","ts":"1482337266.000525"},{"type":"message","user":"U0XPR4NP4","text":"Hold on","ts":"1482337268.000526"},{"type":"message","user":"U0ZJZBJLF","text":"holding","ts":"1482337272.000527"},{"type":"message","user":"U0XPR4NP4","text":"The peers of the channel are getting the new blocks from you, no?","ts":"1482337278.000528"},{"type":"message","user":"U0ZJZBJLF","text":"yeah","ts":"1482337281.000529"},{"type":"message","user":"U0XPR4NP4","text":"Then if you're stuck...","ts":"1482337285.000530"},{"type":"message","user":"U0XPR4NP4","text":"How do they get the new blocks?","ts":"1482337291.000531"},{"type":"message","user":"U0ZJZBJLF","text":"ok let's say my latest block I sent to them was `i` ok?","ts":"1482337316.000532"},{"type":"message","user":"U0ZJZBJLF","text":"now I'm stuck","ts":"1482337322.000533"},{"type":"message","user":"U0ZJZBJLF","text":"if I had the ledger how would I continue?","ts":"1482337332.000534"},{"type":"message","user":"U0ZJZBJLF","text":"I would have processed all blocks until `i`, applied the configuration to the orderer client","ts":"1482337344.000535"},{"type":"message","user":"U0ZJZBJLF","text":"and then continued","ts":"1482337347.000536"},{"type":"message","user":"U0ZJZBJLF","text":"this information would have gossiped to me by the channel's peers","ts":"1482337358.000537"},{"type":"message","user":"U0ZJZBJLF","text":"so I get the latest config I need and then I continue with the right policies, etc etc","ts":"1482337374.000538"},{"type":"message","user":"U0XPR4NP4","text":"I think this is a different scenario, let's go back to my silly high volume one","ts":"1482337385.000539"},{"type":"message","user":"U0ZJZBJLF","text":"sure","ts":"1482337389.000540"},{"type":"message","user":"U0XPR4NP4","text":"Two chains, chain A, chain B","ts":"1482337393.000541"},{"type":"message","user":"U0ZJZBJLF","text":"yeah","ts":"1482337396.000542"},{"type":"message","user":"U0XPR4NP4","text":"chain A is high volume","ts":"1482337397.000543"},{"type":"message","user":"U0XPR4NP4","text":"chain B is low volume","ts":"1482337403.000544"},{"type":"message","user":"U0XPR4NP4","text":"we are at block `i_a` in chain A, and block `i_b` in chain B","ts":"1482337426.000545"},{"type":"message","user":"U0XPR4NP4","text":"The orderer configuration changes at block `i_b+1` and block `i_a+10000`","ts":"1482337456.000546"},{"type":"message","user":"U0XPR4NP4","text":"The network processing chain B block `i_b+1` and realizes that the orderer set has changed","ts":"1482337491.000547"},{"type":"message","user":"U0XPR4NP4","text":"Via whatever gossip mechanism, this information gets propagated to the special ~(anchor?)~ leader peer which does the actual `Deliver` call for all the chains.","edited":{"user":"U0XPR4NP4","ts":"1482337567.000000"},"ts":"1482337527.000548"},{"type":"message","user":"U0ZJZBJLF","text":"(not anchor. leader!)","ts":"1482337554.000549"},{"type":"message","user":"U0XPR4NP4","text":"Great, otherwise are we on the same page thusfar?","ts":"1482337595.000553"},{"type":"message","user":"U0ZJZBJLF","text":"yeah","ts":"1482337619.000554"},{"type":"message","user":"U0XPR4NP4","text":"Okay, so, now, the `Deliver` call sends back block `i_a+1` on Chain A, and it has the signatures from the old set of orderers","ts":"1482337647.000555"},{"type":"message","user":"U0XPR4NP4","text":"So, the leader peer is going to reject this block as non-validating, because it heard via Chain B that the orderer set changed.","ts":"1482337678.000556"},{"type":"message","user":"U0ZJZBJLF","text":"no no","ts":"1482337692.000557"},{"type":"message","user":"U0ZJZBJLF","text":"it validates only with the MSP of its channel","ts":"1482337701.000558"},{"type":"message","user":"U0ZJZBJLF","text":"with channel A, that is","ts":"1482337722.000559"},{"type":"message","user":"U0XPR4NP4","text":"But MSPs don't do block validation, and there are multiple MSPs per chain","ts":"1482337722.000560"},{"type":"message","user":"U0ZJZBJLF","text":"How come they don't do that? who does that then?","ts":"1482337749.000561"},{"type":"message","user":"U0ZJZBJLF","text":"I thought they do...","ts":"1482337753.000562"},{"type":"message","user":"U0ZJZBJLF","text":"don't they check the signature?","ts":"1482337762.000563"},{"type":"message","user":"U0XPR4NP4","text":"MSPs are capable of verify a signature","ts":"1482337778.000564"},{"type":"message","user":"U0XPR4NP4","text":"They also have a policy provider that can verify a signature set","ts":"1482337789.000565"},{"type":"message","user":"U0ZJZBJLF","text":"can't they verify a multi sig also?","ts":"1482337793.000566"},{"type":"message","user":"U0XPR4NP4","text":"But there are other policy providers","ts":"1482337797.000567"},{"type":"message","user":"U0XPR4NP4","text":"Namely the `cauthdsl` policy provider, which is what has to be used whenever there is a policy which crosses MSP boundaries","ts":"1482337812.000568"},{"type":"message","user":"U0XPR4NP4","text":"And, for block validation, the policy may cross MSP boundaries (in the BFT case it definitely does), so this policy will usually be a `cauthdsl` one","ts":"1482337842.000569"},{"type":"message","user":"U0ZJZBJLF","text":"ok I see what you mean, so basically if I could store all the information I needed to validate *per channel* in the MSP","ts":"1482337846.000570"},{"type":"message","user":"U0ZJZBJLF","text":"and then to verify *per channel* with that info","ts":"1482337858.000571"},{"type":"message","user":"U0ZJZBJLF","text":"that would've solved the problem","ts":"1482337867.000572"},{"type":"message","user":"U0XPR4NP4","text":"Yes, you need to store this information per chain.  Though I think you are a little fixated on the MSP, which does not contain everything you need, as the block validation policy may live outside of an MSP","ts":"1482337904.000573"},{"type":"message","user":"U0XPR4NP4","text":"All policies require the MSPs for the last step of validation, however, policies do not need to live within MSPs","ts":"1482337936.000574"},{"type":"message","user":"U0ZJZBJLF","text":"I can either replicate it by putting it somehow in the MSP if it is allowed, or build something that contains both the MSP and these  stuff and *then* replicate it","ts":"1482337945.000575"},{"type":"message","user":"U0ZJZBJLF","text":"per-channel, of course","ts":"1482337950.000576"},{"type":"message","user":"U0XPR4NP4","text":"Which sounds a lot like the configuration block to me...","ts":"1482337984.000577"},{"type":"message","user":"U0ZJZBJLF","text":"Can an MSP be recreated completely from scratch","ts":"1482338005.000578"},{"type":"message","user":"U0ZJZBJLF","text":"from the conf. block?","ts":"1482338008.000579"},{"type":"message","user":"U0ZJZBJLF","text":"I guess it can, from the genesis block","ts":"1482338046.000580"},{"type":"message","user":"U0ZJZBJLF","text":"is it also for a conf. block?","ts":"1482338053.000581"},{"type":"message","user":"U0XPR4NP4","text":"Right","ts":"1482338071.000582"},{"type":"message","user":"U0XPR4NP4","text":"Genesis block is a configuration block, just the first one","ts":"1482338085.000583"},{"type":"message","user":"U0ZJZBJLF","text":"oh. good to know","ts":"1482338102.000584"},{"type":"message","user":"U0XPR4NP4","text":"The configuration block contains a configuration transaction, which contains absolutely all of the config for the chain.  No incremental building, or deltas.  They are stateless with respect to their application (though their validation obviously requires the previous config)","edited":{"user":"U0XPR4NP4","ts":"1482338153.000000"},"ts":"1482338132.000585"},{"type":"message","user":"U0ZJZBJLF","text":"perhaps I should have talked to you before opening <https:\/\/jira.hyperledger.org\/browse\/FAB-1459>","ts":"1482338164.000587"},{"type":"message","user":"U0ZJZBJLF","text":"So... if we could simply replicate the configuration blocks that would've solved the problem, I guess.","ts":"1482338222.000588"},{"type":"message","user":"U0XPR4NP4","text":"Yep, looks like it","ts":"1482338252.000589"},{"type":"message","user":"U0ZJZBJLF","text":"<@U1BC5A0F9>  what do you think?","ts":"1482338259.000590"},{"type":"message","user":"U0ZJZBJLF","text":"Is it light weight?","ts":"1482338295.000591"},{"type":"message","user":"U0ZJZBJLF","text":"the conf. block?","ts":"1482338299.000592"},{"type":"message","user":"U0ZJZBJLF","text":"(Jason) ^","ts":"1482338311.000593"},{"type":"message","user":"U0XPR4NP4","text":"I expect for the bulk of the 'weight' to be the MSP definitions.","ts":"1482338384.000594"},{"type":"message","user":"U0XPR4NP4","text":"(And the bulk of that weight to come from the certificates)","ts":"1482338431.000595"},{"type":"message","user":"U0ZJZBJLF","text":"Makes sense. All right, thanks a lot Jason! \nYou have a knack of pointing at problems we don't see because we don't know the full picture...","ts":"1482338573.000596"},{"type":"message","user":"U0XPR4NP4","text":"Thanks! Happy to help! Hopefully my world view isn't too orderer myopic, and hopefully <@U1BC5A0F9> can confirm some of what I've said","ts":"1482338648.000597"},{"user":"U1V6SJ1FF","text":"<@U1V6SJ1FF|dgorman> has joined the channel","type":"message","subtype":"channel_join","ts":"1482399524.000600"},{"user":"U3DKG7M54","text":"<@U3DKG7M54|rahulhegde> has joined the channel","type":"message","subtype":"channel_join","ts":"1482950570.000601"},{"user":"U39S0S55F","text":"<@U39S0S55F|wangjie> has joined the channel","type":"message","subtype":"channel_join","ts":"1482993516.000602"},{"user":"U16G4K3J7","text":"<@U16G4K3J7|hscholl> has joined the channel","type":"message","subtype":"channel_join","ts":"1484078809.000603"},{"user":"U17CZFXGU","text":"<@U17CZFXGU|plucena> has joined the channel","type":"message","subtype":"channel_join","ts":"1484234666.000604"},{"user":"U0XQ35CDD","text":"<@U0XQ35CDD|kostas> has left the channel","type":"message","subtype":"channel_leave","ts":"1484935429.000605"},{"type":"message","user":"U2NNLN56V","text":"Hi, is there any document about the role of gossip played in fabric?","ts":"1485266694.000606"},{"type":"message","user":"U2NNLN56V","text":"In byzantine case, is gossip possible?","ts":"1485266708.000607"},{"type":"message","user":"U1HFNJB50","text":"<@U2NNLN56V> Please see here: <https:\/\/docs.google.com\/document\/d\/157AvKxVRqgeaCTSpN86ICa5x-XihZ67bOrNMc5xLvEU\/edit#>","ts":"1485267989.000608"},{"type":"message","subtype":"file_share","text":"<@U1HFNJB50|c0rwin> shared a file: <https:\/\/hyperledgerproject.slack.com\/files\/c0rwin\/F3VK0TQH1\/gossip_based_data_dissemination|Gossip based data Dissemination>","file":{"id":"F3VK0TQH1","created":1485268017,"timestamp":1485268017,"name":"Gossip based data Dissemination","title":"Gossip based data Dissemination","mimetype":"application\/vnd.google-apps.document","filetype":"gdoc","pretty_type":"GDocs Document","user":"U1HFNJB50","editable":false,"size":31408,"mode":"external","is_external":true,"external_type":"gdrive","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https:\/\/docs.google.com\/document\/d\/157AvKxVRqgeaCTSpN86ICa5x-XihZ67bOrNMc5xLvEU\/edit#","thumb_64":"https:\/\/a.slack-edge.com\/66f9\/img\/files\/gdraw_64.png","thumb_360":"https:\/\/a.slack-edge.com\/272a\/img\/files\/gdoc_360.png","thumb_360_w":360,"thumb_360_h":167,"permalink":"https:\/\/hyperledgerproject.slack.com\/files\/c0rwin\/F3VK0TQH1\/gossip_based_data_dissemination","channels":["C2HHHJCSU"],"groups":[],"ims":[],"comments_count":0},"user":"U1HFNJB50","upload":false,"display_as_bot":false,"username":"<@U1HFNJB50|c0rwin>","bot_id":null,"ts":"1485268017.000610"},{"type":"message","user":"U2NNLN56V","text":"Thanks, <@U1HFNJB50>","ts":"1485304607.000613"},{"type":"message","user":"U0ZJZBJLF","text":"<@U3X6RA34J>","ts":"1485493044.000623"},{"user":"U3X6RA34J","inviter":"U0ZJZBJLF","text":"<@U3X6RA34J|archivebot> has joined the channel","type":"message","subtype":"channel_join","ts":"1485493049.000624"},{"type":"message","user":"U0ZJZBJLF","text":"<@U1HFNJB50>","ts":"1485532288.000627"},{"user":"U3V4G8HUZ","text":"<@U3V4G8HUZ|sagmeister> has joined the channel","type":"message","subtype":"channel_join","ts":"1485787902.000636"},{"type":"message","user":"U1HFNJB50","text":"<https:\/\/www.infoq.com\/podcasts\/bourgon-paxos-go-crdts?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global>","attachments":[{"service_name":"InfoQ","title":"Peter Bourgon on Gossip, Paxos, Microservices in Go, and CRDTs at SoundCloud","title_link":"https:\/\/www.infoq.com\/podcasts\/bourgon-paxos-go-crdts?utm_campaign=infoq_content&utm_source=infoq&utm_medium=feed&utm_term=global","text":"QCon chair Wesley Reisz talks to Weaveworks' Engineer, Peter Bourgon. Bourgon discusses his work at Weaveworks, discovering and imlemeting CRDTs for time-stamped events at Soundcloud, building Microservices in Go with Go Kit and the state of package management in Go.","fallback":"InfoQ: Peter Bourgon on Gossip, Paxos, Microservices in Go, and CRDTs at SoundCloud","from_url":"https:\/\/www.infoq.com\/podcasts\/bourgon-paxos-go-crdts?utm_campaign=infoq_content&utm_source=infoq&utm_medium=feed&utm_term=global","thumb_url":"https:\/\/www.infoq.com\/resource\/podcasts\/bourgon-paxos-go-crdts\/en\/smallimage\/logo.jpg","thumb_width":100,"thumb_height":100,"service_icon":"https:\/\/cdn.infoq.com\/statics_s2_20170130-0625\/apple-touch-icon.png","id":1}],"ts":"1485795350.000637"},{"user":"U3BH74NH0","text":"<@U3BH74NH0|passkit> has joined the channel","type":"message","subtype":"channel_join","ts":"1485832557.000641"},{"type":"message","user":"U184J2R7S","text":"hi everybody, in case you have not heard, linux foundation is moving us off of Slack and onto Rocket.Chat, everybody in Slack can log in to the new chat server using your existing linux foundation ID, please visit <http:\/\/chat.hyperledger.org\/> to login to the new chat server","ts":"1486078876.000651"},{"user":"U33HN2ETU","text":"<@U33HN2ETU|adnan> has joined the channel","type":"message","subtype":"channel_join","ts":"1486148411.000656"},{"user":"U0UHG4VP1","text":"<@U0UHG4VP1|ry> has joined the channel","type":"message","subtype":"channel_join","ts":"1486509899.000667"},{"type":"message","user":"U0UHG4VP1","text":"please migrate to <https:\/\/chat.hyperledger.org\/>","ts":"1486509902.000668"},{"user":"U0UHG4VP1","members":["U0KM61BCP","U0KN2SSKE","U0MRY2LKY","U0NCW1DPX","U0PB67X4K","U0UGH3X7X","U0UHG4VP1","U0ULK2JPP","U0W7D64LC","U0XPR4NP4","U0XV1HDL3","U0Y14MWA2","U0YJUECE8","U0YM41HA5","U0YMACQSW","U0YP7KFGQ","U0ZJZBJLF","U0ZR63HLK","U12452RAP","U12AHQ3NK","U132537KP","U138W4A1F","U13Q594J2","U16G4K3J7","U17CZFXGU","U184J2R7S","U1B5DPRLG","U1B9E51R8","U1BC5A0F9","U1CPB11D0","U1D89DP47","U1GN670VD","U1HFNJB50","U1KDHJT6H","U1M9R3C8Z","U1V6SJ1FF","U1VG8LNP3","U24M29R4G","U2B3A70TX","U2BGFAHC7","U2FR6FUJV","U2GT93M2T","U2MCH9EEB","U2NDE1ZCK","U2NNLN56V","U2P0N5J5A","U2QLU433N","U319G36P4","U327VGGF9","U33HN2ETU","U37Q1F5FT","U38H8MS11","U38JCNW5V","U39S0S55F","U3BH74NH0","U3C5S0SP7","U3DKG7M54","U3V4G8HUZ","U3X6RA34J"],"text":"<@U0UHG4VP1|ry> archived the channel (w\/ 59 members)","type":"message","subtype":"channel_archive","ts":"1486509908.000669"}]
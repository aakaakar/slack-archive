[{"user":"U0XR6J961","type":"message","subtype":"channel_join","text":"<@U0XR6J961|simon> has joined the channel","ts":"1461334028.000002"},{"user":"U0XR6J961","purpose":"Fabric architecture design &amp; discussion","type":"message","subtype":"channel_purpose","text":"<@U0XR6J961|simon> set the channel purpose: Fabric architecture design &amp; discussion","ts":"1461334028.000003"},{"user":"U0XRC0KLH","inviter":"U0XR6J961","type":"message","subtype":"channel_join","text":"<@U0XRC0KLH|chetsky> has joined the channel","ts":"1461334127.000004"},{"user":"U0XV1HDL3","inviter":"U0XR6J961","type":"message","subtype":"channel_join","text":"<@U0XV1HDL3|cca> has joined the channel","ts":"1461334127.000005"},{"user":"U0Y14MWA2","inviter":"U0XR6J961","type":"message","subtype":"channel_join","text":"<@U0Y14MWA2|vukolic> has joined the channel","ts":"1461334127.000006"},{"user":"U0TFEHX8E","inviter":"U0XR6J961","type":"message","subtype":"channel_join","text":"<@U0TFEHX8E|sheehan> has joined the channel","ts":"1461334127.000007"},{"user":"U0XPR4NP4","inviter":"U0XR6J961","type":"message","subtype":"channel_join","text":"<@U0XPR4NP4|jyellick> has joined the channel","ts":"1461334128.000008"},{"user":"U0KN2SSKE","inviter":"U0XR6J961","type":"message","subtype":"channel_join","text":"<@U0KN2SSKE|binhn> has joined the channel","ts":"1461334128.000009"},{"user":"U0P75RFT4","type":"message","subtype":"channel_join","text":"<@U0P75RFT4|tim.blankers> has joined the channel","ts":"1461415742.000010"},{"user":"U137A6LBE","type":"message","subtype":"channel_join","text":"<@U137A6LBE|latone> has joined the channel","ts":"1461458394.000011"},{"user":"U0ZR63HLK","type":"message","subtype":"channel_join","text":"<@U0ZR63HLK|adc> has joined the channel","ts":"1461575759.000012"},{"user":"U13DAL5V5","type":"message","subtype":"channel_join","text":"<@U13DAL5V5|wimtobback> has joined the channel","ts":"1461584302.000013"},{"user":"U13JUH485","type":"message","subtype":"channel_join","text":"<@U13JUH485|fabio> has joined the channel","ts":"1461617665.000014"},{"user":"U0PKMSYKG","type":"message","subtype":"channel_join","text":"<@U0PKMSYKG|j3ffyang> has joined the channel","ts":"1461633095.000015"},{"user":"U13TWBRBL","type":"message","subtype":"channel_join","text":"<@U13TWBRBL|jzhang> has joined the channel","ts":"1461692962.000016"},{"user":"U0NCW1DPX","type":"message","subtype":"channel_join","text":"<@U0NCW1DPX|gengjh> has joined the channel","ts":"1461727255.000017"},{"user":"U143D0EQ4","type":"message","subtype":"channel_join","text":"<@U143D0EQ4|lfeagan> has joined the channel","ts":"1461744244.000018"},{"user":"U0N1D1UAE","type":"message","subtype":"channel_join","text":"<@U0N1D1UAE|bcbrock> has joined the channel","ts":"1461771546.000019"},{"user":"U0N1K6Z0X","type":"message","subtype":"channel_join","text":"<@U0N1K6Z0X|georglink> has joined the channel","ts":"1461852100.000020"},{"user":"U14S06MT7","type":"message","subtype":"channel_join","text":"<@U14S06MT7|igor> has joined the channel","ts":"1461928521.000021"},{"user":"U0T5ASQBE","type":"message","subtype":"channel_join","text":"<@U0T5ASQBE|bartcant> has joined the channel","ts":"1462165078.000022"},{"user":"U0M28HM6J","type":"message","subtype":"channel_join","text":"<@U0M28HM6J|takekiyokubo> has joined the channel","ts":"1462196807.000023"},{"user":"U11TAFPUP","type":"message","subtype":"channel_join","text":"<@U11TAFPUP|joseph> has joined the channel","ts":"1462205904.000024"},{"user":"U10MVHVHQ","type":"message","subtype":"channel_join","text":"<@U10MVHVHQ|inabatk> has joined the channel","ts":"1462240414.000025"},{"user":"U0KM61BCP","type":"message","subtype":"channel_join","text":"<@U0KM61BCP|cbf> has joined the channel","ts":"1462277072.000026"},{"user":"U0ULX737C","type":"message","subtype":"channel_join","text":"<@U0ULX737C|vipinb> has joined the channel","ts":"1462438606.000027"},{"user":"U0PB67X4K","type":"message","subtype":"channel_join","text":"<@U0PB67X4K|garisingh> has joined the channel","ts":"1462539708.000028"},{"user":"U11C7DZU5","type":"message","subtype":"channel_join","text":"<@U11C7DZU5|mark.moir> has joined the channel","ts":"1462542008.000029"},{"user":"U0ZMB7ZEJ","type":"message","subtype":"channel_join","text":"<@U0ZMB7ZEJ|jatinderbali> has joined the channel","ts":"1462625972.000002"},{"user":"U0NLZCF8V","type":"message","subtype":"channel_join","text":"<@U0NLZCF8V|juanblanco> has joined the channel","ts":"1462728913.000003"},{"user":"U173QDB0W","type":"message","subtype":"channel_join","text":"<@U173QDB0W|pablofullana> has joined the channel","ts":"1462745371.000004"},{"user":"U1751P7U4","type":"message","subtype":"channel_join","text":"<@U1751P7U4|shubhamvrkr> has joined the channel","ts":"1462775213.000005"},{"user":"U17BRDHPG","type":"message","subtype":"channel_join","text":"<@U17BRDHPG|jeroiraz> has joined the channel","ts":"1462822627.000006"},{"user":"U11L89VHU","type":"message","subtype":"channel_join","text":"<@U11L89VHU|posnerj> has joined the channel","ts":"1462846883.000007"},{"user":"U0N0GDVJ5","type":"message","subtype":"channel_join","text":"<@U0N0GDVJ5|nick> has joined the channel","ts":"1462847522.000008"},{"user":"U17CZFXGU","type":"message","subtype":"channel_join","text":"<@U17CZFXGU|plucena> has joined the channel","ts":"1462891093.000009"},{"user":"U0KPFAZNF","type":"message","subtype":"channel_join","text":"<@U0KPFAZNF|ghaskins> has joined the channel","ts":"1462892074.000010"},{"type":"message","user":"U13TWBRBL","text":"<@U0ULK2JPP>: <@U0KPFAZNF> can we discuss here your thoughts on the events support, since I\u2019m told you guys are working on this? i think it\u2019s a given that businesses would like to be notified of critical events like when particular transactions, or types of transactions, get validated and committed to the ledger (gets included in a new block). maybe related actions needs to be taken as part of the internal enterprise business process (triggering a BPM process?)","ts":"1462906218.000011"},{"user":"U0ULK2JPP","inviter":"U13TWBRBL","type":"message","subtype":"channel_join","text":"<@U0ULK2JPP|muralisr> has joined the channel","ts":"1462906226.000012"},{"type":"message","user":"U13TWBRBL","text":"have this been written down somewhere? I see a few requirements: 1) right now there\u2019s only events for new blocks, will i believe able to figure out which transactions of my interest (and am allowed access to inspect) are included? 2) should the fabric provide reliable messaging via a queue so a client won\u2019t miss any events if it\u2019s gone offline for whatever reason, or would that be considered the client\u2019s responsibility?","ts":"1462906452.000013"},{"type":"message","user":"U0ULK2JPP","text":"<@U13TWBRBL>: you mean \u201ccustom events\u201d (\u201cchaincode events\u201d)","ts":"1462906560.000014"},{"type":"message","user":"U0ULK2JPP","text":"<@U0KQ9QKH6> and I are looking at it","ts":"1462906587.000015"},{"user":"U0KQ9QKH6","inviter":"U0ULK2JPP","type":"message","subtype":"channel_join","text":"<@U0KQ9QKH6|pmullaney> has joined the channel","ts":"1462906605.000016"},{"type":"message","user":"U13TWBRBL","text":"i meant event delivery in general, even for system events, like the block event, I think enterprise clients would like to have the fabric support some level of reliable messaging instead of getting ephemeral events","ts":"1462906695.000017"},{"type":"message","user":"U0ULK2JPP","text":"right","ts":"1462906751.000018"},{"type":"message","user":"U0ULK2JPP","text":"no we were only focusing on custom events","ts":"1462906762.000019"},{"type":"message","user":"U13TWBRBL","text":"so is there plan to have an event queue for custom events?","ts":"1462906818.000020"},{"type":"message","user":"U0ULK2JPP","text":"no. we don\u2019t want to give any special treatment for custom events (in general)\u2026. which brings back your question about event delivery in general","ts":"1462906884.000021"},{"user":"U0YNLG611","inviter":"U13TWBRBL","type":"message","subtype":"channel_join","text":"<@U0YNLG611|mccox> has joined the channel","ts":"1462906906.000022"},{"user":"U14APLT0C","inviter":"U13TWBRBL","type":"message","subtype":"channel_join","text":"<@U14APLT0C|ijmitch> has joined the channel","ts":"1462906907.000023"},{"type":"message","user":"U13TWBRBL","text":"yep","ts":"1462906925.000024"},{"type":"message","user":"U0ULK2JPP","text":"if I understood the direction of your question correctly, things such as persistence of events or guranteed delivery are not built into the system","edited":{"user":"U0ULK2JPP","ts":"1462906990.000000"},"ts":"1462906927.000025"},{"type":"message","user":"U13TWBRBL","text":"right, that seems to be the case from my understanding as well","ts":"1462906950.000026"},{"type":"message","user":"U0ULK2JPP","text":"pluses and minus to building such things into the fabric vs loosely coupling them via adapters","ts":"1462907134.000028"},{"type":"message","user":"U0ULK2JPP","text":"<@U0YNLG611>: <@U14APLT0C> <@U13TWBRBL>  \u2026 your thoughts please ?","ts":"1462907206.000029"},{"type":"message","user":"U0KQ9QKH6","text":"initially were looking at basic event delivery and generation for all events, custom and system, the ability for clients to register for events with filtering","ts":"1462907291.000030"},{"type":"message","user":"U13TWBRBL","text":"i would think given the distributed nature of a kafka cluster, it could work well with a hyperledger network, basically you have multiple replicas each local to a VP node, and have kafka manage the replication throughout the network","ts":"1462907386.000031"},{"type":"message","user":"U0KQ9QKH6","text":"after this is in place, we could implement such that an NVP(or multiple) could offload the registration and delivery - perhaps even implement persistence and reliability","ts":"1462907433.000032"},{"type":"message","user":"U0KQ9QKH6","text":"<@U13TWBRBL>: kafka would be interesting in that second step","ts":"1462907492.000033"},{"type":"message","user":"U0ULK2JPP","text":"yep\u2026 I\u2019d start with the adapter approach to build that. And as we need support in the system build it as we go along","edited":{"user":"U0ULK2JPP","ts":"1462907526.000000"},"ts":"1462907495.000034"},{"type":"message","user":"U0ULK2JPP","text":"+1 for kafka in any form","ts":"1462907514.000035"},{"type":"message","user":"U0ULK2JPP","text":"<@U13TWBRBL>: we could even create an adapter immediately to play with kafka integration","ts":"1462907552.000037"},{"type":"message","user":"U13TWBRBL","text":"is the adapter piece described or coded up somewhere?","ts":"1462907587.000038"},{"type":"message","user":"U0ULK2JPP","text":"yes","ts":"1462907593.000039"},{"type":"message","user":"U0ULK2JPP","text":"its in a simple test case","ts":"1462907601.000040"},{"type":"message","user":"U0ULK2JPP","text":"and also in a recent checkin","ts":"1462907606.000041"},{"type":"message","user":"U0ULK2JPP","text":"<http:\/\/github.com\/hyperledger\/fabric\/examples\/events\/block-listener|github.com\/hyperledger\/fabric\/examples\/events\/block-listener>","ts":"1462907661.000042"},{"type":"message","user":"U14APLT0C","text":"I\u2019m still attracted by a symmetry between submitting transactions and listening for transactions - at least at the business application level\u2026. and being able to \u2018de-block\u2019 transactions makes that component quite a clever and privileged thing","ts":"1462907889.000043"},{"type":"message","user":"U14APLT0C","text":"but something we could likely build using the block events from the fabric","ts":"1462907970.000044"},{"type":"message","user":"U0ULK2JPP","text":"so that sounds close to what we have .. provide the building blocks for writing event driven applications","ts":"1462908184.000045"},{"type":"message","user":"U0PB67X4K","text":"for block \/ transaction events, you really don't need a queue - you already have the ledger being stored on the peer.  blocks have sequential numbering and if you crash and come back up, you'll realize that you are missing blocks.  Putting the onus of persistent messaging on the peer seems like overkill in this case.  Now perhaps we need to have a better \"range\" query to retrieve blocks you missed, but I think that is a good thing to have in any case","ts":"1462909184.000046"},{"type":"message","user":"U0PB67X4K","text":"custom events could perhaps be treated as any other type of transaction as well and follow a similar architectural path","ts":"1462909273.000047"},{"type":"message","user":"U13TWBRBL","text":"<@U0PB67X4K>: what happens to custom events?","ts":"1462909504.000048"},{"type":"message","user":"U0KQ9QKH6","text":"our goal is to treat them the same architecturally","ts":"1462909505.000049"},{"type":"message","user":"U13TWBRBL","text":"i guess custom events need to be re-constructed from the transactions?","ts":"1462909565.000050"},{"type":"message","user":"U0PB67X4K","text":"a custom event = transaction basically","ts":"1462909591.000051"},{"type":"message","user":"U0PB67X4K","text":"so createEvent() could be executetrans under the covers","edited":{"user":"U0PB67X4K","ts":"1462909654.000000"},"ts":"1462909619.000052"},{"type":"message","user":"U0KQ9QKH6","text":"generated as a result of a transaction, no?","ts":"1462909623.000053"},{"type":"message","user":"U0PB67X4K","text":"if we are smart, we could include events as a transaction type \/ output in committed blocks","ts":"1462909708.000055"},{"type":"message","user":"U0PB67X4K","text":"so chaincode executes, and when committed event would be emitted but would actually be included in the block with the transaction (or something like that)","ts":"1462909753.000056"},{"type":"message","user":"U13TWBRBL","text":"that got me thinking: what\u2019s the definition of a \u201ccustom event\u201d, and what scenarios are we trying to tackle with that?","ts":"1462909771.000057"},{"type":"message","user":"U0PB67X4K","text":"I think of it as transaction processing metadata you want to broadcast","ts":"1462909800.000058"},{"type":"message","user":"U13TWBRBL","text":"ok","ts":"1462909809.000059"},{"type":"message","user":"U0PB67X4K","text":"but i think other people might have more grandiose ideas.  :simple_smile:","ts":"1462909836.000060"},{"type":"message","user":"U0PB67X4K","text":"but as I say, I am a simple man","ts":"1462909867.000061","reactions":[{"name":"+1","users":["U13TWBRBL"],"count":1}]},{"type":"message","user":"U13TWBRBL","text":"me too, always looking for the simplest solution to the problem at hand :wink:","ts":"1462909919.000062"},{"type":"message","user":"U0PB67X4K","text":"it might be helpful if someone provided an example of chaincode where they want to emit a custom event and explained how they want to use it","ts":"1462909985.000063"},{"type":"message","user":"U13TWBRBL","text":"so i think your idea is similar to Kafka\u2019s philosophy: the server\u2019s responsibility is providing the event log, the onus is on the client how to handle offset etc.","ts":"1462910003.000064"},{"type":"message","user":"U0PB67X4K","text":"<@U13TWBRBL>:  you know too many of my secrets","ts":"1462910021.000065"},{"type":"message","user":"U0PB67X4K","text":"Tibco RV used to do the same thing","edited":{"user":"U0PB67X4K","ts":"1462910057.000000"},"ts":"1462910046.000066"},{"type":"message","user":"U13TWBRBL","text":"<@U0ULK2JPP>: <@U0KQ9QKH6> do you have exemplary scenarios for custom events?","ts":"1462910215.000068"},{"type":"message","user":"U0KQ9QKH6","text":"so, a chaincode may want to indicate a threshold of some kind has been exceeded and an action must be taken","ts":"1462910426.000069"},{"type":"message","user":"U0KQ9QKH6","text":"many of our use cases can fall into that scenario, the data that the event may carry might be slightly different in different cases","ts":"1462910488.000070"},{"type":"message","user":"U0KQ9QKH6","text":"these next examples may not fall under custom events but we would like to clients to be able to easily determine when certain transaction have been committed for serialization purposes","ts":"1462910591.000071"},{"type":"message","user":"U0ULK2JPP","text":"<!here|@here> catching up :simple_smile: \u2026 and this from <@U0PB67X4K> caught the eye \"I think of it as transaction processing metadata you want to broadcast\"","ts":"1462914147.000072"},{"type":"message","user":"U0ULK2JPP","text":"I think of it like that too\u2026 with the addition \u201cjust like other transaction data it is desirable that events are satisfy transaction properties such as immutably stored, deterministic (same event on all peer) etc\"","ts":"1462914234.000073"},{"type":"message","user":"U0ULK2JPP","text":"this means that we not only broadcast but also store","ts":"1462914246.000074"},{"type":"message","user":"U0ULK2JPP","text":"this excludes events such as transient events, events not part of a transaction scope (\u201cautonomous events\u201d) etc.. it could be restrictive (it woud be nice for a chaincode to wakeup and send a timer event but we cannot do that in this model) but at least it gets us started simply and more importantly make sure we don\u2019t break rules","ts":"1462914587.000075"},{"type":"message","user":"U0ULK2JPP","text":"any disagreements in any of the above ?","ts":"1462914660.000076"},{"type":"message","user":"U0ULK2JPP","text":"just saw this <@U0PB67X4K> \"so chaincode executes, and when committed event would be emitted but would actually be included in the block with the transaction (or something like that)\u201d\u2026 so all that has been said :simple_smile:","ts":"1462914916.000077"},{"type":"message","user":"U0XRC0KLH","text":"<@U0ULK2JPP> <@U0PB67X4K> guys, you've looked at that spec for events, hes?","ts":"1462919138.000078"},{"type":"message","user":"U0XRC0KLH","text":"yes?","ts":"1462919139.000079"},{"type":"message","user":"U0ULK2JPP","text":"hey <@U0XRC0KLH> \u2026 vaguely remember","ts":"1462919230.000080"},{"type":"message","user":"U0ULK2JPP","text":"handy link ?","ts":"1462919235.000081"},{"type":"message","user":"U0XRC0KLH","text":"uh .... not anymore *grin*","ts":"1462919243.000082"},{"type":"message","user":"U0ULK2JPP","text":"that\u2019s what I thought","ts":"1462919249.000083"},{"type":"message","user":"U0XRC0KLH","text":"but it should be in your email someplace","ts":"1462919251.000084"},{"type":"message","user":"U0ULK2JPP","text":"ok","ts":"1462919255.000085"},{"type":"message","user":"U0ULK2JPP","text":"will look","ts":"1462919257.000086"},{"user":"U0MJ8DFB3","type":"message","subtype":"channel_join","text":"<@U0MJ8DFB3|andreas.fletcher> has joined the channel","ts":"1462953168.000087"},{"type":"message","user":"U13TWBRBL","text":"<@U0ULK2JPP>: can you please share the \u201cspec for events\u201d when you are able to locate it?","ts":"1462969891.000088"},{"type":"message","user":"U13TWBRBL","text":"<@U0PB67X4K>: so the implementation of a messaging support may not need a queue because we could treat the ledger as the queue, but I think some questions still remain, for instance, what would the application be expected to do?","ts":"1462970199.000089"},{"type":"message","user":"U13TWBRBL","text":"i could see the fabric provide a \u201cmessaging client\u201d component that can be run inside a microservice for the purpose of application integrations (just like the SDK)","ts":"1462970267.000090"},{"type":"message","user":"U13TWBRBL","text":"because there\u2019s still a lot of specific messaging-related concerns that this client library needs to do, keeping track of committed offsets for instance, that\u2019s not trivial to code up","ts":"1462970497.000091"},{"type":"message","user":"U0KQ9QKH6","text":"I can say that certain events within our use case would be interesting to those reviewing the history\/sequence of transactions on the ledger(regulators). Having event data in the ledger is appealing from that standpoint","ts":"1462970764.000092"},{"type":"message","user":"U0KQ9QKH6","text":"having a messaging client would help with coordination between external entities and other chaincode, but doesn't address the history aspect","ts":"1462970878.000093"},{"type":"message","user":"U13TWBRBL","text":"<@U0KQ9QKH6>: agreed, having a \u201cmessaging system\" on top of the events support would make it much easier for applications to interact with the ledger in real-time or in typical manners applications integrate through messaging","ts":"1462971272.000094","reactions":[{"name":"+1","users":["U1A5P979S"],"count":1}]},{"user":"U17F0A68Y","type":"message","subtype":"channel_join","text":"<@U17F0A68Y|lhy555> has joined the channel","ts":"1463033984.000095"},{"user":"U1296EA0M","type":"message","subtype":"channel_join","text":"<@U1296EA0M|maro> has joined the channel","ts":"1463069706.000096"},{"user":"U1802P5D3","type":"message","subtype":"channel_join","text":"<@U1802P5D3|jianzhang98> has joined the channel","ts":"1463262634.000097"},{"user":"U1914JUPK","type":"message","subtype":"channel_join","text":"<@U1914JUPK|bernardlin> has joined the channel","ts":"1463285277.000098"},{"user":"U1937HD32","type":"message","subtype":"channel_join","text":"<@U1937HD32|uranther> has joined the channel","ts":"1463358403.000099"},{"user":"U193ZSYK0","type":"message","subtype":"channel_join","text":"<@U193ZSYK0|chanderg> has joined the channel","ts":"1463377127.000100"},{"user":"U19MP2N67","type":"message","subtype":"channel_join","text":"<@U19MP2N67|rupendradhillon> has joined the channel","ts":"1463547202.000101"},{"user":"U115YGEH1","type":"message","subtype":"channel_join","text":"<@U115YGEH1|mtakemiya> has joined the channel","ts":"1463646601.000102"},{"user":"U1A5P979S","type":"message","subtype":"channel_join","text":"<@U1A5P979S|v.thirugnanam> has joined the channel","ts":"1463695646.000103"},{"user":"U0UL07VSL","type":"message","subtype":"channel_join","text":"<@U0UL07VSL|frankyclu> has joined the channel","ts":"1464025788.000104"},{"user":"U1B6WAAKF","type":"message","subtype":"channel_join","text":"<@U1B6WAAKF|maruthi> has joined the channel","ts":"1464055581.000105"},{"user":"U1C3WNWRF","type":"message","subtype":"channel_join","text":"<@U1C3WNWRF|jphillips> has joined the channel","ts":"1464293097.000106"},{"user":"U0Z41KY5V","type":"message","subtype":"channel_join","text":"<@U0Z41KY5V|baohua> has joined the channel","ts":"1464312207.000107"},{"user":"U14NC480K","type":"message","subtype":"channel_join","text":"<@U14NC480K|charles-cai> has joined the channel","ts":"1464355843.000108"},{"user":"U0Y55KNG2","type":"message","subtype":"channel_join","text":"<@U0Y55KNG2|kletkeman> has joined the channel","ts":"1464357627.000109"},{"type":"message","user":"U0Y14MWA2","text":"<!channel> As discussed on the last HL Arch WG on Wednesday - the proposal for the next consensus architecture is posted here: <https:\/\/github.com\/hyperledger\/fabric\/wiki\/Next-Consensus-Architecture-Proposal>","attachments":[{"service_name":"GitHub","title":"hyperledger\/fabric","title_link":"https:\/\/github.com\/hyperledger\/fabric\/wiki\/Next-Consensus-Architecture-Proposal","text":"fabric - Fabric is a blockchain project in Incubation proposed to the community and documented at <https:\/\/goo.gl\/RYQZ5N>. Information on what Incubation entails can be found in the Hyperledger Proj...","fallback":"GitHub: hyperledger\/fabric","thumb_url":"https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400","from_url":"https:\/\/github.com\/hyperledger\/fabric\/wiki\/Next-Consensus-Architecture-Proposal","thumb_width":142,"thumb_height":142,"service_icon":"https:\/\/github.com\/apple-touch-icon.png","id":1}],"ts":"1464362873.000110"},{"type":"message","user":"U0Y14MWA2","text":"please review, comment, discuss and contribute","ts":"1464362903.000112"},{"type":"message","user":"U0UL07VSL","text":"<@U0Y14MWA2>:  looks great! btw... I know it is a \"fact\", but it is  probably not that clear in the document that channels are decentralized; I feel there is some disconnect between 2.4 &amp; 2.5; some people had asked \"which entity will run the channel that consenters are subscribing to\"","edited":{"user":"U0UL07VSL","ts":"1464375545.000000"},"ts":"1464373209.000113"},{"type":"message","user":"U0Y14MWA2","text":"<@U0UL07VSL> it is in fact consenters that implement the (consensus) channel to which peers are subscribing to. Although in production deployments a consensus channel will surely be decentralized (will make sure this is clear in the document) in fact the channel could even be centralized (e.g., for development and testing purposes). In any case consensus channel is *logically* centralized and abstracted away from peers.","ts":"1464377024.000125"},{"user":"U1CK6522F","type":"message","subtype":"channel_join","text":"<@U1CK6522F|zuowang> has joined the channel","ts":"1464663096.000126"},{"user":"U142E5N0P","type":"message","subtype":"channel_join","text":"<@U142E5N0P|yingfeng> has joined the channel","ts":"1464663140.000127"},{"user":"U1EEGQARJ","type":"message","subtype":"channel_join","text":"<@U1EEGQARJ|philippe> has joined the channel","ts":"1465226867.000002"},{"user":"U130QV7RB","type":"message","subtype":"channel_join","text":"<@U130QV7RB|mpage> has joined the channel","ts":"1465300168.000003"},{"user":"U0Z6VMEER","type":"message","subtype":"channel_join","text":"<@U0Z6VMEER|beauson45> has joined the channel","ts":"1465317136.000004"},{"user":"U1F3CQ2HX","type":"message","subtype":"channel_join","text":"<@U1F3CQ2HX|nhrishi> has joined the channel","ts":"1465384658.000005"},{"user":"U0LBXH9S4","type":"message","subtype":"channel_join","text":"<@U0LBXH9S4|evan.wagner> has joined the channel","ts":"1465393008.000006"},{"user":"U16NDNH08","type":"message","subtype":"channel_join","text":"<@U16NDNH08|crow15> has joined the channel","ts":"1465402811.000007"},{"user":"U1FU2880L","type":"message","subtype":"channel_join","text":"<@U1FU2880L|gabelev> has joined the channel","ts":"1465585467.000008"},{"user":"U1G86QUSG","type":"message","subtype":"channel_join","text":"<@U1G86QUSG|kpatch> has joined the channel","ts":"1465799879.000002"},{"user":"U12452RAP","type":"message","subtype":"channel_join","text":"<@U12452RAP|grapebaba> has joined the channel","ts":"1465879350.000003"},{"type":"message","user":"U0KM61BCP","text":"<@U0ULK2JPP>: regarding <https:\/\/github.com\/hyperledger\/fabric\/pull\/1826>","attachments":[{"service_name":"GitHub","title":"Remove syscc from genesis#issue1741 by muralisrini \u00b7 Pull Request #1826 \u00b7 hyperledger\/fabric \u00b7 GitHub","title_link":"https:\/\/github.com\/hyperledger\/fabric\/pull\/1826","text":"Remove system chaincodes from genesis block and make them completely non-declarative. Description System chaincodes should be treated as part of the fabric with all policies and rules applicable ...","fallback":"GitHub: Remove syscc from genesis#issue1741 by muralisrini \u00b7 Pull Request #1826 \u00b7 hyperledger\/fabric","thumb_url":"https:\/\/avatars1.githubusercontent.com\/u\/14361488?v=3&s=400","from_url":"https:\/\/github.com\/hyperledger\/fabric\/pull\/1826","thumb_width":420,"thumb_height":420,"service_icon":"https:\/\/a.slack-edge.com\/e8ef6\/img\/unfurl_icons\/github.png","id":1}],"ts":"1465906464.000004"},{"type":"message","user":"U0KM61BCP","text":"I\u2019m trying to wrap my head around what we do should the system chaincode that created the genesis block be changed","ts":"1465906586.000006"},{"type":"message","user":"U0KM61BCP","text":"with chaincode, we would have to copy the ledger\u2019s contents to a new blockchain associated with the new chaincode, correct?","ts":"1465906665.000007"},{"type":"message","user":"U0KM61BCP","text":"<@U0PB67X4K>: ^^","ts":"1465906687.000008"},{"user":"U1GN670VD","type":"message","subtype":"channel_join","text":"<@U1GN670VD|thiruworkspace> has joined the channel","ts":"1465907248.000009"},{"type":"message","user":"U0KPFAZNF","text":"<@U0KM61BCP>: It probably needs to be handled in a way similar to how we will support normal chaincode upgrade (with perhaps a few extra considerations)\u2026that is, something along the lines of an Upgrade() verb that is system level like Init() where the code would have a chance to translate (if necessary) between an old schema and the new schema.  In this sense, its like an \u201cinstance copy\u201d, but I don\u2019t think we need to go so far as to say we need to migrate the entire ledger\/chain.","ts":"1465907745.000010"},{"type":"message","user":"U0KPFAZNF","text":"the difference between system\/normal code in this regard is that I think normal chaincode has to go through consensus (and possibly contract\/human approval) whereas syscc is baked into the peer\u2026.the \u201cconsensus\u201d is by virtue of installing the new peer code.","ts":"1465907828.000011"},{"type":"message","user":"U0KM61BCP","text":"then we need all peers in the network on the same level of code, yes?","ts":"1465907860.000012"},{"type":"message","user":"U0KPFAZNF","text":"that said, we probably need to be careful about how a forked upgrade of the peer behaves","ts":"1465907862.000013"},{"type":"message","user":"U0KPFAZNF","text":"well, i think the key is we need a (consensus-type) majority to recognize it, at least","ts":"1465907896.000014"},{"type":"message","user":"U0KPFAZNF","text":"so, 2f+1 nodes with upgraded code with PBFT, for instance","ts":"1465907917.000015"},{"type":"message","user":"U0KPFAZNF","text":"what I need to wrap my head around is whether this should be implicit or explicitly tested","ts":"1465907955.000016"},{"type":"message","user":"U0KM61BCP","text":"explicit please","ts":"1465908009.000017"},{"type":"message","user":"U0KM61BCP","text":":wink:","ts":"1465908011.000018"},{"type":"message","user":"U0KPFAZNF","text":"maybe a peer joining the network emits something similar to a txn","ts":"1465908012.000019"},{"type":"message","user":"U0KPFAZNF","text":"with revlevels, etc","ts":"1465908039.000020"},{"type":"message","user":"U0KM61BCP","text":"but I guess my point is that #1826 doesn\u2019t completely address the scenario","ts":"1465908043.000021"},{"type":"message","user":"U0ULK2JPP","text":"<@U0KM61BCP> <@U0KPFAZNF> I think both your comments above summarizes the situation correctly. Let me highlight a bit here ?","ts":"1465908073.000022"},{"type":"message","user":"U0KM61BCP","text":"removing the system chaincode from genesis block only part of the solution","ts":"1465908089.000023"},{"type":"message","user":"U0KPFAZNF","text":"yes, that is certainly true\u2026but to be fair, we dont support Upgrade() for any chaincode (yet))","ts":"1465908152.000024"},{"type":"message","user":"U0KPFAZNF","text":"syscc or otherwise","ts":"1465908161.000025"},{"type":"message","user":"U0ULK2JPP","text":"\"syscc is baked into the peer\u201d - the same rules to \u201cUpgrading\u201d the peer should apply to system chaincode","ts":"1465908195.000026"},{"type":"message","user":"U0KPFAZNF","text":"so, perhaps to your point, right now any kind of \u201cupgrade\u201d probably is ledger migration","ts":"1465908211.000027"},{"type":"message","user":"U0KM61BCP","text":"seems to me that is correct","ts":"1465908231.000028"},{"type":"message","user":"U0KPFAZNF","text":"but longer term, I expect that to be improved upon","ts":"1465908231.000029"},{"type":"message","user":"U0KM61BCP","text":"I would think we could\/should only require if syscc changed","ts":"1465908251.000030"},{"type":"message","user":"U0KM61BCP","text":"eventually","ts":"1465908258.000031"},{"type":"message","user":"U0KPFAZNF","text":"only require ledger migration?","ts":"1465908275.000032"},{"type":"message","user":"U0KM61BCP","text":"y","ts":"1465908283.000033"},{"type":"message","user":"U0KPFAZNF","text":"we need to be careful because what constitutes \u201csyscc changed\"","ts":"1465908306.000034"},{"type":"message","user":"U0KM61BCP","text":"but, I suppose we also have to consider when we change the protocol","ts":"1465908309.000035"},{"type":"message","user":"U0KPFAZNF","text":"there could be small code changes that do not impact protocol\/persistence ABI incongruence and then do we need to be that strict?","ts":"1465908341.000036"},{"type":"message","user":"U0KM61BCP","text":"right","ts":"1465908359.000037"},{"type":"message","user":"U0KPFAZNF","text":"one problem with syscc is it will be harder to quantify \u201ca change has occured\"","ts":"1465908384.000038"},{"type":"message","user":"U0KPFAZNF","text":"normal chaincode we can have a comprehensive hash that observes even a single character in a comment as a new hash","edited":{"user":"U0KPFAZNF","ts":"1465908762.000000"},"ts":"1465908409.000039"},{"type":"message","user":"U0KPFAZNF","text":"but that wont be true with syscc (unless someone can get clever)","ts":"1465908419.000040"},{"type":"message","user":"U0KM61BCP","text":"is there a way to hash a golang package?","ts":"1465908425.000041"},{"text":"looks at <@U0ULK2JPP|muralisr>","type":"message","subtype":"me_message","user":"U0KPFAZNF","ts":"1465908426.000042"},{"type":"message","user":"U0KPFAZNF","text":"the golang attitude towards dynamic code loading is annoying\/limiting","ts":"1465908492.000043"},{"type":"message","user":"U0KPFAZNF","text":"but I digress","ts":"1465908494.000044"},{"type":"message","user":"U0KPFAZNF","text":"we would have a more robust architecture if we could have just put syscc modules in something like an .so","ts":"1465908537.000045"},{"type":"message","user":"U0KPFAZNF","text":"oh well","ts":"1465908539.000046"},{"type":"message","user":"U0KPFAZNF","text":"have to step away, kids to school\u2026bbiab","ts":"1465908566.000047"},{"type":"message","user":"U0ULK2JPP","text":"last point first - when we implement security for sys cc, the plan is to include the hash of the system cc as well ( @adecaro )","ts":"1465908606.000048"},{"type":"message","user":"U0ULK2JPP","text":"I think we generally agree that sys cc\u2019s upgrades should be considered to be closer to (maybe even identical to) the the policies for upgrading the peer itself ?","edited":{"user":"U0ULK2JPP","ts":"1465908689.000000"},"ts":"1465908680.000049"},{"type":"message","user":"U0ULK2JPP","text":"One thing to add to that...","ts":"1465908697.000051"},{"type":"message","user":"U0KM61BCP","text":"well, it isn\u2019t clear to me that we have a policy for upgrading the peer","ts":"1465908708.000052"},{"type":"message","user":"U0ULK2JPP","text":"true","ts":"1465908712.000053"},{"type":"message","user":"U0ULK2JPP","text":"agreed on that\u2026 not to digress, but we should devote some serious attention that","ts":"1465908736.000054"},{"type":"message","user":"U0KM61BCP","text":"I\u2019ve been talking to <@U0PB67X4K> about that","ts":"1465908738.000055"},{"type":"message","user":"U0ULK2JPP","text":"ok","ts":"1465908740.000056"},{"type":"message","user":"U0KM61BCP","text":"he says he has some thoughts","ts":"1465908749.000057"},{"type":"message","user":"U0KPFAZNF","text":"back","ts":"1465908778.000059"},{"type":"message","user":"U0KM61BCP","text":"personally, I would like to see us decompose things a bit so that we can contain change better and limit the need to do ledger migration, for instance","ts":"1465908791.000060"},{"type":"message","user":"U0ULK2JPP","text":"but if for some reason some peers fail to be on the same level as the sys cc, I\u2019d think consensus failures will show it up on invoke interactions","ts":"1465908803.000061"},{"type":"message","user":"U0KPFAZNF","text":"one thought\u2026that stuff I mentioned the other day about go-list walking all deps, that could possibly be used to tease out some kind of meaningful hash","ts":"1465908807.000062"},{"type":"message","user":"U0ULK2JPP","text":"so there\u2019s some safety net there","ts":"1465908820.000063"},{"type":"message","user":"U0KM61BCP","text":"can we add a test(s) for this, please?","ts":"1465908846.000064"},{"type":"message","user":"U0KPFAZNF","text":"but im not convinced we want that granularity per se","ts":"1465908860.000065"},{"type":"message","user":"U0ULK2JPP","text":"<@U0KM61BCP>, did I goof up on tests (again ?) \u2026 I did add one. I can add more","ts":"1465908885.000066"},{"type":"message","user":"U0KPFAZNF","text":"im thinking its about some peer-level thing that happens when a peer joins a network","ts":"1465908888.000067"},{"type":"message","user":"U0KPFAZNF","text":"(which would encompass all the syscc it includes)","ts":"1465908909.000068"},{"type":"message","user":"U0XR6J961","text":"do changes in the chaincode shim lead to different chaincode hash as well?","ts":"1465908927.000069"},{"type":"message","user":"U0KM61BCP","text":"no, I am just observing that given that we want to have consensus failures show up if syscc is not at same level in all peers, we need a test for that","ts":"1465908939.000070"},{"type":"message","user":"U0KPFAZNF","text":"<@U0XR6J961>: we need to decide that","ts":"1465908939.000071"},{"type":"message","user":"U0XR6J961","text":":slightly_smiling_face:","ts":"1465908944.000072"},{"type":"message","user":"U0KM61BCP","text":"<@U0XR6J961>: yes exactly, this needs some thought","ts":"1465908965.000073"},{"type":"message","user":"U0XR6J961","text":"system chaincode is dangerous, because a change elsewhere can change its behavior","ts":"1465908971.000074"},{"type":"message","user":"U0KPFAZNF","text":"<@U0KM61BCP>: agree, where I am thinking about is where\/when does it matter","ts":"1465908998.000075"},{"type":"message","user":"U0KPFAZNF","text":"e.g. either a syscc emits deterministic outputs in agreement with the network, or it doesnt","ts":"1465909019.000076"},{"type":"message","user":"U0KM61BCP","text":"<@U0KPFAZNF>: agree","ts":"1465909039.000077"},{"type":"message","user":"U0KPFAZNF","text":"we can ask the peer to tell us what rev-level it has, but without attestation hw, that is difficult to trust","ts":"1465909043.000078"},{"type":"message","user":"U0KPFAZNF","text":"so then the question is, does revlevel reporting matter? or can we purely rely on consensus of the output","ts":"1465909061.000079"},{"type":"message","user":"U0KPFAZNF","text":"e.g. if it generates compliant outputs, does it matter what code did it?","ts":"1465909073.000080"},{"type":"message","user":"U0KPFAZNF","text":"thats what i struggle with","ts":"1465909084.000081"},{"type":"message","user":"U0ULK2JPP","text":"<@U0KPFAZNF>: exactly","ts":"1465909091.000082"},{"type":"message","user":"U0KPFAZNF","text":"normal chaincode is different ,because the peer itself acts like an attestation framework","ts":"1465909121.000083"},{"type":"message","user":"U0KPFAZNF","text":"but the peer attesting to itself is a little sketchy","ts":"1465909129.000084"},{"type":"message","user":"U0ULK2JPP","text":"the real question to me is how closely a syscc is baked into peer deploy\/upgrade process","ts":"1465909132.000085"},{"type":"message","user":"U0XR6J961","text":"well, 100%","ts":"1465909157.000086"},{"type":"message","user":"U0XR6J961","text":"it gets compiled in","ts":"1465909162.000087"},{"type":"message","user":"U0KPFAZNF","text":"<@U0XR6J961>: code wise, yes\u2026but I think <@U0ULK2JPP> is referring to additional coordination","ts":"1465909186.000088"},{"type":"message","user":"U0ULK2JPP","text":"yes","ts":"1465909193.000089"},{"type":"message","user":"U0ULK2JPP","text":"so this falls into the broader question of fabric lifcycle management","ts":"1465909234.000090"},{"type":"message","user":"U0ULK2JPP","text":"IMO","ts":"1465909236.000091"},{"type":"message","user":"U0KPFAZNF","text":"the bigger concern, to me, is how we handle the schema upgrade coordination","ts":"1465909244.000092"},{"type":"message","user":"U0KPFAZNF","text":"the syscc should have an opportunity to do its Upgrade() like thing, which results in a new world state","ts":"1465909272.000093"},{"type":"message","user":"U0KPFAZNF","text":"question is, when\/how does that happen","ts":"1465909277.000094"},{"type":"message","user":"U0KPFAZNF","text":"obviously one criteria would be when at least 2f+1 nodes vote that the Upgrade() should happen..but who\/what triggers is","ts":"1465909316.000095"},{"type":"message","user":"U0KPFAZNF","text":"heres on (half baked) idea","ts":"1465909340.000096"},{"type":"message","user":"U0KPFAZNF","text":"peer starts, allows registered syscc to tell it whether it needs an update to its schema","ts":"1465909360.000097"},{"type":"message","user":"U0KPFAZNF","text":"if no, continue on","ts":"1465909366.000098"},{"type":"message","user":"U0KPFAZNF","text":"if yes, peer can submit some kind of transaction (with a longer than usual TTL) to the network","ts":"1465909393.000099"},{"type":"message","user":"U0KPFAZNF","text":"if enough peers do this, then the Upgrade() runs, updating the world-state (through consensus)","ts":"1465909423.000100"},{"type":"message","user":"U0ULK2JPP","text":"Upgrade of a sys chaincode would go through consenses when deploy did not ?","ts":"1465909426.000101"},{"type":"message","user":"U0KPFAZNF","text":"dunno, maybe","ts":"1465909437.000102"},{"type":"message","user":"U0KPFAZNF","text":"i dont like the asymmetry of that, which is probably your point","ts":"1465909452.000103"},{"type":"message","user":"U0KPFAZNF","text":"just thinking off the cuff","ts":"1465909460.000104"},{"type":"message","user":"U0ULK2JPP","text":"no, I was just wondering how that would work","edited":{"user":"U0ULK2JPP","ts":"1465909491.000000"},"ts":"1465909480.000105"},{"type":"message","user":"U0KPFAZNF","text":"maybe deploy isnt implicit either, its just not as we have it today","ts":"1465909489.000106"},{"type":"message","user":"U0KPFAZNF","text":"maybe deploy is similar, its some auto-generated\/peer-voted type thing","ts":"1465909506.000108"},{"type":"message","user":"U0KPFAZNF","text":"(rather than yaml driven)","ts":"1465909516.000109"},{"type":"message","user":"U0ULK2JPP","text":"its completely out of the yaml now","ts":"1465909531.000110"},{"type":"message","user":"U0KPFAZNF","text":"oh right, sorry","ts":"1465909536.000111"},{"type":"message","user":"U0XR6J961","text":"not good","ts":"1465909537.000112"},{"type":"message","user":"U0ULK2JPP","text":"its fully baked in...","ts":"1465909538.000113"},{"type":"message","user":"U0KPFAZNF","text":"cant keep track :wink:","ts":"1465909540.000114"},{"type":"message","user":"U0ULK2JPP","text":":slightly_smiling_face:","ts":"1465909543.000115"},{"type":"message","user":"U0XR6J961","text":"it should be completely out of the genesis block","ts":"1465909551.000116"},{"type":"message","user":"U0KPFAZNF","text":"<@U0XR6J961> agreed, and it is","ts":"1465909563.000117"},{"type":"message","user":"U0XR6J961","text":"i mean","ts":"1465909568.000118"},{"type":"message","user":"U0XR6J961","text":"the system chaincode config should come from the genesis block","ts":"1465909578.000119"},{"type":"message","user":"U0KPFAZNF","text":"but it still has ledger state, it just might not happen until after genesis","ts":"1465909579.000120"},{"type":"message","user":"U0XR6J961","text":"and not from the yaml","ts":"1465909582.000121"},{"type":"message","user":"U0KPFAZNF","text":"<@U0XR6J961>: actually, neither","ts":"1465909594.000122"},{"type":"message","user":"U0XR6J961","text":"is there a third possibility?","ts":"1465909609.000123"},{"type":"message","user":"U0KPFAZNF","text":"yes","ts":"1465909611.000124"},{"type":"message","user":"U0XR6J961","text":"which is?","ts":"1465909614.000125"},{"type":"message","user":"U0ULK2JPP","text":"need to get ready for work\u2026. later","ts":"1465909627.000126"},{"type":"message","user":"U0KPFAZNF","text":"it should be allowed to come and go over time, which means it might not be there at genesis","ts":"1465909633.000127"},{"type":"message","user":"U0XR6J961","text":"sure","ts":"1465909641.000128"},{"type":"message","user":"U0KPFAZNF","text":"so, superset of genesis block, but def not yaml","ts":"1465909653.000129"},{"type":"message","user":"U0XR6J961","text":"let's call it ledger then","ts":"1465909657.000130"},{"type":"message","user":"U0KPFAZNF","text":"ok, agreed","ts":"1465909662.000131"},{"type":"message","user":"U0KPFAZNF","text":"anyway, the current way we Init is its implicit\u2026..active consensus only happens after the first invoke hits the instance","ts":"1465909710.000132"},{"type":"message","user":"U0KPFAZNF","text":"so, even though the Init() may have initialized world-state, that doesnt go through consensus\u2026but this should presumably be reconciled during subsequent Invoke() operations","ts":"1465909751.000133"},{"type":"message","user":"U0XR6J961","text":"because we're creating the genesis block if there is none","edited":{"user":"U0XR6J961","ts":"1465909776.000000"},"ts":"1465909762.000134"},{"type":"message","user":"U0KPFAZNF","text":"Assuming that isnt broken, I suppose you could extend this notion to Upgrade as well","ts":"1465909782.000136"},{"type":"message","user":"U0XR6J961","text":"which we shouldn't do","ts":"1465909784.000137"},{"type":"message","user":"U0KPFAZNF","text":"<@U0XR6J961>: yes, agreed on that too but that is a different issue in my mind","ts":"1465909803.000138"},{"type":"message","user":"U0KPFAZNF","text":"this is really about when we start up a peer and it has syscc baked in with RegisterSyscc() (or whatever that call is named)","ts":"1465909838.000139"},{"type":"message","user":"U0KPFAZNF","text":"this could happen at any time long after we have block height","ts":"1465909853.000140"},{"type":"message","user":"U0KPFAZNF","text":"so, now the question is: how to handle that","ts":"1465909878.000141"},{"type":"message","user":"U0XR6J961","text":"well, we shouldn't","ts":"1465909887.000142"},{"type":"message","user":"U0XR6J961","text":"the syscc that are allowed are in the ledger","ts":"1465909902.000143"},{"type":"message","user":"U0KPFAZNF","text":"well, lets outline what we do today","ts":"1465909902.000144"},{"type":"message","user":"U0KPFAZNF","text":"well step back for a second","ts":"1465909928.000145"},{"type":"message","user":"U0XR6J961","text":"if you want to add another one, you either need to have a meta-syscc, which allows you to change the set of syscc","ts":"1465909929.000146"},{"type":"message","user":"U0KPFAZNF","text":"lets talk about how they get on the ledger in the first place","ts":"1465909937.000147"},{"type":"message","user":"U0XR6J961","text":"or you have an external procedure to apply this change","ts":"1465909940.000148"},{"type":"message","user":"U0XR6J961","text":"genesis block","ts":"1465909944.000149"},{"type":"message","user":"U0XR6J961","text":"or manually applying a \"patch\" block","ts":"1465909965.000150"},{"type":"message","user":"U0KPFAZNF","text":"im not sure if that is still true, but if it is it will have to change","ts":"1465909968.000151"},{"type":"message","user":"U0XR6J961","text":"why?","ts":"1465909974.000152"},{"type":"message","user":"U0KPFAZNF","text":"well, have you ever worked on a software project where the software was done with 1.0? :wink:","ts":"1465909997.000153","reactions":[{"name":"+1","users":["U0KM61BCP"],"count":1}]},{"type":"message","user":"U0KPFAZNF","text":"I havent","ts":"1465910003.000154"},{"type":"message","user":"U0KPFAZNF","text":"things will change","ts":"1465910010.000155"},{"type":"message","user":"U0XR6J961","text":"i have no idea what you are saying","ts":"1465910011.000156"},{"type":"message","user":"U0XR6J961","text":"all behavior *must* be driven *exclusively* from the ledger","ts":"1465910042.000157"},{"type":"message","user":"U0KPFAZNF","text":"if you develop a software package and release it as a long running service, do you think you will never need to introduce changes?","ts":"1465910053.000158"},{"type":"message","user":"U0XR6J961","text":"sure you will","ts":"1465910062.000159"},{"type":"message","user":"U0KPFAZNF","text":"ok, so upgrades happen, we agree","ts":"1465910084.000160"},{"type":"message","user":"U0KPFAZNF","text":"if you had a long running service that dictated that all services, now and in the future, must be accounted for at the initial deployment, do you see that as problematic?","ts":"1465910131.000161"},{"type":"message","user":"U0XR6J961","text":"that's not what i am saying","ts":"1465910142.000162"},{"type":"message","user":"U0KPFAZNF","text":"well, if all syscc had to be in genesis, thats effectively the same thing","ts":"1465910164.000163"},{"type":"message","user":"U0XR6J961","text":"not what i am saying","ts":"1465910172.000164"},{"type":"message","user":"U0KPFAZNF","text":"ok, go on","ts":"1465910175.000165"},{"type":"message","user":"U0XR6J961","text":"1. all behavior must be driven exclusively by the ledger","ts":"1465910204.000166"},{"type":"message","user":"U0KPFAZNF","text":"agreed, but there is nuance here","ts":"1465910215.000167"},{"type":"message","user":"U0XR6J961","text":"2. therefore for syscc to be used, the syscc must be enabled by some data on the ledger","ts":"1465910233.000168"},{"type":"message","user":"U0KPFAZNF","text":"so, lets change \u201cs\/ledger\/consensus\"","ts":"1465910249.000169"},{"type":"message","user":"U0KM61BCP","text":"before I get distracted and move on to something else, can one of the three of you please write up whatever the thinking is and send to the mailing list so we don\u2019t lose this? thanks","ts":"1465910252.000170"},{"type":"message","user":"U0XR6J961","text":"3a. therefore genesis block needs to enable the syscc, OR","ts":"1465910256.000171"},{"type":"message","user":"U0KPFAZNF","text":"and consensus is formed by many things, ledger state being one of them","ts":"1465910260.000172"},{"type":"message","user":"U0XR6J961","text":"3b. there is a manual way to introduce a new ledger block","ts":"1465910272.000173"},{"type":"message","user":"U0KPFAZNF","text":"<@U0KM61BCP>, yes","ts":"1465910275.000174"},{"type":"message","user":"U0KM61BCP","text":"thanks","ts":"1465910280.000175"},{"type":"message","user":"U0KPFAZNF","text":"so, as I was saying, it all has to be driven by consensus, but there are many ways that this happens","ts":"1465910313.000176"},{"type":"message","user":"U0XR6J961","text":"consensus without commit to ledger is ephemeral and is lost after crash\/restart","ts":"1465910322.000177"},{"type":"message","user":"U0KPFAZNF","text":"for instance, the configuration of the network, the choice of the peer software to run, etc, are all part of this","ts":"1465910333.000178"},{"type":"message","user":"U0KPFAZNF","text":"<@U0XR6J961>: understood, but here me out","ts":"1465910349.000179"},{"type":"message","user":"U0KPFAZNF","text":"if you subscribe to the notion of consensus that I mentioned, then the ledger isnt your only persistence\u2026for instance, the software you are running is too","ts":"1465910405.000180"},{"type":"message","user":"U0KPFAZNF","text":"e.g. I syscc, therefore I am","ts":"1465910419.000181"},{"type":"message","user":"U0KPFAZNF","text":"the code is either there, or it isnt","ts":"1465910430.000182"},{"type":"message","user":"U0KPFAZNF","text":"so, merely having a peer that happens to have the syscc endpoint is one form of consensus","ts":"1465910453.000183"},{"type":"message","user":"U0KM61BCP","text":"I am not a crypto guy by any stretch, but could we place a nonce in the genesis block that when hashed with some value (say the hash of the syscc) could be used to drive consensus of a new peer joining?","ts":"1465910471.000184"},{"type":"message","user":"U0KPFAZNF","text":"<@U0KM61BCP> we def want a nonce of some sort, but I am not sure for that reason","ts":"1465910512.000185"},{"type":"message","user":"U0KM61BCP","text":"maybe that is the uber syscc","ts":"1465910516.000186"},{"type":"message","user":"U0KPFAZNF","text":"anyway, so the current proposal by <@U0ULK2JPP> is that adding new syscc happens implicitly and locally","ts":"1465910567.000187"},{"type":"message","user":"U0KPFAZNF","text":"e.g. if I start a peer instance, and it a) finds syscc registered, and b) doesnt find an instance for it in the ledger, it will run the Init() locally and _not_ coordinate this with the network","ts":"1465910602.000188"},{"type":"message","user":"U0KPFAZNF","text":"so its kind of a local world state mutation","ts":"1465910612.000189"},{"type":"message","user":"U0KPFAZNF","text":"at first, I was bothered by this, but he made an interesting point","ts":"1465910623.000190"},{"type":"message","user":"U0KPFAZNF","text":"that is, the observation that this would presumably be reconciled by subsequent transactions","ts":"1465910658.000191"},{"type":"message","user":"U0KPFAZNF","text":"consider a scenario where I have an existing network, say blockheight 100k","ts":"1465910701.000192"},{"type":"message","user":"U0KPFAZNF","text":"someone develops a new syscc for \u201cfoo\u201d and gets it accepted into whatever code stream you are consuming","ts":"1465910738.000193"},{"type":"message","user":"U0KPFAZNF","text":"the next time the peer is upgraded, \u201cfoo\u201d is registered and the system detects that it has no instance for it","ts":"1465910766.000194"},{"type":"message","user":"U0KPFAZNF","text":"so, it runs foo.Init() and allows its initial instance to be formulated","ts":"1465910782.000195"},{"type":"message","user":"U0KPFAZNF","text":"this does not happen in the consensus network, just locally on the peer","ts":"1465910802.000196"},{"type":"message","user":"U0KPFAZNF","text":"if someone subsequently targets an Invoke operation at \u201cfoo\u201d, its going to need to have a deterministic result across 2f+1 peers","ts":"1465910851.000197"},{"type":"message","user":"U0KPFAZNF","text":"(hopefully we have EV by then ;)","ts":"1465910867.000198"},{"type":"message","user":"U0KM61BCP","text":"sorry for being naive, EV?","ts":"1465910887.000199"},{"type":"message","user":"U0KPFAZNF","text":"but the point is, the transaction would only work if at least 2f+1 nodes also upgraded their peer code and the combination of Init()+Invoke() resulted in a deterministic output","ts":"1465910909.000200"},{"type":"message","user":"U0KPFAZNF","text":"EV = Execute-Verify, ala SIEVE","ts":"1465910921.000201"},{"type":"message","user":"U0KM61BCP","text":"thank u","ts":"1465910929.000202"},{"type":"message","user":"U0KPFAZNF","text":"anyway, in Murali\u2019s model, the introduction of the syscc could happen at any time and without explicit coordination just by being in the code\u2026and the system would only legitimize its existence by other nodes agreeing in how subsequent operations behave","ts":"1465911016.000203"},{"type":"message","user":"U0KPFAZNF","text":"Assuming we can\u2019t poke holes in that, I think Upgrade() could be handled in a similar way","ts":"1465911043.000204"},{"type":"message","user":"U0KM61BCP","text":"so let\u2019s assume that we do a rolling upgrade on a network of peers that might take hours to complete because of the size of the network\u2026 how does this work?","ts":"1465911054.000205"},{"type":"message","user":"U0KPFAZNF","text":"First off, I hope that doesnt happen, heh","ts":"1465911072.000206"},{"type":"message","user":"U0KM61BCP","text":"does a new peer keep trying to drive a transaction until it achieves consensus?","ts":"1465911086.000207"},{"type":"message","user":"U0KPFAZNF","text":"as soon as their is any kind of break in 2f+1, we are going to stall (best case)","ts":"1465911089.000208"},{"type":"message","user":"U0KPFAZNF","text":"we should hope we only stall, I should say","ts":"1465911106.000209"},{"type":"message","user":"U0KM61BCP","text":"my head hurts","ts":"1465911155.000210"},{"type":"message","user":"U0KPFAZNF","text":"<@U0KM61BCP>: I think we need the notion of TTL for transactions","ts":"1465911160.000211"},{"type":"message","user":"U0KPFAZNF","text":"certain peer level transactions might need a longer TTL, though I dont envision they would be on the scale of hours","ts":"1465911181.000212"},{"type":"message","user":"U0KM61BCP","text":"well, let me play this out in small","ts":"1465911183.000213"},{"type":"message","user":"U0KPFAZNF","text":"but yes, mine hurts too :wink:","ts":"1465911187.000214"},{"type":"message","user":"U0KM61BCP","text":"4 peers running along just fine","ts":"1465911204.000215"},{"type":"message","user":"U0KM61BCP","text":"A B C D","ts":"1465911215.000216"},{"type":"message","user":"U0KM61BCP","text":"we stop A and start Aprime","ts":"1465911230.000217"},{"type":"message","user":"U0KPFAZNF","text":"and A\u2019 has new syscc","ts":"1465911245.000218"},{"type":"message","user":"U0KM61BCP","text":"Aprime does this init thing and B C and D all tell him he is wrong","ts":"1465911251.000219"},{"type":"message","user":"U0KM61BCP","text":"yes","ts":"1465911256.000220"},{"type":"message","user":"U0KPFAZNF","text":"well, to be clear, in the current model Init() is a local thing","ts":"1465911267.000221"},{"type":"message","user":"U0KPFAZNF","text":"so, A\u2019 now has an endpoint \u201cfoo\u201d, and BCD do not","ts":"1465911288.000222"},{"type":"message","user":"U0KPFAZNF","text":"if someone sends a transaction to chaincodeID=\u201cfoo\u201d, A\u2019 can run it, BCD can not","ts":"1465911312.000223"},{"type":"message","user":"U0KPFAZNF","text":"so, that transaction would fail","ts":"1465911319.000224"},{"type":"message","user":"U0KM61BCP","text":"ah, so there needs to be an external agent then?","ts":"1465911352.000225"},{"type":"message","user":"U0KPFAZNF","text":"now say BC update, so we have A\u2019B\u2019C'D","ts":"1465911354.000226"},{"type":"message","user":"U0KM61BCP","text":"not bootstrap?","ts":"1465911366.000227"},{"type":"message","user":"U0KPFAZNF","text":"someone sends another transaction to foo, and this time it passes","ts":"1465911370.000228"},{"type":"message","user":"U0KPFAZNF","text":"for coordination?","ts":"1465911388.000229"},{"type":"message","user":"U0KPFAZNF","text":"<@U0KM61BCP>: not sure what you were getting at with the external agent \/ bootstrap comment","ts":"1465911431.000230"},{"type":"message","user":"U0KPFAZNF","text":"can you elaborate?","ts":"1465911435.000231"},{"type":"message","user":"U0KM61BCP","text":"somehow I had in my head that a peer coming on line would try to join the network but with a new syscc fail because it was different than 2f+1","ts":"1465911503.000232"},{"type":"message","user":"U0KM61BCP","text":"I need to be better edumacated","ts":"1465911535.000233"},{"type":"message","user":"U0KPFAZNF","text":"oh, i see, i dont think that is the case per se","ts":"1465911611.000234"},{"type":"message","user":"U0KM61BCP","text":"backing up, and apologies for me being somewhat underinformed - but how did we arrive at foo for A'","ts":"1465911615.000235"},{"type":"message","user":"U0KPFAZNF","text":"syscc as far as I understand it, is just an amalgam of a) normal compiled peer code, that happens to have b) a chaincode interface","ts":"1465911646.000236"},{"type":"message","user":"U0KM61BCP","text":"does introduction of a new syscc require a new endpoint? and if so, how are these assigned?","ts":"1465911647.000237"},{"type":"message","user":"U0KPFAZNF","text":"to be clear: by \u201cendpoint\u201d I just mean chaincodeID","ts":"1465911666.000238"},{"type":"message","user":"U0KPFAZNF","text":"and they work very much like devmode","ts":"1465911671.000239"},{"type":"message","user":"U0KM61BCP","text":"yes but that is my point","ts":"1465911673.000240"},{"type":"message","user":"U0KM61BCP","text":"how is this established?","ts":"1465911682.000241"},{"type":"message","user":"U0KM61BCP","text":"someone needs to remember to update the id?","ts":"1465911690.000242"},{"type":"message","user":"U0KPFAZNF","text":"the syscc can ask for a name, just like devmode\u2026first come, first served","ts":"1465911691.000243"},{"type":"message","user":"U0KPFAZNF","text":"so, for instance, I could write a name-services syscc and call it \u201cname-service\"","ts":"1465911711.000244"},{"type":"message","user":"U0KPFAZNF","text":"as long as I am on the only one (enforced by compiler\/runtime checks on registration), this is easy to disambiguate\/police","ts":"1465911744.000245"},{"type":"message","user":"U0KPFAZNF","text":"then, users can direct transactions using chaincodeID:\u201dname-service\"","ts":"1465911779.000246"},{"type":"message","user":"U0KM61BCP","text":"turtles all the way down","ts":"1465911779.000247"},{"type":"message","user":"U0KPFAZNF","text":"bingo","ts":"1465911783.000248"},{"type":"message","user":"U0KPFAZNF","text":"but the thing is, chaincodeID:\u201dname-service\u201d is only a valid endpoint for a transaction if at least 2f+1 of your peers also have the endpoint, and (with EV at least) it can generate a deterministic mutation of world state","edited":{"user":"U0KPFAZNF","ts":"1465911848.000000"},"ts":"1465911829.000249"},{"type":"message","user":"U0XR6J961","text":"we don't have EV","edited":{"user":"U0XR6J961","ts":"1465912474.000000"},"ts":"1465912469.000251"},{"type":"message","user":"U0XR6J961","text":"with EV, you can do whatever","ts":"1465912479.000253"},{"user":"U1GNUNKRV","type":"message","subtype":"channel_join","text":"<@U1GNUNKRV|ezhil> has joined the channel","ts":"1465912513.000254"},{"type":"message","user":"U0KPFAZNF","text":"well, this design would be predicated on EV since we are now validating the peer itself","ts":"1465913498.000255"},{"type":"message","user":"U0KPFAZNF","text":"but really, non EV consensus is not very useful for a whole bunch of other reasons so we need to get there eventually","ts":"1465913547.000256"},{"user":"U12AHQ3NK","type":"message","subtype":"channel_join","text":"<@U12AHQ3NK|nits7sid> has joined the channel","ts":"1465958378.000257"},{"user":"U1J5DE65D","type":"message","subtype":"channel_join","text":"<@U1J5DE65D|basav> has joined the channel","ts":"1466260206.000258"},{"user":"U0YMACQSW","type":"message","subtype":"channel_join","text":"<@U0YMACQSW|vita> has joined the channel","ts":"1466331398.000259"},{"user":"U1JB7QCBD","type":"message","subtype":"channel_join","text":"<@U1JB7QCBD|ashnur> has joined the channel","ts":"1466418187.000260"},{"user":"U1KC1TAHE","type":"message","subtype":"channel_join","text":"<@U1KC1TAHE|brendan> has joined the channel","ts":"1466624498.000261"},{"user":"U150L8BDF","type":"message","subtype":"channel_join","text":"<@U150L8BDF|clessor> has joined the channel","ts":"1466702664.000262"},{"user":"U0YP7KFGQ","type":"message","subtype":"channel_join","text":"<@U0YP7KFGQ|gennady.laventman> has joined the channel","ts":"1466930436.000263"},{"user":"U1LP4T69E","type":"message","subtype":"channel_join","text":"<@U1LP4T69E|jeffprestes> has joined the channel","ts":"1467063081.000264"},{"type":"message","user":"U0XPR4NP4","text":"<https:\/\/github.com\/hyperledger\/fabric\/issues\/2053>","attachments":[{"service_name":"GitHub","title":"Reliance on gRPC ordering in consensus \u00b7 Issue #2053 \u00b7 hyperledger\/fabric \u00b7 GitHub","title_link":"https:\/\/github.com\/hyperledger\/fabric\/issues\/2053","text":"Description The gRPC protocol guarantees us that, for a single stream, messages will be delivered in order. The PBFT protocol assumes that message transmission is 'reliable', but not that message...","fallback":"GitHub: Reliance on gRPC ordering in consensus \u00b7 Issue #2053 \u00b7 hyperledger\/fabric","thumb_url":"https:\/\/avatars0.githubusercontent.com\/u\/7431583?v=3&s=400","from_url":"https:\/\/github.com\/hyperledger\/fabric\/issues\/2053","thumb_width":420,"thumb_height":420,"service_icon":"https:\/\/a.slack-edge.com\/e8ef6\/img\/unfurl_icons\/github.png","id":1}],"ts":"1467145938.000265"},{"type":"message","user":"U0N1D1UAE","text":"A question often arises in in internal meetings: Is there a target timeframe for the the V2 architecture up and running?","ts":"1467294009.000267","reactions":[{"name":"+1","users":["U1GN670VD"],"count":1}]},{"user":"U0LF1J4U8","type":"message","subtype":"channel_join","text":"<@U0LF1J4U8|moulsonp> has joined the channel","ts":"1467320439.000268"},{"user":"U12G3R3QS","type":"message","subtype":"channel_join","text":"<@U12G3R3QS|joverwimp> has joined the channel","ts":"1467806528.000269"},{"user":"U0XR6J961","text":"<@U0XR6J961|simon> has left the channel","type":"message","subtype":"channel_leave","ts":"1468498282.000270"},{"user":"U1S54EHL7","text":"<@U1S54EHL7|steven.lebowitz> has joined the channel","type":"message","subtype":"channel_join","ts":"1468594511.000271"},{"user":"U12R9HUSW","text":"<@U12R9HUSW|maxwell> has joined the channel","type":"message","subtype":"channel_join","ts":"1468914582.000002"},{"user":"U1JAPLQSY","text":"<@U1JAPLQSY|ibmdannywong> has joined the channel","type":"message","subtype":"channel_join","ts":"1469017629.000003"},{"user":"U1SDX7EQZ","text":"<@U1SDX7EQZ|liewsc> has joined the channel","type":"message","subtype":"channel_join","ts":"1469027510.000004"},{"user":"U1TV7SZ7C","text":"<@U1TV7SZ7C|rseeger> has joined the channel","type":"message","subtype":"channel_join","ts":"1469122722.000005"},{"user":"U1JHMKC8H","text":"<@U1JHMKC8H|huxd> has joined the channel","type":"message","subtype":"channel_join","ts":"1469443612.000006"},{"user":"U1HDN2RFY","text":"<@U1HDN2RFY|sean> has joined the channel","type":"message","subtype":"channel_join","ts":"1469458508.000007"},{"user":"U1V6SJ1FF","text":"<@U1V6SJ1FF|dgorman> has joined the channel","type":"message","subtype":"channel_join","ts":"1469542887.000008"},{"user":"U1XMKU015","text":"<@U1XMKU015|adamrichard> has joined the channel","type":"message","subtype":"channel_join","ts":"1470205364.000009"},{"user":"U1XLE4K5Z","text":"<@U1XLE4K5Z|gustav> has joined the channel","type":"message","subtype":"channel_join","ts":"1470210114.000010"},{"user":"U1NBM7NHH","text":"<@U1NBM7NHH|louisw> has joined the channel","type":"message","subtype":"channel_join","ts":"1470243294.000011"},{"user":"U1LDFR1LJ","text":"<@U1LDFR1LJ|sri_narayanan> has joined the channel","type":"message","subtype":"channel_join","ts":"1470389353.000012"},{"user":"U16MS3BEF","text":"<@U16MS3BEF|dn0sar> has joined the channel","type":"message","subtype":"channel_join","ts":"1471013858.000013"},{"user":"U219CAJLD","text":"<@U219CAJLD|lchiu> has joined the channel","type":"message","subtype":"channel_join","ts":"1471216513.000014"},{"user":"U1CS08EP3","text":"<@U1CS08EP3|ashishkel> has joined the channel","type":"message","subtype":"channel_join","ts":"1471600500.000015"},{"user":"U0YJUECE8","text":"<@U0YJUECE8|silliman> has joined the channel","type":"message","subtype":"channel_join","ts":"1471628580.000016"},{"user":"U2368MLAW","text":"<@U2368MLAW|adrianclv> has joined the channel","type":"message","subtype":"channel_join","ts":"1471638507.000017"},{"user":"U239VKGSK","text":"<@U239VKGSK|younker> has joined the channel","type":"message","subtype":"channel_join","ts":"1471713039.000018"},{"user":"U23GLSTS4","text":"<@U23GLSTS4|jlamiel> has joined the channel","type":"message","subtype":"channel_join","ts":"1471854556.000019"},{"user":"U23JFU108","text":"<@U23JFU108|csehd> has joined the channel","type":"message","subtype":"channel_join","ts":"1471869498.000020"},{"user":"U16Q0J0E6","text":"<@U16Q0J0E6|d.w.krypto> has joined the channel","type":"message","subtype":"channel_join","ts":"1471963773.000021"},{"user":"U1KFCPFQA","text":"<@U1KFCPFQA|dave.enyeart> has joined the channel","type":"message","subtype":"channel_join","ts":"1471970695.000022"},{"user":"U1P52TCE4","text":"<@U1P52TCE4|yoshihara> has joined the channel","type":"message","subtype":"channel_join","ts":"1472012416.000023"},{"user":"U24M29R4G","text":"<@U24M29R4G|nikileshsa> has joined the channel","type":"message","subtype":"channel_join","ts":"1472075727.000024"},{"user":"U1P1ZV6RF","text":"<@U1P1ZV6RF|matanyahu> has joined the channel","type":"message","subtype":"channel_join","ts":"1472158442.000025"},{"user":"U1CPB11D0","text":"<@U1CPB11D0|dianfu> has joined the channel","type":"message","subtype":"channel_join","ts":"1472175342.000026"},{"user":"U0N20TJUA","text":"<@U0N20TJUA|guruprasath> has joined the channel","type":"message","subtype":"channel_join","ts":"1472413411.000027"},{"user":"U0Z5BHCEM","text":"<@U0Z5BHCEM|suma> has joined the channel","type":"message","subtype":"channel_join","ts":"1472416111.000028"},{"user":"U1F2LURR6","text":"<@U1F2LURR6|ulysses> has joined the channel","type":"message","subtype":"channel_join","ts":"1472565436.000002"},{"user":"U23CGEC7N","text":"<@U23CGEC7N|rafael> has joined the channel","type":"message","subtype":"channel_join","ts":"1472572064.000003"},{"user":"U0NLP5909","text":"<@U0NLP5909|hanhzf> has joined the channel","type":"message","subtype":"channel_join","ts":"1473138718.000002"},{"user":"U0NK7T8SH","text":"<@U0NK7T8SH|bryan-huang> has joined the channel","type":"message","subtype":"channel_join","ts":"1473158828.000003"},{"user":"U231RFLFP","text":"<@U231RFLFP|bala.vellanki> has joined the channel","type":"message","subtype":"channel_join","ts":"1473285472.000004"},{"user":"U2ABHPV2P","text":"<@U2ABHPV2P|zeesh49> has joined the channel","type":"message","subtype":"channel_join","ts":"1473598321.000005"},{"user":"U24JMTPRQ","text":"<@U24JMTPRQ|aliblackwell> has joined the channel","type":"message","subtype":"channel_join","ts":"1473935254.000006"},{"user":"U2CSLPV1Q","text":"<@U2CSLPV1Q|hhadass> has joined the channel","type":"message","subtype":"channel_join","ts":"1474492074.000007"},{"user":"U2CSLPV1Q","text":"<@U2CSLPV1Q|hhadass> has left the channel","type":"message","subtype":"channel_leave","ts":"1474492661.000008"},{"user":"U221LL03Z","text":"<@U221LL03Z|ashutoshkumar> has joined the channel","type":"message","subtype":"channel_join","ts":"1474551619.000009"},{"user":"U1S01QY6L","text":"<@U1S01QY6L|smartyalgo> has joined the channel","type":"message","subtype":"channel_join","ts":"1474579917.000010"},{"user":"U2B3A70TX","text":"<@U2B3A70TX|soldat> has joined the channel","type":"message","subtype":"channel_join","ts":"1474900895.000011"},{"user":"U2GEGKXJA","text":"<@U2GEGKXJA|stchrysa> has joined the channel","type":"message","subtype":"channel_join","ts":"1474981023.000012"},{"user":"U1Z1KQDMM","text":"<@U1Z1KQDMM|rajnair2k> has joined the channel","type":"message","subtype":"channel_join","ts":"1475179758.000013"},{"user":"U2G9NCETD","text":"<@U2G9NCETD|raken5460> has joined the channel","type":"message","subtype":"channel_join","ts":"1475239630.000014"},{"user":"U2J1B1BQU","text":"<@U2J1B1BQU|abbas> has joined the channel","type":"message","subtype":"channel_join","ts":"1475247221.000015"},{"user":"U1JJ64P53","text":"<@U1JJ64P53|eugenn> has joined the channel","type":"message","subtype":"channel_join","ts":"1475329775.000016"},{"user":"U13P6TLER","text":"<@U13P6TLER|ozzyatwork> has joined the channel","type":"message","subtype":"channel_join","ts":"1475509572.000017"},{"user":"U1VG8LNP3","text":"<@U1VG8LNP3|yaoguo> has joined the channel","type":"message","subtype":"channel_join","ts":"1475513633.000018"},{"user":"U2JK4HV2N","text":"<@U2JK4HV2N|fabrice.yans> has joined the channel","type":"message","subtype":"channel_join","ts":"1475568810.000019"},{"user":"U1C8T06HZ","text":"<@U1C8T06HZ|mike.varley> has joined the channel","type":"message","subtype":"channel_join","ts":"1475679359.000020"},{"user":"U1C8T06HZ","text":"<@U1C8T06HZ|mike.varley> has left the channel","type":"message","subtype":"channel_leave","ts":"1475679393.000021"},{"user":"U2KLTKHSL","text":"<@U2KLTKHSL|moh.maher> has joined the channel","type":"message","subtype":"channel_join","ts":"1475680170.000022"},{"user":"U2LGFBFNJ","text":"<@U2LGFBFNJ|jmahhh> has joined the channel","type":"message","subtype":"channel_join","ts":"1475818057.000023"},{"user":"U23S3DPFY","text":"<@U23S3DPFY|ccooper21> has joined the channel","type":"message","subtype":"channel_join","ts":"1475945801.000024"},{"user":"U2M6CU41G","text":"<@U2M6CU41G|seshadrs> has joined the channel","type":"message","subtype":"channel_join","ts":"1476025361.000025"},{"user":"U2FR6FUJV","text":"<@U2FR6FUJV|niubwang> has joined the channel","type":"message","subtype":"channel_join","ts":"1476100473.000026"},{"user":"U1WAADD4N","text":"<@U1WAADD4N|akihikot> has joined the channel","type":"message","subtype":"channel_join","ts":"1476254162.000027"},{"user":"U0MS3TK2A","text":"<@U0MS3TK2A|nao> has joined the channel","type":"message","subtype":"channel_join","ts":"1476305195.000028"},{"user":"U2PAB405S","text":"<@U2PAB405S|benjamin> has joined the channel","type":"message","subtype":"channel_join","ts":"1476431529.000029"},{"user":"U1WUAQJVC","text":"<@U1WUAQJVC|pushpalatha> has joined the channel","type":"message","subtype":"channel_join","ts":"1476433811.000030"},{"user":"U1BJGAHFC","text":"<@U1BJGAHFC|reube> has joined the channel","type":"message","subtype":"channel_join","ts":"1476439427.000031"},{"user":"U2PE37K3J","text":"<@U2PE37K3J|n.ohagan> has joined the channel","type":"message","subtype":"channel_join","ts":"1476453303.000032"},{"user":"U2PE37K3J","text":"<@U2PE37K3J|n.ohagan> has left the channel","type":"message","subtype":"channel_leave","ts":"1476454369.000033"},{"user":"U2NNLN56V","text":"<@U2NNLN56V|conghonglei> has joined the channel","type":"message","subtype":"channel_join","ts":"1476667075.000034"},{"user":"U2RCFUE77","text":"<@U2RCFUE77|albee.jhoney> has joined the channel","type":"message","subtype":"channel_join","ts":"1476888185.000035"},{"user":"U216ML5MM","text":"<@U216ML5MM|witwiki> has joined the channel","type":"message","subtype":"channel_join","ts":"1476932255.000036"},{"user":"U2RQEJGV6","text":"<@U2RQEJGV6|larryliu> has joined the channel","type":"message","subtype":"channel_join","ts":"1476951690.000037"},{"user":"U2QLU433N","text":"<@U2QLU433N|msoumeit> has joined the channel","type":"message","subtype":"channel_join","ts":"1476976410.000038"},{"user":"U2P98SZSQ","text":"<@U2P98SZSQ|liaoqc> has joined the channel","type":"message","subtype":"channel_join","ts":"1477380890.000039"},{"user":"U1AF58XSP","text":"<@U1AF58XSP|spipes> has joined the channel","type":"message","subtype":"channel_join","ts":"1477472456.000040"},{"user":"U2M0J2CUX","text":"<@U2M0J2CUX|arthur.yu> has joined the channel","type":"message","subtype":"channel_join","ts":"1477710512.000041"},{"user":"U2T4S6X6C","text":"<@U2T4S6X6C|jd> has joined the channel","type":"message","subtype":"channel_join","ts":"1477776418.000042"},{"user":"U2TB7EW4W","text":"<@U2TB7EW4W|cusdenia> has joined the channel","type":"message","subtype":"channel_join","ts":"1477991381.000043"},{"user":"U2AFW8W9X","text":"<@U2AFW8W9X|tbrooke> has joined the channel","type":"message","subtype":"channel_join","ts":"1478371627.000044"},{"user":"U2YUJV17X","text":"<@U2YUJV17X|aleixmorgadas> has joined the channel","type":"message","subtype":"channel_join","ts":"1478379296.000045"},{"user":"U2Y88J0E5","text":"<@U2Y88J0E5|khaleshah> has joined the channel","type":"message","subtype":"channel_join","ts":"1478435822.000046"},{"user":"U1NPSMCDS","text":"<@U1NPSMCDS|shinsa> has joined the channel","type":"message","subtype":"channel_join","ts":"1478846872.000047"},{"user":"U32342C1L","text":"<@U32342C1L|mihai.cimpoesu> has joined the channel","type":"message","subtype":"channel_join","ts":"1478865207.000048"},{"user":"U1D89DP47","text":"<@U1D89DP47|subzer0> has joined the channel","type":"message","subtype":"channel_join","ts":"1478981788.000049"},{"user":"U276997LP","text":"<@U276997LP|hschell> has joined the channel","type":"message","subtype":"channel_join","ts":"1479123875.000050"},{"user":"U0KN2SSKE","text":"<@U0KN2SSKE|binhn> has left the channel","type":"message","subtype":"channel_leave","ts":"1479572992.000051"},{"user":"U17ERM9H9","text":"<@U17ERM9H9|jyg> has joined the channel","type":"message","subtype":"channel_join","ts":"1479727259.000052"},{"user":"U0Q6BA1EU","text":"<@U0Q6BA1EU|bobbiejc> has joined the channel","type":"message","subtype":"channel_join","ts":"1479851636.000053"},{"user":"U37E0QVHU","text":"<@U37E0QVHU|yijiyong> has joined the channel","type":"message","subtype":"channel_join","ts":"1479999151.000054"},{"user":"U38H8MS11","text":"<@U38H8MS11|lovesh> has joined the channel","type":"message","subtype":"channel_join","ts":"1480488200.000055"},{"type":"message","user":"U38H8MS11","text":"I was going through Next-Consensus-Architecture on github at <https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/proposals\/r1\/Next-Consensus-Architecture-Proposal.md> and I find the following 2 statements contradictory.\n1. Under section 4, Raw Ledger: \"TThe raw ledger contains information about both valid and invalid transactions and provides a verifiable history of all successful and unsuccessful state changes and attempts to change state, occurring during the operation of the system\"\n2. Under section 2.4: \"It is important to note that invalid transactions are not committed, do not change the state, and are not recorded.\". Does recorded mean recorded in the validated ledger.\n\nWhat would be the purpose of the storing invalid transactions in the raw ledger anyway, as invalid transactions do not modify the global state anyway?","attachments":[{"service_name":"GitHub","title":"hyperledger\/fabric","title_link":"https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/proposals\/r1\/Next-Consensus-Architecture-Proposal.md","text":"Read-only mirror of <https:\/\/gerrit.hyperledger.org\/r\/#\/admin\/projects\/fabric>","fallback":"GitHub: hyperledger\/fabric","thumb_url":"https:\/\/avatars3.githubusercontent.com\/u\/7657900?v=3&s=400","from_url":"https:\/\/github.com\/hyperledger\/fabric\/blob\/master\/proposals\/r1\/Next-Consensus-Architecture-Proposal.md","thumb_width":142,"thumb_height":142,"service_icon":"https:\/\/github.com\/apple-touch-icon.png","id":1}],"edited":{"user":"U38H8MS11","ts":"1480489890.000000"},"ts":"1480489751.000056"},{"type":"message","user":"U0Y14MWA2","text":"posting here as well","ts":"1480495987.000059"},{"type":"message","user":"U0Y14MWA2","text":"committed means in this context \"declared valid\" hence it pertains to committing (to a validated ledger) a transaction from from the raw ledger\nwe have both RL and VL to decouple more easily the ordering logic from the endorsement policy validation logic\nwhile it is possible to have consensus\/ordering service also do the (currently peers') job of validating the tx\nthis would entangle implementations too much\nbesides\nin many use cases one wants to know about invalid transactions - hence, they should not be \"swallowed\" by the ordering service\nso short answer for the separation of RL and VL is: to make consensus ordering logic as modular as possible\nand independent from the peer validation logic","ts":"1480496041.000060"},{"type":"message","user":"U0Y14MWA2","text":"BTW if you wish to post perisisting comments to the Hyperledger fabric architecture do that here:\n\n<https:\/\/jira.hyperledger.org\/browse\/FAB-875>","ts":"1480496100.000061"},{"type":"message","user":"U0Y14MWA2","text":"slack tends to forget stuff","ts":"1480496112.000062"},{"type":"message","user":"U1KFCPFQA","text":"<@U0Y14MWA2> I have discussed the separate raw ledger and validated ledger with <@U0KN2SSKE> and <@U0PB67X4K> and gossip team <@U1HFNJB50> .  We are thinking it would be better to have a single ledger used by both ordering service and peer, and then have the committing peer indicate which transactions are invalid via a bit array saved in a non-hashed portion of the block, rather than removing the invalid transactions from the hashed part of the block.  This will enable peer-to-peer state transfer since the blocks and block hashes would be the same coming from ordering service and peers.  Also this will make it easier for auditors of a peer to identify invalidated transactions, without having to do a diff against the ordering service.  Invalidated transactions could eventually be pruned out once we support checkpoint\/pruning.  Does this make sense to you? If so how do we get the NCAP document updated?","ts":"1480508808.000063"},{"user":"U0KN2SSKE","inviter":"U1KFCPFQA","text":"<@U0KN2SSKE|binhn> has joined the channel","type":"message","subtype":"channel_join","ts":"1480508831.000064"},{"user":"U1HFNJB50","inviter":"U1KFCPFQA","text":"<@U1HFNJB50|c0rwin> has joined the channel","type":"message","subtype":"channel_join","ts":"1480508831.000065"},{"type":"message","user":"U0Y14MWA2","text":"hi <@U1KFCPFQA>","ts":"1480510173.000066"},{"type":"message","user":"U0Y14MWA2","text":"I perceive this as an implementation choice","ts":"1480510180.000067"},{"type":"message","user":"U0Y14MWA2","text":"as such","ts":"1480510183.000068"},{"type":"message","user":"U0Y14MWA2","text":"I have no pbs with that","ts":"1480510187.000069"},{"type":"message","user":"U0Y14MWA2","text":"in the next revision of NCAP I will try to see if there is language that \"prevents\" such an implementation - if so I will modify NCAP","ts":"1480510268.000070"},{"type":"message","user":"U0Y14MWA2","text":"there probably is","ts":"1480510404.000071"},{"type":"message","user":"U0PB67X4K","text":"<@U1KFCPFQA>  <@U0Y14MWA2> - so we used to use the terms \"raw\" and \"validated\" ledger and we've had debates about which one peers should\/could keep.  I've always been of the opinion that we would always want the ability for peers to keep around the \"raw\" ledger if they wanted to.  The notion of \"validated\" ledger came from the fact that there are people who don't want to keep around invalid transactions.  Some might also recall that this was also one of the initial use cases for gossip - with no \"raw\" ledger the only way for peers to know if other peers had the same validated ledger was to gossip about them (and the  use their own custom block validation policy to decide how many peers they want to \"check\" with (e.g. some number of signatures form remote peers signing validated blocks).    \n\nThe bottom line is that I don't have any issues with the default behavior to be what you describe, but we must ensure that there are APIs \/ plug points , etc available for people to create validated ledgers if they so desire and gossip should be able to work with a validated ledger \/ expose the ability to use it.   Maybe this does not all have to be for the initial release and maybe no one cares about the validated ledger anymore, but would be good to find out","ts":"1480513753.000072"},{"type":"message","user":"U0Y14MWA2","text":"ack","ts":"1480515824.000073"},{"type":"message","user":"U0Y14MWA2","text":"no pb here","ts":"1480515829.000074"},{"type":"message","user":"U1KFCPFQA","text":"<@U0PB67X4K> If we prune out invalid transactions upon checkpoint, perhaps that is close enough.  For example if you checkpoint nightly and prune invalidated trans out, then the peer would essentially have the validated ledger, except for the current day which would have the raw ledger (plus an indicator of invalid trans)","edited":{"user":"U1KFCPFQA","ts":"1480516149.000000"},"ts":"1480516109.000075"},{"type":"message","user":"U0PB67X4K","text":"<@U1KFCPFQA> - you might be right - I think that could work - of course in that case technically we'd need to be able to get checkpoint signatures from multiple sources but in the end that's probably better than gossiping about blocks in a validated ledger","ts":"1480517369.000077"},{"type":"message","user":"U1HFNJB50","text":"<@U0PB67X4K>, <@U1KFCPFQA> joining the discussion a bit late. Want to add 2 cents, about the complexity of gossiping validated ledger with block which misses transactions due to some validation policy","ts":"1480530045.000078"},{"type":"message","user":"U0Y14MWA2","text":"<@U1KFCPFQA> what you suggest in your last slack is exactly how its written now in NCAP (which does not stipulate the checkpoint period when talking about checkpoints)","ts":"1480538292.000079","reactions":[{"name":"+1","users":["U0PB67X4K"],"count":1}]},{"type":"message","user":"U1KFCPFQA","text":"perfect - so it was the initial committer impl that was not correct (it automatically removed invalid trans).  The NCAP was correct all along :slightly_smiling_face:","ts":"1480538847.000080"},{"user":"U234U0A5U","text":"<@U234U0A5U|ruslan.ardashev> has joined the channel","type":"message","subtype":"channel_join","ts":"1480602603.000081"},{"type":"message","user":"U234U0A5U","text":"Question about something that seems fairly simple but am not getting (from the v1 next consensus architecture proposal) - \"Chaincode trust flexibility. The architecture separates trust assumptions for chaincodes (blockchain applications) from trust assumptions for consensus. In other words, the consensus service may be provided by one set of nodes (consenters) and tolerate some of them to fail or misbehave, and the endorsers may be different for each chaincode.\"","ts":"1480602706.000082"},{"type":"message","user":"U234U0A5U","text":"\u2014&gt; How does this make sense \/ work? I was under the impression that the way the architecture works chaincode and consensus are inherently tied to another - a peer would run through the chaincode and then allow or disallow a transaction","ts":"1480602772.000083"},{"type":"message","user":"U234U0A5U","text":"validating and non-validating peers still makes sense (validating peers do consensus and verify with the cc and nonvalidating peers simply get a copy)","ts":"1480602802.000084"},{"type":"message","user":"U0PB67X4K","text":"it's pretty simple actually - peers \"endorse\" transactions (proposals in V1 terms) which translates to each peer executing the chaincode, obtaining a result (which is basically read-write set of KV peers) and assuming it is happy with the result, signs it and sends back a endorsement response.  A \"client\" requests endorsement from a bunch of peers, collects all the responses, packages them up and submits a transaction to the ordering service (which orders the transactions) which then delivers the transactions in order to \"committing peers\"  (all endorsing peers are committing peers as well).  When the peer receives the ordered transactions, it checks to see that the transaction has the right endorsements based on the policy that was set (e.g. requires 75% of the members of the chain).  Assuming it passes that check, it then modifies the state in the state database\n\nSo the reality is that endorsement provides a signature-based mini-consensus mechanism for agreement on the transaction and ordering orders and delivers to all committing peers (you could have some peers which simply receive the data and don't participate in endorsement - e.g. an auditor)","ts":"1480603436.000085"},{"type":"message","user":"U234U0A5U","text":"oh okay, that makes sense (many thanks for the explanation \/ clarification)","ts":"1480604982.000086"},{"type":"message","user":"U234U0A5U","text":"is there a reason why all endorsing peers are committing peers as well? network redundancy \/ data availability?","ts":"1480605066.000087"},{"type":"message","user":"U234U0A5U","text":"seems like if all they\u2019re doing is collecting chaincode-verification-results, ordering transactions, and propagating them to committing peers then might be unnecessary","ts":"1480605105.000088"},{"type":"message","user":"U234U0A5U","text":"I guess I was slightly confused by this (and maybe the wording\u2019s off here) but from the next consensus architecture doc *\"Besides, chaincode execution, which can potentially be costly, is removed from the critical path of the consensus service.\u201d*","ts":"1480605263.000089"},{"type":"message","user":"U234U0A5U","text":"seems like all of these endorsers are then still waiting for a majority (75%) of consenters to reply in the affirmative","ts":"1480605300.000090"},{"type":"message","user":"U0PB67X4K","text":"Endorsing peers will need access to the latest state to make decisions (although in theory you could probably build endorsers which never need to read any state) and the only way to actually commit state is to be a committer","ts":"1480606425.000091"},{"type":"message","user":"U0PB67X4K","text":"endorser simulates the \"transaction\" but does not commit the result until it comes back around via ordering","ts":"1480606487.000092"},{"type":"message","user":"U0PB67X4K","text":"I may not have been clear.  At a high level, there are 3 parts of the end to end flow:\n\n1) Endorsement - clients submit proposal to a group of endorsers and collect the results.  Endorsers execute the chaincode and produce simulated (uncommitted) results\n\n2) Ordering - client packages up all the signed proposal responses into a transaction and submits to the ordering nodes \/ service (They can optionally pre-check that they actually got the proper endorsements based on policy as well and decide not to send)\n\n3) Ordering nodes create a hash chain of blocks of ordered transactions and deliver blocks to committing \"nodes\"\n\n4) Committing nodes validate the transactions (make sure they meet endorsement policy and that there are no conflicts in the read\/write sets) and then commit the data\n\n5) Peers which act in the endorsing role would also be in the committing role else they won't know to commit the latest blocks \/ state","edited":{"user":"U0PB67X4K","ts":"1480606971.000000"},"ts":"1480606515.000093"},{"type":"message","user":"U234U0A5U","text":"- this is going to sound silly probably but I thought endorsers don\u2019t execute chaincode? (to point 1, thought we separate \u201cconsensus\u201d and \u201cchaincode\u201d execution. sounds like maybe the next consensus architecture doc might be off)\n- 2 makes sense. would be interested in reading more about how exactly this mechanism would work. sounds like that it\u2019s something that\u2019s currently under development and would have to look at the code for that. *also wondering how many kinds of nodes we have now*, whether we have \u201cpeers\u201d \u201cendorsers\u201d and \u201cconsenters\u201d or whether there are actually more kinds of roles (upon some more reading sounds like consenting peers are responsible for forming kind of a network \u201cbase\u201d and perform the ordering)\n- 3 understood\n- 4 would be interested in learning how exactly these conflicts are \u201cconflicts\u201d - read writes to the same location sound fine (when ordered properly)\n- 5 to play devil\u2019s advocate could say \u201cso? I was under the impression we pass around and look at deltas (as in the blockchain explored and technical enablement session docs) and not the actual ledger state, and for verification that might not be necessary)\"","edited":{"user":"U234U0A5U","ts":"1480607798.000000"},"ts":"1480607539.000095"},{"type":"message","user":"U234U0A5U","text":"although to be honest I could spend more time on understanding 5","ts":"1480607613.000096"},{"type":"message","user":"U0PB67X4K","text":"1,2,3,4 actually all work today (not complete in terms of security, etc) but the latest stuff all works in the master repo","ts":"1480608010.000099"},{"type":"message","user":"U0PB67X4K","text":"1) we do separate things out compared to the previous architecture\n\nIn v0.6, you submit a transaction to a peer which then submits that transaction to the current \"leader\" which then starts the 3 phase PBFT handshake which in the end results in a block of ordered transactions being sent to all validating nodes who then break open that block, execute each transaction (which basically means they now execute the chaincode), commit all the data and write and store the block in the ledger","ts":"1480608201.000100"},{"type":"message","user":"U0PB67X4K","text":"so technically you don't get a ledger until you've executed chaincode but ironically the ledger consists of a list of chaincode \/ functions to execute (along with the parameters to pass to the functions)","ts":"1480608275.000101"},{"type":"message","user":"U0PB67X4K","text":"in V1, chaincode is executed by endorsers which simulate the state changes and provide a read-write set.   so chaincode is now out of the mix.   the results of endorsement are package and sent to the ordering service which then delivers the blocks to any peer which is acting as a committer.   We now have an ordered, immutable ledger at all those committers.","ts":"1480608454.000102"},{"type":"message","user":"U234U0A5U","text":"<http:\/\/static3.gamespot.com\/uploads\/original\/271\/2716782\/3145283-8549606202-7MKka.gif>","attachments":[{"fallback":"480x269px image","image_url":"http:\/\/static3.gamespot.com\/uploads\/original\/271\/2716782\/3145283-8549606202-7MKka.gif","image_width":480,"image_height":269,"image_bytes":2556090,"is_animated":true,"from_url":"http:\/\/static3.gamespot.com\/uploads\/original\/271\/2716782\/3145283-8549606202-7MKka.gif","id":1}],"ts":"1480613244.000103"},{"type":"message","user":"U234U0A5U","text":"it all just clicked. thanks for taking the time to explain.","ts":"1480613268.000105"},{"type":"message","user":"U234U0A5U","text":"I think most of my confusion stemmed from the \u201cordering\" vs the \u201cconsensus\u201d terminology used in the arch doc. to rephrase, the ordering is done independently of data, plain &amp; simple (which could introduce cases where the chaincode-execution that endorsers perform could have differing results depending on order, but that can be handled via failed consensus and then going back and retrying with corrected order, etc)","edited":{"user":"U234U0A5U","ts":"1480613493.000000"},"ts":"1480613371.000106"},{"type":"message","user":"U234U0A5U","text":"(but also understood why it\u2019s called \u201cconsensus\u201d versus simply \u201cordering\u201d - there\u2019s a communication process of all nodes finally agreeing on a set order)","edited":{"user":"U234U0A5U","ts":"1480613851.000000"},"ts":"1480613838.000109"},{"type":"message","user":"U0PB67X4K","text":"cool.  and no problem","ts":"1480622985.000111"},{"user":"U32LDD9JA","text":"<@U32LDD9JA|ledger888> has joined the channel","type":"message","subtype":"channel_join","ts":"1480701144.000112"},{"user":"U3AAY7PPX","text":"<@U3AAY7PPX|lesterpig> has joined the channel","type":"message","subtype":"channel_join","ts":"1480784883.000113"},{"user":"U2NG5AX0A","text":"<@U2NG5AX0A|klorenz> has joined the channel","type":"message","subtype":"channel_join","ts":"1480967903.000002"},{"user":"U3B9R5C58","text":"<@U3B9R5C58|mgrand> has joined the channel","type":"message","subtype":"channel_join","ts":"1481045041.000003"},{"type":"message","user":"U3B9R5C58","text":"I am new to fabric and trying to understand it at an architectural level.  I have a question about concurrency of chaincode execution. What happens if two transactions invoke the same chaincode at the same time?  Are they run one at a time or is there some sort of locking semantics about modifying the world state that allows two invocations to run concurrently?","ts":"1481045343.000004"},{"user":"U3BL88B18","text":"<@U3BL88B18|thomas_g> has joined the channel","type":"message","subtype":"channel_join","ts":"1481106989.000005"},{"type":"message","user":"U0PB67X4K","text":"<@U3B9R5C58> - in the v0.6 architecture, chaincode serially processed per transaction per block \/ batch (i.e. a batches are processed serially in order and transactions within each batch are also processed serially and committed together).    In the new architecture, this is also currently the case although we will be moving to a model where transactions submitted to different \"chains \/ channels\" can be executed concurrently","ts":"1481107015.000006"},{"user":"U2FT6PNBZ","text":"<@U2FT6PNBZ|triptananda> has joined the channel","type":"message","subtype":"channel_join","ts":"1481109368.000007"},{"user":"U3B2F5VC0","text":"<@U3B2F5VC0|rkr> has joined the channel","type":"message","subtype":"channel_join","ts":"1481126302.000008"},{"user":"U0N8X4FN1","text":"<@U0N8X4FN1|tylerkeen> has joined the channel","type":"message","subtype":"channel_join","ts":"1481140420.000009"},{"user":"U3D3HPUUX","text":"<@U3D3HPUUX|tetiana> has joined the channel","type":"message","subtype":"channel_join","ts":"1481219779.000010"},{"user":"U0P2GSA8Z","text":"<@U0P2GSA8Z|arnaud> has joined the channel","type":"message","subtype":"channel_join","ts":"1481230436.000011"},{"user":"U3BQF48RE","text":"<@U3BQF48RE|oliverledger> has joined the channel","type":"message","subtype":"channel_join","ts":"1481231620.000012"},{"user":"U327VGGF9","text":"<@U327VGGF9|yuwei> has joined the channel","type":"message","subtype":"channel_join","ts":"1481379446.000013"},{"user":"U3D5886CB","text":"<@U3D5886CB|ruslan> has joined the channel","type":"message","subtype":"channel_join","ts":"1481401735.000014"},{"user":"U3DB4L15G","text":"<@U3DB4L15G|svergara> has joined the channel","type":"message","subtype":"channel_join","ts":"1481640037.000015"},{"type":"message","user":"U0Z41KY5V","text":"Hi, is there any discussion on migrating the orderer service outside of fabric code, into some separate one (fabric-order), like fabric-cop?","ts":"1481707082.000016"},{"type":"message","user":"U0P2GSA8Z","text":"<@U0Z41KY5V> I don't know what the latest is on this front but we did have a discussion a while ago splitting the project into different repos and one proposal was to go pretty far down that path and have many different repos","ts":"1481891363.000022"},{"type":"message","user":"U0P2GSA8Z","text":"some of us (me included) pushed back on this and we ended up with a compromise with a few repos","ts":"1481891386.000023"},{"type":"message","user":"U0P2GSA8Z","text":"I suspect this is something that will evolve overtime though","ts":"1481891440.000024"},{"type":"message","user":"U0Z41KY5V","text":"thanks, arnaud. I talked with gari, and he also think should keep the pace currently. We may consider this decouple in future for a more clear code structure.","ts":"1481891733.000025"},{"user":"U2MLUSPPZ","text":"<@U2MLUSPPZ|carlosarturoq> has joined the channel","type":"message","subtype":"channel_join","ts":"1482092494.000026"},{"user":"U2P0N5J5A","text":"<@U2P0N5J5A|sergefdrv> has joined the channel","type":"message","subtype":"channel_join","ts":"1482313129.000027"},{"user":"U3HE2V38F","text":"<@U3HE2V38F|mohamoudegal> has joined the channel","type":"message","subtype":"channel_join","ts":"1482346011.000028"},{"user":"U3H9ZGLGG","text":"<@U3H9ZGLGG|wjq> has joined the channel","type":"message","subtype":"channel_join","ts":"1482461633.000029"},{"user":"U3JGUDSSG","text":"<@U3JGUDSSG|michael.w.klein> has joined the channel","type":"message","subtype":"channel_join","ts":"1482524994.000030"},{"user":"U3K8U9X62","text":"<@U3K8U9X62|mikem> has joined the channel","type":"message","subtype":"channel_join","ts":"1482600239.000031"},{"user":"U3J39AA6M","text":"<@U3J39AA6M|lightningli> has joined the channel","type":"message","subtype":"channel_join","ts":"1482752360.000032"},{"user":"U1ZKPMB7Z","text":"<@U1ZKPMB7Z|vivek.raut> has joined the channel","type":"message","subtype":"channel_join","ts":"1482828340.000033"},{"user":"U3MBKT8UF","text":"<@U3MBKT8UF|samsmith> has joined the channel","type":"message","subtype":"channel_join","ts":"1483445514.000034"},{"user":"U1Y4P0HM4","text":"<@U1Y4P0HM4|yangtao76> has joined the channel","type":"message","subtype":"channel_join","ts":"1483544591.000035"},{"user":"U1W1YHJ80","text":"<@U1W1YHJ80|nasastry> has joined the channel","type":"message","subtype":"channel_join","ts":"1483631931.000036"},{"user":"U1WMX1P71","text":"<@U1WMX1P71|ramykamel> has joined the channel","type":"message","subtype":"channel_join","ts":"1483646566.000037"},{"user":"U0Z41KY5V","text":"<@U0Z41KY5V|baohua> has left the channel","type":"message","subtype":"channel_leave","ts":"1484125081.000038"},{"user":"U3QGS08NP","text":"<@U3QGS08NP|sureshgnair> has joined the channel","type":"message","subtype":"channel_join","ts":"1484224276.000039"},{"user":"U3QPATC07","text":"<@U3QPATC07|rachweb2> has joined the channel","type":"message","subtype":"channel_join","ts":"1484241531.000040"},{"type":"message","user":"U17CZFXGU","text":"Hi. I am trying to understand how chaincode is executed on Hyperledger.  Whenever I deploy a Java or Go smart contract, where is it registered\/stored inside Hyperledger?   Also, when I invoke a smart contract does it run inside a Docker protected image?","ts":"1484243042.000041"},{"type":"message","user":"U0KPFAZNF","text":"<@U17CZFXGU> its registered on the chain, and compiled\/executed by each peer in the network inside a docker container","ts":"1484253612.000042"},{"type":"message","user":"U0KPFAZNF","text":"for v0.6, the code would be executed by each \"validating peer\"","ts":"1484253631.000043"},{"type":"message","user":"U0KPFAZNF","text":"for 1.0, this would be the role of \"endorsers\"","ts":"1484253641.000044"},{"type":"message","user":"U17CZFXGU","text":"Thank you <@U0KPFAZNF>","ts":"1484260758.000045"},{"user":"U3NTVCY0J","text":"<@U3NTVCY0J|clearyd> has joined the channel","type":"message","subtype":"channel_join","ts":"1484654280.000046"},{"user":"U3MBTR5KK","text":"<@U3MBTR5KK|tsluthra> has joined the channel","type":"message","subtype":"channel_join","ts":"1484668512.000047"},{"user":"U0W7D64LC","text":"<@U0W7D64LC|markparz> has joined the channel","type":"message","subtype":"channel_join","ts":"1484755172.000048"},{"user":"U3U415W6T","text":"<@U3U415W6T|jorgedr> has joined the channel","type":"message","subtype":"channel_join","ts":"1484837827.000049"},{"user":"U3VDLN47L","text":"<@U3VDLN47L|chen.nie> has joined the channel","type":"message","subtype":"channel_join","ts":"1485218191.000050"},{"user":"U1WTH9EQ5","text":"<@U1WTH9EQ5|sonyeric> has joined the channel","type":"message","subtype":"channel_join","ts":"1485234871.000051"},{"user":"U3V4G8HUZ","text":"<@U3V4G8HUZ|sagmeister> has joined the channel","type":"message","subtype":"channel_join","ts":"1485279442.000052"},{"user":"U0XPR4NP4","text":"<@U0XPR4NP4|jyellick> has left the channel","type":"message","subtype":"channel_leave","ts":"1485358730.000053"},{"user":"U3WM9K85R","text":"<@U3WM9K85R|mbaizan> has joined the channel","type":"message","subtype":"channel_join","ts":"1485428972.000054"},{"user":"U33EA2K8Q","text":"<@U33EA2K8Q|mcenatie> has joined the channel","type":"message","subtype":"channel_join","ts":"1485438581.000055"},{"user":"U31A496G2","text":"<@U31A496G2|arnabkaycee> has joined the channel","type":"message","subtype":"channel_join","ts":"1485487028.000056"},{"user":"U3UU2PMBK","text":"<@U3UU2PMBK|patchpon> has joined the channel","type":"message","subtype":"channel_join","ts":"1485825517.000057"},{"user":"U3BH74NH0","text":"<@U3BH74NH0|passkit> has joined the channel","type":"message","subtype":"channel_join","ts":"1485832411.000058"},{"user":"U3BU07SN7","text":"<@U3BU07SN7|karkal72> has joined the channel","type":"message","subtype":"channel_join","ts":"1485994021.000059"},{"user":"U2GEGKXJA","text":"<@U2GEGKXJA|stchrysa> has left the channel","type":"message","subtype":"channel_leave","ts":"1486047662.000060"},{"user":"U13TWBRBL","text":"<@U13TWBRBL|jzhang> has left the channel","type":"message","subtype":"channel_leave","ts":"1486151626.000061"},{"user":"U1XLE4K5Z","text":"<@U1XLE4K5Z|gustav> has left the channel","type":"message","subtype":"channel_leave","ts":"1486491589.000062"},{"user":"U0UHG4VP1","text":"<@U0UHG4VP1|ry> has joined the channel","type":"message","subtype":"channel_join","ts":"1486493005.000063"},{"user":"U0UHG4VP1","members":["U0KM61BCP","U0KN2SSKE","U0KPFAZNF","U0KQ9QKH6","U0LBXH9S4","U0LF1J4U8","U0M28HM6J","U0MJ8DFB3","U0MS3TK2A","U0N0GDVJ5","U0N1D1UAE","U0N1K6Z0X","U0N20TJUA","U0N8X4FN1","U0NCW1DPX","U0NK7T8SH","U0NLP5909","U0NLZCF8V","U0P2GSA8Z","U0P75RFT4","U0PB67X4K","U0PKMSYKG","U0Q6BA1EU","U0T5ASQBE","U0TFEHX8E","U0UHG4VP1","U0UL07VSL","U0ULK2JPP","U0ULX737C","U0W7D64LC","U0XRC0KLH","U0XV1HDL3","U0Y14MWA2","U0Y55KNG2","U0YJUECE8","U0YMACQSW","U0YNLG611","U0YP7KFGQ","U0Z5BHCEM","U0Z6VMEER","U0ZMB7ZEJ","U0ZR63HLK","U10MVHVHQ","U115YGEH1","U11C7DZU5","U11L89VHU","U11TAFPUP","U12452RAP","U1296EA0M","U12AHQ3NK","U12G3R3QS","U12R9HUSW","U130QV7RB","U137A6LBE","U13DAL5V5","U13JUH485","U13P6TLER","U142E5N0P","U143D0EQ4","U14APLT0C","U14NC480K","U14S06MT7","U150L8BDF","U16MS3BEF","U16NDNH08","U16Q0J0E6","U173QDB0W","U1751P7U4","U17BRDHPG","U17CZFXGU","U17ERM9H9","U17F0A68Y","U1802P5D3","U1914JUPK","U1937HD32","U193ZSYK0","U19MP2N67","U1A5P979S","U1AF58XSP","U1B6WAAKF","U1BJGAHFC","U1C3WNWRF","U1CK6522F","U1CPB11D0","U1CS08EP3","U1D89DP47","U1EEGQARJ","U1F2LURR6","U1F3CQ2HX","U1FU2880L","U1G86QUSG","U1GN670VD","U1GNUNKRV","U1HDN2RFY","U1HFNJB50","U1J5DE65D","U1JAPLQSY","U1JB7QCBD","U1JHMKC8H","U1JJ64P53","U1KC1TAHE","U1KFCPFQA","U1LDFR1LJ","U1LP4T69E","U1NBM7NHH","U1NPSMCDS","U1P1ZV6RF","U1P52TCE4","U1S01QY6L","U1S54EHL7","U1SDX7EQZ","U1TV7SZ7C","U1V6SJ1FF","U1VG8LNP3","U1W1YHJ80","U1WAADD4N","U1WMX1P71","U1WTH9EQ5","U1WUAQJVC","U1XMKU015","U1Y4P0HM4","U1Z1KQDMM","U1ZKPMB7Z","U216ML5MM","U219CAJLD","U221LL03Z","U231RFLFP","U234U0A5U","U2368MLAW","U239VKGSK","U23CGEC7N","U23GLSTS4","U23JFU108","U23S3DPFY","U24JMTPRQ","U24M29R4G","U276997LP","U2ABHPV2P","U2AFW8W9X","U2B3A70TX","U2FR6FUJV","U2FT6PNBZ","U2G9NCETD","U2J1B1BQU","U2JK4HV2N","U2KLTKHSL","U2LGFBFNJ","U2M0J2CUX","U2M6CU41G","U2MLUSPPZ","U2NG5AX0A","U2NNLN56V","U2P0N5J5A","U2P98SZSQ","U2PAB405S","U2QLU433N","U2RCFUE77","U2RQEJGV6","U2T4S6X6C","U2TB7EW4W","U2Y88J0E5","U2YUJV17X","U31A496G2","U32342C1L","U327VGGF9","U32LDD9JA","U33EA2K8Q","U37E0QVHU","U38H8MS11","U3AAY7PPX","U3B2F5VC0","U3B9R5C58","U3BH74NH0","U3BL88B18","U3BQF48RE","U3BU07SN7","U3D3HPUUX","U3D5886CB","U3DB4L15G","U3H9ZGLGG","U3HE2V38F","U3J39AA6M","U3JGUDSSG","U3K8U9X62","U3MBKT8UF","U3MBTR5KK","U3NTVCY0J","U3QGS08NP","U3QPATC07","U3U415W6T","U3UU2PMBK","U3V4G8HUZ","U3VDLN47L","U3WM9K85R"],"text":"<@U0UHG4VP1|ry> archived the channel (w\/ 194 members)","type":"message","subtype":"channel_archive","ts":"1486493012.000064"}]